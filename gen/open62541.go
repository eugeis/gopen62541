//
//	Package main - transpiled by c4go
//
//	If you have found any issues, please raise an issue at:
//	https://github.com/Konstantin8105/c4go/
//

// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2397 :Cannot casting { -> UA_String}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2489 :Cannot casting { -> UA_Guid}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2509 :Cannot casting { -> UA_ByteString}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2555 :Cannot casting { -> UA_NodeId}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2620 :Cannot casting { -> UA_ExpandedNodeId}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3186 :Cannot casting { -> UA_StatusCodeDescription}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3240 :Cannot casting { -> UA_DataType [199]}. err = cFromType is empty
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3584 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e131c60, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:3584, LineEnd:0, Column:1, ColumnEnd:83, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc001ecc960), (*ast.StringLiteral)(0xc006f478c0)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3654 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e1346f0, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:3654, LineEnd:0, Column:1, ColumnEnd:84, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc006b2e000), (*ast.StringLiteral)(0xc006f47cb0)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3684 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e134fb0, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:3684, LineEnd:0, Column:1, ColumnEnd:86, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc006b2eaa0), (*ast.StringLiteral)(0xc006bc4240)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3811 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e138040, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:3811, LineEnd:0, Column:1, ColumnEnd:87, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc000b36f00), (*ast.StringLiteral)(0xc006bc46c0)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3912 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e139fb0, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:3912, LineEnd:0, Column:1, ColumnEnd:87, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc006b91900), (*ast.StringLiteral)(0xc006bc5c20)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3927 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e13b4d0, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:3927, LineEnd:0, Column:1, ColumnEnd:88, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc006b91ea0), (*ast.StringLiteral)(0xc000ae6090)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4031 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e13ce70, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4031, LineEnd:0, Column:1, ColumnEnd:81, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc000b1bd60), (*ast.StringLiteral)(0xc000ae63f0)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4044 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e13d2b0, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4044, LineEnd:0, Column:1, ColumnEnd:93, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc0021cc1e0), (*ast.StringLiteral)(0xc000ae66c0)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4072 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e13da90, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4072, LineEnd:0, Column:1, ColumnEnd:86, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc0021ccb40), (*ast.StringLiteral)(0xc000ae6a20)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4107 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e13f560, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4107, LineEnd:0, Column:1, ColumnEnd:78, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc0021cd900), (*ast.StringLiteral)(0xc000ae70e0)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4440 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e145960, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4440, LineEnd:0, Column:1, ColumnEnd:75, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc00225c140), (*ast.StringLiteral)(0xc000ae74d0)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4455 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e145e60, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4455, LineEnd:0, Column:1, ColumnEnd:82, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc00225c6e0), (*ast.StringLiteral)(0xc000ae78c0)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4529 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e1482e0, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4529, LineEnd:0, Column:1, ColumnEnd:84, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc001dc2000), (*ast.StringLiteral)(0xc000ae7cb0)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4548 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e148980, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4548, LineEnd:0, Column:1, ColumnEnd:80, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc001dc2820), (*ast.StringLiteral)(0xc001f58360)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4624 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e149e50, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4624, LineEnd:0, Column:1, ColumnEnd:83, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc000adc280), (*ast.StringLiteral)(0xc001f58f30)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4924 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e150ad0, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4924, LineEnd:0, Column:1, ColumnEnd:85, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc002190320), (*ast.StringLiteral)(0xc001f59680)}}
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11875 :Cannot casting { -> UA_VariableAttributes}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11876 :Cannot casting { -> UA_VariableTypeAttributes}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11878 :Cannot casting { -> UA_MethodAttributes}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11880 :Cannot casting { -> UA_ObjectAttributes}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11881 :Cannot casting { -> UA_ObjectTypeAttributes}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11882 :Cannot casting { -> UA_ReferenceTypeAttributes}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11883 :Cannot casting { -> UA_DataTypeAttributes}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11884 :Cannot casting { -> UA_ViewAttributes}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:15056 :Cannot casting { -> UA_SubscriptionSettings}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:15292 :Cannot casting { -> UA_ConnectionConfig}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:15365 :Cannot casting { -> UA_ClientConfig}. err = cFromType is empty
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3044 :Cannot casting { -> UA_DataType [12]}. err = cFromType is empty
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3108 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e38f4d0, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c", Line:3108, LineEnd:0, Column:1, ColumnEnd:80, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc0047e40a0), (*ast.StringLiteral)(0xc003526b40)}}
// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3170 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e390400, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c", Line:3170, LineEnd:0, Column:1, ColumnEnd:78, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc0047e5220), (*ast.StringLiteral)(0xc003526ea0)}}
// Warning (*ast.EnumDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7724 :Add support of continues counter for type : *ast.BinaryExpr
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18606 :cannot determine type for RHS 'sqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `sqh_last`
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19147 :cannot determine type for RHS 'sqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `sqh_last`
// Warning (*ast.UnaryExprOrTypeTraitExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19956 :Cannot determine sizeof : |UA_Server|. err = Cannot determine sizeof : |struct UA_Server|. err = Cannot canculate `struct` sizeof for `string`. Cannot determine sizeof : |struct DelayedCallbacksList|. err = Cannot canculate `struct` sizeof for `*program.Struct`. Cannot determine sizeof : |UA_DelayedCallback|. err = error in array size
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19956 :Cannot determine sizeof : |UA_Server|. err = Cannot determine sizeof : |struct UA_Server|. err = Cannot canculate `struct` sizeof for `*program.Struct`. Cannot determine sizeof : |DelayedCallbacksList|. err = Cannot canculate `struct` sizeof for `*program.Struct`. Cannot determine sizeof : |UA_DelayedCallback|. err = error in array size
// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19956 :Cannot getDefaultValueForVar : err = Cannot determine sizeof : |UA_Server|. err = Cannot determine sizeof : |struct UA_Server|. err = Cannot canculate `struct` sizeof for `*program.Struct`. Cannot determine sizeof : |DelayedCallbacksList|. err = Cannot canculate `struct` sizeof for `*program.Struct`. Cannot determine sizeof : |UA_DelayedCallback|. err = error in array size
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26153 :Cannot transpile BinaryOperator with type 'UA_StatusCode' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Error in transpileCallExpr : unable to use CallExpr: &ast.ParenExpr{Addr:0x56359e7d4398, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c", Line:26153, LineEnd:0, Column:18, ColumnEnd:44, StringValue:""}, Type:"UA_InSituService", Type2:"UA_StatusCode (*)(UA_Server *, UA_Session *, UA_MessageContext *, const void *, UA_ResponseHeader *)", IsLvalue:false, IsBitfield:false, ChildNodes:[]ast.Node{(*ast.CStyleCastExpr)(0xc007030750)}}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26153 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'UA_StatusCode' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Error in transpileCallExpr : unable to use CallExpr: &ast.ParenExpr{Addr:0x56359e7d4398, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c", Line:26153, LineEnd:0, Column:18, ColumnEnd:44, StringValue:""}, Type:"UA_InSituService", Type2:"UA_StatusCode (*)(UA_Server *, UA_Session *, UA_MessageContext *, const void *, UA_ResponseHeader *)", IsLvalue:false, IsBitfield:false, ChildNodes:[]ast.Node{(*ast.CStyleCastExpr)(0xc007030750)}}
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28051 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28519 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28520 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28552 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28782 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28783 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
// Warning (*ast.GCCAsmStmt):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38698 :cannot transpile asm, will be ignored
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile BinaryOperator with type 'int' : result type = {unknown52}. Error: operator is `!=`. cannot atomic for left part. Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.IfStmt):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpileToStmt : Cannot transpileIfStmt. Cannot transpile for condition. Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'int' : result type = {unknown52}. Error: operator is `!=`. cannot atomic for left part. Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown52}. Error: operator is `=`. cannot atomic for left part. Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown52}. Error: operator is `=`. cannot atomic for left part. Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7700), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7700), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.UnaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile UnaryOperator: err = Cannot transpileUnaryOperatorAmpersant : err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7700), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile BinaryOperator with type 'struct ConnectionEntry **' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpile UnaryOperator: err = Cannot transpileUnaryOperatorAmpersant : err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7700), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'struct ConnectionEntry **' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpile UnaryOperator: err = Cannot transpileUnaryOperatorAmpersant : err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7700), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.GCCAsmStmt):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39042 :cannot transpile asm, will be ignored
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39051 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00a15cd00), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39051 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00a15cd00), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39051 :Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00a15cd00), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39051 :Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00a15cd00), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39051 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00a15cd00), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39108 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc002f2a980), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39108 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc002f2a980), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39108 :Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc002f2a980), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39108 :Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc002f2a980), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39108 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc002f2a980), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39163 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0089dfcc0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39163 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0089dfcc0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39163 :Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0089dfcc0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39163 :Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0089dfcc0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39163 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0089dfcc0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39184 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00929e600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39184 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00929e600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39184 :Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00929e600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39184 :Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00929e600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39184 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00929e600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
// Warning (*ast.GCCAsmStmt):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39366 :cannot transpile asm, will be ignored
// Warning (*ast.TranslationUnitDecl):  :0 :cannot transpileRecordDecl `__SOCKADDR_ARG`. could not determine the size of type `union __SOCKADDR_ARG` for that reason: Cannot determine sizeof : |union __SOCKADDR_ARG|. err = Cannot canculate `union` sizeof for `*program.Struct`. Cannot determine sizeof : |sockaddr_inarp|. err = error in array size
// Warning (*ast.TranslationUnitDecl):  :0 :cannot transpileRecordDecl `tcphdr`. Cannot transpile *ast.RecordDecl

package main

import "fmt"
import "github.com/Konstantin8105/c4go/noarch"
import "unsafe"

type size_t = uint32
type __locale_struct struct {
	__locales       [13][]int
	__ctype_b       []uint16
	__ctype_tolower []int
	__ctype_toupper []int
	__names         [13][]byte
}
type __locale_t = int
type locale_t = __locale_t
type ptrdiff_t = int32
type wchar_t = int
type max_align_t struct {
	__clang_max_align_nonce1 int64
	__clang_max_align_nonce2 float64
}
type __u_char = uint8
type __u_short = uint16
type __u_int = uint32
type __u_long = uint32
type __int8_t = int8
type __uint8_t = uint8
type __int16_t = int16
type __uint16_t = uint16
type __int32_t = int
type __uint32_t = uint32
type __int64_t = int32
type __uint64_t = uint32
type __int_least8_t = __int8_t
type __uint_least8_t = __uint8_t
type __int_least16_t = __int16_t
type __uint_least16_t = uint16
type __int_least32_t = __int32_t
type __uint_least32_t = uint32
type __int_least64_t = __int64_t
type __uint_least64_t = uint64
type __quad_t = int32
type __u_quad_t = uint32
type __intmax_t = int32
type __uintmax_t = uint32
type __dev_t = uint32
type __uid_t = uint32
type __gid_t = uint32
type __ino_t = uint32
type __ino64_t = uint32
type __mode_t = uint32
type __nlink_t = uint32
type __off_t = int32
type __off64_t = int32
type __pid_t = int
type __fsid_t struct {
	__val [2]int
}
type __clock_t = int32
type __rlim_t = uint32
type __rlim64_t = uint32
type __id_t = uint32
type __time_t = int32
type __useconds_t = uint32
type __suseconds_t = int32
type __daddr_t = int
type __key_t = int
type __clockid_t = int
type __timer_t = interface{}
type __blksize_t = int32
type __blkcnt_t = int32
type __blkcnt64_t = int32
type __fsblkcnt_t = uint32
type __fsblkcnt64_t = uint32
type __fsfilcnt_t = uint32
type __fsfilcnt64_t = uint32
type __fsword_t = int32
type __ssize_t = int32
type __syscall_slong_t = int32
type __syscall_ulong_t = uint32
type __loff_t = __off64_t
type __caddr_t = []byte
type __intptr_t = int32
type __socklen_t = uint32
type __sig_atomic_t = int
type int8_t = __int8_t
type int16_t = __int16_t
type int32_t = __int32_t
type int64_t = __int64_t
type uint8_t = __uint8_t
type uint16_t = uint16
type uint32_t = uint32
type uint64_t = uint64
type int_least8_t = __int_least8_t
type int_least16_t = __int_least16_t
type int_least32_t = __int_least32_t
type int_least64_t = __int_least64_t
type uint_least8_t = __uint_least8_t
type uint_least16_t = __uint_least16_t
type uint_least32_t = __uint_least32_t
type uint_least64_t = __uint_least64_t
type int_fast8_t = int8
type int_fast16_t = int32
type int_fast32_t = int32
type int_fast64_t = int32
type uint_fast8_t = uint8
type uint_fast16_t = uint32
type uint_fast32_t = uint32
type uint_fast64_t = uint32
type intptr_t = int32
type uintptr_t = uint32
type intmax_t = __intmax_t
type uintmax_t = __uintmax_t
type _Float32 = float32
type _Float64 = float64
type _Float32x = float64
type _Float64x = float64
type div_t struct {
	quot int
	rem  int
}
type ldiv_t struct {
	quot int32
	rem  int32
}
type lldiv_t struct {
	quot int64
	rem  int64
}
type u_char = __u_char
type u_short = __u_short
type u_int = __u_int
type u_long = __u_long
type quad_t = __quad_t
type u_quad_t = __u_quad_t
type fsid_t = __fsid_t
type loff_t = __loff_t
type ino_t = __ino_t
type ino64_t = __ino64_t
type dev_t = __dev_t
type gid_t = __gid_t
type mode_t = uint16
type nlink_t = __nlink_t
type uid_t = __uid_t
type off_t = __off_t
type off64_t = __off64_t
type pid_t = __pid_t
type id_t = __id_t
type ssize_t = __ssize_t
type daddr_t = __daddr_t
type caddr_t = __caddr_t
type key_t = __key_t
type clock_t = __clock_t
type clockid_t = __clockid_t
type time_t = int32
type timer_t = __timer_t
type useconds_t = __useconds_t
type suseconds_t = int32
type ulong = uint32
type ushort = uint16
type uint = uint32
type u_int8_t = uint8
type u_int16_t = uint16
type u_int32_t = uint32
type u_int64_t = uint32
type register_t = int32
// __bswap_16 - transpiled function from  /usr/include/bits/byteswap.h:33
func __bswap_16(__bsx uint16) uint16 {
	return (uint16((int(uint16((__bsx)))>>uint64(8)&255 | int(uint16((__bsx)))&255<<uint64(8))))
}
// __bswap_32 - transpiled function from  /usr/include/bits/byteswap.h:48
func __bswap_32(__bsx uint32) uint32 {
	return uint32((uint32((__bsx&uint32((uint32(4278190080)))>>uint64(24) | __bsx&uint32((uint32(16711680)))>>uint64(8) | __bsx&uint32((uint32(65280)))<<uint64(8) | __bsx&uint32((uint32(255)))<<uint64(24)))))
}
// __bswap_64 - transpiled function from  /usr/include/bits/byteswap.h:69
func __bswap_64(__bsx uint64) uint64 {
	return uint64((uint64(uint32((__bsx)))&uint64(18374686479671623680)>>uint64(56) | uint64(uint32((__bsx)))&uint64(71776119061217280)>>uint64(40) | uint64(uint32((__bsx)))&uint64(280375465082880)>>uint64(24) | uint64(uint32((__bsx)))&uint64(1095216660480)>>uint64(8) | uint64(uint32((__bsx)))&uint64(4278190080)<<uint64(8) | uint64(uint32((__bsx)))&uint64(16711680)<<uint64(24) | uint64(uint32((__bsx)))&uint64(65280)<<uint64(40) | uint64(uint32((__bsx)))&uint64(255)<<uint64(56)))
}
// __uint16_identity - transpiled function from  /usr/include/bits/uintn-identity.h:32
func __uint16_identity(__x uint16) uint16 {
	return uint16(__x)
}
// __uint32_identity - transpiled function from  /usr/include/bits/uintn-identity.h:38
func __uint32_identity(__x uint32) uint32 {
	return uint32(__x)
}
// __uint64_identity - transpiled function from  /usr/include/bits/uintn-identity.h:44
func __uint64_identity(__x uint64) uint64 {
	return uint64(__x)
}

type __sigset_t struct {
	__val [16]uint32
}
type sigset_t = __sigset_t
type timeval struct {
	tv_sec  int32
	tv_usec int32
}
type timespec struct {
	tv_sec  int32
	tv_nsec __syscall_slong_t
}
type __fd_mask = int32
type fd_set struct {
	fds_bits [16]__fd_mask
}
type fd_mask = __fd_mask
type blksize_t = __blksize_t
type blkcnt_t = __blkcnt_t
type fsblkcnt_t = __fsblkcnt_t
type fsfilcnt_t = __fsfilcnt_t
type blkcnt64_t = __blkcnt64_t
type fsblkcnt64_t = __fsblkcnt64_t
type fsfilcnt64_t = __fsfilcnt64_t
type __pthread_rwlock_arch_t struct {
	__readers       uint32
	__writers       uint32
	__wrphase_futex uint32
	__writers_futex uint32
	__pad3          uint32
	__pad4          uint32
	__cur_writer    int
	__shared        int
	__rwelision     int8
	__pad1          [7]uint8
	__pad2          uint32
	__flags         uint32
}
type __pthread_internal_list struct {
	__prev []__pthread_internal_list
	__next []__pthread_internal_list
}
type __pthread_list_t = __pthread_internal_list
type __pthread_mutex_s struct {
	__lock    int
	__count   uint32
	__owner   int
	__nusers  uint32
	__kind    int
	__spins   int16
	__elision int16
	__list    __pthread_list_t
}
type __struct_at__usr_include_bits_thread_shared_types_h_156_5_ struct {
	__low  uint32
	__high uint32
}
type __pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_153_17_ struct{ memory unsafe.Pointer }

func (unionVar *__pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_153_17_) copy() __pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_153_17_ {
	var buffer [32]byte
	for i := range buffer {
		buffer[i] = (*((*[32]byte)(unionVar.memory)))[i]
	}
	var newUnion __pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_153_17_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_153_17_) __wseq() *uint64 {
	if unionVar.memory == nil {
		var buffer [32]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*uint64)(unionVar.memory)
}
func (unionVar *__pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_153_17_) __wseq32() *__struct_at__usr_include_bits_thread_shared_types_h_156_5_ {
	if unionVar.memory == nil {
		var buffer [32]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_thread_shared_types_h_156_5_)(unionVar.memory)
}

type __struct_at__usr_include_bits_thread_shared_types_h_165_5_ struct {
	__low  uint32
	__high uint32
}
type __pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_162_17_ struct{ memory unsafe.Pointer }

func (unionVar *__pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_162_17_) copy() __pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_162_17_ {
	var buffer [32]byte
	for i := range buffer {
		buffer[i] = (*((*[32]byte)(unionVar.memory)))[i]
	}
	var newUnion __pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_162_17_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_162_17_) __g1_start() *uint64 {
	if unionVar.memory == nil {
		var buffer [32]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*uint64)(unionVar.memory)
}
func (unionVar *__pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_162_17_) __g1_start32() *__struct_at__usr_include_bits_thread_shared_types_h_165_5_ {
	if unionVar.memory == nil {
		var buffer [32]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_thread_shared_types_h_165_5_)(unionVar.memory)
}

type __pthread_cond_s struct {
	implicit_unionS__pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_153_17_ __pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_153_17_
	implicit_unionS__pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_162_17_ __pthread_cond_sDD__at__usr_include_bits_thread_shared_types_h_162_17_
	__g_refs                                                                              [2]uint32
	__g_size                                                                              [2]uint32
	__g1_orig_size                                                                        uint32
	__wrefs                                                                               uint32
	__g_signals                                                                           [2]uint32
}
type pthread_t = uint32
type pthread_mutexattr_t struct{ memory unsafe.Pointer }

func (unionVar *pthread_mutexattr_t) copy() pthread_mutexattr_t {
	var buffer [8]byte
	for i := range buffer {
		buffer[i] = (*((*[8]byte)(unionVar.memory)))[i]
	}
	var newUnion pthread_mutexattr_t
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *pthread_mutexattr_t) __size() *[4]byte {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[4]byte)(unionVar.memory)
}
func (unionVar *pthread_mutexattr_t) __align() *int {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*int)(unionVar.memory)
}

type pthread_condattr_t struct{ memory unsafe.Pointer }

func (unionVar *pthread_condattr_t) copy() pthread_condattr_t {
	var buffer [8]byte
	for i := range buffer {
		buffer[i] = (*((*[8]byte)(unionVar.memory)))[i]
	}
	var newUnion pthread_condattr_t
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *pthread_condattr_t) __size() *[4]byte {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[4]byte)(unionVar.memory)
}
func (unionVar *pthread_condattr_t) __align() *int {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*int)(unionVar.memory)
}

type pthread_key_t = uint32
type pthread_once_t = int
type pthread_attr_t struct{ memory unsafe.Pointer }

func (unionVar *pthread_attr_t) copy() pthread_attr_t {
	var buffer [56]byte
	for i := range buffer {
		buffer[i] = (*((*[56]byte)(unionVar.memory)))[i]
	}
	var newUnion pthread_attr_t
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *pthread_attr_t) __size() *[56]byte {
	if unionVar.memory == nil {
		var buffer [56]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[56]byte)(unionVar.memory)
}
func (unionVar *pthread_attr_t) __align() *int32 {
	if unionVar.memory == nil {
		var buffer [56]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*int32)(unionVar.memory)
}

type pthread_mutex_t struct{ memory unsafe.Pointer }

func (unionVar *pthread_mutex_t) copy() pthread_mutex_t {
	var buffer [40]byte
	for i := range buffer {
		buffer[i] = (*((*[40]byte)(unionVar.memory)))[i]
	}
	var newUnion pthread_mutex_t
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *pthread_mutex_t) __data() *__pthread_mutex_s {
	if unionVar.memory == nil {
		var buffer [40]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__pthread_mutex_s)(unionVar.memory)
}
func (unionVar *pthread_mutex_t) __size() *[40]byte {
	if unionVar.memory == nil {
		var buffer [40]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[40]byte)(unionVar.memory)
}
func (unionVar *pthread_mutex_t) __align() *int32 {
	if unionVar.memory == nil {
		var buffer [40]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*int32)(unionVar.memory)
}

type pthread_cond_t struct{ memory unsafe.Pointer }

func (unionVar *pthread_cond_t) copy() pthread_cond_t {
	var buffer [200]byte
	for i := range buffer {
		buffer[i] = (*((*[200]byte)(unionVar.memory)))[i]
	}
	var newUnion pthread_cond_t
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *pthread_cond_t) __data() *__pthread_cond_s {
	if unionVar.memory == nil {
		var buffer [200]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__pthread_cond_s)(unionVar.memory)
}
func (unionVar *pthread_cond_t) __size() *[48]byte {
	if unionVar.memory == nil {
		var buffer [200]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[48]byte)(unionVar.memory)
}
func (unionVar *pthread_cond_t) __align() *int64 {
	if unionVar.memory == nil {
		var buffer [200]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*int64)(unionVar.memory)
}

type pthread_rwlock_t struct{ memory unsafe.Pointer }

func (unionVar *pthread_rwlock_t) copy() pthread_rwlock_t {
	var buffer [56]byte
	for i := range buffer {
		buffer[i] = (*((*[56]byte)(unionVar.memory)))[i]
	}
	var newUnion pthread_rwlock_t
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *pthread_rwlock_t) __data() *__pthread_rwlock_arch_t {
	if unionVar.memory == nil {
		var buffer [56]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__pthread_rwlock_arch_t)(unionVar.memory)
}
func (unionVar *pthread_rwlock_t) __size() *[56]byte {
	if unionVar.memory == nil {
		var buffer [56]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[56]byte)(unionVar.memory)
}
func (unionVar *pthread_rwlock_t) __align() *int32 {
	if unionVar.memory == nil {
		var buffer [56]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*int32)(unionVar.memory)
}

type pthread_rwlockattr_t struct{ memory unsafe.Pointer }

func (unionVar *pthread_rwlockattr_t) copy() pthread_rwlockattr_t {
	var buffer [8]byte
	for i := range buffer {
		buffer[i] = (*((*[8]byte)(unionVar.memory)))[i]
	}
	var newUnion pthread_rwlockattr_t
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *pthread_rwlockattr_t) __size() *[8]byte {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[8]byte)(unionVar.memory)
}
func (unionVar *pthread_rwlockattr_t) __align() *int32 {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*int32)(unionVar.memory)
}

type pthread_spinlock_t = int
type pthread_barrier_t struct{ memory unsafe.Pointer }

func (unionVar *pthread_barrier_t) copy() pthread_barrier_t {
	var buffer [32]byte
	for i := range buffer {
		buffer[i] = (*((*[32]byte)(unionVar.memory)))[i]
	}
	var newUnion pthread_barrier_t
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *pthread_barrier_t) __size() *[32]byte {
	if unionVar.memory == nil {
		var buffer [32]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[32]byte)(unionVar.memory)
}
func (unionVar *pthread_barrier_t) __align() *int32 {
	if unionVar.memory == nil {
		var buffer [32]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*int32)(unionVar.memory)
}

type pthread_barrierattr_t struct{ memory unsafe.Pointer }

func (unionVar *pthread_barrierattr_t) copy() pthread_barrierattr_t {
	var buffer [8]byte
	for i := range buffer {
		buffer[i] = (*((*[8]byte)(unionVar.memory)))[i]
	}
	var newUnion pthread_barrierattr_t
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *pthread_barrierattr_t) __size() *[4]byte {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[4]byte)(unionVar.memory)
}
func (unionVar *pthread_barrierattr_t) __align() *int {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*int)(unionVar.memory)
}

type random_data struct {
	fptr      []int32_t
	rptr      []int32_t
	state     []int32_t
	rand_type int
	rand_deg  int
	rand_sep  int
	end_ptr   []int32_t
}
type drand48_data struct {
	__x     [3]uint16
	__old_x [3]uint16
	__c     uint16
	__init  uint16
	__a     uint64
}
type __compar_fn_t func(interface{} , interface{})(int)
type comparison_fn_t = __compar_fn_t
type __compar_d_fn_t func(interface{} , interface{} , interface{})(int)

const (
	UA_ATTRIBUTEID_NODEID                  int = 1
	UA_ATTRIBUTEID_NODECLASS                   = 2
	UA_ATTRIBUTEID_BROWSENAME                  = 3
	UA_ATTRIBUTEID_DISPLAYNAME                 = 4
	UA_ATTRIBUTEID_DESCRIPTION                 = 5
	UA_ATTRIBUTEID_WRITEMASK                   = 6
	UA_ATTRIBUTEID_USERWRITEMASK               = 7
	UA_ATTRIBUTEID_ISABSTRACT                  = 8
	UA_ATTRIBUTEID_SYMMETRIC                   = 9
	UA_ATTRIBUTEID_INVERSENAME                 = 10
	UA_ATTRIBUTEID_CONTAINSNOLOOPS             = 11
	UA_ATTRIBUTEID_EVENTNOTIFIER               = 12
	UA_ATTRIBUTEID_VALUE                       = 13
	UA_ATTRIBUTEID_DATATYPE                    = 14
	UA_ATTRIBUTEID_VALUERANK                   = 15
	UA_ATTRIBUTEID_ARRAYDIMENSIONS             = 16
	UA_ATTRIBUTEID_ACCESSLEVEL                 = 17
	UA_ATTRIBUTEID_USERACCESSLEVEL             = 18
	UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL     = 19
	UA_ATTRIBUTEID_HISTORIZING                 = 20
	UA_ATTRIBUTEID_EXECUTABLE                  = 21
	UA_ATTRIBUTEID_USEREXECUTABLE              = 22
)

type UA_AttributeId int
type UA_Boolean = int
type UA_SByte = int8_t
type UA_Byte = uint8_t
type UA_Int16 = int16_t
type UA_UInt16 = uint16_t
type UA_Int32 = int32_t
type UA_UInt32 = uint32_t
type UA_Int64 = int64_t
type UA_UInt64 = uint64_t
type UA_Float = float32
type UA_Double = float64
type UA_StatusCode = uint32_t
type UA_String struct {
	length uint
	data   []UA_Byte
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2397 :Cannot casting { -> UA_String}. err = cFromType is empty
UA_STRING_NULL UA_String
// UA_STRING - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2403
//
// * ``UA_STRING`` returns a string pointing to the original char-array.
// * ``UA_STRING_ALLOC`` is shorthand for ``UA_String_fromChars`` and makes a copy
// * of the char-array.
func UA_STRING(chars []byte) UA_String {
	var str UA_String
	str.length = uint((uint32(noarch.Strlen(chars))))
	str.data = chars
	return str
}

type UA_DateTime = int64_t
type UA_DateTimeStruct struct {
	nanoSec  UA_UInt16
	microSec UA_UInt16
	milliSec UA_UInt16
	sec      UA_UInt16
	min      UA_UInt16
	hour     UA_UInt16
	day      UA_UInt16
	month    UA_UInt16
	year     UA_UInt16
}
// UA_DateTime_toUnixTime - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2466
// The C99 standard (7.23.1) says: "The range and precision of times
// * representable in clock_t and time_t are implementation-defined." On most
// * systems, time_t is a 4 or 8 byte integer counting seconds since the UTC Unix
// * epoch. The following methods are used for conversion.
// Datetime of 1 Jan 1970 00:00
func UA_DateTime_toUnixTime(date UA_DateTime) UA_Int64 {
	return UA_Int64((int64(int32((__int64_t((int64_t((date))))))) - int64(11644473600*(10*1000*1000))) / int64(10*1000*1000))
}
// UA_DateTime_fromUnixTime - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2471
func UA_DateTime_fromUnixTime(unixDate UA_Int64) UA_DateTime {
	return UA_DateTime(int64(int32((__int64_t((int64_t((unixDate)))))))*int64(10*1000*1000) + int64(11644473600*(10*1000*1000)))
}

type UA_Guid struct {
	data1 UA_UInt32
	data2 UA_UInt16
	data3 UA_UInt16
	data4 [8]UA_Byte
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2489 :Cannot casting { -> UA_Guid}. err = cFromType is empty
UA_GUID_NULL UA_Guid

type UA_ByteString = UA_String
// UA_ByteString_equal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2497
//
// * ByteString
// * ^^^^^^^^^^
// * A sequence of octets.
func UA_ByteString_equal(string1 []UA_ByteString, string2 []UA_ByteString) UA_Boolean {
	return UA_String_equal(string1, string2)
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2509 :Cannot casting { -> UA_ByteString}. err = cFromType is empty
UA_BYTESTRING_NULL UA_ByteString
// UA_BYTESTRING - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2511
func UA_BYTESTRING(chars []byte) UA_ByteString {
	var str UA_ByteString
	str.length = uint((uint32(noarch.Strlen(chars))))
	str.data = chars
	return UA_ByteString(str)
}
// UA_BYTESTRING_ALLOC - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2517
func UA_BYTESTRING_ALLOC(chars []byte) UA_ByteString {
	var str UA_String = UA_String_fromChars(chars)
	var bstr UA_ByteString
	bstr.length = uint(str.length)
	bstr.data = str.data
	return UA_ByteString(bstr)
}

type UA_XmlElement = UA_String
type UA_NodeIdType int

const (
	UA_NODEIDTYPE_NUMERIC    UA_NodeIdType = 0
	UA_NODEIDTYPE_STRING                   = 3
	UA_NODEIDTYPE_GUID                     = 4
	UA_NODEIDTYPE_BYTESTRING               = 5
)

type __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_) copy() __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_ {
	var buffer [56]byte
	for i := range buffer {
		buffer[i] = (*((*[56]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_) numeric() *UA_UInt32 {
	if unionVar.memory == nil {
		var buffer [56]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*UA_UInt32)(unionVar.memory)
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_) string() *UA_String {
	if unionVar.memory == nil {
		var buffer [56]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*UA_String)(unionVar.memory)
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_) guid() *UA_Guid {
	if unionVar.memory == nil {
		var buffer [56]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*UA_Guid)(unionVar.memory)
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_) byteString() *UA_ByteString {
	if unionVar.memory == nil {
		var buffer [56]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*UA_ByteString)(unionVar.memory)
}

type UA_NodeId struct {
	namespaceIndex UA_UInt16
	identifierType UA_NodeIdType
	identifier     __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2555 :Cannot casting { -> UA_NodeId}. err = cFromType is empty
UA_NODEID_NULL UA_NodeId
// UA_NODEID_NUMERIC - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2565
// The following functions are shorthand for creating NodeIds.
func UA_NODEID_NUMERIC(nsIndex UA_UInt16, identifier UA_UInt32) UA_NodeId {
	var id UA_NodeId
	id.namespaceIndex = nsIndex
	id.identifierType = UA_NODEIDTYPE_NUMERIC
	(*id.identifier.numeric()) = identifier
	return id
}
// UA_NODEID_STRING - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2572
func UA_NODEID_STRING(nsIndex UA_UInt16, chars []byte) UA_NodeId {
	var id UA_NodeId
	id.namespaceIndex = nsIndex
	id.identifierType = UA_NODEIDTYPE_STRING
	(*id.identifier.string()) = UA_STRING(chars)
	return id
}
// UA_NODEID_STRING_ALLOC - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2579
func UA_NODEID_STRING_ALLOC(nsIndex UA_UInt16, chars []byte) UA_NodeId {
	var id UA_NodeId
	id.namespaceIndex = nsIndex
	id.identifierType = UA_NODEIDTYPE_STRING
	(*id.identifier.string()) = UA_String_fromChars(chars)
	return id
}
// UA_NODEID_GUID - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2586
func UA_NODEID_GUID(nsIndex UA_UInt16, guid UA_Guid) UA_NodeId {
	var id UA_NodeId
	id.namespaceIndex = nsIndex
	id.identifierType = UA_NODEIDTYPE_GUID
	(*id.identifier.guid()) = guid
	return id
}
// UA_NODEID_BYTESTRING - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2593
func UA_NODEID_BYTESTRING(nsIndex UA_UInt16, chars []byte) UA_NodeId {
	var id UA_NodeId
	id.namespaceIndex = nsIndex
	id.identifierType = UA_NODEIDTYPE_BYTESTRING
	(*id.identifier.byteString()) = UA_BYTESTRING(chars)
	return id
}
// UA_NODEID_BYTESTRING_ALLOC - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2600
func UA_NODEID_BYTESTRING_ALLOC(nsIndex UA_UInt16, chars []byte) UA_NodeId {
	var id UA_NodeId
	id.namespaceIndex = nsIndex
	id.identifierType = UA_NODEIDTYPE_BYTESTRING
	(*id.identifier.byteString()) = UA_BYTESTRING_ALLOC(chars)
	return id
}

type UA_ExpandedNodeId struct {
	nodeId       UA_NodeId
	namespaceUri UA_String
	serverIndex  UA_UInt32
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2620 :Cannot casting { -> UA_ExpandedNodeId}. err = cFromType is empty
UA_EXPANDEDNODEID_NULL UA_ExpandedNodeId
// UA_EXPANDEDNODEID_NUMERIC - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2623
// The following functions are shorthand for creating ExpandedNodeIds.
func UA_EXPANDEDNODEID_NUMERIC(nsIndex UA_UInt16, identifier UA_UInt32) UA_ExpandedNodeId {
	var id UA_ExpandedNodeId
	id.nodeId = UA_NODEID_NUMERIC(UA_UInt16(nsIndex), UA_UInt32(identifier))
	id.serverIndex = 0
	id.namespaceUri = UA_STRING_NULL
	return id
}
// UA_EXPANDEDNODEID_STRING - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2629
func UA_EXPANDEDNODEID_STRING(nsIndex UA_UInt16, chars []byte) UA_ExpandedNodeId {
	var id UA_ExpandedNodeId
	id.nodeId = UA_NODEID_STRING(UA_UInt16(nsIndex), chars)
	id.serverIndex = 0
	id.namespaceUri = UA_STRING_NULL
	return id
}
// UA_EXPANDEDNODEID_STRING_ALLOC - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2635
func UA_EXPANDEDNODEID_STRING_ALLOC(nsIndex UA_UInt16, chars []byte) UA_ExpandedNodeId {
	var id UA_ExpandedNodeId
	id.nodeId = UA_NODEID_STRING_ALLOC(UA_UInt16(nsIndex), chars)
	id.serverIndex = 0
	id.namespaceUri = UA_STRING_NULL
	return id
}
// UA_EXPANDEDNODEID_STRING_GUID - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2641
func UA_EXPANDEDNODEID_STRING_GUID(nsIndex UA_UInt16, guid UA_Guid) UA_ExpandedNodeId {
	var id UA_ExpandedNodeId
	id.nodeId = UA_NODEID_GUID(UA_UInt16(nsIndex), guid)
	id.serverIndex = 0
	id.namespaceUri = UA_STRING_NULL
	return id
}
// UA_EXPANDEDNODEID_BYTESTRING - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2647
func UA_EXPANDEDNODEID_BYTESTRING(nsIndex UA_UInt16, chars []byte) UA_ExpandedNodeId {
	var id UA_ExpandedNodeId
	id.nodeId = UA_NODEID_BYTESTRING(UA_UInt16(nsIndex), chars)
	id.serverIndex = 0
	id.namespaceUri = UA_STRING_NULL
	return id
}
// UA_EXPANDEDNODEID_BYTESTRING_ALLOC - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2653
func UA_EXPANDEDNODEID_BYTESTRING_ALLOC(nsIndex UA_UInt16, chars []byte) UA_ExpandedNodeId {
	var id UA_ExpandedNodeId
	id.nodeId = UA_NODEID_BYTESTRING_ALLOC(UA_UInt16(nsIndex), chars)
	id.serverIndex = 0
	id.namespaceUri = UA_STRING_NULL
	return id
}

type UA_QualifiedName struct {
	namespaceIndex UA_UInt16
	name           UA_String
}
// UA_QualifiedName_isNull - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2670
//
// * .. _qualifiedname:
// *
// * QualifiedName
// * ^^^^^^^^^^^^^
// * A name qualified by a namespace.
func UA_QualifiedName_isNull(q []UA_QualifiedName) UA_Boolean {
	return UA_Boolean((int(uint16((uint16((uint16_t((UA_UInt16(q[0].namespaceIndex)))))))) == 0 && uint(q[0].name.length) == uint((0))))
}
// UA_QUALIFIEDNAME - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2675
func UA_QUALIFIEDNAME(nsIndex UA_UInt16, chars []byte) UA_QualifiedName {
	var qn UA_QualifiedName
	qn.namespaceIndex = nsIndex
	qn.name = UA_STRING(chars)
	return qn
}
// UA_QUALIFIEDNAME_ALLOC - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2681
func UA_QUALIFIEDNAME_ALLOC(nsIndex UA_UInt16, chars []byte) UA_QualifiedName {
	var qn UA_QualifiedName
	qn.namespaceIndex = nsIndex
	qn.name = UA_String_fromChars(chars)
	return qn
}

type UA_LocalizedText struct {
	locale UA_String
	text   UA_String
}
// UA_LOCALIZEDTEXT - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2700
//
// * LocalizedText
// * ^^^^^^^^^^^^^
// * Human readable text with an optional locale identifier.
func UA_LOCALIZEDTEXT(locale []byte, text []byte) UA_LocalizedText {
	var lt UA_LocalizedText
	lt.locale = UA_STRING(locale)
	lt.text = UA_STRING(text)
	return lt
}
// UA_LOCALIZEDTEXT_ALLOC - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2706
func UA_LOCALIZEDTEXT_ALLOC(locale []byte, text []byte) UA_LocalizedText {
	var lt UA_LocalizedText
	lt.locale = UA_String_fromChars(locale)
	lt.text = UA_String_fromChars(text)
	return lt
}

type UA_NumericRangeDimension struct {
	min UA_UInt32
	max UA_UInt32
}
type UA_NumericRange struct {
	dimensionsSize uint
	dimensions     []UA_NumericRangeDimension
}

const (
	UA_VARIANT_DATA          int = 0
	UA_VARIANT_DATA_NODELETE     = 1
)

type UA_VariantStorageType int
type UA_Variant struct {
	type_               []UA_DataType
	storageType         int
	arrayLength         uint
	data                interface{}
	arrayDimensionsSize uint
	arrayDimensions     []UA_UInt32
}
// UA_Variant_isEmpty - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2795
//
// * .. _numericrange:
// *
// * NumericRange
// * ^^^^^^^^^^^^
// *
// * NumericRanges are used to indicate subsets of a (multidimensional) array.
// * They no official data type in the OPC UA standard and are transmitted only
// * with a string encoding, such as "1:2,0:3,5". The colon separates min/max
// * index and the comma separates dimensions. A single value indicates a range
// * with a single element (min==max).
//
// * .. _variant:
// *
// * Variant
// * ^^^^^^^
// *
// * Variants may contain values of any type together with a description of the
// * content. See the section on :ref:`generic-types` on how types are described.
// * The standard mandates that variants contain built-in data types only. If the
// * value is not of a builtin type, it is wrapped into an :ref:`extensionobject`.
// * open62541 hides this wrapping transparently in the encoding layer. If the
// * data type is unknown to the receiver, the variant contains the original
// * ExtensionObject in binary or XML encoding.
// *
// * Variants may contain a scalar value or an array. For details on the handling
// * of arrays, see the section on :ref:`array-handling`. Array variants can have
// * an additional dimensionality (matrix, 3-tensor, ...) defined in an array of
// * dimension lengths. The actual values are kept in an array of dimensions one.
// * For users who work with higher-dimensions arrays directly, keep in mind that
// * dimensions of higher rank are serialized first (the highest rank dimension
// * has stride 1 and elements follow each other directly). Usually it is simplest
// * to interact with higher-dimensional arrays via ``UA_NumericRange``
// * descriptions (see :ref:`array-handling`).
// *
// * To differentiate between scalar / array variants, the following definition is
// * used. ``UA_Variant_isScalar`` provides simplified access to these checks.
// *
// * - ``arrayLength == 0 && data == NULL``: undefined array of length -1
// * - ``arrayLength == 0 && data == UA_EMPTY_ARRAY_SENTINEL``: array of length 0
// * - ``arrayLength == 0 && data > UA_EMPTY_ARRAY_SENTINEL``: scalar value
// * - ``arrayLength > 0``: array of the given length
// *
// * Variants can also be *empty*. Then, the pointer to the type description is
// * ``NULL``.
// Forward declaration. See the section on Generic Type Handling
// The data has the same lifecycle as the
//                                 variant
// The data is "borrowed" by the variant and
//                                 shall not be deleted at the end of the
//                                 variant's lifecycle.
// The data type description
// The number of elements in the data array
// Points to the scalar or array data
// The number of dimensions
// The length of each dimension
// Returns true if the variant has no value defined (contains neither an array
// * nor a scalar value).
// *
// * @param v The variant
// * @return Is the variant empty
func UA_Variant_isEmpty(v []UA_Variant) UA_Boolean {
	return UA_Boolean(v[0].type_ == nil)
}
// UA_Variant_isScalar - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2805
// Returns true if the variant contains a scalar value. Note that empty variants
// * contain an array of length -1 (undefined).
// *
// * @param v The variant
// * @return Does the variant contain a scalar value
func UA_Variant_isScalar(v []UA_Variant) UA_Boolean {
	return UA_Boolean((uint(v[0].arrayLength) == uint((0)) && v[0].data > 1))
}
// UA_Variant_hasScalarType - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2815
// Returns true if the variant contains a scalar value of the given type.
// *
// * @param v The variant
// * @param type The data type
// * @return Does the variant contain a scalar value of the given type
func UA_Variant_hasScalarType(v []UA_Variant, type_ []UA_DataType) UA_Boolean {
	return UA_Boolean(int((int((UA_Variant_isScalar(v))))) != 0 && type_ == v[0].type_)
}
// UA_Variant_hasArrayType - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:2825
// Returns true if the variant contains an array of the given type.
// *
// * @param v The variant
// * @param type The data type
// * @return Does the variant contain an array of the given type
func UA_Variant_hasArrayType(v []UA_Variant, type_ []UA_DataType) UA_Boolean {
	return UA_Boolean(int((int((noarch.NotUA_Boolean(UA_Variant_isScalar(v)))))) != 0 && type_ == v[0].type_)
}

const (
	UA_EXTENSIONOBJECT_ENCODED_NOBODY     int = 0
	UA_EXTENSIONOBJECT_ENCODED_BYTESTRING     = 1
	UA_EXTENSIONOBJECT_ENCODED_XML            = 2
	UA_EXTENSIONOBJECT_DECODED                = 3
	UA_EXTENSIONOBJECT_DECODED_NODELETE       = 4
)

type UA_ExtensionObjectEncoding int
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2932_9_ struct {
	typeId UA_NodeId
	body   UA_ByteString
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2936_9_ struct {
	type_ []UA_DataType
	data  interface{}
}
type __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2931_5_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2931_5_) copy() __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2931_5_ {
	var buffer [304]byte
	for i := range buffer {
		buffer[i] = (*((*[304]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2931_5_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2931_5_) encoded() *__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2932_9_ {
	if unionVar.memory == nil {
		var buffer [304]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2932_9_)(unionVar.memory)
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2931_5_) decoded() *__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2936_9_ {
	if unionVar.memory == nil {
		var buffer [304]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2936_9_)(unionVar.memory)
}

type UA_ExtensionObject struct {
	encoding int
	content  __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2931_5_
}
type UA_DataValue struct {
	hasValue             UA_Boolean
	hasStatus            UA_Boolean
	hasSourceTimestamp   UA_Boolean
	hasServerTimestamp   UA_Boolean
	hasSourcePicoseconds UA_Boolean
	hasServerPicoseconds UA_Boolean
	value                UA_Variant
	status               UA_StatusCode
	sourceTimestamp      UA_DateTime
	sourcePicoseconds    UA_UInt16
	serverTimestamp      UA_DateTime
	serverPicoseconds    UA_UInt16
}
type UA_DiagnosticInfo struct {
	hasSymbolicId          UA_Boolean
	hasNamespaceUri        UA_Boolean
	hasLocalizedText       UA_Boolean
	hasLocale              UA_Boolean
	hasAdditionalInfo      UA_Boolean
	hasInnerStatusCode     UA_Boolean
	hasInnerDiagnosticInfo UA_Boolean
	symbolicId             UA_Int32
	namespaceUri           UA_Int32
	localizedText          UA_Int32
	locale                 UA_Int32
	additionalInfo         UA_String
	innerStatusCode        UA_StatusCode
	innerDiagnosticInfo    []UA_DiagnosticInfo
}
type UA_DataTypeMember struct {
	memberName      []byte
	memberTypeIndex UA_UInt16
	padding         UA_Byte
	namespaceZero   UA_Boolean
	isArray         UA_Boolean
}
type UA_DataType struct {
	typeName         []byte
	typeId           UA_NodeId
	memSize          UA_UInt16
	typeIndex        UA_UInt16
	membersSize      UA_Byte
	builtin          UA_Boolean
	pointerFree      UA_Boolean
	overlayable      UA_Boolean
	binaryEncodingId UA_UInt16
	members          []UA_DataTypeMember
}
// UA_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3083
// Initializes a variable to default values
// *
// * @param p The memory location of the variable
// * @param type The datatype description
func UA_init(p interface{}, type_ []UA_DataType) {
	noarch.Memset(p.([]byte), byte(0), uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize)))))))))
}

type UA_StatusCodeDescription struct {
	code        UA_StatusCode
	name        []byte
	explanation []byte
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3186 :Cannot casting { -> UA_StatusCodeDescription}. err = cFromType is empty
statusCodeExplanation_default UA_StatusCodeDescription
// UA_StatusCode_description - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3188
//
// * .. _generated-types:
// *
// * Generated Data Type Definitions
// * -------------------------------
// *
// * The following data types were auto-generated from a definition in XML format.
// *
// * .. toctree::
// *
// *    types_generated
//
// * Deprecated Data Types API
// * -------------------------
// * The following definitions are deprecated and will be removed in future
// * releases of open62541.
// The numeric value of the StatusCode
// The symbolic name
// Short message explaining the StatusCode
func UA_StatusCode_description(code UA_StatusCode) []UA_StatusCodeDescription {
	return (*[100000000]UA_StatusCodeDescription)(unsafe.Pointer(&statusCodeExplanation_default))[:]
}
// UA_StatusCode_explanation - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3193
func UA_StatusCode_explanation(code UA_StatusCode) []byte {
	return statusCodeExplanation_default.name
}
// deprecatedDateTimeMultiple - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3202
// The old DateTime conversion macros
func deprecatedDateTimeMultiple(multiple float64) float64 {
	return multiple
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:3240 :Cannot casting { -> UA_DataType [199]}. err = cFromType is empty
UA_TYPES []UA_DataType = make([]UA_DataType, 199)

type UA_SignedSoftwareCertificate struct {
	certificateData UA_ByteString
	signature       UA_ByteString
}
type UA_SemanticChangeStructureDataType struct {
	affected     UA_NodeId
	affectedType UA_NodeId
}
type UA_StatusChangeNotification struct {
	status         UA_StatusCode
	diagnosticInfo UA_DiagnosticInfo
}
type UA_BrowsePathTarget struct {
	targetId           UA_ExpandedNodeId
	remainingPathIndex UA_UInt32
}
type UA_ViewAttributes struct {
	specifiedAttributes UA_UInt32
	displayName         UA_LocalizedText
	description         UA_LocalizedText
	writeMask           UA_UInt32
	userWriteMask       UA_UInt32
	containsNoLoops     UA_Boolean
	eventNotifier       UA_Byte
}
type UA_RequestHeader struct {
	authenticationToken UA_NodeId
	timestamp           UA_DateTime
	requestHandle       UA_UInt32
	returnDiagnostics   UA_UInt32
	auditEntryId        UA_String
	timeoutHint         UA_UInt32
	additionalHeader    UA_ExtensionObject
}
type UA_MonitoredItemModifyResult struct {
	statusCode              UA_StatusCode
	revisedSamplingInterval UA_Double
	revisedQueueSize        UA_UInt32
	filterResult            UA_ExtensionObject
}
type UA_ElementOperand struct {
	index UA_UInt32
}
type UA_CloseSecureChannelRequest struct {
	requestHeader UA_RequestHeader
}
type UA_AddNodesResult struct {
	statusCode  UA_StatusCode
	addedNodeId UA_NodeId
}
type UA_VariableAttributes struct {
	specifiedAttributes     UA_UInt32
	displayName             UA_LocalizedText
	description             UA_LocalizedText
	writeMask               UA_UInt32
	userWriteMask           UA_UInt32
	value                   UA_Variant
	dataType                UA_NodeId
	valueRank               UA_Int32
	arrayDimensionsSize     uint
	arrayDimensions         []UA_UInt32
	accessLevel             UA_Byte
	userAccessLevel         UA_Byte
	minimumSamplingInterval UA_Double
	historizing             UA_Boolean
}
type UA_NotificationMessage struct {
	sequenceNumber       UA_UInt32
	publishTime          UA_DateTime
	notificationDataSize uint
	notificationData     []UA_ExtensionObject
}
type UA_FindServersOnNetworkRequest struct {
	requestHeader              UA_RequestHeader
	startingRecordId           UA_UInt32
	maxRecordsToReturn         UA_UInt32
	serverCapabilityFilterSize uint
	serverCapabilityFilter     []UA_String
}
type UA_EventFieldList struct {
	clientHandle    UA_UInt32
	eventFieldsSize uint
	eventFields     []UA_Variant
}

const (
	UA_MONITORINGMODE_DISABLED     int = 0
	UA_MONITORINGMODE_SAMPLING         = 1
	UA_MONITORINGMODE_REPORTING        = 2
	__UA_MONITORINGMODE_FORCE32BIT     = 2147483647
)

type UA_MonitoringMode int
type UA_MdnsDiscoveryConfiguration struct {
	mdnsServerName         UA_String
	serverCapabilitiesSize uint
	serverCapabilities     []UA_String
}
type UA_CallMethodResult struct {
	statusCode                       UA_StatusCode
	inputArgumentResultsSize         uint
	inputArgumentResults             []UA_StatusCode
	inputArgumentDiagnosticInfosSize uint
	inputArgumentDiagnosticInfos     []UA_DiagnosticInfo
	outputArgumentsSize              uint
	outputArguments                  []UA_Variant
}
type UA_ParsingResult struct {
	statusCode              UA_StatusCode
	dataStatusCodesSize     uint
	dataStatusCodes         []UA_StatusCode
	dataDiagnosticInfosSize uint
	dataDiagnosticInfos     []UA_DiagnosticInfo
}
type UA_RelativePathElement struct {
	referenceTypeId UA_NodeId
	isInverse       UA_Boolean
	includeSubtypes UA_Boolean
	targetName      UA_QualifiedName
}

const (
	UA_BROWSEDIRECTION_FORWARD      int = 0
	UA_BROWSEDIRECTION_INVERSE          = 1
	UA_BROWSEDIRECTION_BOTH             = 2
	UA_BROWSEDIRECTION_INVALID          = 3
	__UA_BROWSEDIRECTION_FORCE32BIT     = 2147483647
)

type UA_BrowseDirection int
type UA_CallMethodRequest struct {
	objectId           UA_NodeId
	methodId           UA_NodeId
	inputArgumentsSize uint
	inputArguments     []UA_Variant
}

const (
	UA_REDUNDANCYSUPPORT_NONE           int = 0
	UA_REDUNDANCYSUPPORT_COLD               = 1
	UA_REDUNDANCYSUPPORT_WARM               = 2
	UA_REDUNDANCYSUPPORT_HOT                = 3
	UA_REDUNDANCYSUPPORT_TRANSPARENT        = 4
	UA_REDUNDANCYSUPPORT_HOTANDMIRRORED     = 5
	__UA_REDUNDANCYSUPPORT_FORCE32BIT       = 2147483647
)

type UA_RedundancySupport int
type UA_EventNotificationList struct {
	eventsSize uint
	events     []UA_EventFieldList
}
type UA_UnregisterNodesRequest struct {
	requestHeader         UA_RequestHeader
	nodesToUnregisterSize uint
	nodesToUnregister     []UA_NodeId
}
type UA_ContentFilterElementResult struct {
	statusCode                 UA_StatusCode
	operandStatusCodesSize     uint
	operandStatusCodes         []UA_StatusCode
	operandDiagnosticInfosSize uint
	operandDiagnosticInfos     []UA_DiagnosticInfo
}
type UA_SimpleAttributeOperand struct {
	typeDefinitionId UA_NodeId
	browsePathSize   uint
	browsePath       []UA_QualifiedName
	attributeId      UA_UInt32
	indexRange       UA_String
}
type UA_LiteralOperand struct {
	value UA_Variant
}
type UA_QueryDataSet struct {
	nodeId             UA_ExpandedNodeId
	typeDefinitionNode UA_ExpandedNodeId
	valuesSize         uint
	values             []UA_Variant
}
type UA_AnonymousIdentityToken struct {
	policyId UA_String
}
type UA_SetPublishingModeRequest struct {
	requestHeader       UA_RequestHeader
	publishingEnabled   UA_Boolean
	subscriptionIdsSize uint
	subscriptionIds     []UA_UInt32
}
type UA_MonitoredItemCreateResult struct {
	statusCode              UA_StatusCode
	monitoredItemId         UA_UInt32
	revisedSamplingInterval UA_Double
	revisedQueueSize        UA_UInt32
	filterResult            UA_ExtensionObject
}

const (
	UA_TIMESTAMPSTORETURN_SOURCE       int = 0
	UA_TIMESTAMPSTORETURN_SERVER           = 1
	UA_TIMESTAMPSTORETURN_BOTH             = 2
	UA_TIMESTAMPSTORETURN_NEITHER          = 3
	UA_TIMESTAMPSTORETURN_INVALID          = 4
	__UA_TIMESTAMPSTORETURN_FORCE32BIT     = 2147483647
)

type UA_TimestampsToReturn int
type UA_CallRequest struct {
	requestHeader     UA_RequestHeader
	methodsToCallSize uint
	methodsToCall     []UA_CallMethodRequest
}
type UA_MethodAttributes struct {
	specifiedAttributes UA_UInt32
	displayName         UA_LocalizedText
	description         UA_LocalizedText
	writeMask           UA_UInt32
	userWriteMask       UA_UInt32
	executable          UA_Boolean
	userExecutable      UA_Boolean
}
type UA_DeleteReferencesItem struct {
	sourceNodeId        UA_NodeId
	referenceTypeId     UA_NodeId
	isForward           UA_Boolean
	targetNodeId        UA_ExpandedNodeId
	deleteBidirectional UA_Boolean
}
type UA_WriteValue struct {
	nodeId      UA_NodeId
	attributeId UA_UInt32
	indexRange  UA_String
	value       UA_DataValue
}

const (
	UA_NODEATTRIBUTESMASK_NONE                    int = 0
	UA_NODEATTRIBUTESMASK_ACCESSLEVEL                 = 1
	UA_NODEATTRIBUTESMASK_ARRAYDIMENSIONS             = 2
	UA_NODEATTRIBUTESMASK_BROWSENAME                  = 4
	UA_NODEATTRIBUTESMASK_CONTAINSNOLOOPS             = 8
	UA_NODEATTRIBUTESMASK_DATATYPE                    = 16
	UA_NODEATTRIBUTESMASK_DESCRIPTION                 = 32
	UA_NODEATTRIBUTESMASK_DISPLAYNAME                 = 64
	UA_NODEATTRIBUTESMASK_EVENTNOTIFIER               = 128
	UA_NODEATTRIBUTESMASK_EXECUTABLE                  = 256
	UA_NODEATTRIBUTESMASK_HISTORIZING                 = 512
	UA_NODEATTRIBUTESMASK_INVERSENAME                 = 1024
	UA_NODEATTRIBUTESMASK_ISABSTRACT                  = 2048
	UA_NODEATTRIBUTESMASK_MINIMUMSAMPLINGINTERVAL     = 4096
	UA_NODEATTRIBUTESMASK_NODECLASS                   = 8192
	UA_NODEATTRIBUTESMASK_NODEID                      = 16384
	UA_NODEATTRIBUTESMASK_SYMMETRIC                   = 32768
	UA_NODEATTRIBUTESMASK_USERACCESSLEVEL             = 65536
	UA_NODEATTRIBUTESMASK_USEREXECUTABLE              = 131072
	UA_NODEATTRIBUTESMASK_USERWRITEMASK               = 262144
	UA_NODEATTRIBUTESMASK_VALUERANK                   = 524288
	UA_NODEATTRIBUTESMASK_WRITEMASK                   = 1048576
	UA_NODEATTRIBUTESMASK_VALUE                       = 2097152
	UA_NODEATTRIBUTESMASK_DATATYPEDEFINITION          = 4194304
	UA_NODEATTRIBUTESMASK_ROLEPERMISSIONS             = 8388608
	UA_NODEATTRIBUTESMASK_ACCESSRESTRICTIONS          = 16777216
	UA_NODEATTRIBUTESMASK_ALL                         = 33554431
	UA_NODEATTRIBUTESMASK_BASENODE                    = 26501220
	UA_NODEATTRIBUTESMASK_OBJECT                      = 26501348
	UA_NODEATTRIBUTESMASK_OBJECTTYPE                  = 26503268
	UA_NODEATTRIBUTESMASK_VARIABLE                    = 26571383
	UA_NODEATTRIBUTESMASK_VARIABLETYPE                = 28600438
	UA_NODEATTRIBUTESMASK_METHOD                      = 26632548
	UA_NODEATTRIBUTESMASK_REFERENCETYPE               = 26537060
	UA_NODEATTRIBUTESMASK_VIEW                        = 26501356
	__UA_NODEATTRIBUTESMASK_FORCE32BIT                = 2147483647
)

type UA_NodeAttributesMask int

const (
	UA_MESSAGESECURITYMODE_INVALID        int = 0
	UA_MESSAGESECURITYMODE_NONE               = 1
	UA_MESSAGESECURITYMODE_SIGN               = 2
	UA_MESSAGESECURITYMODE_SIGNANDENCRYPT     = 3
	__UA_MESSAGESECURITYMODE_FORCE32BIT       = 2147483647
)

type UA_MessageSecurityMode int
type UA_MonitoringParameters struct {
	clientHandle     UA_UInt32
	samplingInterval UA_Double
	filter           UA_ExtensionObject
	queueSize        UA_UInt32
	discardOldest    UA_Boolean
}
type UA_ReferenceNode struct {
	referenceTypeId UA_NodeId
	isInverse       UA_Boolean
	targetId        UA_ExpandedNodeId
}
type UA_Argument struct {
	name                UA_String
	dataType            UA_NodeId
	valueRank           UA_Int32
	arrayDimensionsSize uint
	arrayDimensions     []UA_UInt32
	description         UA_LocalizedText
}
type UA_ChannelSecurityToken struct {
	channelId       UA_UInt32
	tokenId         UA_UInt32
	createdAt       UA_DateTime
	revisedLifetime UA_UInt32
}
type UA_UserIdentityToken struct {
	policyId UA_String
}
type UA_SignatureData struct {
	algorithm UA_String
	signature UA_ByteString
}
type UA_ObjectTypeAttributes struct {
	specifiedAttributes UA_UInt32
	displayName         UA_LocalizedText
	description         UA_LocalizedText
	writeMask           UA_UInt32
	userWriteMask       UA_UInt32
	isAbstract          UA_Boolean
}

const (
	UA_DEADBANDTYPE_NONE         int = 0
	UA_DEADBANDTYPE_ABSOLUTE         = 1
	UA_DEADBANDTYPE_PERCENT          = 2
	__UA_DEADBANDTYPE_FORCE32BIT     = 2147483647
)

type UA_DeadbandType int

const (
	UA_SECURITYTOKENREQUESTTYPE_ISSUE        int = 0
	UA_SECURITYTOKENREQUESTTYPE_RENEW            = 1
	__UA_SECURITYTOKENREQUESTTYPE_FORCE32BIT     = 2147483647
)

type UA_SecurityTokenRequestType int
type UA_NodeAttributes struct {
	specifiedAttributes UA_UInt32
	displayName         UA_LocalizedText
	description         UA_LocalizedText
	writeMask           UA_UInt32
	userWriteMask       UA_UInt32
}

const (
	UA_DATACHANGETRIGGER_STATUS               int = 0
	UA_DATACHANGETRIGGER_STATUSVALUE              = 1
	UA_DATACHANGETRIGGER_STATUSVALUETIMESTAMP     = 2
	__UA_DATACHANGETRIGGER_FORCE32BIT             = 2147483647
)

type UA_DataChangeTrigger int
type UA_BuildInfo struct {
	productUri       UA_String
	manufacturerName UA_String
	productName      UA_String
	softwareVersion  UA_String
	buildNumber      UA_String
	buildDate        UA_DateTime
}

const (
	UA_NODECLASS_UNSPECIFIED   int = 0
	UA_NODECLASS_OBJECT            = 1
	UA_NODECLASS_VARIABLE          = 2
	UA_NODECLASS_METHOD            = 4
	UA_NODECLASS_OBJECTTYPE        = 8
	UA_NODECLASS_VARIABLETYPE      = 16
	UA_NODECLASS_REFERENCETYPE     = 32
	UA_NODECLASS_DATATYPE          = 64
	UA_NODECLASS_VIEW              = 128
	__UA_NODECLASS_FORCE32BIT      = 2147483647
)

type UA_NodeClass int
type UA_SubscriptionDiagnosticsDataType struct {
	sessionId                    UA_NodeId
	subscriptionId               UA_UInt32
	priority                     UA_Byte
	publishingInterval           UA_Double
	maxKeepAliveCount            UA_UInt32
	maxLifetimeCount             UA_UInt32
	maxNotificationsPerPublish   UA_UInt32
	publishingEnabled            UA_Boolean
	modifyCount                  UA_UInt32
	enableCount                  UA_UInt32
	disableCount                 UA_UInt32
	republishRequestCount        UA_UInt32
	republishMessageRequestCount UA_UInt32
	republishMessageCount        UA_UInt32
	transferRequestCount         UA_UInt32
	transferredToAltClientCount  UA_UInt32
	transferredToSameClientCount UA_UInt32
	publishRequestCount          UA_UInt32
	dataChangeNotificationsCount UA_UInt32
	eventNotificationsCount      UA_UInt32
	notificationsCount           UA_UInt32
	latePublishRequestCount      UA_UInt32
	currentKeepAliveCount        UA_UInt32
	currentLifetimeCount         UA_UInt32
	unacknowledgedMessageCount   UA_UInt32
	discardedMessageCount        UA_UInt32
	monitoredItemCount           UA_UInt32
	disabledMonitoredItemCount   UA_UInt32
	monitoringQueueOverflowCount UA_UInt32
	nextSequenceNumber           UA_UInt32
	eventQueueOverFlowCount      UA_UInt32
}
type UA_FilterOperand = interface{}
type UA_MonitoredItemNotification struct {
	clientHandle UA_UInt32
	value        UA_DataValue
}
type UA_DeleteNodesItem struct {
	nodeId                 UA_NodeId
	deleteTargetReferences UA_Boolean
}
type UA_DeleteSubscriptionsRequest struct {
	requestHeader       UA_RequestHeader
	subscriptionIdsSize uint
	subscriptionIds     []UA_UInt32
}
type UA_SubscriptionAcknowledgement struct {
	subscriptionId UA_UInt32
	sequenceNumber UA_UInt32
}
type UA_ReadValueId struct {
	nodeId       UA_NodeId
	attributeId  UA_UInt32
	indexRange   UA_String
	dataEncoding UA_QualifiedName
}
type UA_DataTypeAttributes struct {
	specifiedAttributes UA_UInt32
	displayName         UA_LocalizedText
	description         UA_LocalizedText
	writeMask           UA_UInt32
	userWriteMask       UA_UInt32
	isAbstract          UA_Boolean
}
type UA_ResponseHeader struct {
	timestamp          UA_DateTime
	requestHandle      UA_UInt32
	serviceResult      UA_StatusCode
	serviceDiagnostics UA_DiagnosticInfo
	stringTableSize    uint
	stringTable        []UA_String
	additionalHeader   UA_ExtensionObject
}
type UA_DeleteMonitoredItemsRequest struct {
	requestHeader        UA_RequestHeader
	subscriptionId       UA_UInt32
	monitoredItemIdsSize uint
	monitoredItemIds     []UA_UInt32
}
type UA_ViewDescription struct {
	viewId      UA_NodeId
	timestamp   UA_DateTime
	viewVersion UA_UInt32
}
type UA_ServerOnNetwork struct {
	recordId               UA_UInt32
	serverName             UA_String
	discoveryUrl           UA_String
	serverCapabilitiesSize uint
	serverCapabilities     []UA_String
}
type UA_DeleteMonitoredItemsResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_StatusCode
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_FindServersOnNetworkResponse struct {
	responseHeader       UA_ResponseHeader
	lastCounterResetTime UA_DateTime
	serversSize          uint
	servers              []UA_ServerOnNetwork
}
type UA_RelativePath struct {
	elementsSize uint
	elements     []UA_RelativePathElement
}
type UA_RegisterNodesRequest struct {
	requestHeader       UA_RequestHeader
	nodesToRegisterSize uint
	nodesToRegister     []UA_NodeId
}
type UA_AggregateConfiguration struct {
	useServerCapabilitiesDefaults UA_Boolean
	treatUncertainAsBad           UA_Boolean
	percentDataBad                UA_Byte
	percentDataGood               UA_Byte
	useSlopedExtrapolation        UA_Boolean
}
type UA_DeleteNodesRequest struct {
	requestHeader     UA_RequestHeader
	nodesToDeleteSize uint
	nodesToDelete     []UA_DeleteNodesItem
}
type UA_PublishResponse struct {
	responseHeader               UA_ResponseHeader
	subscriptionId               UA_UInt32
	availableSequenceNumbersSize uint
	availableSequenceNumbers     []UA_UInt32
	moreNotifications            UA_Boolean
	notificationMessage          UA_NotificationMessage
	resultsSize                  uint
	results                      []UA_StatusCode
	diagnosticInfosSize          uint
	diagnosticInfos              []UA_DiagnosticInfo
}
type UA_MonitoredItemModifyRequest struct {
	monitoredItemId     UA_UInt32
	requestedParameters UA_MonitoringParameters
}
type UA_ServiceCounterDataType struct {
	totalCount UA_UInt32
	errorCount UA_UInt32
}
type UA_ModelChangeStructureDataType struct {
	affected     UA_NodeId
	affectedType UA_NodeId
	verb         UA_Byte
}
type UA_UserNameIdentityToken struct {
	policyId            UA_String
	userName            UA_String
	password            UA_ByteString
	encryptionAlgorithm UA_String
}

const (
	UA_IDTYPE_NUMERIC      int = 0
	UA_IDTYPE_STRING           = 1
	UA_IDTYPE_GUID             = 2
	UA_IDTYPE_OPAQUE           = 3
	__UA_IDTYPE_FORCE32BIT     = 2147483647
)

type UA_IdType int

const (
	UA_USERTOKENTYPE_ANONYMOUS    int = 0
	UA_USERTOKENTYPE_USERNAME         = 1
	UA_USERTOKENTYPE_CERTIFICATE      = 2
	UA_USERTOKENTYPE_ISSUEDTOKEN      = 3
	__UA_USERTOKENTYPE_FORCE32BIT     = 2147483647
)

type UA_UserTokenType int
type UA_SetTriggeringResponse struct {
	responseHeader            UA_ResponseHeader
	addResultsSize            uint
	addResults                []UA_StatusCode
	addDiagnosticInfosSize    uint
	addDiagnosticInfos        []UA_DiagnosticInfo
	removeResultsSize         uint
	removeResults             []UA_StatusCode
	removeDiagnosticInfosSize uint
	removeDiagnosticInfos     []UA_DiagnosticInfo
}
type UA_TimeZoneDataType struct {
	offset                 UA_Int16
	daylightSavingInOffset UA_Boolean
}
type UA_ActivateSessionRequest struct {
	requestHeader                  UA_RequestHeader
	clientSignature                UA_SignatureData
	clientSoftwareCertificatesSize uint
	clientSoftwareCertificates     []UA_SignedSoftwareCertificate
	localeIdsSize                  uint
	localeIds                      []UA_String
	userIdentityToken              UA_ExtensionObject
	userTokenSignature             UA_SignatureData
}
type UA_OpenSecureChannelResponse struct {
	responseHeader        UA_ResponseHeader
	serverProtocolVersion UA_UInt32
	securityToken         UA_ChannelSecurityToken
	serverNonce           UA_ByteString
}

const (
	UA_APPLICATIONTYPE_SERVER          int = 0
	UA_APPLICATIONTYPE_CLIENT              = 1
	UA_APPLICATIONTYPE_CLIENTANDSERVER     = 2
	UA_APPLICATIONTYPE_DISCOVERYSERVER     = 3
	__UA_APPLICATIONTYPE_FORCE32BIT        = 2147483647
)

type UA_ApplicationType int

const (
	UA_SERVERSTATE_RUNNING            int = 0
	UA_SERVERSTATE_FAILED                 = 1
	UA_SERVERSTATE_NOCONFIGURATION        = 2
	UA_SERVERSTATE_SUSPENDED              = 3
	UA_SERVERSTATE_SHUTDOWN               = 4
	UA_SERVERSTATE_TEST                   = 5
	UA_SERVERSTATE_COMMUNICATIONFAULT     = 6
	UA_SERVERSTATE_UNKNOWN                = 7
	__UA_SERVERSTATE_FORCE32BIT           = 2147483647
)

type UA_ServerState int
type UA_QueryNextResponse struct {
	responseHeader           UA_ResponseHeader
	queryDataSetsSize        uint
	queryDataSets            []UA_QueryDataSet
	revisedContinuationPoint UA_ByteString
}
type UA_DiscoveryConfiguration = interface{}
type UA_ActivateSessionResponse struct {
	responseHeader      UA_ResponseHeader
	serverNonce         UA_ByteString
	resultsSize         uint
	results             []UA_StatusCode
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_EndpointUrlListDataType struct {
	endpointUrlListSize uint
	endpointUrlList     []UA_String
}

const (
	UA_FILTEROPERATOR_EQUALS             int = 0
	UA_FILTEROPERATOR_ISNULL                 = 1
	UA_FILTEROPERATOR_GREATERTHAN            = 2
	UA_FILTEROPERATOR_LESSTHAN               = 3
	UA_FILTEROPERATOR_GREATERTHANOREQUAL     = 4
	UA_FILTEROPERATOR_LESSTHANOREQUAL        = 5
	UA_FILTEROPERATOR_LIKE                   = 6
	UA_FILTEROPERATOR_NOT                    = 7
	UA_FILTEROPERATOR_BETWEEN                = 8
	UA_FILTEROPERATOR_INLIST                 = 9
	UA_FILTEROPERATOR_AND                    = 10
	UA_FILTEROPERATOR_OR                     = 11
	UA_FILTEROPERATOR_CAST                   = 12
	UA_FILTEROPERATOR_INVIEW                 = 13
	UA_FILTEROPERATOR_OFTYPE                 = 14
	UA_FILTEROPERATOR_RELATEDTO              = 15
	UA_FILTEROPERATOR_BITWISEAND             = 16
	UA_FILTEROPERATOR_BITWISEOR              = 17
	__UA_FILTEROPERATOR_FORCE32BIT           = 2147483647
)

type UA_FilterOperator int
type UA_QueryNextRequest struct {
	requestHeader            UA_RequestHeader
	releaseContinuationPoint UA_Boolean
	continuationPoint        UA_ByteString
}
type UA_WriteResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_StatusCode
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_BrowseNextRequest struct {
	requestHeader             UA_RequestHeader
	releaseContinuationPoints UA_Boolean
	continuationPointsSize    uint
	continuationPoints        []UA_ByteString
}
type UA_CreateSubscriptionRequest struct {
	requestHeader               UA_RequestHeader
	requestedPublishingInterval UA_Double
	requestedLifetimeCount      UA_UInt32
	requestedMaxKeepAliveCount  UA_UInt32
	maxNotificationsPerPublish  UA_UInt32
	publishingEnabled           UA_Boolean
	priority                    UA_Byte
}
type UA_VariableTypeAttributes struct {
	specifiedAttributes UA_UInt32
	displayName         UA_LocalizedText
	description         UA_LocalizedText
	writeMask           UA_UInt32
	userWriteMask       UA_UInt32
	value               UA_Variant
	dataType            UA_NodeId
	valueRank           UA_Int32
	arrayDimensionsSize uint
	arrayDimensions     []UA_UInt32
	isAbstract          UA_Boolean
}
type UA_BrowsePathResult struct {
	statusCode  UA_StatusCode
	targetsSize uint
	targets     []UA_BrowsePathTarget
}
type UA_ModifySubscriptionResponse struct {
	responseHeader            UA_ResponseHeader
	revisedPublishingInterval UA_Double
	revisedLifetimeCount      UA_UInt32
	revisedMaxKeepAliveCount  UA_UInt32
}
type UA_RedundantServerDataType struct {
	serverId     UA_String
	serviceLevel UA_Byte
	serverState  int
}
type UA_RegisterNodesResponse struct {
	responseHeader        UA_ResponseHeader
	registeredNodeIdsSize uint
	registeredNodeIds     []UA_NodeId
}
type UA_CloseSessionRequest struct {
	requestHeader       UA_RequestHeader
	deleteSubscriptions UA_Boolean
}
type UA_ModifyMonitoredItemsResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_MonitoredItemModifyResult
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_ModifySubscriptionRequest struct {
	requestHeader               UA_RequestHeader
	subscriptionId              UA_UInt32
	requestedPublishingInterval UA_Double
	requestedLifetimeCount      UA_UInt32
	requestedMaxKeepAliveCount  UA_UInt32
	maxNotificationsPerPublish  UA_UInt32
	priority                    UA_Byte
}
type UA_ServerDiagnosticsSummaryDataType struct {
	serverViewCount               UA_UInt32
	currentSessionCount           UA_UInt32
	cumulatedSessionCount         UA_UInt32
	securityRejectedSessionCount  UA_UInt32
	rejectedSessionCount          UA_UInt32
	sessionTimeoutCount           UA_UInt32
	sessionAbortCount             UA_UInt32
	currentSubscriptionCount      UA_UInt32
	cumulatedSubscriptionCount    UA_UInt32
	publishingIntervalCount       UA_UInt32
	securityRejectedRequestsCount UA_UInt32
	rejectedRequestsCount         UA_UInt32
}
type UA_UserTokenPolicy struct {
	policyId          UA_String
	tokenType         int
	issuedTokenType   UA_String
	issuerEndpointUrl UA_String
	securityPolicyUri UA_String
}
type UA_ReferenceTypeAttributes struct {
	specifiedAttributes UA_UInt32
	displayName         UA_LocalizedText
	description         UA_LocalizedText
	writeMask           UA_UInt32
	userWriteMask       UA_UInt32
	isAbstract          UA_Boolean
	symmetric           UA_Boolean
	inverseName         UA_LocalizedText
}
type UA_BrowsePath struct {
	startingNode UA_NodeId
	relativePath UA_RelativePath
}
type UA_SetMonitoringModeRequest struct {
	requestHeader        UA_RequestHeader
	subscriptionId       UA_UInt32
	monitoringMode       int
	monitoredItemIdsSize uint
	monitoredItemIds     []UA_UInt32
}
type UA_UnregisterNodesResponse struct {
	responseHeader UA_ResponseHeader
}
type UA_WriteRequest struct {
	requestHeader    UA_RequestHeader
	nodesToWriteSize uint
	nodesToWrite     []UA_WriteValue
}
type UA_ObjectAttributes struct {
	specifiedAttributes UA_UInt32
	displayName         UA_LocalizedText
	description         UA_LocalizedText
	writeMask           UA_UInt32
	userWriteMask       UA_UInt32
	eventNotifier       UA_Byte
}

const (
	UA_BROWSERESULTMASK_NONE              int = 0
	UA_BROWSERESULTMASK_REFERENCETYPEID       = 1
	UA_BROWSERESULTMASK_ISFORWARD             = 2
	UA_BROWSERESULTMASK_NODECLASS             = 4
	UA_BROWSERESULTMASK_BROWSENAME            = 8
	UA_BROWSERESULTMASK_DISPLAYNAME           = 16
	UA_BROWSERESULTMASK_TYPEDEFINITION        = 32
	UA_BROWSERESULTMASK_ALL                   = 63
	UA_BROWSERESULTMASK_REFERENCETYPEINFO     = 3
	UA_BROWSERESULTMASK_TARGETINFO            = 60
	__UA_BROWSERESULTMASK_FORCE32BIT          = 2147483647
)

type UA_BrowseResultMask int
type UA_BrowseDescription struct {
	nodeId          UA_NodeId
	browseDirection int
	referenceTypeId UA_NodeId
	includeSubtypes UA_Boolean
	nodeClassMask   UA_UInt32
	resultMask      UA_UInt32
}
type UA_SetTriggeringRequest struct {
	requestHeader     UA_RequestHeader
	subscriptionId    UA_UInt32
	triggeringItemId  UA_UInt32
	linksToAddSize    uint
	linksToAdd        []UA_UInt32
	linksToRemoveSize uint
	linksToRemove     []UA_UInt32
}
type UA_SessionSecurityDiagnosticsDataType struct {
	sessionId               UA_NodeId
	clientUserIdOfSession   UA_String
	clientUserIdHistorySize uint
	clientUserIdHistory     []UA_String
	authenticationMechanism UA_String
	encoding                UA_String
	transportProtocol       UA_String
	securityMode            int
	securityPolicyUri       UA_String
	clientCertificate       UA_ByteString
}
type UA_RepublishRequest struct {
	requestHeader            UA_RequestHeader
	subscriptionId           UA_UInt32
	retransmitSequenceNumber UA_UInt32
}
type UA_GetEndpointsRequest struct {
	requestHeader   UA_RequestHeader
	endpointUrl     UA_String
	localeIdsSize   uint
	localeIds       []UA_String
	profileUrisSize uint
	profileUris     []UA_String
}
type UA_PublishRequest struct {
	requestHeader                    UA_RequestHeader
	subscriptionAcknowledgementsSize uint
	subscriptionAcknowledgements     []UA_SubscriptionAcknowledgement
}
type UA_DeleteSubscriptionsResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_StatusCode
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_AddNodesResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_AddNodesResult
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_DataChangeNotification struct {
	monitoredItemsSize  uint
	monitoredItems      []UA_MonitoredItemNotification
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_CloseSecureChannelResponse struct {
	responseHeader UA_ResponseHeader
}
type UA_ModifyMonitoredItemsRequest struct {
	requestHeader      UA_RequestHeader
	subscriptionId     UA_UInt32
	timestampsToReturn int
	itemsToModifySize  uint
	itemsToModify      []UA_MonitoredItemModifyRequest
}
type UA_SetMonitoringModeResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_StatusCode
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_FindServersRequest struct {
	requestHeader  UA_RequestHeader
	endpointUrl    UA_String
	localeIdsSize  uint
	localeIds      []UA_String
	serverUrisSize uint
	serverUris     []UA_String
}
type UA_ReferenceDescription struct {
	referenceTypeId UA_NodeId
	isForward       UA_Boolean
	nodeId          UA_ExpandedNodeId
	browseName      UA_QualifiedName
	displayName     UA_LocalizedText
	nodeClass       int
	typeDefinition  UA_ExpandedNodeId
}
type UA_SetPublishingModeResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_StatusCode
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_ContentFilterResult struct {
	elementResultsSize         uint
	elementResults             []UA_ContentFilterElementResult
	elementDiagnosticInfosSize uint
	elementDiagnosticInfos     []UA_DiagnosticInfo
}
type UA_RegisterServerResponse struct {
	responseHeader UA_ResponseHeader
}
type UA_AddReferencesItem struct {
	sourceNodeId    UA_NodeId
	referenceTypeId UA_NodeId
	isForward       UA_Boolean
	targetServerUri UA_String
	targetNodeId    UA_ExpandedNodeId
	targetNodeClass int
}
type UA_QueryDataDescription struct {
	relativePath UA_RelativePath
	attributeId  UA_UInt32
	indexRange   UA_String
}
type UA_CreateSubscriptionResponse struct {
	responseHeader            UA_ResponseHeader
	subscriptionId            UA_UInt32
	revisedPublishingInterval UA_Double
	revisedLifetimeCount      UA_UInt32
	revisedMaxKeepAliveCount  UA_UInt32
}
type UA_NetworkGroupDataType struct {
	serverUri        UA_String
	networkPathsSize uint
	networkPaths     []UA_EndpointUrlListDataType
}
type UA_DeleteReferencesResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_StatusCode
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_CreateMonitoredItemsResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_MonitoredItemCreateResult
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_CallResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_CallMethodResult
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_DeleteNodesResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_StatusCode
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_RepublishResponse struct {
	responseHeader      UA_ResponseHeader
	notificationMessage UA_NotificationMessage
}
type UA_MonitoredItemCreateRequest struct {
	itemToMonitor       UA_ReadValueId
	monitoringMode      int
	requestedParameters UA_MonitoringParameters
}
type UA_DeleteReferencesRequest struct {
	requestHeader          UA_RequestHeader
	referencesToDeleteSize uint
	referencesToDelete     []UA_DeleteReferencesItem
}
type UA_ReadResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_DataValue
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_AddReferencesRequest struct {
	requestHeader       UA_RequestHeader
	referencesToAddSize uint
	referencesToAdd     []UA_AddReferencesItem
}
type UA_ReadRequest struct {
	requestHeader      UA_RequestHeader
	maxAge             UA_Double
	timestampsToReturn int
	nodesToReadSize    uint
	nodesToRead        []UA_ReadValueId
}
type UA_OpenSecureChannelRequest struct {
	requestHeader         UA_RequestHeader
	clientProtocolVersion UA_UInt32
	requestType           int
	securityMode          int
	clientNonce           UA_ByteString
	requestedLifetime     UA_UInt32
}
type UA_RegisterServer2Response struct {
	responseHeader           UA_ResponseHeader
	configurationResultsSize uint
	configurationResults     []UA_StatusCode
	diagnosticInfosSize      uint
	diagnosticInfos          []UA_DiagnosticInfo
}
type UA_AddNodesItem struct {
	parentNodeId       UA_ExpandedNodeId
	referenceTypeId    UA_NodeId
	requestedNewNodeId UA_ExpandedNodeId
	browseName         UA_QualifiedName
	nodeClass          int
	nodeAttributes     UA_ExtensionObject
	typeDefinition     UA_ExpandedNodeId
}
type UA_NodeTypeDescription struct {
	typeDefinitionNode UA_ExpandedNodeId
	includeSubTypes    UA_Boolean
	dataToReturnSize   uint
	dataToReturn       []UA_QueryDataDescription
}
type UA_ServerStatusDataType struct {
	startTime           UA_DateTime
	currentTime         UA_DateTime
	state               int
	buildInfo           UA_BuildInfo
	secondsTillShutdown UA_UInt32
	shutdownReason      UA_LocalizedText
}
type UA_AttributeOperand struct {
	nodeId      UA_NodeId
	alias       UA_String
	browsePath  UA_RelativePath
	attributeId UA_UInt32
	indexRange  UA_String
}
type UA_AddReferencesResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_StatusCode
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_EventFilterResult struct {
	selectClauseResultsSize         uint
	selectClauseResults             []UA_StatusCode
	selectClauseDiagnosticInfosSize uint
	selectClauseDiagnosticInfos     []UA_DiagnosticInfo
	whereClauseResult               UA_ContentFilterResult
}
type UA_TranslateBrowsePathsToNodeIdsResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_BrowsePathResult
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_DataChangeFilter struct {
	trigger       int
	deadbandType  UA_UInt32
	deadbandValue UA_Double
}
type UA_ContentFilterElement struct {
	filterOperator     int
	filterOperandsSize uint
	filterOperands     []UA_ExtensionObject
}
type UA_TranslateBrowsePathsToNodeIdsRequest struct {
	requestHeader   UA_RequestHeader
	browsePathsSize uint
	browsePaths     []UA_BrowsePath
}
type UA_CloseSessionResponse struct {
	responseHeader UA_ResponseHeader
}
type UA_ApplicationDescription struct {
	applicationUri      UA_String
	productUri          UA_String
	applicationName     UA_LocalizedText
	applicationType     int
	gatewayServerUri    UA_String
	discoveryProfileUri UA_String
	discoveryUrlsSize   uint
	discoveryUrls       []UA_String
}
type UA_SessionDiagnosticsDataType struct {
	sessionId                          UA_NodeId
	sessionName                        UA_String
	clientDescription                  UA_ApplicationDescription
	serverUri                          UA_String
	endpointUrl                        UA_String
	localeIdsSize                      uint
	localeIds                          []UA_String
	actualSessionTimeout               UA_Double
	maxResponseMessageSize             UA_UInt32
	clientConnectionTime               UA_DateTime
	clientLastContactTime              UA_DateTime
	currentSubscriptionsCount          UA_UInt32
	currentMonitoredItemsCount         UA_UInt32
	currentPublishRequestsInQueue      UA_UInt32
	totalRequestCount                  UA_ServiceCounterDataType
	unauthorizedRequestCount           UA_UInt32
	readCount                          UA_ServiceCounterDataType
	historyReadCount                   UA_ServiceCounterDataType
	writeCount                         UA_ServiceCounterDataType
	historyUpdateCount                 UA_ServiceCounterDataType
	callCount                          UA_ServiceCounterDataType
	createMonitoredItemsCount          UA_ServiceCounterDataType
	modifyMonitoredItemsCount          UA_ServiceCounterDataType
	setMonitoringModeCount             UA_ServiceCounterDataType
	setTriggeringCount                 UA_ServiceCounterDataType
	deleteMonitoredItemsCount          UA_ServiceCounterDataType
	createSubscriptionCount            UA_ServiceCounterDataType
	modifySubscriptionCount            UA_ServiceCounterDataType
	setPublishingModeCount             UA_ServiceCounterDataType
	publishCount                       UA_ServiceCounterDataType
	republishCount                     UA_ServiceCounterDataType
	transferSubscriptionsCount         UA_ServiceCounterDataType
	deleteSubscriptionsCount           UA_ServiceCounterDataType
	addNodesCount                      UA_ServiceCounterDataType
	addReferencesCount                 UA_ServiceCounterDataType
	deleteNodesCount                   UA_ServiceCounterDataType
	deleteReferencesCount              UA_ServiceCounterDataType
	browseCount                        UA_ServiceCounterDataType
	browseNextCount                    UA_ServiceCounterDataType
	translateBrowsePathsToNodeIdsCount UA_ServiceCounterDataType
	queryFirstCount                    UA_ServiceCounterDataType
	queryNextCount                     UA_ServiceCounterDataType
	registerNodesCount                 UA_ServiceCounterDataType
	unregisterNodesCount               UA_ServiceCounterDataType
}
type UA_ServiceFault struct {
	responseHeader UA_ResponseHeader
}
type UA_RegisteredServer struct {
	serverUri         UA_String
	productUri        UA_String
	serverNamesSize   uint
	serverNames       []UA_LocalizedText
	serverType        int
	gatewayServerUri  UA_String
	discoveryUrlsSize uint
	discoveryUrls     []UA_String
	semaphoreFilePath UA_String
	isOnline          UA_Boolean
}
type UA_AggregateFilter struct {
	startTime              UA_DateTime
	aggregateType          UA_NodeId
	processingInterval     UA_Double
	aggregateConfiguration UA_AggregateConfiguration
}
type UA_RegisterServerRequest struct {
	requestHeader UA_RequestHeader
	server        UA_RegisteredServer
}
type UA_EndpointDescription struct {
	endpointUrl            UA_String
	server                 UA_ApplicationDescription
	serverCertificate      UA_ByteString
	securityMode           int
	securityPolicyUri      UA_String
	userIdentityTokensSize uint
	userIdentityTokens     []UA_UserTokenPolicy
	transportProfileUri    UA_String
	securityLevel          UA_Byte
}
type UA_CreateMonitoredItemsRequest struct {
	requestHeader      UA_RequestHeader
	subscriptionId     UA_UInt32
	timestampsToReturn int
	itemsToCreateSize  uint
	itemsToCreate      []UA_MonitoredItemCreateRequest
}
type UA_ContentFilter struct {
	elementsSize uint
	elements     []UA_ContentFilterElement
}
type UA_QueryFirstResponse struct {
	responseHeader      UA_ResponseHeader
	queryDataSetsSize   uint
	queryDataSets       []UA_QueryDataSet
	continuationPoint   UA_ByteString
	parsingResultsSize  uint
	parsingResults      []UA_ParsingResult
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
	filterResult        UA_ContentFilterResult
}
type UA_AddNodesRequest struct {
	requestHeader  UA_RequestHeader
	nodesToAddSize uint
	nodesToAdd     []UA_AddNodesItem
}
type UA_BrowseRequest struct {
	requestHeader                 UA_RequestHeader
	view                          UA_ViewDescription
	requestedMaxReferencesPerNode UA_UInt32
	nodesToBrowseSize             uint
	nodesToBrowse                 []UA_BrowseDescription
}
type UA_BrowseResult struct {
	statusCode        UA_StatusCode
	continuationPoint UA_ByteString
	referencesSize    uint
	references        []UA_ReferenceDescription
}
type UA_RegisterServer2Request struct {
	requestHeader              UA_RequestHeader
	server                     UA_RegisteredServer
	discoveryConfigurationSize uint
	discoveryConfiguration     []UA_ExtensionObject
}
type UA_CreateSessionRequest struct {
	requestHeader           UA_RequestHeader
	clientDescription       UA_ApplicationDescription
	serverUri               UA_String
	endpointUrl             UA_String
	sessionName             UA_String
	clientNonce             UA_ByteString
	clientCertificate       UA_ByteString
	requestedSessionTimeout UA_Double
	maxResponseMessageSize  UA_UInt32
}
type UA_EventFilter struct {
	selectClausesSize uint
	selectClauses     []UA_SimpleAttributeOperand
	whereClause       UA_ContentFilter
}
type UA_GetEndpointsResponse struct {
	responseHeader UA_ResponseHeader
	endpointsSize  uint
	endpoints      []UA_EndpointDescription
}
type UA_FindServersResponse struct {
	responseHeader UA_ResponseHeader
	serversSize    uint
	servers        []UA_ApplicationDescription
}
type UA_BrowseNextResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_BrowseResult
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_BrowseResponse struct {
	responseHeader      UA_ResponseHeader
	resultsSize         uint
	results             []UA_BrowseResult
	diagnosticInfosSize uint
	diagnosticInfos     []UA_DiagnosticInfo
}
type UA_CreateSessionResponse struct {
	responseHeader                 UA_ResponseHeader
	sessionId                      UA_NodeId
	authenticationToken            UA_NodeId
	revisedSessionTimeout          UA_Double
	serverNonce                    UA_ByteString
	serverCertificate              UA_ByteString
	serverEndpointsSize            uint
	serverEndpoints                []UA_EndpointDescription
	serverSoftwareCertificatesSize uint
	serverSoftwareCertificates     []UA_SignedSoftwareCertificate
	serverSignature                UA_SignatureData
	maxRequestMessageSize          UA_UInt32
}
type UA_QueryFirstRequest struct {
	requestHeader         UA_RequestHeader
	view                  UA_ViewDescription
	nodeTypesSize         uint
	nodeTypes             []UA_NodeTypeDescription
	filter                UA_ContentFilter
	maxDataSetsToReturn   UA_UInt32
	maxReferencesToReturn UA_UInt32
}
type UA_UtcTime = UA_DateTime
type UA_LocaleId = UA_String
type UA_Duration = UA_Double
// UA_Boolean_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5926
// amalgamated original file "/home/travis/build/open62541/open62541/build/src_generated/ua_types_generated.h"
// Generated from Opc.Ua.Types.bsd with script /home/travis/build/open62541/open62541/tools/generate_datatypes.py
// * on host travis-job-58e35654-0d0b-419b-8d10-2d50a5ceef65 by user travis at 2018-06-12 07:23:58
//
// * Every type is assigned an index in an array containing the type descriptions.
// * These descriptions are used during type handling (copying, deletion,
// * binary encoding, ...).
//
// * Boolean
// * ^^^^^^^
//
//
// * SByte
// * ^^^^^
//
//
// * Byte
// * ^^^^
//
//
// * Int16
// * ^^^^^
//
//
// * UInt16
// * ^^^^^^
//
//
// * Int32
// * ^^^^^
//
//
// * UInt32
// * ^^^^^^
//
//
// * Int64
// * ^^^^^
//
//
// * UInt64
// * ^^^^^^
//
//
// * Float
// * ^^^^^
//
//
// * Double
// * ^^^^^^
//
//
// * String
// * ^^^^^^
//
//
// * DateTime
// * ^^^^^^^^
//
//
// * Guid
// * ^^^^
//
//
// * ByteString
// * ^^^^^^^^^^
//
//
// * XmlElement
// * ^^^^^^^^^^
//
//
// * NodeId
// * ^^^^^^
//
//
// * ExpandedNodeId
// * ^^^^^^^^^^^^^^
//
//
// * StatusCode
// * ^^^^^^^^^^
//
//
// * QualifiedName
// * ^^^^^^^^^^^^^
//
//
// * LocalizedText
// * ^^^^^^^^^^^^^
//
//
// * ExtensionObject
// * ^^^^^^^^^^^^^^^
//
//
// * DataValue
// * ^^^^^^^^^
//
//
// * Variant
// * ^^^^^^^
//
//
// * DiagnosticInfo
// * ^^^^^^^^^^^^^^
//
//
// * SignedSoftwareCertificate
// * ^^^^^^^^^^^^^^^^^^^^^^^^^
// * A software certificate with a digital signature.
//
// * SemanticChangeStructureDataType
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * StatusChangeNotification
// * ^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * BrowsePathTarget
// * ^^^^^^^^^^^^^^^^
// * The target of the translated path.
//
// * ViewAttributes
// * ^^^^^^^^^^^^^^
// * The attributes for a view node.
//
// * RequestHeader
// * ^^^^^^^^^^^^^
// * The header passed with every server request.
//
// * MonitoredItemModifyResult
// * ^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * ElementOperand
// * ^^^^^^^^^^^^^^
//
//
// * CloseSecureChannelRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^
// * Closes a secure channel.
//
// * AddNodesResult
// * ^^^^^^^^^^^^^^
// * A result of an add node operation.
//
// * VariableAttributes
// * ^^^^^^^^^^^^^^^^^^
// * The attributes for a variable node.
//
// * NotificationMessage
// * ^^^^^^^^^^^^^^^^^^^
//
//
// * FindServersOnNetworkRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * EventFieldList
// * ^^^^^^^^^^^^^^
//
//
// * MonitoringMode
// * ^^^^^^^^^^^^^^
//
//
// * MdnsDiscoveryConfiguration
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^
// * The discovery information needed for mDNS registration.
//
// * CallMethodResult
// * ^^^^^^^^^^^^^^^^
//
//
// * ParsingResult
// * ^^^^^^^^^^^^^
//
//
// * RelativePathElement
// * ^^^^^^^^^^^^^^^^^^^
// * An element in a relative path.
//
// * BrowseDirection
// * ^^^^^^^^^^^^^^^
// * The directions of the references to return.
//
// * CallMethodRequest
// * ^^^^^^^^^^^^^^^^^
//
//
// * RedundancySupport
// * ^^^^^^^^^^^^^^^^^
//
//
// * EventNotificationList
// * ^^^^^^^^^^^^^^^^^^^^^
//
//
// * UnregisterNodesRequest
// * ^^^^^^^^^^^^^^^^^^^^^^
// * Unregisters one or more previously registered nodes.
//
// * ContentFilterElementResult
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * SimpleAttributeOperand
// * ^^^^^^^^^^^^^^^^^^^^^^
//
//
// * LiteralOperand
// * ^^^^^^^^^^^^^^
//
//
// * QueryDataSet
// * ^^^^^^^^^^^^
//
//
// * AnonymousIdentityToken
// * ^^^^^^^^^^^^^^^^^^^^^^
// * A token representing an anonymous user.
//
// * SetPublishingModeRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * MonitoredItemCreateResult
// * ^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * TimestampsToReturn
// * ^^^^^^^^^^^^^^^^^^
//
//
// * CallRequest
// * ^^^^^^^^^^^
//
//
// * MethodAttributes
// * ^^^^^^^^^^^^^^^^
// * The attributes for a method node.
//
// * DeleteReferencesItem
// * ^^^^^^^^^^^^^^^^^^^^
// * A request to delete a node from the server address space.
//
// * WriteValue
// * ^^^^^^^^^^
//
//
// * NodeAttributesMask
// * ^^^^^^^^^^^^^^^^^^
// * The bits used to specify default attributes for a new node.
//
// * MessageSecurityMode
// * ^^^^^^^^^^^^^^^^^^^
// * The type of security to use on a message.
//
// * MonitoringParameters
// * ^^^^^^^^^^^^^^^^^^^^
//
//
// * ReferenceNode
// * ^^^^^^^^^^^^^
// * Specifies a reference which belongs to a node.
//
// * Argument
// * ^^^^^^^^
// * An argument for a method.
//
// * ChannelSecurityToken
// * ^^^^^^^^^^^^^^^^^^^^
// * The token that identifies a set of keys for an active secure channel.
//
// * UserIdentityToken
// * ^^^^^^^^^^^^^^^^^
// * A base type for a user identity token.
//
// * SignatureData
// * ^^^^^^^^^^^^^
// * A digital signature.
//
// * ObjectTypeAttributes
// * ^^^^^^^^^^^^^^^^^^^^
// * The attributes for an object type node.
//
// * DeadbandType
// * ^^^^^^^^^^^^
//
//
// * SecurityTokenRequestType
// * ^^^^^^^^^^^^^^^^^^^^^^^^
// * Indicates whether a token if being created or renewed.
//
// * NodeAttributes
// * ^^^^^^^^^^^^^^
// * The base attributes for all nodes.
//
// * DataChangeTrigger
// * ^^^^^^^^^^^^^^^^^
//
//
// * BuildInfo
// * ^^^^^^^^^
//
//
// * NodeClass
// * ^^^^^^^^^
// * A mask specifying the class of the node.
//
// * SubscriptionDiagnosticsDataType
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * FilterOperand
// * ^^^^^^^^^^^^^
//
//
// * MonitoredItemNotification
// * ^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * DeleteNodesItem
// * ^^^^^^^^^^^^^^^
// * A request to delete a node to the server address space.
//
// * DeleteSubscriptionsRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * SubscriptionAcknowledgement
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * ReadValueId
// * ^^^^^^^^^^^
//
//
// * DataTypeAttributes
// * ^^^^^^^^^^^^^^^^^^
// * The attributes for a data type node.
//
// * ResponseHeader
// * ^^^^^^^^^^^^^^
// * The header passed with every server response.
//
// * DeleteMonitoredItemsRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * ViewDescription
// * ^^^^^^^^^^^^^^^
// * The view to browse.
//
// * ServerOnNetwork
// * ^^^^^^^^^^^^^^^
//
//
// * DeleteMonitoredItemsResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * FindServersOnNetworkResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * RelativePath
// * ^^^^^^^^^^^^
// * A relative path constructed from reference types and browse names.
//
// * RegisterNodesRequest
// * ^^^^^^^^^^^^^^^^^^^^
// * Registers one or more nodes for repeated use within a session.
//
// * AggregateConfiguration
// * ^^^^^^^^^^^^^^^^^^^^^^
//
//
// * DeleteNodesRequest
// * ^^^^^^^^^^^^^^^^^^
// * Delete one or more nodes from the server address space.
//
// * PublishResponse
// * ^^^^^^^^^^^^^^^
//
//
// * MonitoredItemModifyRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * ServiceCounterDataType
// * ^^^^^^^^^^^^^^^^^^^^^^
//
//
// * ModelChangeStructureDataType
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * UserNameIdentityToken
// * ^^^^^^^^^^^^^^^^^^^^^
// * A token representing a user identified by a user name and password.
//
// * IdType
// * ^^^^^^
// * The type of identifier used in a node id.
//
// * UserTokenType
// * ^^^^^^^^^^^^^
// * The possible user token types.
//
// * SetTriggeringResponse
// * ^^^^^^^^^^^^^^^^^^^^^
//
//
// * TimeZoneDataType
// * ^^^^^^^^^^^^^^^^
//
//
// * ActivateSessionRequest
// * ^^^^^^^^^^^^^^^^^^^^^^
// * Activates a session with the server.
//
// * OpenSecureChannelResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^
// * Creates a secure channel with a server.
//
// * ApplicationType
// * ^^^^^^^^^^^^^^^
// * The types of applications.
//
// * ServerState
// * ^^^^^^^^^^^
//
//
// * QueryNextResponse
// * ^^^^^^^^^^^^^^^^^
//
//
// * DiscoveryConfiguration
// * ^^^^^^^^^^^^^^^^^^^^^^
// * A base type for discovery configuration information.
//
// * ActivateSessionResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^
// * Activates a session with the server.
//
// * EndpointUrlListDataType
// * ^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * FilterOperator
// * ^^^^^^^^^^^^^^
//
//
// * QueryNextRequest
// * ^^^^^^^^^^^^^^^^
//
//
// * WriteResponse
// * ^^^^^^^^^^^^^
//
//
// * BrowseNextRequest
// * ^^^^^^^^^^^^^^^^^
// * Continues one or more browse operations.
//
// * CreateSubscriptionRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * VariableTypeAttributes
// * ^^^^^^^^^^^^^^^^^^^^^^
// * The attributes for a variable type node.
//
// * BrowsePathResult
// * ^^^^^^^^^^^^^^^^
// * The result of a translate opearation.
//
// * ModifySubscriptionResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * RedundantServerDataType
// * ^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * RegisterNodesResponse
// * ^^^^^^^^^^^^^^^^^^^^^
// * Registers one or more nodes for repeated use within a session.
//
// * CloseSessionRequest
// * ^^^^^^^^^^^^^^^^^^^
// * Closes a session with the server.
//
// * ModifyMonitoredItemsResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * ModifySubscriptionRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * ServerDiagnosticsSummaryDataType
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * UserTokenPolicy
// * ^^^^^^^^^^^^^^^
// * Describes a user token that can be used with a server.
//
// * ReferenceTypeAttributes
// * ^^^^^^^^^^^^^^^^^^^^^^^
// * The attributes for a reference type node.
//
// * BrowsePath
// * ^^^^^^^^^^
// * A request to translate a path into a node id.
//
// * SetMonitoringModeRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * UnregisterNodesResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^
// * Unregisters one or more previously registered nodes.
//
// * WriteRequest
// * ^^^^^^^^^^^^
//
//
// * ObjectAttributes
// * ^^^^^^^^^^^^^^^^
// * The attributes for an object node.
//
// * BrowseResultMask
// * ^^^^^^^^^^^^^^^^
// * A bit mask which specifies what should be returned in a browse response.
//
// * BrowseDescription
// * ^^^^^^^^^^^^^^^^^
// * A request to browse the the references from a node.
//
// * SetTriggeringRequest
// * ^^^^^^^^^^^^^^^^^^^^
//
//
// * SessionSecurityDiagnosticsDataType
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * RepublishRequest
// * ^^^^^^^^^^^^^^^^
//
//
// * GetEndpointsRequest
// * ^^^^^^^^^^^^^^^^^^^
// * Gets the endpoints used by the server.
//
// * PublishRequest
// * ^^^^^^^^^^^^^^
//
//
// * DeleteSubscriptionsResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * AddNodesResponse
// * ^^^^^^^^^^^^^^^^
// * Adds one or more nodes to the server address space.
//
// * DataChangeNotification
// * ^^^^^^^^^^^^^^^^^^^^^^
//
//
// * CloseSecureChannelResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^
// * Closes a secure channel.
//
// * ModifyMonitoredItemsRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * SetMonitoringModeResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * FindServersRequest
// * ^^^^^^^^^^^^^^^^^^
// * Finds the servers known to the discovery server.
//
// * ReferenceDescription
// * ^^^^^^^^^^^^^^^^^^^^
// * The description of a reference.
//
// * SetPublishingModeResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * ContentFilterResult
// * ^^^^^^^^^^^^^^^^^^^
//
//
// * RegisterServerResponse
// * ^^^^^^^^^^^^^^^^^^^^^^
// * Registers a server with the discovery server.
//
// * AddReferencesItem
// * ^^^^^^^^^^^^^^^^^
// * A request to add a reference to the server address space.
//
// * QueryDataDescription
// * ^^^^^^^^^^^^^^^^^^^^
//
//
// * CreateSubscriptionResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * NetworkGroupDataType
// * ^^^^^^^^^^^^^^^^^^^^
//
//
// * DeleteReferencesResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^
// * Delete one or more references from the server address space.
//
// * CreateMonitoredItemsResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * CallResponse
// * ^^^^^^^^^^^^
//
//
// * DeleteNodesResponse
// * ^^^^^^^^^^^^^^^^^^^
// * Delete one or more nodes from the server address space.
//
// * RepublishResponse
// * ^^^^^^^^^^^^^^^^^
//
//
// * MonitoredItemCreateRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * DeleteReferencesRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^
// * Delete one or more references from the server address space.
//
// * ReadResponse
// * ^^^^^^^^^^^^
//
//
// * AddReferencesRequest
// * ^^^^^^^^^^^^^^^^^^^^
// * Adds one or more references to the server address space.
//
// * ReadRequest
// * ^^^^^^^^^^^
//
//
// * OpenSecureChannelRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^
// * Creates a secure channel with a server.
//
// * RegisterServer2Response
// * ^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * AddNodesItem
// * ^^^^^^^^^^^^
// * A request to add a node to the server address space.
//
// * NodeTypeDescription
// * ^^^^^^^^^^^^^^^^^^^
//
//
// * ServerStatusDataType
// * ^^^^^^^^^^^^^^^^^^^^
//
//
// * AttributeOperand
// * ^^^^^^^^^^^^^^^^
//
//
// * AddReferencesResponse
// * ^^^^^^^^^^^^^^^^^^^^^
// * Adds one or more references to the server address space.
//
// * EventFilterResult
// * ^^^^^^^^^^^^^^^^^
//
//
// * TranslateBrowsePathsToNodeIdsResponse
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
// * Translates one or more paths in the server address space.
//
// * DataChangeFilter
// * ^^^^^^^^^^^^^^^^
//
//
// * ContentFilterElement
// * ^^^^^^^^^^^^^^^^^^^^
//
//
// * TranslateBrowsePathsToNodeIdsRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
// * Translates one or more paths in the server address space.
//
// * CloseSessionResponse
// * ^^^^^^^^^^^^^^^^^^^^
// * Closes a session with the server.
//
// * ApplicationDescription
// * ^^^^^^^^^^^^^^^^^^^^^^
// * Describes an application and how to find it.
//
// * SessionDiagnosticsDataType
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * ServiceFault
// * ^^^^^^^^^^^^
// * The response returned by all services when there is a service level error.
//
// * RegisteredServer
// * ^^^^^^^^^^^^^^^^
// * The information required to register a server with a discovery server.
//
// * AggregateFilter
// * ^^^^^^^^^^^^^^^
//
//
// * RegisterServerRequest
// * ^^^^^^^^^^^^^^^^^^^^^
// * Registers a server with the discovery server.
//
// * EndpointDescription
// * ^^^^^^^^^^^^^^^^^^^
// * The description of a endpoint that can be used to access a server.
//
// * CreateMonitoredItemsRequest
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
// * ContentFilter
// * ^^^^^^^^^^^^^
//
//
// * QueryFirstResponse
// * ^^^^^^^^^^^^^^^^^^
//
//
// * AddNodesRequest
// * ^^^^^^^^^^^^^^^
// * Adds one or more nodes to the server address space.
//
// * BrowseRequest
// * ^^^^^^^^^^^^^
// * Browse the references for one or more nodes from the server address space.
//
// * BrowseResult
// * ^^^^^^^^^^^^
// * The result of a browse operation.
//
// * RegisterServer2Request
// * ^^^^^^^^^^^^^^^^^^^^^^
//
//
// * CreateSessionRequest
// * ^^^^^^^^^^^^^^^^^^^^
// * Creates a new session with the server.
//
// * EventFilter
// * ^^^^^^^^^^^
//
//
// * GetEndpointsResponse
// * ^^^^^^^^^^^^^^^^^^^^
// * Gets the endpoints used by the server.
//
// * FindServersResponse
// * ^^^^^^^^^^^^^^^^^^^
// * Finds the servers known to the discovery server.
//
// * BrowseNextResponse
// * ^^^^^^^^^^^^^^^^^^
// * Continues one or more browse operations.
//
// * BrowseResponse
// * ^^^^^^^^^^^^^^
// * Browse the references for one or more nodes from the server address space.
//
// * CreateSessionResponse
// * ^^^^^^^^^^^^^^^^^^^^^
// * Creates a new session with the server.
//
// * QueryFirstRequest
// * ^^^^^^^^^^^^^^^^^
//
//
// * UtcTime
// * ^^^^^^^
// * A date/time value specified in Universal Coordinated Time (UTC).
//
// * LocaleId
// * ^^^^^^^^
// * An identifier for a user locale.
//
// * Duration
// * ^^^^^^^^
// * A period of time measured in milliseconds.
// amalgamated original file "/home/travis/build/open62541/open62541/build/src_generated/ua_types_generated_handling.h"
// Generated from Opc.Ua.Types.bsd with script /home/travis/build/open62541/open62541/tools/generate_datatypes.py
// * on host travis-job-58e35654-0d0b-419b-8d10-2d50a5ceef65 by user travis at 2018-06-12 07:23:58
// Boolean
func UA_Boolean_init(p []UA_Boolean) {
	// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:4924 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e150ad0, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h", Line:4924, LineEnd:0, Column:1, ColumnEnd:85, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc002190320), (*ast.StringLiteral)(0xc001f59680)}}
	noarch.Memset(p, byte(0), 4)
}
// UA_Boolean_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5931
func UA_Boolean_new() []UA_Boolean {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:]).([]UA_Boolean)
}
// UA_Boolean_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5936
func UA_Boolean_copy(src []UA_Boolean, dst []UA_Boolean) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_Boolean_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5942
func UA_Boolean_deleteMembers(p []UA_Boolean) {
}
// UA_Boolean_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5945
func UA_Boolean_delete(p []UA_Boolean) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_SByte_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5951
// SByte
func UA_SByte_init(p []UA_SByte) {
	noarch.Memset(p, byte(0), 1)
}
// UA_SByte_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5956
func UA_SByte_new() []UA_SByte {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[1]))[:]).([]UA_SByte)
}
// UA_SByte_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5961
func UA_SByte_copy(src []UA_SByte, dst []UA_SByte) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_SByte_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5967
func UA_SByte_deleteMembers(p []UA_SByte) {
}
// UA_SByte_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5970
func UA_SByte_delete(p []UA_SByte) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[1]))[:])
}
// UA_Byte_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5976
// Byte
func UA_Byte_init(p []UA_Byte) {
	noarch.Memset(p, byte(0), 1)
}
// UA_Byte_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5981
func UA_Byte_new() []UA_Byte {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:]).([]UA_Byte)
}
// UA_Byte_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5986
func UA_Byte_copy(src []UA_Byte, dst []UA_Byte) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_Byte_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5992
func UA_Byte_deleteMembers(p []UA_Byte) {
}
// UA_Byte_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:5995
func UA_Byte_delete(p []UA_Byte) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
}
// UA_Int16_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6001
// Int16
func UA_Int16_init(p []UA_Int16) {
	noarch.Memset(p, byte(0), 2)
}
// UA_Int16_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6006
func UA_Int16_new() []UA_Int16 {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[3]))[:]).([]UA_Int16)
}
// UA_Int16_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6011
func UA_Int16_copy(src []UA_Int16, dst []UA_Int16) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_Int16_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6017
func UA_Int16_deleteMembers(p []UA_Int16) {
}
// UA_Int16_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6020
func UA_Int16_delete(p []UA_Int16) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[3]))[:])
}
// UA_UInt16_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6026
// UInt16
func UA_UInt16_init(p []UA_UInt16) {
	noarch.Memset(p, byte(0), 2)
}
// UA_UInt16_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6031
func UA_UInt16_new() []UA_UInt16 {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:]).([]UA_UInt16)
}
// UA_UInt16_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6036
func UA_UInt16_copy(src []UA_UInt16, dst []UA_UInt16) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_UInt16_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6042
func UA_UInt16_deleteMembers(p []UA_UInt16) {
}
// UA_UInt16_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6045
func UA_UInt16_delete(p []UA_UInt16) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:])
}
// UA_Int32_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6051
// Int32
func UA_Int32_init(p []UA_Int32) {
	noarch.Memset(p, byte(0), 4)
}
// UA_Int32_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6056
func UA_Int32_new() []UA_Int32 {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:]).([]UA_Int32)
}
// UA_Int32_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6061
func UA_Int32_copy(src []UA_Int32, dst []UA_Int32) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_Int32_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6067
func UA_Int32_deleteMembers(p []UA_Int32) {
}
// UA_Int32_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6070
func UA_Int32_delete(p []UA_Int32) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
}
// UA_UInt32_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6076
// UInt32
func UA_UInt32_init(p []UA_UInt32) {
	noarch.Memset(p, byte(0), 4)
}
// UA_UInt32_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6081
func UA_UInt32_new() []UA_UInt32 {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
}
// UA_UInt32_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6086
func UA_UInt32_copy(src []UA_UInt32, dst []UA_UInt32) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_UInt32_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6092
func UA_UInt32_deleteMembers(p []UA_UInt32) {
}
// UA_UInt32_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6095
func UA_UInt32_delete(p []UA_UInt32) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
}
// UA_Int64_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6101
// Int64
func UA_Int64_init(p []UA_Int64) {
	noarch.Memset(p, byte(0), 8)
}
// UA_Int64_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6106
func UA_Int64_new() []UA_Int64 {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[7]))[:]).([]UA_Int64)
}
// UA_Int64_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6111
func UA_Int64_copy(src []UA_Int64, dst []UA_Int64) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_Int64_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6117
func UA_Int64_deleteMembers(p []UA_Int64) {
}
// UA_Int64_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6120
func UA_Int64_delete(p []UA_Int64) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[7]))[:])
}
// UA_UInt64_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6126
// UInt64
func UA_UInt64_init(p []UA_UInt64) {
	noarch.Memset(p, byte(0), 8)
}
// UA_UInt64_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6131
func UA_UInt64_new() []UA_UInt64 {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[8]))[:]).([]UA_UInt64)
}
// UA_UInt64_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6136
func UA_UInt64_copy(src []UA_UInt64, dst []UA_UInt64) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_UInt64_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6142
func UA_UInt64_deleteMembers(p []UA_UInt64) {
}
// UA_UInt64_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6145
func UA_UInt64_delete(p []UA_UInt64) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[8]))[:])
}
// UA_Float_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6151
// Float
func UA_Float_init(p []UA_Float) {
	noarch.Memset(p, byte(0), 4)
}
// UA_Float_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6156
func UA_Float_new() []UA_Float {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[9]))[:]).([]UA_Float)
}
// UA_Float_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6161
func UA_Float_copy(src []UA_Float, dst []UA_Float) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_Float_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6167
func UA_Float_deleteMembers(p []UA_Float) {
}
// UA_Float_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6170
func UA_Float_delete(p []UA_Float) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[9]))[:])
}
// UA_Double_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6176
// Double
func UA_Double_init(p []UA_Double) {
	noarch.Memset(p, byte(0), 8)
}
// UA_Double_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6181
func UA_Double_new() []UA_Double {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:]).([]UA_Double)
}
// UA_Double_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6186
func UA_Double_copy(src []UA_Double, dst []UA_Double) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_Double_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6192
func UA_Double_deleteMembers(p []UA_Double) {
}
// UA_Double_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6195
func UA_Double_delete(p []UA_Double) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:])
}
// UA_String_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6201
// String
func UA_String_init(p []UA_String) {
	noarch.Memset(p, byte(0), 16)
}
// UA_String_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6206
func UA_String_new() []UA_String {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:]).([]UA_String)
}
// UA_String_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6211
func UA_String_copy(src []UA_String, dst []UA_String) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
}
// UA_String_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6216
func UA_String_deleteMembers(p []UA_String) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
}
// UA_String_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6221
func UA_String_delete(p []UA_String) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
}
// UA_DateTime_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6227
// DateTime
func UA_DateTime_init(p []UA_DateTime) {
	noarch.Memset(p, byte(0), 8)
}
// UA_DateTime_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6232
func UA_DateTime_new() []UA_DateTime {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:]).([]UA_DateTime)
}
// UA_DateTime_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6237
func UA_DateTime_copy(src []UA_DateTime, dst []UA_DateTime) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_DateTime_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6243
func UA_DateTime_deleteMembers(p []UA_DateTime) {
}
// UA_DateTime_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6246
func UA_DateTime_delete(p []UA_DateTime) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:])
}
// UA_Guid_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6252
// Guid
func UA_Guid_init(p []UA_Guid) {
	noarch.Memset(p, byte(0), 16)
}
// UA_Guid_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6257
func UA_Guid_new() []UA_Guid {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[13]))[:]).([]UA_Guid)
}
// UA_Guid_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6262
func UA_Guid_copy(src []UA_Guid, dst []UA_Guid) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_Guid_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6268
func UA_Guid_deleteMembers(p []UA_Guid) {
}
// UA_Guid_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6271
func UA_Guid_delete(p []UA_Guid) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[13]))[:])
}
// UA_ByteString_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6277
// ByteString
func UA_ByteString_init(p []UA_ByteString) {
	noarch.Memset(p, byte(0), 16)
}
// UA_ByteString_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6282
func UA_ByteString_new() []UA_ByteString {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:]).([]UA_ByteString)
}
// UA_ByteString_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6287
func UA_ByteString_copy(src []UA_ByteString, dst []UA_ByteString) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:])
}
// UA_ByteString_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6292
func UA_ByteString_deleteMembers(p []UA_ByteString) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:])
}
// UA_ByteString_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6297
func UA_ByteString_delete(p []UA_ByteString) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:])
}
// UA_XmlElement_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6303
// XmlElement
func UA_XmlElement_init(p []UA_XmlElement) {
	noarch.Memset(p, byte(0), 16)
}
// UA_XmlElement_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6308
func UA_XmlElement_new() []UA_XmlElement {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[15]))[:]).([]UA_XmlElement)
}
// UA_XmlElement_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6313
func UA_XmlElement_copy(src []UA_XmlElement, dst []UA_XmlElement) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[15]))[:])
}
// UA_XmlElement_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6318
func UA_XmlElement_deleteMembers(p []UA_XmlElement) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[15]))[:])
}
// UA_XmlElement_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6323
func UA_XmlElement_delete(p []UA_XmlElement) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[15]))[:])
}
// UA_NodeId_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6329
// NodeId
func UA_NodeId_init(p []UA_NodeId) {
	noarch.Memset(p, byte(0), 120)
}
// UA_NodeId_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6334
func UA_NodeId_new() []UA_NodeId {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:]).([]UA_NodeId)
}
// UA_NodeId_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6339
func UA_NodeId_copy(src []UA_NodeId, dst []UA_NodeId) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
}
// UA_NodeId_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6344
func UA_NodeId_deleteMembers(p []UA_NodeId) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
}
// UA_NodeId_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6349
func UA_NodeId_delete(p []UA_NodeId) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
}
// UA_ExpandedNodeId_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6355
// ExpandedNodeId
func UA_ExpandedNodeId_init(p []UA_ExpandedNodeId) {
	noarch.Memset(p, byte(0), 144)
}
// UA_ExpandedNodeId_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6360
func UA_ExpandedNodeId_new() []UA_ExpandedNodeId {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[17]))[:]).([]UA_ExpandedNodeId)
}
// UA_ExpandedNodeId_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6365
func UA_ExpandedNodeId_copy(src []UA_ExpandedNodeId, dst []UA_ExpandedNodeId) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[17]))[:])
}
// UA_ExpandedNodeId_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6370
func UA_ExpandedNodeId_deleteMembers(p []UA_ExpandedNodeId) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[17]))[:])
}
// UA_ExpandedNodeId_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6375
func UA_ExpandedNodeId_delete(p []UA_ExpandedNodeId) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[17]))[:])
}
// UA_StatusCode_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6381
// StatusCode
func UA_StatusCode_init(p []UA_StatusCode) {
	noarch.Memset(p, byte(0), 4)
}
// UA_StatusCode_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6386
func UA_StatusCode_new() []UA_StatusCode {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:]).([]UA_StatusCode)
}
// UA_StatusCode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6391
func UA_StatusCode_copy(src []UA_StatusCode, dst []UA_StatusCode) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_StatusCode_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6397
func UA_StatusCode_deleteMembers(p []UA_StatusCode) {
}
// UA_StatusCode_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6400
func UA_StatusCode_delete(p []UA_StatusCode) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:])
}
// UA_QualifiedName_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6406
// QualifiedName
func UA_QualifiedName_init(p []UA_QualifiedName) {
	noarch.Memset(p, byte(0), 24)
}
// UA_QualifiedName_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6411
func UA_QualifiedName_new() []UA_QualifiedName {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:]).([]UA_QualifiedName)
}
// UA_QualifiedName_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6416
func UA_QualifiedName_copy(src []UA_QualifiedName, dst []UA_QualifiedName) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:])
}
// UA_QualifiedName_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6421
func UA_QualifiedName_deleteMembers(p []UA_QualifiedName) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:])
}
// UA_QualifiedName_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6426
func UA_QualifiedName_delete(p []UA_QualifiedName) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:])
}
// UA_LocalizedText_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6432
// LocalizedText
func UA_LocalizedText_init(p []UA_LocalizedText) {
	noarch.Memset(p, byte(0), 32)
}
// UA_LocalizedText_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6437
func UA_LocalizedText_new() []UA_LocalizedText {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:]).([]UA_LocalizedText)
}
// UA_LocalizedText_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6442
func UA_LocalizedText_copy(src []UA_LocalizedText, dst []UA_LocalizedText) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
}
// UA_LocalizedText_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6447
func UA_LocalizedText_deleteMembers(p []UA_LocalizedText) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
}
// UA_LocalizedText_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6452
func UA_LocalizedText_delete(p []UA_LocalizedText) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
}
// UA_ExtensionObject_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6458
// ExtensionObject
func UA_ExtensionObject_init(p []UA_ExtensionObject) {
	noarch.Memset(p, byte(0), 616)
}
// UA_ExtensionObject_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6463
func UA_ExtensionObject_new() []UA_ExtensionObject {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:]).([]UA_ExtensionObject)
}
// UA_ExtensionObject_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6468
func UA_ExtensionObject_copy(src []UA_ExtensionObject, dst []UA_ExtensionObject) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:])
}
// UA_ExtensionObject_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6473
func UA_ExtensionObject_deleteMembers(p []UA_ExtensionObject) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:])
}
// UA_ExtensionObject_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6478
func UA_ExtensionObject_delete(p []UA_ExtensionObject) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:])
}
// UA_DataValue_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6484
// DataValue
func UA_DataValue_init(p []UA_DataValue) {
	noarch.Memset(p, byte(0), 96)
}
// UA_DataValue_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6489
func UA_DataValue_new() []UA_DataValue {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[22]))[:]).([]UA_DataValue)
}
// UA_DataValue_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6494
func UA_DataValue_copy(src []UA_DataValue, dst []UA_DataValue) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[22]))[:])
}
// UA_DataValue_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6499
func UA_DataValue_deleteMembers(p []UA_DataValue) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[22]))[:])
}
// UA_DataValue_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6504
func UA_DataValue_delete(p []UA_DataValue) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[22]))[:])
}
// UA_Variant_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6510
// Variant
func UA_Variant_init(p []UA_Variant) {
	noarch.Memset(p, byte(0), 48)
}
// UA_Variant_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6515
func UA_Variant_new() []UA_Variant {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:]).([]UA_Variant)
}
// UA_Variant_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6520
func UA_Variant_copy(src []UA_Variant, dst []UA_Variant) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:])
}
// UA_Variant_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6525
func UA_Variant_deleteMembers(p []UA_Variant) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:])
}
// UA_Variant_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6530
func UA_Variant_delete(p []UA_Variant) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:])
}
// UA_DiagnosticInfo_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6536
// DiagnosticInfo
func UA_DiagnosticInfo_init(p []UA_DiagnosticInfo) {
	noarch.Memset(p, byte(0), 72)
}
// UA_DiagnosticInfo_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6541
func UA_DiagnosticInfo_new() []UA_DiagnosticInfo {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[24]))[:]).([]UA_DiagnosticInfo)
}
// UA_DiagnosticInfo_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6546
func UA_DiagnosticInfo_copy(src []UA_DiagnosticInfo, dst []UA_DiagnosticInfo) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[24]))[:])
}
// UA_DiagnosticInfo_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6551
func UA_DiagnosticInfo_deleteMembers(p []UA_DiagnosticInfo) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[24]))[:])
}
// UA_DiagnosticInfo_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6556
func UA_DiagnosticInfo_delete(p []UA_DiagnosticInfo) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[24]))[:])
}
// UA_SignedSoftwareCertificate_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6562
// SignedSoftwareCertificate
func UA_SignedSoftwareCertificate_init(p []UA_SignedSoftwareCertificate) {
	noarch.Memset(p, byte(0), 32)
}
// UA_SignedSoftwareCertificate_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6567
func UA_SignedSoftwareCertificate_new() []UA_SignedSoftwareCertificate {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[25]))[:]).([]UA_SignedSoftwareCertificate)
}
// UA_SignedSoftwareCertificate_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6572
func UA_SignedSoftwareCertificate_copy(src []UA_SignedSoftwareCertificate, dst []UA_SignedSoftwareCertificate) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[25]))[:])
}
// UA_SignedSoftwareCertificate_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6577
func UA_SignedSoftwareCertificate_deleteMembers(p []UA_SignedSoftwareCertificate) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[25]))[:])
}
// UA_SignedSoftwareCertificate_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6582
func UA_SignedSoftwareCertificate_delete(p []UA_SignedSoftwareCertificate) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[25]))[:])
}
// UA_SemanticChangeStructureDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6588
// SemanticChangeStructureDataType
func UA_SemanticChangeStructureDataType_init(p []UA_SemanticChangeStructureDataType) {
	noarch.Memset(p, byte(0), 240)
}
// UA_SemanticChangeStructureDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6593
func UA_SemanticChangeStructureDataType_new() []UA_SemanticChangeStructureDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[26]))[:]).([]UA_SemanticChangeStructureDataType)
}
// UA_SemanticChangeStructureDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6598
func UA_SemanticChangeStructureDataType_copy(src []UA_SemanticChangeStructureDataType, dst []UA_SemanticChangeStructureDataType) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[26]))[:])
}
// UA_SemanticChangeStructureDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6603
func UA_SemanticChangeStructureDataType_deleteMembers(p []UA_SemanticChangeStructureDataType) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[26]))[:])
}
// UA_SemanticChangeStructureDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6608
func UA_SemanticChangeStructureDataType_delete(p []UA_SemanticChangeStructureDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[26]))[:])
}
// UA_StatusChangeNotification_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6614
// StatusChangeNotification
func UA_StatusChangeNotification_init(p []UA_StatusChangeNotification) {
	noarch.Memset(p, byte(0), 80)
}
// UA_StatusChangeNotification_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6619
func UA_StatusChangeNotification_new() []UA_StatusChangeNotification {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[27]))[:]).([]UA_StatusChangeNotification)
}
// UA_StatusChangeNotification_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6624
func UA_StatusChangeNotification_copy(src []UA_StatusChangeNotification, dst []UA_StatusChangeNotification) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[27]))[:])
}
// UA_StatusChangeNotification_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6629
func UA_StatusChangeNotification_deleteMembers(p []UA_StatusChangeNotification) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[27]))[:])
}
// UA_StatusChangeNotification_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6634
func UA_StatusChangeNotification_delete(p []UA_StatusChangeNotification) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[27]))[:])
}
// UA_BrowsePathTarget_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6640
// BrowsePathTarget
func UA_BrowsePathTarget_init(p []UA_BrowsePathTarget) {
	noarch.Memset(p, byte(0), 152)
}
// UA_BrowsePathTarget_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6645
func UA_BrowsePathTarget_new() []UA_BrowsePathTarget {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[28]))[:]).([]UA_BrowsePathTarget)
}
// UA_BrowsePathTarget_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6650
func UA_BrowsePathTarget_copy(src []UA_BrowsePathTarget, dst []UA_BrowsePathTarget) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[28]))[:])
}
// UA_BrowsePathTarget_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6655
func UA_BrowsePathTarget_deleteMembers(p []UA_BrowsePathTarget) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[28]))[:])
}
// UA_BrowsePathTarget_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6660
func UA_BrowsePathTarget_delete(p []UA_BrowsePathTarget) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[28]))[:])
}
// UA_ViewAttributes_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6666
// ViewAttributes
func UA_ViewAttributes_init(p []UA_ViewAttributes) {
	noarch.Memset(p, byte(0), 88)
}
// UA_ViewAttributes_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6671
func UA_ViewAttributes_new() []UA_ViewAttributes {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[29]))[:]).([]UA_ViewAttributes)
}
// UA_ViewAttributes_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6676
func UA_ViewAttributes_copy(src []UA_ViewAttributes, dst []UA_ViewAttributes) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[29]))[:])
}
// UA_ViewAttributes_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6681
func UA_ViewAttributes_deleteMembers(p []UA_ViewAttributes) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[29]))[:])
}
// UA_ViewAttributes_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6686
func UA_ViewAttributes_delete(p []UA_ViewAttributes) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[29]))[:])
}
// UA_RequestHeader_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6692
// RequestHeader
func UA_RequestHeader_init(p []UA_RequestHeader) {
	noarch.Memset(p, byte(0), 776)
}
// UA_RequestHeader_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6697
func UA_RequestHeader_new() []UA_RequestHeader {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[30]))[:]).([]UA_RequestHeader)
}
// UA_RequestHeader_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6702
func UA_RequestHeader_copy(src []UA_RequestHeader, dst []UA_RequestHeader) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[30]))[:])
}
// UA_RequestHeader_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6707
func UA_RequestHeader_deleteMembers(p []UA_RequestHeader) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[30]))[:])
}
// UA_RequestHeader_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6712
func UA_RequestHeader_delete(p []UA_RequestHeader) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[30]))[:])
}
// UA_MonitoredItemModifyResult_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6718
// MonitoredItemModifyResult
func UA_MonitoredItemModifyResult_init(p []UA_MonitoredItemModifyResult) {
	noarch.Memset(p, byte(0), 632)
}
// UA_MonitoredItemModifyResult_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6723
func UA_MonitoredItemModifyResult_new() []UA_MonitoredItemModifyResult {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[31]))[:]).([]UA_MonitoredItemModifyResult)
}
// UA_MonitoredItemModifyResult_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6728
func UA_MonitoredItemModifyResult_copy(src []UA_MonitoredItemModifyResult, dst []UA_MonitoredItemModifyResult) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[31]))[:])
}
// UA_MonitoredItemModifyResult_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6733
func UA_MonitoredItemModifyResult_deleteMembers(p []UA_MonitoredItemModifyResult) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[31]))[:])
}
// UA_MonitoredItemModifyResult_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6738
func UA_MonitoredItemModifyResult_delete(p []UA_MonitoredItemModifyResult) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[31]))[:])
}
// UA_ElementOperand_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6744
// ElementOperand
func UA_ElementOperand_init(p []UA_ElementOperand) {
	noarch.Memset(p, byte(0), 8)
}
// UA_ElementOperand_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6749
func UA_ElementOperand_new() []UA_ElementOperand {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[32]))[:]).([]UA_ElementOperand)
}
// UA_ElementOperand_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6754
func UA_ElementOperand_copy(src []UA_ElementOperand, dst []UA_ElementOperand) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_ElementOperand_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6760
func UA_ElementOperand_deleteMembers(p []UA_ElementOperand) {
}
// UA_ElementOperand_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6763
func UA_ElementOperand_delete(p []UA_ElementOperand) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[32]))[:])
}
// UA_CloseSecureChannelRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6769
// CloseSecureChannelRequest
func UA_CloseSecureChannelRequest_init(p []UA_CloseSecureChannelRequest) {
	noarch.Memset(p, byte(0), 776)
}
// UA_CloseSecureChannelRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6774
func UA_CloseSecureChannelRequest_new() []UA_CloseSecureChannelRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[33]))[:]).([]UA_CloseSecureChannelRequest)
}
// UA_CloseSecureChannelRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6779
func UA_CloseSecureChannelRequest_copy(src []UA_CloseSecureChannelRequest, dst []UA_CloseSecureChannelRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[33]))[:])
}
// UA_CloseSecureChannelRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6784
func UA_CloseSecureChannelRequest_deleteMembers(p []UA_CloseSecureChannelRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[33]))[:])
}
// UA_CloseSecureChannelRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6789
func UA_CloseSecureChannelRequest_delete(p []UA_CloseSecureChannelRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[33]))[:])
}
// UA_AddNodesResult_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6795
// AddNodesResult
func UA_AddNodesResult_init(p []UA_AddNodesResult) {
	noarch.Memset(p, byte(0), 128)
}
// UA_AddNodesResult_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6800
func UA_AddNodesResult_new() []UA_AddNodesResult {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[34]))[:]).([]UA_AddNodesResult)
}
// UA_AddNodesResult_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6805
func UA_AddNodesResult_copy(src []UA_AddNodesResult, dst []UA_AddNodesResult) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[34]))[:])
}
// UA_AddNodesResult_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6810
func UA_AddNodesResult_deleteMembers(p []UA_AddNodesResult) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[34]))[:])
}
// UA_AddNodesResult_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6815
func UA_AddNodesResult_delete(p []UA_AddNodesResult) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[34]))[:])
}
// UA_VariableAttributes_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6821
// VariableAttributes
func UA_VariableAttributes_init(p []UA_VariableAttributes) {
	noarch.Memset(p, byte(0), 280)
}
// UA_VariableAttributes_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6826
func UA_VariableAttributes_new() []UA_VariableAttributes {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:]).([]UA_VariableAttributes)
}
// UA_VariableAttributes_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6831
func UA_VariableAttributes_copy(src []UA_VariableAttributes, dst []UA_VariableAttributes) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:])
}
// UA_VariableAttributes_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6836
func UA_VariableAttributes_deleteMembers(p []UA_VariableAttributes) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:])
}
// UA_VariableAttributes_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6841
func UA_VariableAttributes_delete(p []UA_VariableAttributes) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:])
}
// UA_NotificationMessage_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6847
// NotificationMessage
func UA_NotificationMessage_init(p []UA_NotificationMessage) {
	noarch.Memset(p, byte(0), 32)
}
// UA_NotificationMessage_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6852
func UA_NotificationMessage_new() []UA_NotificationMessage {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[36]))[:]).([]UA_NotificationMessage)
}
// UA_NotificationMessage_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6857
func UA_NotificationMessage_copy(src []UA_NotificationMessage, dst []UA_NotificationMessage) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[36]))[:])
}
// UA_NotificationMessage_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6862
func UA_NotificationMessage_deleteMembers(p []UA_NotificationMessage) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[36]))[:])
}
// UA_NotificationMessage_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6867
func UA_NotificationMessage_delete(p []UA_NotificationMessage) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[36]))[:])
}
// UA_FindServersOnNetworkRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6873
// FindServersOnNetworkRequest
func UA_FindServersOnNetworkRequest_init(p []UA_FindServersOnNetworkRequest) {
	noarch.Memset(p, byte(0), 800)
}
// UA_FindServersOnNetworkRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6878
func UA_FindServersOnNetworkRequest_new() []UA_FindServersOnNetworkRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[37]))[:]).([]UA_FindServersOnNetworkRequest)
}
// UA_FindServersOnNetworkRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6883
func UA_FindServersOnNetworkRequest_copy(src []UA_FindServersOnNetworkRequest, dst []UA_FindServersOnNetworkRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[37]))[:])
}
// UA_FindServersOnNetworkRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6888
func UA_FindServersOnNetworkRequest_deleteMembers(p []UA_FindServersOnNetworkRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[37]))[:])
}
// UA_FindServersOnNetworkRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6893
func UA_FindServersOnNetworkRequest_delete(p []UA_FindServersOnNetworkRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[37]))[:])
}
// UA_EventFieldList_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6899
// EventFieldList
func UA_EventFieldList_init(p []UA_EventFieldList) {
	noarch.Memset(p, byte(0), 24)
}
// UA_EventFieldList_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6904
func UA_EventFieldList_new() []UA_EventFieldList {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[38]))[:]).([]UA_EventFieldList)
}
// UA_EventFieldList_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6909
func UA_EventFieldList_copy(src []UA_EventFieldList, dst []UA_EventFieldList) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[38]))[:])
}
// UA_EventFieldList_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6914
func UA_EventFieldList_deleteMembers(p []UA_EventFieldList) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[38]))[:])
}
// UA_EventFieldList_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6919
func UA_EventFieldList_delete(p []UA_EventFieldList) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[38]))[:])
}
// UA_MonitoringMode_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6925
// MonitoringMode
func UA_MonitoringMode_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_MonitoringMode_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6930
func UA_MonitoringMode_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[39]))[:]).([]int)
}
// UA_MonitoringMode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6935
func UA_MonitoringMode_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_MonitoringMode_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6941
func UA_MonitoringMode_deleteMembers(p []int) {
}
// UA_MonitoringMode_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6944
func UA_MonitoringMode_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[39]))[:])
}
// UA_MdnsDiscoveryConfiguration_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6950
// MdnsDiscoveryConfiguration
func UA_MdnsDiscoveryConfiguration_init(p []UA_MdnsDiscoveryConfiguration) {
	noarch.Memset(p, byte(0), 32)
}
// UA_MdnsDiscoveryConfiguration_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6955
func UA_MdnsDiscoveryConfiguration_new() []UA_MdnsDiscoveryConfiguration {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[40]))[:]).([]UA_MdnsDiscoveryConfiguration)
}
// UA_MdnsDiscoveryConfiguration_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6960
func UA_MdnsDiscoveryConfiguration_copy(src []UA_MdnsDiscoveryConfiguration, dst []UA_MdnsDiscoveryConfiguration) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[40]))[:])
}
// UA_MdnsDiscoveryConfiguration_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6965
func UA_MdnsDiscoveryConfiguration_deleteMembers(p []UA_MdnsDiscoveryConfiguration) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[40]))[:])
}
// UA_MdnsDiscoveryConfiguration_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6970
func UA_MdnsDiscoveryConfiguration_delete(p []UA_MdnsDiscoveryConfiguration) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[40]))[:])
}
// UA_CallMethodResult_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6976
// CallMethodResult
func UA_CallMethodResult_init(p []UA_CallMethodResult) {
	noarch.Memset(p, byte(0), 56)
}
// UA_CallMethodResult_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6981
func UA_CallMethodResult_new() []UA_CallMethodResult {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[41]))[:]).([]UA_CallMethodResult)
}
// UA_CallMethodResult_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6986
func UA_CallMethodResult_copy(src []UA_CallMethodResult, dst []UA_CallMethodResult) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[41]))[:])
}
// UA_CallMethodResult_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6991
func UA_CallMethodResult_deleteMembers(p []UA_CallMethodResult) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[41]))[:])
}
// UA_CallMethodResult_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:6996
func UA_CallMethodResult_delete(p []UA_CallMethodResult) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[41]))[:])
}
// UA_ParsingResult_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7002
// ParsingResult
func UA_ParsingResult_init(p []UA_ParsingResult) {
	noarch.Memset(p, byte(0), 40)
}
// UA_ParsingResult_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7007
func UA_ParsingResult_new() []UA_ParsingResult {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[42]))[:]).([]UA_ParsingResult)
}
// UA_ParsingResult_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7012
func UA_ParsingResult_copy(src []UA_ParsingResult, dst []UA_ParsingResult) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[42]))[:])
}
// UA_ParsingResult_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7017
func UA_ParsingResult_deleteMembers(p []UA_ParsingResult) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[42]))[:])
}
// UA_ParsingResult_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7022
func UA_ParsingResult_delete(p []UA_ParsingResult) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[42]))[:])
}
// UA_RelativePathElement_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7028
// RelativePathElement
func UA_RelativePathElement_init(p []UA_RelativePathElement) {
	noarch.Memset(p, byte(0), 152)
}
// UA_RelativePathElement_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7033
func UA_RelativePathElement_new() []UA_RelativePathElement {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[43]))[:]).([]UA_RelativePathElement)
}
// UA_RelativePathElement_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7038
func UA_RelativePathElement_copy(src []UA_RelativePathElement, dst []UA_RelativePathElement) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[43]))[:])
}
// UA_RelativePathElement_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7043
func UA_RelativePathElement_deleteMembers(p []UA_RelativePathElement) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[43]))[:])
}
// UA_RelativePathElement_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7048
func UA_RelativePathElement_delete(p []UA_RelativePathElement) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[43]))[:])
}
// UA_BrowseDirection_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7054
// BrowseDirection
func UA_BrowseDirection_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_BrowseDirection_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7059
func UA_BrowseDirection_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[44]))[:]).([]int)
}
// UA_BrowseDirection_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7064
func UA_BrowseDirection_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_BrowseDirection_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7070
func UA_BrowseDirection_deleteMembers(p []int) {
}
// UA_BrowseDirection_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7073
func UA_BrowseDirection_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[44]))[:])
}
// UA_CallMethodRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7079
// CallMethodRequest
func UA_CallMethodRequest_init(p []UA_CallMethodRequest) {
	noarch.Memset(p, byte(0), 256)
}
// UA_CallMethodRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7084
func UA_CallMethodRequest_new() []UA_CallMethodRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[45]))[:]).([]UA_CallMethodRequest)
}
// UA_CallMethodRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7089
func UA_CallMethodRequest_copy(src []UA_CallMethodRequest, dst []UA_CallMethodRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[45]))[:])
}
// UA_CallMethodRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7094
func UA_CallMethodRequest_deleteMembers(p []UA_CallMethodRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[45]))[:])
}
// UA_CallMethodRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7099
func UA_CallMethodRequest_delete(p []UA_CallMethodRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[45]))[:])
}
// UA_RedundancySupport_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7105
// RedundancySupport
func UA_RedundancySupport_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_RedundancySupport_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7110
func UA_RedundancySupport_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[46]))[:]).([]int)
}
// UA_RedundancySupport_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7115
func UA_RedundancySupport_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_RedundancySupport_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7121
func UA_RedundancySupport_deleteMembers(p []int) {
}
// UA_RedundancySupport_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7124
func UA_RedundancySupport_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[46]))[:])
}
// UA_EventNotificationList_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7130
// EventNotificationList
func UA_EventNotificationList_init(p []UA_EventNotificationList) {
	noarch.Memset(p, byte(0), 16)
}
// UA_EventNotificationList_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7135
func UA_EventNotificationList_new() []UA_EventNotificationList {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[47]))[:]).([]UA_EventNotificationList)
}
// UA_EventNotificationList_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7140
func UA_EventNotificationList_copy(src []UA_EventNotificationList, dst []UA_EventNotificationList) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[47]))[:])
}
// UA_EventNotificationList_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7145
func UA_EventNotificationList_deleteMembers(p []UA_EventNotificationList) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[47]))[:])
}
// UA_EventNotificationList_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7150
func UA_EventNotificationList_delete(p []UA_EventNotificationList) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[47]))[:])
}
// UA_UnregisterNodesRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7156
// UnregisterNodesRequest
func UA_UnregisterNodesRequest_init(p []UA_UnregisterNodesRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_UnregisterNodesRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7161
func UA_UnregisterNodesRequest_new() []UA_UnregisterNodesRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[48]))[:]).([]UA_UnregisterNodesRequest)
}
// UA_UnregisterNodesRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7166
func UA_UnregisterNodesRequest_copy(src []UA_UnregisterNodesRequest, dst []UA_UnregisterNodesRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[48]))[:])
}
// UA_UnregisterNodesRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7171
func UA_UnregisterNodesRequest_deleteMembers(p []UA_UnregisterNodesRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[48]))[:])
}
// UA_UnregisterNodesRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7176
func UA_UnregisterNodesRequest_delete(p []UA_UnregisterNodesRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[48]))[:])
}
// UA_ContentFilterElementResult_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7182
// ContentFilterElementResult
func UA_ContentFilterElementResult_init(p []UA_ContentFilterElementResult) {
	noarch.Memset(p, byte(0), 40)
}
// UA_ContentFilterElementResult_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7187
func UA_ContentFilterElementResult_new() []UA_ContentFilterElementResult {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[49]))[:]).([]UA_ContentFilterElementResult)
}
// UA_ContentFilterElementResult_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7192
func UA_ContentFilterElementResult_copy(src []UA_ContentFilterElementResult, dst []UA_ContentFilterElementResult) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[49]))[:])
}
// UA_ContentFilterElementResult_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7197
func UA_ContentFilterElementResult_deleteMembers(p []UA_ContentFilterElementResult) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[49]))[:])
}
// UA_ContentFilterElementResult_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7202
func UA_ContentFilterElementResult_delete(p []UA_ContentFilterElementResult) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[49]))[:])
}
// UA_SimpleAttributeOperand_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7208
// SimpleAttributeOperand
func UA_SimpleAttributeOperand_init(p []UA_SimpleAttributeOperand) {
	noarch.Memset(p, byte(0), 160)
}
// UA_SimpleAttributeOperand_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7213
func UA_SimpleAttributeOperand_new() []UA_SimpleAttributeOperand {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[50]))[:]).([]UA_SimpleAttributeOperand)
}
// UA_SimpleAttributeOperand_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7218
func UA_SimpleAttributeOperand_copy(src []UA_SimpleAttributeOperand, dst []UA_SimpleAttributeOperand) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[50]))[:])
}
// UA_SimpleAttributeOperand_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7223
func UA_SimpleAttributeOperand_deleteMembers(p []UA_SimpleAttributeOperand) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[50]))[:])
}
// UA_SimpleAttributeOperand_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7228
func UA_SimpleAttributeOperand_delete(p []UA_SimpleAttributeOperand) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[50]))[:])
}
// UA_LiteralOperand_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7234
// LiteralOperand
func UA_LiteralOperand_init(p []UA_LiteralOperand) {
	noarch.Memset(p, byte(0), 48)
}
// UA_LiteralOperand_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7239
func UA_LiteralOperand_new() []UA_LiteralOperand {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[51]))[:]).([]UA_LiteralOperand)
}
// UA_LiteralOperand_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7244
func UA_LiteralOperand_copy(src []UA_LiteralOperand, dst []UA_LiteralOperand) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[51]))[:])
}
// UA_LiteralOperand_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7249
func UA_LiteralOperand_deleteMembers(p []UA_LiteralOperand) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[51]))[:])
}
// UA_LiteralOperand_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7254
func UA_LiteralOperand_delete(p []UA_LiteralOperand) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[51]))[:])
}
// UA_QueryDataSet_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7260
// QueryDataSet
func UA_QueryDataSet_init(p []UA_QueryDataSet) {
	noarch.Memset(p, byte(0), 304)
}
// UA_QueryDataSet_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7265
func UA_QueryDataSet_new() []UA_QueryDataSet {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[52]))[:]).([]UA_QueryDataSet)
}
// UA_QueryDataSet_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7270
func UA_QueryDataSet_copy(src []UA_QueryDataSet, dst []UA_QueryDataSet) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[52]))[:])
}
// UA_QueryDataSet_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7275
func UA_QueryDataSet_deleteMembers(p []UA_QueryDataSet) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[52]))[:])
}
// UA_QueryDataSet_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7280
func UA_QueryDataSet_delete(p []UA_QueryDataSet) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[52]))[:])
}
// UA_AnonymousIdentityToken_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7286
// AnonymousIdentityToken
func UA_AnonymousIdentityToken_init(p []UA_AnonymousIdentityToken) {
	noarch.Memset(p, byte(0), 16)
}
// UA_AnonymousIdentityToken_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7291
func UA_AnonymousIdentityToken_new() []UA_AnonymousIdentityToken {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[53]))[:]).([]UA_AnonymousIdentityToken)
}
// UA_AnonymousIdentityToken_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7296
func UA_AnonymousIdentityToken_copy(src []UA_AnonymousIdentityToken, dst []UA_AnonymousIdentityToken) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[53]))[:])
}
// UA_AnonymousIdentityToken_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7301
func UA_AnonymousIdentityToken_deleteMembers(p []UA_AnonymousIdentityToken) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[53]))[:])
}
// UA_AnonymousIdentityToken_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7306
func UA_AnonymousIdentityToken_delete(p []UA_AnonymousIdentityToken) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[53]))[:])
}
// UA_SetPublishingModeRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7312
// SetPublishingModeRequest
func UA_SetPublishingModeRequest_init(p []UA_SetPublishingModeRequest) {
	noarch.Memset(p, byte(0), 800)
}
// UA_SetPublishingModeRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7317
func UA_SetPublishingModeRequest_new() []UA_SetPublishingModeRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[54]))[:]).([]UA_SetPublishingModeRequest)
}
// UA_SetPublishingModeRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7322
func UA_SetPublishingModeRequest_copy(src []UA_SetPublishingModeRequest, dst []UA_SetPublishingModeRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[54]))[:])
}
// UA_SetPublishingModeRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7327
func UA_SetPublishingModeRequest_deleteMembers(p []UA_SetPublishingModeRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[54]))[:])
}
// UA_SetPublishingModeRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7332
func UA_SetPublishingModeRequest_delete(p []UA_SetPublishingModeRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[54]))[:])
}
// UA_MonitoredItemCreateResult_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7338
// MonitoredItemCreateResult
func UA_MonitoredItemCreateResult_init(p []UA_MonitoredItemCreateResult) {
	noarch.Memset(p, byte(0), 640)
}
// UA_MonitoredItemCreateResult_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7343
func UA_MonitoredItemCreateResult_new() []UA_MonitoredItemCreateResult {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[55]))[:]).([]UA_MonitoredItemCreateResult)
}
// UA_MonitoredItemCreateResult_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7348
func UA_MonitoredItemCreateResult_copy(src []UA_MonitoredItemCreateResult, dst []UA_MonitoredItemCreateResult) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[55]))[:])
}
// UA_MonitoredItemCreateResult_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7353
func UA_MonitoredItemCreateResult_deleteMembers(p []UA_MonitoredItemCreateResult) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[55]))[:])
}
// UA_MonitoredItemCreateResult_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7358
func UA_MonitoredItemCreateResult_delete(p []UA_MonitoredItemCreateResult) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[55]))[:])
}
// UA_TimestampsToReturn_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7364
// TimestampsToReturn
func UA_TimestampsToReturn_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_TimestampsToReturn_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7369
func UA_TimestampsToReturn_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[56]))[:]).([]int)
}
// UA_TimestampsToReturn_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7374
func UA_TimestampsToReturn_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_TimestampsToReturn_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7380
func UA_TimestampsToReturn_deleteMembers(p []int) {
}
// UA_TimestampsToReturn_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7383
func UA_TimestampsToReturn_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[56]))[:])
}
// UA_CallRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7389
// CallRequest
func UA_CallRequest_init(p []UA_CallRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_CallRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7394
func UA_CallRequest_new() []UA_CallRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[57]))[:]).([]UA_CallRequest)
}
// UA_CallRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7399
func UA_CallRequest_copy(src []UA_CallRequest, dst []UA_CallRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[57]))[:])
}
// UA_CallRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7404
func UA_CallRequest_deleteMembers(p []UA_CallRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[57]))[:])
}
// UA_CallRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7409
func UA_CallRequest_delete(p []UA_CallRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[57]))[:])
}
// UA_MethodAttributes_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7415
// MethodAttributes
func UA_MethodAttributes_init(p []UA_MethodAttributes) {
	noarch.Memset(p, byte(0), 88)
}
// UA_MethodAttributes_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7420
func UA_MethodAttributes_new() []UA_MethodAttributes {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[58]))[:]).([]UA_MethodAttributes)
}
// UA_MethodAttributes_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7425
func UA_MethodAttributes_copy(src []UA_MethodAttributes, dst []UA_MethodAttributes) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[58]))[:])
}
// UA_MethodAttributes_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7430
func UA_MethodAttributes_deleteMembers(p []UA_MethodAttributes) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[58]))[:])
}
// UA_MethodAttributes_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7435
func UA_MethodAttributes_delete(p []UA_MethodAttributes) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[58]))[:])
}
// UA_DeleteReferencesItem_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7441
// DeleteReferencesItem
func UA_DeleteReferencesItem_init(p []UA_DeleteReferencesItem) {
	noarch.Memset(p, byte(0), 392)
}
// UA_DeleteReferencesItem_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7446
func UA_DeleteReferencesItem_new() []UA_DeleteReferencesItem {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[59]))[:]).([]UA_DeleteReferencesItem)
}
// UA_DeleteReferencesItem_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7451
func UA_DeleteReferencesItem_copy(src []UA_DeleteReferencesItem, dst []UA_DeleteReferencesItem) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[59]))[:])
}
// UA_DeleteReferencesItem_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7456
func UA_DeleteReferencesItem_deleteMembers(p []UA_DeleteReferencesItem) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[59]))[:])
}
// UA_DeleteReferencesItem_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7461
func UA_DeleteReferencesItem_delete(p []UA_DeleteReferencesItem) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[59]))[:])
}
// UA_WriteValue_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7467
// WriteValue
func UA_WriteValue_init(p []UA_WriteValue) {
	noarch.Memset(p, byte(0), 240)
}
// UA_WriteValue_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7472
func UA_WriteValue_new() []UA_WriteValue {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[60]))[:]).([]UA_WriteValue)
}
// UA_WriteValue_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7477
func UA_WriteValue_copy(src []UA_WriteValue, dst []UA_WriteValue) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[60]))[:])
}
// UA_WriteValue_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7482
func UA_WriteValue_deleteMembers(p []UA_WriteValue) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[60]))[:])
}
// UA_WriteValue_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7487
func UA_WriteValue_delete(p []UA_WriteValue) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[60]))[:])
}
// UA_NodeAttributesMask_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7493
// NodeAttributesMask
func UA_NodeAttributesMask_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_NodeAttributesMask_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7498
func UA_NodeAttributesMask_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[61]))[:]).([]int)
}
// UA_NodeAttributesMask_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7503
func UA_NodeAttributesMask_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_NodeAttributesMask_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7509
func UA_NodeAttributesMask_deleteMembers(p []int) {
}
// UA_NodeAttributesMask_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7512
func UA_NodeAttributesMask_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[61]))[:])
}
// UA_MessageSecurityMode_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7518
// MessageSecurityMode
func UA_MessageSecurityMode_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_MessageSecurityMode_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7523
func UA_MessageSecurityMode_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[62]))[:]).([]int)
}
// UA_MessageSecurityMode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7528
func UA_MessageSecurityMode_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_MessageSecurityMode_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7534
func UA_MessageSecurityMode_deleteMembers(p []int) {
}
// UA_MessageSecurityMode_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7537
func UA_MessageSecurityMode_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[62]))[:])
}
// UA_MonitoringParameters_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7543
// MonitoringParameters
func UA_MonitoringParameters_init(p []UA_MonitoringParameters) {
	noarch.Memset(p, byte(0), 640)
}
// UA_MonitoringParameters_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7548
func UA_MonitoringParameters_new() []UA_MonitoringParameters {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[63]))[:]).([]UA_MonitoringParameters)
}
// UA_MonitoringParameters_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7553
func UA_MonitoringParameters_copy(src []UA_MonitoringParameters, dst []UA_MonitoringParameters) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[63]))[:])
}
// UA_MonitoringParameters_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7558
func UA_MonitoringParameters_deleteMembers(p []UA_MonitoringParameters) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[63]))[:])
}
// UA_MonitoringParameters_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7563
func UA_MonitoringParameters_delete(p []UA_MonitoringParameters) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[63]))[:])
}
// UA_ReferenceNode_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7569
// ReferenceNode
func UA_ReferenceNode_init(p []UA_ReferenceNode) {
	noarch.Memset(p, byte(0), 272)
}
// UA_ReferenceNode_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7574
func UA_ReferenceNode_new() []UA_ReferenceNode {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[64]))[:]).([]UA_ReferenceNode)
}
// UA_ReferenceNode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7579
func UA_ReferenceNode_copy(src []UA_ReferenceNode, dst []UA_ReferenceNode) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[64]))[:])
}
// UA_ReferenceNode_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7584
func UA_ReferenceNode_deleteMembers(p []UA_ReferenceNode) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[64]))[:])
}
// UA_ReferenceNode_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7589
func UA_ReferenceNode_delete(p []UA_ReferenceNode) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[64]))[:])
}
// UA_Argument_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7595
// Argument
func UA_Argument_init(p []UA_Argument) {
	noarch.Memset(p, byte(0), 192)
}
// UA_Argument_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7600
func UA_Argument_new() []UA_Argument {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[65]))[:]).([]UA_Argument)
}
// UA_Argument_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7605
func UA_Argument_copy(src []UA_Argument, dst []UA_Argument) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[65]))[:])
}
// UA_Argument_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7610
func UA_Argument_deleteMembers(p []UA_Argument) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[65]))[:])
}
// UA_Argument_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7615
func UA_Argument_delete(p []UA_Argument) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[65]))[:])
}
// UA_ChannelSecurityToken_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7621
// ChannelSecurityToken
func UA_ChannelSecurityToken_init(p []UA_ChannelSecurityToken) {
	noarch.Memset(p, byte(0), 24)
}
// UA_ChannelSecurityToken_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7626
func UA_ChannelSecurityToken_new() []UA_ChannelSecurityToken {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[66]))[:]).([]UA_ChannelSecurityToken)
}
// UA_ChannelSecurityToken_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7631
func UA_ChannelSecurityToken_copy(src []UA_ChannelSecurityToken, dst []UA_ChannelSecurityToken) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_ChannelSecurityToken_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7637
func UA_ChannelSecurityToken_deleteMembers(p []UA_ChannelSecurityToken) {
}
// UA_ChannelSecurityToken_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7640
func UA_ChannelSecurityToken_delete(p []UA_ChannelSecurityToken) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[66]))[:])
}
// UA_UserIdentityToken_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7646
// UserIdentityToken
func UA_UserIdentityToken_init(p []UA_UserIdentityToken) {
	noarch.Memset(p, byte(0), 16)
}
// UA_UserIdentityToken_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7651
func UA_UserIdentityToken_new() []UA_UserIdentityToken {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[67]))[:]).([]UA_UserIdentityToken)
}
// UA_UserIdentityToken_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7656
func UA_UserIdentityToken_copy(src []UA_UserIdentityToken, dst []UA_UserIdentityToken) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[67]))[:])
}
// UA_UserIdentityToken_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7661
func UA_UserIdentityToken_deleteMembers(p []UA_UserIdentityToken) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[67]))[:])
}
// UA_UserIdentityToken_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7666
func UA_UserIdentityToken_delete(p []UA_UserIdentityToken) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[67]))[:])
}
// UA_SignatureData_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7672
// SignatureData
func UA_SignatureData_init(p []UA_SignatureData) {
	noarch.Memset(p, byte(0), 32)
}
// UA_SignatureData_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7677
func UA_SignatureData_new() []UA_SignatureData {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[68]))[:]).([]UA_SignatureData)
}
// UA_SignatureData_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7682
func UA_SignatureData_copy(src []UA_SignatureData, dst []UA_SignatureData) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[68]))[:])
}
// UA_SignatureData_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7687
func UA_SignatureData_deleteMembers(p []UA_SignatureData) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[68]))[:])
}
// UA_SignatureData_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7692
func UA_SignatureData_delete(p []UA_SignatureData) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[68]))[:])
}
// UA_ObjectTypeAttributes_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7698
// ObjectTypeAttributes
func UA_ObjectTypeAttributes_init(p []UA_ObjectTypeAttributes) {
	noarch.Memset(p, byte(0), 80)
}
// UA_ObjectTypeAttributes_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7703
func UA_ObjectTypeAttributes_new() []UA_ObjectTypeAttributes {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:]).([]UA_ObjectTypeAttributes)
}
// UA_ObjectTypeAttributes_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7708
func UA_ObjectTypeAttributes_copy(src []UA_ObjectTypeAttributes, dst []UA_ObjectTypeAttributes) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:])
}
// UA_ObjectTypeAttributes_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7713
func UA_ObjectTypeAttributes_deleteMembers(p []UA_ObjectTypeAttributes) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:])
}
// UA_ObjectTypeAttributes_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7718
func UA_ObjectTypeAttributes_delete(p []UA_ObjectTypeAttributes) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:])
}
// UA_DeadbandType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7724
// DeadbandType
func UA_DeadbandType_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_DeadbandType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7729
func UA_DeadbandType_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[70]))[:]).([]int)
}
// UA_DeadbandType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7734
func UA_DeadbandType_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_DeadbandType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7740
func UA_DeadbandType_deleteMembers(p []int) {
}
// UA_DeadbandType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7743
func UA_DeadbandType_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[70]))[:])
}
// UA_SecurityTokenRequestType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7749
// SecurityTokenRequestType
func UA_SecurityTokenRequestType_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_SecurityTokenRequestType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7754
func UA_SecurityTokenRequestType_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[71]))[:]).([]int)
}
// UA_SecurityTokenRequestType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7759
func UA_SecurityTokenRequestType_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_SecurityTokenRequestType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7765
func UA_SecurityTokenRequestType_deleteMembers(p []int) {
}
// UA_SecurityTokenRequestType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7768
func UA_SecurityTokenRequestType_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[71]))[:])
}
// UA_NodeAttributes_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7774
// NodeAttributes
func UA_NodeAttributes_init(p []UA_NodeAttributes) {
	noarch.Memset(p, byte(0), 80)
}
// UA_NodeAttributes_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7779
func UA_NodeAttributes_new() []UA_NodeAttributes {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[72]))[:]).([]UA_NodeAttributes)
}
// UA_NodeAttributes_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7784
func UA_NodeAttributes_copy(src []UA_NodeAttributes, dst []UA_NodeAttributes) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[72]))[:])
}
// UA_NodeAttributes_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7789
func UA_NodeAttributes_deleteMembers(p []UA_NodeAttributes) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[72]))[:])
}
// UA_NodeAttributes_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7794
func UA_NodeAttributes_delete(p []UA_NodeAttributes) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[72]))[:])
}
// UA_DataChangeTrigger_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7800
// DataChangeTrigger
func UA_DataChangeTrigger_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_DataChangeTrigger_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7805
func UA_DataChangeTrigger_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[73]))[:]).([]int)
}
// UA_DataChangeTrigger_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7810
func UA_DataChangeTrigger_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_DataChangeTrigger_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7816
func UA_DataChangeTrigger_deleteMembers(p []int) {
}
// UA_DataChangeTrigger_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7819
func UA_DataChangeTrigger_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[73]))[:])
}
// UA_BuildInfo_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7825
// BuildInfo
func UA_BuildInfo_init(p []UA_BuildInfo) {
	noarch.Memset(p, byte(0), 88)
}
// UA_BuildInfo_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7830
func UA_BuildInfo_new() []UA_BuildInfo {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[74]))[:]).([]UA_BuildInfo)
}
// UA_BuildInfo_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7835
func UA_BuildInfo_copy(src []UA_BuildInfo, dst []UA_BuildInfo) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[74]))[:])
}
// UA_BuildInfo_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7840
func UA_BuildInfo_deleteMembers(p []UA_BuildInfo) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[74]))[:])
}
// UA_BuildInfo_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7845
func UA_BuildInfo_delete(p []UA_BuildInfo) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[74]))[:])
}
// UA_NodeClass_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7851
// NodeClass
func UA_NodeClass_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_NodeClass_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7856
func UA_NodeClass_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[75]))[:]).([]int)
}
// UA_NodeClass_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7861
func UA_NodeClass_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_NodeClass_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7867
func UA_NodeClass_deleteMembers(p []int) {
}
// UA_NodeClass_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7870
func UA_NodeClass_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[75]))[:])
}
// UA_SubscriptionDiagnosticsDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7876
// SubscriptionDiagnosticsDataType
func UA_SubscriptionDiagnosticsDataType_init(p []UA_SubscriptionDiagnosticsDataType) {
	noarch.Memset(p, byte(0), 248)
}
// UA_SubscriptionDiagnosticsDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7881
func UA_SubscriptionDiagnosticsDataType_new() []UA_SubscriptionDiagnosticsDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[76]))[:]).([]UA_SubscriptionDiagnosticsDataType)
}
// UA_SubscriptionDiagnosticsDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7886
func UA_SubscriptionDiagnosticsDataType_copy(src []UA_SubscriptionDiagnosticsDataType, dst []UA_SubscriptionDiagnosticsDataType) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[76]))[:])
}
// UA_SubscriptionDiagnosticsDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7891
func UA_SubscriptionDiagnosticsDataType_deleteMembers(p []UA_SubscriptionDiagnosticsDataType) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[76]))[:])
}
// UA_SubscriptionDiagnosticsDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7896
func UA_SubscriptionDiagnosticsDataType_delete(p []UA_SubscriptionDiagnosticsDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[76]))[:])
}
// UA_FilterOperand_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7902
// FilterOperand
func UA_FilterOperand_init(p []UA_FilterOperand) {
	noarch.Memset(p, byte(0), 8)
}
// UA_FilterOperand_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7907
func UA_FilterOperand_new() []UA_FilterOperand {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[77]))[:]).([]UA_FilterOperand)
}
// UA_FilterOperand_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7912
func UA_FilterOperand_copy(src []UA_FilterOperand, dst []UA_FilterOperand) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_FilterOperand_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7918
func UA_FilterOperand_deleteMembers(p []UA_FilterOperand) {
}
// UA_FilterOperand_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7921
func UA_FilterOperand_delete(p []UA_FilterOperand) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[77]))[:])
}
// UA_MonitoredItemNotification_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7927
// MonitoredItemNotification
func UA_MonitoredItemNotification_init(p []UA_MonitoredItemNotification) {
	noarch.Memset(p, byte(0), 104)
}
// UA_MonitoredItemNotification_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7932
func UA_MonitoredItemNotification_new() []UA_MonitoredItemNotification {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[78]))[:]).([]UA_MonitoredItemNotification)
}
// UA_MonitoredItemNotification_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7937
func UA_MonitoredItemNotification_copy(src []UA_MonitoredItemNotification, dst []UA_MonitoredItemNotification) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[78]))[:])
}
// UA_MonitoredItemNotification_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7942
func UA_MonitoredItemNotification_deleteMembers(p []UA_MonitoredItemNotification) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[78]))[:])
}
// UA_MonitoredItemNotification_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7947
func UA_MonitoredItemNotification_delete(p []UA_MonitoredItemNotification) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[78]))[:])
}
// UA_DeleteNodesItem_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7953
// DeleteNodesItem
func UA_DeleteNodesItem_init(p []UA_DeleteNodesItem) {
	noarch.Memset(p, byte(0), 128)
}
// UA_DeleteNodesItem_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7958
func UA_DeleteNodesItem_new() []UA_DeleteNodesItem {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[79]))[:]).([]UA_DeleteNodesItem)
}
// UA_DeleteNodesItem_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7963
func UA_DeleteNodesItem_copy(src []UA_DeleteNodesItem, dst []UA_DeleteNodesItem) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[79]))[:])
}
// UA_DeleteNodesItem_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7968
func UA_DeleteNodesItem_deleteMembers(p []UA_DeleteNodesItem) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[79]))[:])
}
// UA_DeleteNodesItem_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7973
func UA_DeleteNodesItem_delete(p []UA_DeleteNodesItem) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[79]))[:])
}
// UA_DeleteSubscriptionsRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7979
// DeleteSubscriptionsRequest
func UA_DeleteSubscriptionsRequest_init(p []UA_DeleteSubscriptionsRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_DeleteSubscriptionsRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7984
func UA_DeleteSubscriptionsRequest_new() []UA_DeleteSubscriptionsRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[80]))[:]).([]UA_DeleteSubscriptionsRequest)
}
// UA_DeleteSubscriptionsRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7989
func UA_DeleteSubscriptionsRequest_copy(src []UA_DeleteSubscriptionsRequest, dst []UA_DeleteSubscriptionsRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[80]))[:])
}
// UA_DeleteSubscriptionsRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7994
func UA_DeleteSubscriptionsRequest_deleteMembers(p []UA_DeleteSubscriptionsRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[80]))[:])
}
// UA_DeleteSubscriptionsRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:7999
func UA_DeleteSubscriptionsRequest_delete(p []UA_DeleteSubscriptionsRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[80]))[:])
}
// UA_SubscriptionAcknowledgement_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8005
// SubscriptionAcknowledgement
func UA_SubscriptionAcknowledgement_init(p []UA_SubscriptionAcknowledgement) {
	noarch.Memset(p, byte(0), 8)
}
// UA_SubscriptionAcknowledgement_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8010
func UA_SubscriptionAcknowledgement_new() []UA_SubscriptionAcknowledgement {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[81]))[:]).([]UA_SubscriptionAcknowledgement)
}
// UA_SubscriptionAcknowledgement_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8015
func UA_SubscriptionAcknowledgement_copy(src []UA_SubscriptionAcknowledgement, dst []UA_SubscriptionAcknowledgement) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_SubscriptionAcknowledgement_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8021
func UA_SubscriptionAcknowledgement_deleteMembers(p []UA_SubscriptionAcknowledgement) {
}
// UA_SubscriptionAcknowledgement_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8024
func UA_SubscriptionAcknowledgement_delete(p []UA_SubscriptionAcknowledgement) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[81]))[:])
}
// UA_ReadValueId_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8030
// ReadValueId
func UA_ReadValueId_init(p []UA_ReadValueId) {
	noarch.Memset(p, byte(0), 168)
}
// UA_ReadValueId_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8035
func UA_ReadValueId_new() []UA_ReadValueId {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[82]))[:]).([]UA_ReadValueId)
}
// UA_ReadValueId_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8040
func UA_ReadValueId_copy(src []UA_ReadValueId, dst []UA_ReadValueId) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[82]))[:])
}
// UA_ReadValueId_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8045
func UA_ReadValueId_deleteMembers(p []UA_ReadValueId) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[82]))[:])
}
// UA_ReadValueId_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8050
func UA_ReadValueId_delete(p []UA_ReadValueId) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[82]))[:])
}
// UA_DataTypeAttributes_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8056
// DataTypeAttributes
func UA_DataTypeAttributes_init(p []UA_DataTypeAttributes) {
	noarch.Memset(p, byte(0), 80)
}
// UA_DataTypeAttributes_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8061
func UA_DataTypeAttributes_new() []UA_DataTypeAttributes {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:]).([]UA_DataTypeAttributes)
}
// UA_DataTypeAttributes_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8066
func UA_DataTypeAttributes_copy(src []UA_DataTypeAttributes, dst []UA_DataTypeAttributes) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:])
}
// UA_DataTypeAttributes_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8071
func UA_DataTypeAttributes_deleteMembers(p []UA_DataTypeAttributes) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:])
}
// UA_DataTypeAttributes_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8076
func UA_DataTypeAttributes_delete(p []UA_DataTypeAttributes) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:])
}
// UA_ResponseHeader_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8082
// ResponseHeader
func UA_ResponseHeader_init(p []UA_ResponseHeader) {
	noarch.Memset(p, byte(0), 720)
}
// UA_ResponseHeader_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8087
func UA_ResponseHeader_new() []UA_ResponseHeader {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[84]))[:]).([]UA_ResponseHeader)
}
// UA_ResponseHeader_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8092
func UA_ResponseHeader_copy(src []UA_ResponseHeader, dst []UA_ResponseHeader) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[84]))[:])
}
// UA_ResponseHeader_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8097
func UA_ResponseHeader_deleteMembers(p []UA_ResponseHeader) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[84]))[:])
}
// UA_ResponseHeader_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8102
func UA_ResponseHeader_delete(p []UA_ResponseHeader) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[84]))[:])
}
// UA_DeleteMonitoredItemsRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8108
// DeleteMonitoredItemsRequest
func UA_DeleteMonitoredItemsRequest_init(p []UA_DeleteMonitoredItemsRequest) {
	noarch.Memset(p, byte(0), 800)
}
// UA_DeleteMonitoredItemsRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8113
func UA_DeleteMonitoredItemsRequest_new() []UA_DeleteMonitoredItemsRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[85]))[:]).([]UA_DeleteMonitoredItemsRequest)
}
// UA_DeleteMonitoredItemsRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8118
func UA_DeleteMonitoredItemsRequest_copy(src []UA_DeleteMonitoredItemsRequest, dst []UA_DeleteMonitoredItemsRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[85]))[:])
}
// UA_DeleteMonitoredItemsRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8123
func UA_DeleteMonitoredItemsRequest_deleteMembers(p []UA_DeleteMonitoredItemsRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[85]))[:])
}
// UA_DeleteMonitoredItemsRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8128
func UA_DeleteMonitoredItemsRequest_delete(p []UA_DeleteMonitoredItemsRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[85]))[:])
}
// UA_ViewDescription_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8134
// ViewDescription
func UA_ViewDescription_init(p []UA_ViewDescription) {
	noarch.Memset(p, byte(0), 136)
}
// UA_ViewDescription_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8139
func UA_ViewDescription_new() []UA_ViewDescription {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[86]))[:]).([]UA_ViewDescription)
}
// UA_ViewDescription_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8144
func UA_ViewDescription_copy(src []UA_ViewDescription, dst []UA_ViewDescription) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[86]))[:])
}
// UA_ViewDescription_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8149
func UA_ViewDescription_deleteMembers(p []UA_ViewDescription) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[86]))[:])
}
// UA_ViewDescription_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8154
func UA_ViewDescription_delete(p []UA_ViewDescription) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[86]))[:])
}
// UA_ServerOnNetwork_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8160
// ServerOnNetwork
func UA_ServerOnNetwork_init(p []UA_ServerOnNetwork) {
	noarch.Memset(p, byte(0), 56)
}
// UA_ServerOnNetwork_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8165
func UA_ServerOnNetwork_new() []UA_ServerOnNetwork {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[87]))[:]).([]UA_ServerOnNetwork)
}
// UA_ServerOnNetwork_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8170
func UA_ServerOnNetwork_copy(src []UA_ServerOnNetwork, dst []UA_ServerOnNetwork) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[87]))[:])
}
// UA_ServerOnNetwork_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8175
func UA_ServerOnNetwork_deleteMembers(p []UA_ServerOnNetwork) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[87]))[:])
}
// UA_ServerOnNetwork_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8180
func UA_ServerOnNetwork_delete(p []UA_ServerOnNetwork) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[87]))[:])
}
// UA_DeleteMonitoredItemsResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8186
// DeleteMonitoredItemsResponse
func UA_DeleteMonitoredItemsResponse_init(p []UA_DeleteMonitoredItemsResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_DeleteMonitoredItemsResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8191
func UA_DeleteMonitoredItemsResponse_new() []UA_DeleteMonitoredItemsResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[88]))[:]).([]UA_DeleteMonitoredItemsResponse)
}
// UA_DeleteMonitoredItemsResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8196
func UA_DeleteMonitoredItemsResponse_copy(src []UA_DeleteMonitoredItemsResponse, dst []UA_DeleteMonitoredItemsResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[88]))[:])
}
// UA_DeleteMonitoredItemsResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8201
func UA_DeleteMonitoredItemsResponse_deleteMembers(p []UA_DeleteMonitoredItemsResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[88]))[:])
}
// UA_DeleteMonitoredItemsResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8206
func UA_DeleteMonitoredItemsResponse_delete(p []UA_DeleteMonitoredItemsResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[88]))[:])
}
// UA_FindServersOnNetworkResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8212
// FindServersOnNetworkResponse
func UA_FindServersOnNetworkResponse_init(p []UA_FindServersOnNetworkResponse) {
	noarch.Memset(p, byte(0), 744)
}
// UA_FindServersOnNetworkResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8217
func UA_FindServersOnNetworkResponse_new() []UA_FindServersOnNetworkResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[89]))[:]).([]UA_FindServersOnNetworkResponse)
}
// UA_FindServersOnNetworkResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8222
func UA_FindServersOnNetworkResponse_copy(src []UA_FindServersOnNetworkResponse, dst []UA_FindServersOnNetworkResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[89]))[:])
}
// UA_FindServersOnNetworkResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8227
func UA_FindServersOnNetworkResponse_deleteMembers(p []UA_FindServersOnNetworkResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[89]))[:])
}
// UA_FindServersOnNetworkResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8232
func UA_FindServersOnNetworkResponse_delete(p []UA_FindServersOnNetworkResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[89]))[:])
}
// UA_RelativePath_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8238
// RelativePath
func UA_RelativePath_init(p []UA_RelativePath) {
	noarch.Memset(p, byte(0), 16)
}
// UA_RelativePath_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8243
func UA_RelativePath_new() []UA_RelativePath {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[90]))[:]).([]UA_RelativePath)
}
// UA_RelativePath_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8248
func UA_RelativePath_copy(src []UA_RelativePath, dst []UA_RelativePath) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[90]))[:])
}
// UA_RelativePath_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8253
func UA_RelativePath_deleteMembers(p []UA_RelativePath) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[90]))[:])
}
// UA_RelativePath_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8258
func UA_RelativePath_delete(p []UA_RelativePath) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[90]))[:])
}
// UA_RegisterNodesRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8264
// RegisterNodesRequest
func UA_RegisterNodesRequest_init(p []UA_RegisterNodesRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_RegisterNodesRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8269
func UA_RegisterNodesRequest_new() []UA_RegisterNodesRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[91]))[:]).([]UA_RegisterNodesRequest)
}
// UA_RegisterNodesRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8274
func UA_RegisterNodesRequest_copy(src []UA_RegisterNodesRequest, dst []UA_RegisterNodesRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[91]))[:])
}
// UA_RegisterNodesRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8279
func UA_RegisterNodesRequest_deleteMembers(p []UA_RegisterNodesRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[91]))[:])
}
// UA_RegisterNodesRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8284
func UA_RegisterNodesRequest_delete(p []UA_RegisterNodesRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[91]))[:])
}
// UA_AggregateConfiguration_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8290
// AggregateConfiguration
func UA_AggregateConfiguration_init(p []UA_AggregateConfiguration) {
	noarch.Memset(p, byte(0), 16)
}
// UA_AggregateConfiguration_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8295
func UA_AggregateConfiguration_new() []UA_AggregateConfiguration {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[92]))[:]).([]UA_AggregateConfiguration)
}
// UA_AggregateConfiguration_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8300
func UA_AggregateConfiguration_copy(src []UA_AggregateConfiguration, dst []UA_AggregateConfiguration) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_AggregateConfiguration_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8306
func UA_AggregateConfiguration_deleteMembers(p []UA_AggregateConfiguration) {
}
// UA_AggregateConfiguration_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8309
func UA_AggregateConfiguration_delete(p []UA_AggregateConfiguration) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[92]))[:])
}
// UA_DeleteNodesRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8315
// DeleteNodesRequest
func UA_DeleteNodesRequest_init(p []UA_DeleteNodesRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_DeleteNodesRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8320
func UA_DeleteNodesRequest_new() []UA_DeleteNodesRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[93]))[:]).([]UA_DeleteNodesRequest)
}
// UA_DeleteNodesRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8325
func UA_DeleteNodesRequest_copy(src []UA_DeleteNodesRequest, dst []UA_DeleteNodesRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[93]))[:])
}
// UA_DeleteNodesRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8330
func UA_DeleteNodesRequest_deleteMembers(p []UA_DeleteNodesRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[93]))[:])
}
// UA_DeleteNodesRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8335
func UA_DeleteNodesRequest_delete(p []UA_DeleteNodesRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[93]))[:])
}
// UA_PublishResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8341
// PublishResponse
func UA_PublishResponse_init(p []UA_PublishResponse) {
	noarch.Memset(p, byte(0), 808)
}
// UA_PublishResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8346
func UA_PublishResponse_new() []UA_PublishResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:]).([]UA_PublishResponse)
}
// UA_PublishResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8351
func UA_PublishResponse_copy(src []UA_PublishResponse, dst []UA_PublishResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:])
}
// UA_PublishResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8356
func UA_PublishResponse_deleteMembers(p []UA_PublishResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:])
}
// UA_PublishResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8361
func UA_PublishResponse_delete(p []UA_PublishResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:])
}
// UA_MonitoredItemModifyRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8367
// MonitoredItemModifyRequest
func UA_MonitoredItemModifyRequest_init(p []UA_MonitoredItemModifyRequest) {
	noarch.Memset(p, byte(0), 648)
}
// UA_MonitoredItemModifyRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8372
func UA_MonitoredItemModifyRequest_new() []UA_MonitoredItemModifyRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[95]))[:]).([]UA_MonitoredItemModifyRequest)
}
// UA_MonitoredItemModifyRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8377
func UA_MonitoredItemModifyRequest_copy(src []UA_MonitoredItemModifyRequest, dst []UA_MonitoredItemModifyRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[95]))[:])
}
// UA_MonitoredItemModifyRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8382
func UA_MonitoredItemModifyRequest_deleteMembers(p []UA_MonitoredItemModifyRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[95]))[:])
}
// UA_MonitoredItemModifyRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8387
func UA_MonitoredItemModifyRequest_delete(p []UA_MonitoredItemModifyRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[95]))[:])
}
// UA_ServiceCounterDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8393
// ServiceCounterDataType
func UA_ServiceCounterDataType_init(p []UA_ServiceCounterDataType) {
	noarch.Memset(p, byte(0), 8)
}
// UA_ServiceCounterDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8398
func UA_ServiceCounterDataType_new() []UA_ServiceCounterDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[96]))[:]).([]UA_ServiceCounterDataType)
}
// UA_ServiceCounterDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8403
func UA_ServiceCounterDataType_copy(src []UA_ServiceCounterDataType, dst []UA_ServiceCounterDataType) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_ServiceCounterDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8409
func UA_ServiceCounterDataType_deleteMembers(p []UA_ServiceCounterDataType) {
}
// UA_ServiceCounterDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8412
func UA_ServiceCounterDataType_delete(p []UA_ServiceCounterDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[96]))[:])
}
// UA_ModelChangeStructureDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8418
// ModelChangeStructureDataType
func UA_ModelChangeStructureDataType_init(p []UA_ModelChangeStructureDataType) {
	noarch.Memset(p, byte(0), 248)
}
// UA_ModelChangeStructureDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8423
func UA_ModelChangeStructureDataType_new() []UA_ModelChangeStructureDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[97]))[:]).([]UA_ModelChangeStructureDataType)
}
// UA_ModelChangeStructureDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8428
func UA_ModelChangeStructureDataType_copy(src []UA_ModelChangeStructureDataType, dst []UA_ModelChangeStructureDataType) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[97]))[:])
}
// UA_ModelChangeStructureDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8433
func UA_ModelChangeStructureDataType_deleteMembers(p []UA_ModelChangeStructureDataType) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[97]))[:])
}
// UA_ModelChangeStructureDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8438
func UA_ModelChangeStructureDataType_delete(p []UA_ModelChangeStructureDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[97]))[:])
}
// UA_UserNameIdentityToken_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8444
// UserNameIdentityToken
func UA_UserNameIdentityToken_init(p []UA_UserNameIdentityToken) {
	noarch.Memset(p, byte(0), 64)
}
// UA_UserNameIdentityToken_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8449
func UA_UserNameIdentityToken_new() []UA_UserNameIdentityToken {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[98]))[:]).([]UA_UserNameIdentityToken)
}
// UA_UserNameIdentityToken_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8454
func UA_UserNameIdentityToken_copy(src []UA_UserNameIdentityToken, dst []UA_UserNameIdentityToken) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[98]))[:])
}
// UA_UserNameIdentityToken_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8459
func UA_UserNameIdentityToken_deleteMembers(p []UA_UserNameIdentityToken) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[98]))[:])
}
// UA_UserNameIdentityToken_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8464
func UA_UserNameIdentityToken_delete(p []UA_UserNameIdentityToken) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[98]))[:])
}
// UA_IdType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8470
// IdType
func UA_IdType_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_IdType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8475
func UA_IdType_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[99]))[:]).([]int)
}
// UA_IdType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8480
func UA_IdType_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_IdType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8486
func UA_IdType_deleteMembers(p []int) {
}
// UA_IdType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8489
func UA_IdType_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[99]))[:])
}
// UA_UserTokenType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8495
// UserTokenType
func UA_UserTokenType_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_UserTokenType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8500
func UA_UserTokenType_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[100]))[:]).([]int)
}
// UA_UserTokenType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8505
func UA_UserTokenType_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_UserTokenType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8511
func UA_UserTokenType_deleteMembers(p []int) {
}
// UA_UserTokenType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8514
func UA_UserTokenType_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[100]))[:])
}
// UA_SetTriggeringResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8520
// SetTriggeringResponse
func UA_SetTriggeringResponse_init(p []UA_SetTriggeringResponse) {
	noarch.Memset(p, byte(0), 784)
}
// UA_SetTriggeringResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8525
func UA_SetTriggeringResponse_new() []UA_SetTriggeringResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[101]))[:]).([]UA_SetTriggeringResponse)
}
// UA_SetTriggeringResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8530
func UA_SetTriggeringResponse_copy(src []UA_SetTriggeringResponse, dst []UA_SetTriggeringResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[101]))[:])
}
// UA_SetTriggeringResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8535
func UA_SetTriggeringResponse_deleteMembers(p []UA_SetTriggeringResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[101]))[:])
}
// UA_SetTriggeringResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8540
func UA_SetTriggeringResponse_delete(p []UA_SetTriggeringResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[101]))[:])
}
// UA_TimeZoneDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8546
// TimeZoneDataType
func UA_TimeZoneDataType_init(p []UA_TimeZoneDataType) {
	noarch.Memset(p, byte(0), 8)
}
// UA_TimeZoneDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8551
func UA_TimeZoneDataType_new() []UA_TimeZoneDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[102]))[:]).([]UA_TimeZoneDataType)
}
// UA_TimeZoneDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8556
func UA_TimeZoneDataType_copy(src []UA_TimeZoneDataType, dst []UA_TimeZoneDataType) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_TimeZoneDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8562
func UA_TimeZoneDataType_deleteMembers(p []UA_TimeZoneDataType) {
}
// UA_TimeZoneDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8565
func UA_TimeZoneDataType_delete(p []UA_TimeZoneDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[102]))[:])
}
// UA_ActivateSessionRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8571
// ActivateSessionRequest
func UA_ActivateSessionRequest_init(p []UA_ActivateSessionRequest) {
	noarch.Memset(p, byte(0), 1488)
}
// UA_ActivateSessionRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8576
func UA_ActivateSessionRequest_new() []UA_ActivateSessionRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[103]))[:]).([]UA_ActivateSessionRequest)
}
// UA_ActivateSessionRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8581
func UA_ActivateSessionRequest_copy(src []UA_ActivateSessionRequest, dst []UA_ActivateSessionRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[103]))[:])
}
// UA_ActivateSessionRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8586
func UA_ActivateSessionRequest_deleteMembers(p []UA_ActivateSessionRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[103]))[:])
}
// UA_ActivateSessionRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8591
func UA_ActivateSessionRequest_delete(p []UA_ActivateSessionRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[103]))[:])
}
// UA_OpenSecureChannelResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8597
// OpenSecureChannelResponse
func UA_OpenSecureChannelResponse_init(p []UA_OpenSecureChannelResponse) {
	noarch.Memset(p, byte(0), 768)
}
// UA_OpenSecureChannelResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8602
func UA_OpenSecureChannelResponse_new() []UA_OpenSecureChannelResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[104]))[:]).([]UA_OpenSecureChannelResponse)
}
// UA_OpenSecureChannelResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8607
func UA_OpenSecureChannelResponse_copy(src []UA_OpenSecureChannelResponse, dst []UA_OpenSecureChannelResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[104]))[:])
}
// UA_OpenSecureChannelResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8612
func UA_OpenSecureChannelResponse_deleteMembers(p []UA_OpenSecureChannelResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[104]))[:])
}
// UA_OpenSecureChannelResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8617
func UA_OpenSecureChannelResponse_delete(p []UA_OpenSecureChannelResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[104]))[:])
}
// UA_ApplicationType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8623
// ApplicationType
func UA_ApplicationType_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_ApplicationType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8628
func UA_ApplicationType_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[105]))[:]).([]int)
}
// UA_ApplicationType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8633
func UA_ApplicationType_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_ApplicationType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8639
func UA_ApplicationType_deleteMembers(p []int) {
}
// UA_ApplicationType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8642
func UA_ApplicationType_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[105]))[:])
}
// UA_ServerState_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8648
// ServerState
func UA_ServerState_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_ServerState_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8653
func UA_ServerState_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[106]))[:]).([]int)
}
// UA_ServerState_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8658
func UA_ServerState_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_ServerState_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8664
func UA_ServerState_deleteMembers(p []int) {
}
// UA_ServerState_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8667
func UA_ServerState_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[106]))[:])
}
// UA_QueryNextResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8673
// QueryNextResponse
func UA_QueryNextResponse_init(p []UA_QueryNextResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_QueryNextResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8678
func UA_QueryNextResponse_new() []UA_QueryNextResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[107]))[:]).([]UA_QueryNextResponse)
}
// UA_QueryNextResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8683
func UA_QueryNextResponse_copy(src []UA_QueryNextResponse, dst []UA_QueryNextResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[107]))[:])
}
// UA_QueryNextResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8688
func UA_QueryNextResponse_deleteMembers(p []UA_QueryNextResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[107]))[:])
}
// UA_QueryNextResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8693
func UA_QueryNextResponse_delete(p []UA_QueryNextResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[107]))[:])
}
// UA_DiscoveryConfiguration_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8699
// DiscoveryConfiguration
func UA_DiscoveryConfiguration_init(p []UA_DiscoveryConfiguration) {
	noarch.Memset(p, byte(0), 8)
}
// UA_DiscoveryConfiguration_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8704
func UA_DiscoveryConfiguration_new() []UA_DiscoveryConfiguration {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[108]))[:]).([]UA_DiscoveryConfiguration)
}
// UA_DiscoveryConfiguration_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8709
func UA_DiscoveryConfiguration_copy(src []UA_DiscoveryConfiguration, dst []UA_DiscoveryConfiguration) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_DiscoveryConfiguration_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8715
func UA_DiscoveryConfiguration_deleteMembers(p []UA_DiscoveryConfiguration) {
}
// UA_DiscoveryConfiguration_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8718
func UA_DiscoveryConfiguration_delete(p []UA_DiscoveryConfiguration) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[108]))[:])
}
// UA_ActivateSessionResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8724
// ActivateSessionResponse
func UA_ActivateSessionResponse_init(p []UA_ActivateSessionResponse) {
	noarch.Memset(p, byte(0), 768)
}
// UA_ActivateSessionResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8729
func UA_ActivateSessionResponse_new() []UA_ActivateSessionResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[109]))[:]).([]UA_ActivateSessionResponse)
}
// UA_ActivateSessionResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8734
func UA_ActivateSessionResponse_copy(src []UA_ActivateSessionResponse, dst []UA_ActivateSessionResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[109]))[:])
}
// UA_ActivateSessionResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8739
func UA_ActivateSessionResponse_deleteMembers(p []UA_ActivateSessionResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[109]))[:])
}
// UA_ActivateSessionResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8744
func UA_ActivateSessionResponse_delete(p []UA_ActivateSessionResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[109]))[:])
}
// UA_EndpointUrlListDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8750
// EndpointUrlListDataType
func UA_EndpointUrlListDataType_init(p []UA_EndpointUrlListDataType) {
	noarch.Memset(p, byte(0), 16)
}
// UA_EndpointUrlListDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8755
func UA_EndpointUrlListDataType_new() []UA_EndpointUrlListDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[110]))[:]).([]UA_EndpointUrlListDataType)
}
// UA_EndpointUrlListDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8760
func UA_EndpointUrlListDataType_copy(src []UA_EndpointUrlListDataType, dst []UA_EndpointUrlListDataType) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[110]))[:])
}
// UA_EndpointUrlListDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8765
func UA_EndpointUrlListDataType_deleteMembers(p []UA_EndpointUrlListDataType) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[110]))[:])
}
// UA_EndpointUrlListDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8770
func UA_EndpointUrlListDataType_delete(p []UA_EndpointUrlListDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[110]))[:])
}
// UA_FilterOperator_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8776
// FilterOperator
func UA_FilterOperator_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_FilterOperator_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8781
func UA_FilterOperator_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[111]))[:]).([]int)
}
// UA_FilterOperator_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8786
func UA_FilterOperator_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_FilterOperator_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8792
func UA_FilterOperator_deleteMembers(p []int) {
}
// UA_FilterOperator_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8795
func UA_FilterOperator_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[111]))[:])
}
// UA_QueryNextRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8801
// QueryNextRequest
func UA_QueryNextRequest_init(p []UA_QueryNextRequest) {
	noarch.Memset(p, byte(0), 800)
}
// UA_QueryNextRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8806
func UA_QueryNextRequest_new() []UA_QueryNextRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[112]))[:]).([]UA_QueryNextRequest)
}
// UA_QueryNextRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8811
func UA_QueryNextRequest_copy(src []UA_QueryNextRequest, dst []UA_QueryNextRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[112]))[:])
}
// UA_QueryNextRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8816
func UA_QueryNextRequest_deleteMembers(p []UA_QueryNextRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[112]))[:])
}
// UA_QueryNextRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8821
func UA_QueryNextRequest_delete(p []UA_QueryNextRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[112]))[:])
}
// UA_WriteResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8827
// WriteResponse
func UA_WriteResponse_init(p []UA_WriteResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_WriteResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8832
func UA_WriteResponse_new() []UA_WriteResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[113]))[:]).([]UA_WriteResponse)
}
// UA_WriteResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8837
func UA_WriteResponse_copy(src []UA_WriteResponse, dst []UA_WriteResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[113]))[:])
}
// UA_WriteResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8842
func UA_WriteResponse_deleteMembers(p []UA_WriteResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[113]))[:])
}
// UA_WriteResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8847
func UA_WriteResponse_delete(p []UA_WriteResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[113]))[:])
}
// UA_BrowseNextRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8853
// BrowseNextRequest
func UA_BrowseNextRequest_init(p []UA_BrowseNextRequest) {
	noarch.Memset(p, byte(0), 800)
}
// UA_BrowseNextRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8858
func UA_BrowseNextRequest_new() []UA_BrowseNextRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[114]))[:]).([]UA_BrowseNextRequest)
}
// UA_BrowseNextRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8863
func UA_BrowseNextRequest_copy(src []UA_BrowseNextRequest, dst []UA_BrowseNextRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[114]))[:])
}
// UA_BrowseNextRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8868
func UA_BrowseNextRequest_deleteMembers(p []UA_BrowseNextRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[114]))[:])
}
// UA_BrowseNextRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8873
func UA_BrowseNextRequest_delete(p []UA_BrowseNextRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[114]))[:])
}
// UA_CreateSubscriptionRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8879
// CreateSubscriptionRequest
func UA_CreateSubscriptionRequest_init(p []UA_CreateSubscriptionRequest) {
	noarch.Memset(p, byte(0), 808)
}
// UA_CreateSubscriptionRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8884
func UA_CreateSubscriptionRequest_new() []UA_CreateSubscriptionRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[115]))[:]).([]UA_CreateSubscriptionRequest)
}
// UA_CreateSubscriptionRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8889
func UA_CreateSubscriptionRequest_copy(src []UA_CreateSubscriptionRequest, dst []UA_CreateSubscriptionRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[115]))[:])
}
// UA_CreateSubscriptionRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8894
func UA_CreateSubscriptionRequest_deleteMembers(p []UA_CreateSubscriptionRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[115]))[:])
}
// UA_CreateSubscriptionRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8899
func UA_CreateSubscriptionRequest_delete(p []UA_CreateSubscriptionRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[115]))[:])
}
// UA_VariableTypeAttributes_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8905
// VariableTypeAttributes
func UA_VariableTypeAttributes_init(p []UA_VariableTypeAttributes) {
	noarch.Memset(p, byte(0), 272)
}
// UA_VariableTypeAttributes_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8910
func UA_VariableTypeAttributes_new() []UA_VariableTypeAttributes {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:]).([]UA_VariableTypeAttributes)
}
// UA_VariableTypeAttributes_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8915
func UA_VariableTypeAttributes_copy(src []UA_VariableTypeAttributes, dst []UA_VariableTypeAttributes) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:])
}
// UA_VariableTypeAttributes_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8920
func UA_VariableTypeAttributes_deleteMembers(p []UA_VariableTypeAttributes) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:])
}
// UA_VariableTypeAttributes_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8925
func UA_VariableTypeAttributes_delete(p []UA_VariableTypeAttributes) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:])
}
// UA_BrowsePathResult_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8931
// BrowsePathResult
func UA_BrowsePathResult_init(p []UA_BrowsePathResult) {
	noarch.Memset(p, byte(0), 24)
}
// UA_BrowsePathResult_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8936
func UA_BrowsePathResult_new() []UA_BrowsePathResult {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[117]))[:]).([]UA_BrowsePathResult)
}
// UA_BrowsePathResult_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8941
func UA_BrowsePathResult_copy(src []UA_BrowsePathResult, dst []UA_BrowsePathResult) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[117]))[:])
}
// UA_BrowsePathResult_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8946
func UA_BrowsePathResult_deleteMembers(p []UA_BrowsePathResult) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[117]))[:])
}
// UA_BrowsePathResult_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8951
func UA_BrowsePathResult_delete(p []UA_BrowsePathResult) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[117]))[:])
}
// UA_ModifySubscriptionResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8957
// ModifySubscriptionResponse
func UA_ModifySubscriptionResponse_init(p []UA_ModifySubscriptionResponse) {
	noarch.Memset(p, byte(0), 736)
}
// UA_ModifySubscriptionResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8962
func UA_ModifySubscriptionResponse_new() []UA_ModifySubscriptionResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[118]))[:]).([]UA_ModifySubscriptionResponse)
}
// UA_ModifySubscriptionResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8967
func UA_ModifySubscriptionResponse_copy(src []UA_ModifySubscriptionResponse, dst []UA_ModifySubscriptionResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[118]))[:])
}
// UA_ModifySubscriptionResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8972
func UA_ModifySubscriptionResponse_deleteMembers(p []UA_ModifySubscriptionResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[118]))[:])
}
// UA_ModifySubscriptionResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8977
func UA_ModifySubscriptionResponse_delete(p []UA_ModifySubscriptionResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[118]))[:])
}
// UA_RedundantServerDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8983
// RedundantServerDataType
func UA_RedundantServerDataType_init(p []UA_RedundantServerDataType) {
	noarch.Memset(p, byte(0), 24)
}
// UA_RedundantServerDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8988
func UA_RedundantServerDataType_new() []UA_RedundantServerDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[119]))[:]).([]UA_RedundantServerDataType)
}
// UA_RedundantServerDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8993
func UA_RedundantServerDataType_copy(src []UA_RedundantServerDataType, dst []UA_RedundantServerDataType) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[119]))[:])
}
// UA_RedundantServerDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:8998
func UA_RedundantServerDataType_deleteMembers(p []UA_RedundantServerDataType) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[119]))[:])
}
// UA_RedundantServerDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9003
func UA_RedundantServerDataType_delete(p []UA_RedundantServerDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[119]))[:])
}
// UA_RegisterNodesResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9009
// RegisterNodesResponse
func UA_RegisterNodesResponse_init(p []UA_RegisterNodesResponse) {
	noarch.Memset(p, byte(0), 736)
}
// UA_RegisterNodesResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9014
func UA_RegisterNodesResponse_new() []UA_RegisterNodesResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[120]))[:]).([]UA_RegisterNodesResponse)
}
// UA_RegisterNodesResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9019
func UA_RegisterNodesResponse_copy(src []UA_RegisterNodesResponse, dst []UA_RegisterNodesResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[120]))[:])
}
// UA_RegisterNodesResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9024
func UA_RegisterNodesResponse_deleteMembers(p []UA_RegisterNodesResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[120]))[:])
}
// UA_RegisterNodesResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9029
func UA_RegisterNodesResponse_delete(p []UA_RegisterNodesResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[120]))[:])
}
// UA_CloseSessionRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9035
// CloseSessionRequest
func UA_CloseSessionRequest_init(p []UA_CloseSessionRequest) {
	noarch.Memset(p, byte(0), 784)
}
// UA_CloseSessionRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9040
func UA_CloseSessionRequest_new() []UA_CloseSessionRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[121]))[:]).([]UA_CloseSessionRequest)
}
// UA_CloseSessionRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9045
func UA_CloseSessionRequest_copy(src []UA_CloseSessionRequest, dst []UA_CloseSessionRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[121]))[:])
}
// UA_CloseSessionRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9050
func UA_CloseSessionRequest_deleteMembers(p []UA_CloseSessionRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[121]))[:])
}
// UA_CloseSessionRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9055
func UA_CloseSessionRequest_delete(p []UA_CloseSessionRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[121]))[:])
}
// UA_ModifyMonitoredItemsResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9061
// ModifyMonitoredItemsResponse
func UA_ModifyMonitoredItemsResponse_init(p []UA_ModifyMonitoredItemsResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_ModifyMonitoredItemsResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9066
func UA_ModifyMonitoredItemsResponse_new() []UA_ModifyMonitoredItemsResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[122]))[:]).([]UA_ModifyMonitoredItemsResponse)
}
// UA_ModifyMonitoredItemsResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9071
func UA_ModifyMonitoredItemsResponse_copy(src []UA_ModifyMonitoredItemsResponse, dst []UA_ModifyMonitoredItemsResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[122]))[:])
}
// UA_ModifyMonitoredItemsResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9076
func UA_ModifyMonitoredItemsResponse_deleteMembers(p []UA_ModifyMonitoredItemsResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[122]))[:])
}
// UA_ModifyMonitoredItemsResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9081
func UA_ModifyMonitoredItemsResponse_delete(p []UA_ModifyMonitoredItemsResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[122]))[:])
}
// UA_ModifySubscriptionRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9087
// ModifySubscriptionRequest
func UA_ModifySubscriptionRequest_init(p []UA_ModifySubscriptionRequest) {
	noarch.Memset(p, byte(0), 808)
}
// UA_ModifySubscriptionRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9092
func UA_ModifySubscriptionRequest_new() []UA_ModifySubscriptionRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[123]))[:]).([]UA_ModifySubscriptionRequest)
}
// UA_ModifySubscriptionRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9097
func UA_ModifySubscriptionRequest_copy(src []UA_ModifySubscriptionRequest, dst []UA_ModifySubscriptionRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[123]))[:])
}
// UA_ModifySubscriptionRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9102
func UA_ModifySubscriptionRequest_deleteMembers(p []UA_ModifySubscriptionRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[123]))[:])
}
// UA_ModifySubscriptionRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9107
func UA_ModifySubscriptionRequest_delete(p []UA_ModifySubscriptionRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[123]))[:])
}
// UA_ServerDiagnosticsSummaryDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9113
// ServerDiagnosticsSummaryDataType
func UA_ServerDiagnosticsSummaryDataType_init(p []UA_ServerDiagnosticsSummaryDataType) {
	noarch.Memset(p, byte(0), 48)
}
// UA_ServerDiagnosticsSummaryDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9118
func UA_ServerDiagnosticsSummaryDataType_new() []UA_ServerDiagnosticsSummaryDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[124]))[:]).([]UA_ServerDiagnosticsSummaryDataType)
}
// UA_ServerDiagnosticsSummaryDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9123
func UA_ServerDiagnosticsSummaryDataType_copy(src []UA_ServerDiagnosticsSummaryDataType, dst []UA_ServerDiagnosticsSummaryDataType) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_ServerDiagnosticsSummaryDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9129
func UA_ServerDiagnosticsSummaryDataType_deleteMembers(p []UA_ServerDiagnosticsSummaryDataType) {
}
// UA_ServerDiagnosticsSummaryDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9132
func UA_ServerDiagnosticsSummaryDataType_delete(p []UA_ServerDiagnosticsSummaryDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[124]))[:])
}
// UA_UserTokenPolicy_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9138
// UserTokenPolicy
func UA_UserTokenPolicy_init(p []UA_UserTokenPolicy) {
	noarch.Memset(p, byte(0), 72)
}
// UA_UserTokenPolicy_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9143
func UA_UserTokenPolicy_new() []UA_UserTokenPolicy {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[125]))[:]).([]UA_UserTokenPolicy)
}
// UA_UserTokenPolicy_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9148
func UA_UserTokenPolicy_copy(src []UA_UserTokenPolicy, dst []UA_UserTokenPolicy) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[125]))[:])
}
// UA_UserTokenPolicy_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9153
func UA_UserTokenPolicy_deleteMembers(p []UA_UserTokenPolicy) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[125]))[:])
}
// UA_UserTokenPolicy_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9158
func UA_UserTokenPolicy_delete(p []UA_UserTokenPolicy) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[125]))[:])
}
// UA_ReferenceTypeAttributes_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9164
// ReferenceTypeAttributes
func UA_ReferenceTypeAttributes_init(p []UA_ReferenceTypeAttributes) {
	noarch.Memset(p, byte(0), 120)
}
// UA_ReferenceTypeAttributes_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9169
func UA_ReferenceTypeAttributes_new() []UA_ReferenceTypeAttributes {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:]).([]UA_ReferenceTypeAttributes)
}
// UA_ReferenceTypeAttributes_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9174
func UA_ReferenceTypeAttributes_copy(src []UA_ReferenceTypeAttributes, dst []UA_ReferenceTypeAttributes) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:])
}
// UA_ReferenceTypeAttributes_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9179
func UA_ReferenceTypeAttributes_deleteMembers(p []UA_ReferenceTypeAttributes) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:])
}
// UA_ReferenceTypeAttributes_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9184
func UA_ReferenceTypeAttributes_delete(p []UA_ReferenceTypeAttributes) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:])
}
// UA_BrowsePath_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9190
// BrowsePath
func UA_BrowsePath_init(p []UA_BrowsePath) {
	noarch.Memset(p, byte(0), 136)
}
// UA_BrowsePath_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9195
func UA_BrowsePath_new() []UA_BrowsePath {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[127]))[:]).([]UA_BrowsePath)
}
// UA_BrowsePath_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9200
func UA_BrowsePath_copy(src []UA_BrowsePath, dst []UA_BrowsePath) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[127]))[:])
}
// UA_BrowsePath_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9205
func UA_BrowsePath_deleteMembers(p []UA_BrowsePath) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[127]))[:])
}
// UA_BrowsePath_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9210
func UA_BrowsePath_delete(p []UA_BrowsePath) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[127]))[:])
}
// UA_SetMonitoringModeRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9216
// SetMonitoringModeRequest
func UA_SetMonitoringModeRequest_init(p []UA_SetMonitoringModeRequest) {
	noarch.Memset(p, byte(0), 800)
}
// UA_SetMonitoringModeRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9221
func UA_SetMonitoringModeRequest_new() []UA_SetMonitoringModeRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[128]))[:]).([]UA_SetMonitoringModeRequest)
}
// UA_SetMonitoringModeRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9226
func UA_SetMonitoringModeRequest_copy(src []UA_SetMonitoringModeRequest, dst []UA_SetMonitoringModeRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[128]))[:])
}
// UA_SetMonitoringModeRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9231
func UA_SetMonitoringModeRequest_deleteMembers(p []UA_SetMonitoringModeRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[128]))[:])
}
// UA_SetMonitoringModeRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9236
func UA_SetMonitoringModeRequest_delete(p []UA_SetMonitoringModeRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[128]))[:])
}
// UA_UnregisterNodesResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9242
// UnregisterNodesResponse
func UA_UnregisterNodesResponse_init(p []UA_UnregisterNodesResponse) {
	noarch.Memset(p, byte(0), 720)
}
// UA_UnregisterNodesResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9247
func UA_UnregisterNodesResponse_new() []UA_UnregisterNodesResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[129]))[:]).([]UA_UnregisterNodesResponse)
}
// UA_UnregisterNodesResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9252
func UA_UnregisterNodesResponse_copy(src []UA_UnregisterNodesResponse, dst []UA_UnregisterNodesResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[129]))[:])
}
// UA_UnregisterNodesResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9257
func UA_UnregisterNodesResponse_deleteMembers(p []UA_UnregisterNodesResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[129]))[:])
}
// UA_UnregisterNodesResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9262
func UA_UnregisterNodesResponse_delete(p []UA_UnregisterNodesResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[129]))[:])
}
// UA_WriteRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9268
// WriteRequest
func UA_WriteRequest_init(p []UA_WriteRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_WriteRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9273
func UA_WriteRequest_new() []UA_WriteRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[130]))[:]).([]UA_WriteRequest)
}
// UA_WriteRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9278
func UA_WriteRequest_copy(src []UA_WriteRequest, dst []UA_WriteRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[130]))[:])
}
// UA_WriteRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9283
func UA_WriteRequest_deleteMembers(p []UA_WriteRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[130]))[:])
}
// UA_WriteRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9288
func UA_WriteRequest_delete(p []UA_WriteRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[130]))[:])
}
// UA_ObjectAttributes_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9294
// ObjectAttributes
func UA_ObjectAttributes_init(p []UA_ObjectAttributes) {
	noarch.Memset(p, byte(0), 80)
}
// UA_ObjectAttributes_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9299
func UA_ObjectAttributes_new() []UA_ObjectAttributes {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:]).([]UA_ObjectAttributes)
}
// UA_ObjectAttributes_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9304
func UA_ObjectAttributes_copy(src []UA_ObjectAttributes, dst []UA_ObjectAttributes) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:])
}
// UA_ObjectAttributes_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9309
func UA_ObjectAttributes_deleteMembers(p []UA_ObjectAttributes) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:])
}
// UA_ObjectAttributes_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9314
func UA_ObjectAttributes_delete(p []UA_ObjectAttributes) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:])
}
// UA_BrowseResultMask_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9320
// BrowseResultMask
func UA_BrowseResultMask_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_BrowseResultMask_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9325
func UA_BrowseResultMask_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[132]))[:]).([]int)
}
// UA_BrowseResultMask_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9330
func UA_BrowseResultMask_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_BrowseResultMask_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9336
func UA_BrowseResultMask_deleteMembers(p []int) {
}
// UA_BrowseResultMask_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9339
func UA_BrowseResultMask_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[132]))[:])
}
// UA_BrowseDescription_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9345
// BrowseDescription
func UA_BrowseDescription_init(p []UA_BrowseDescription) {
	noarch.Memset(p, byte(0), 256)
}
// UA_BrowseDescription_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9350
func UA_BrowseDescription_new() []UA_BrowseDescription {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[133]))[:]).([]UA_BrowseDescription)
}
// UA_BrowseDescription_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9355
func UA_BrowseDescription_copy(src []UA_BrowseDescription, dst []UA_BrowseDescription) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[133]))[:])
}
// UA_BrowseDescription_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9360
func UA_BrowseDescription_deleteMembers(p []UA_BrowseDescription) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[133]))[:])
}
// UA_BrowseDescription_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9365
func UA_BrowseDescription_delete(p []UA_BrowseDescription) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[133]))[:])
}
// UA_SetTriggeringRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9371
// SetTriggeringRequest
func UA_SetTriggeringRequest_init(p []UA_SetTriggeringRequest) {
	noarch.Memset(p, byte(0), 816)
}
// UA_SetTriggeringRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9376
func UA_SetTriggeringRequest_new() []UA_SetTriggeringRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[134]))[:]).([]UA_SetTriggeringRequest)
}
// UA_SetTriggeringRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9381
func UA_SetTriggeringRequest_copy(src []UA_SetTriggeringRequest, dst []UA_SetTriggeringRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[134]))[:])
}
// UA_SetTriggeringRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9386
func UA_SetTriggeringRequest_deleteMembers(p []UA_SetTriggeringRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[134]))[:])
}
// UA_SetTriggeringRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9391
func UA_SetTriggeringRequest_delete(p []UA_SetTriggeringRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[134]))[:])
}
// UA_SessionSecurityDiagnosticsDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9397
// SessionSecurityDiagnosticsDataType
func UA_SessionSecurityDiagnosticsDataType_init(p []UA_SessionSecurityDiagnosticsDataType) {
	noarch.Memset(p, byte(0), 240)
}
// UA_SessionSecurityDiagnosticsDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9402
func UA_SessionSecurityDiagnosticsDataType_new() []UA_SessionSecurityDiagnosticsDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[135]))[:]).([]UA_SessionSecurityDiagnosticsDataType)
}
// UA_SessionSecurityDiagnosticsDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9407
func UA_SessionSecurityDiagnosticsDataType_copy(src []UA_SessionSecurityDiagnosticsDataType, dst []UA_SessionSecurityDiagnosticsDataType) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[135]))[:])
}
// UA_SessionSecurityDiagnosticsDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9412
func UA_SessionSecurityDiagnosticsDataType_deleteMembers(p []UA_SessionSecurityDiagnosticsDataType) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[135]))[:])
}
// UA_SessionSecurityDiagnosticsDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9417
func UA_SessionSecurityDiagnosticsDataType_delete(p []UA_SessionSecurityDiagnosticsDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[135]))[:])
}
// UA_RepublishRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9423
// RepublishRequest
func UA_RepublishRequest_init(p []UA_RepublishRequest) {
	noarch.Memset(p, byte(0), 784)
}
// UA_RepublishRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9428
func UA_RepublishRequest_new() []UA_RepublishRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[136]))[:]).([]UA_RepublishRequest)
}
// UA_RepublishRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9433
func UA_RepublishRequest_copy(src []UA_RepublishRequest, dst []UA_RepublishRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[136]))[:])
}
// UA_RepublishRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9438
func UA_RepublishRequest_deleteMembers(p []UA_RepublishRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[136]))[:])
}
// UA_RepublishRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9443
func UA_RepublishRequest_delete(p []UA_RepublishRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[136]))[:])
}
// UA_GetEndpointsRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9449
// GetEndpointsRequest
func UA_GetEndpointsRequest_init(p []UA_GetEndpointsRequest) {
	noarch.Memset(p, byte(0), 824)
}
// UA_GetEndpointsRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9454
func UA_GetEndpointsRequest_new() []UA_GetEndpointsRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[137]))[:]).([]UA_GetEndpointsRequest)
}
// UA_GetEndpointsRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9459
func UA_GetEndpointsRequest_copy(src []UA_GetEndpointsRequest, dst []UA_GetEndpointsRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[137]))[:])
}
// UA_GetEndpointsRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9464
func UA_GetEndpointsRequest_deleteMembers(p []UA_GetEndpointsRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[137]))[:])
}
// UA_GetEndpointsRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9469
func UA_GetEndpointsRequest_delete(p []UA_GetEndpointsRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[137]))[:])
}
// UA_PublishRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9475
// PublishRequest
func UA_PublishRequest_init(p []UA_PublishRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_PublishRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9480
func UA_PublishRequest_new() []UA_PublishRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[138]))[:]).([]UA_PublishRequest)
}
// UA_PublishRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9485
func UA_PublishRequest_copy(src []UA_PublishRequest, dst []UA_PublishRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[138]))[:])
}
// UA_PublishRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9490
func UA_PublishRequest_deleteMembers(p []UA_PublishRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[138]))[:])
}
// UA_PublishRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9495
func UA_PublishRequest_delete(p []UA_PublishRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[138]))[:])
}
// UA_DeleteSubscriptionsResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9501
// DeleteSubscriptionsResponse
func UA_DeleteSubscriptionsResponse_init(p []UA_DeleteSubscriptionsResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_DeleteSubscriptionsResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9506
func UA_DeleteSubscriptionsResponse_new() []UA_DeleteSubscriptionsResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[139]))[:]).([]UA_DeleteSubscriptionsResponse)
}
// UA_DeleteSubscriptionsResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9511
func UA_DeleteSubscriptionsResponse_copy(src []UA_DeleteSubscriptionsResponse, dst []UA_DeleteSubscriptionsResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[139]))[:])
}
// UA_DeleteSubscriptionsResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9516
func UA_DeleteSubscriptionsResponse_deleteMembers(p []UA_DeleteSubscriptionsResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[139]))[:])
}
// UA_DeleteSubscriptionsResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9521
func UA_DeleteSubscriptionsResponse_delete(p []UA_DeleteSubscriptionsResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[139]))[:])
}
// UA_AddNodesResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9527
// AddNodesResponse
func UA_AddNodesResponse_init(p []UA_AddNodesResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_AddNodesResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9532
func UA_AddNodesResponse_new() []UA_AddNodesResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[140]))[:]).([]UA_AddNodesResponse)
}
// UA_AddNodesResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9537
func UA_AddNodesResponse_copy(src []UA_AddNodesResponse, dst []UA_AddNodesResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[140]))[:])
}
// UA_AddNodesResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9542
func UA_AddNodesResponse_deleteMembers(p []UA_AddNodesResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[140]))[:])
}
// UA_AddNodesResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9547
func UA_AddNodesResponse_delete(p []UA_AddNodesResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[140]))[:])
}
// UA_DataChangeNotification_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9553
// DataChangeNotification
func UA_DataChangeNotification_init(p []UA_DataChangeNotification) {
	noarch.Memset(p, byte(0), 32)
}
// UA_DataChangeNotification_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9558
func UA_DataChangeNotification_new() []UA_DataChangeNotification {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[141]))[:]).([]UA_DataChangeNotification)
}
// UA_DataChangeNotification_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9563
func UA_DataChangeNotification_copy(src []UA_DataChangeNotification, dst []UA_DataChangeNotification) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[141]))[:])
}
// UA_DataChangeNotification_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9568
func UA_DataChangeNotification_deleteMembers(p []UA_DataChangeNotification) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[141]))[:])
}
// UA_DataChangeNotification_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9573
func UA_DataChangeNotification_delete(p []UA_DataChangeNotification) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[141]))[:])
}
// UA_CloseSecureChannelResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9579
// CloseSecureChannelResponse
func UA_CloseSecureChannelResponse_init(p []UA_CloseSecureChannelResponse) {
	noarch.Memset(p, byte(0), 720)
}
// UA_CloseSecureChannelResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9584
func UA_CloseSecureChannelResponse_new() []UA_CloseSecureChannelResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[142]))[:]).([]UA_CloseSecureChannelResponse)
}
// UA_CloseSecureChannelResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9589
func UA_CloseSecureChannelResponse_copy(src []UA_CloseSecureChannelResponse, dst []UA_CloseSecureChannelResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[142]))[:])
}
// UA_CloseSecureChannelResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9594
func UA_CloseSecureChannelResponse_deleteMembers(p []UA_CloseSecureChannelResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[142]))[:])
}
// UA_CloseSecureChannelResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9599
func UA_CloseSecureChannelResponse_delete(p []UA_CloseSecureChannelResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[142]))[:])
}
// UA_ModifyMonitoredItemsRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9605
// ModifyMonitoredItemsRequest
func UA_ModifyMonitoredItemsRequest_init(p []UA_ModifyMonitoredItemsRequest) {
	noarch.Memset(p, byte(0), 800)
}
// UA_ModifyMonitoredItemsRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9610
func UA_ModifyMonitoredItemsRequest_new() []UA_ModifyMonitoredItemsRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[143]))[:]).([]UA_ModifyMonitoredItemsRequest)
}
// UA_ModifyMonitoredItemsRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9615
func UA_ModifyMonitoredItemsRequest_copy(src []UA_ModifyMonitoredItemsRequest, dst []UA_ModifyMonitoredItemsRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[143]))[:])
}
// UA_ModifyMonitoredItemsRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9620
func UA_ModifyMonitoredItemsRequest_deleteMembers(p []UA_ModifyMonitoredItemsRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[143]))[:])
}
// UA_ModifyMonitoredItemsRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9625
func UA_ModifyMonitoredItemsRequest_delete(p []UA_ModifyMonitoredItemsRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[143]))[:])
}
// UA_SetMonitoringModeResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9631
// SetMonitoringModeResponse
func UA_SetMonitoringModeResponse_init(p []UA_SetMonitoringModeResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_SetMonitoringModeResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9636
func UA_SetMonitoringModeResponse_new() []UA_SetMonitoringModeResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[144]))[:]).([]UA_SetMonitoringModeResponse)
}
// UA_SetMonitoringModeResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9641
func UA_SetMonitoringModeResponse_copy(src []UA_SetMonitoringModeResponse, dst []UA_SetMonitoringModeResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[144]))[:])
}
// UA_SetMonitoringModeResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9646
func UA_SetMonitoringModeResponse_deleteMembers(p []UA_SetMonitoringModeResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[144]))[:])
}
// UA_SetMonitoringModeResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9651
func UA_SetMonitoringModeResponse_delete(p []UA_SetMonitoringModeResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[144]))[:])
}
// UA_FindServersRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9657
// FindServersRequest
func UA_FindServersRequest_init(p []UA_FindServersRequest) {
	noarch.Memset(p, byte(0), 824)
}
// UA_FindServersRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9662
func UA_FindServersRequest_new() []UA_FindServersRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[145]))[:]).([]UA_FindServersRequest)
}
// UA_FindServersRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9667
func UA_FindServersRequest_copy(src []UA_FindServersRequest, dst []UA_FindServersRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[145]))[:])
}
// UA_FindServersRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9672
func UA_FindServersRequest_deleteMembers(p []UA_FindServersRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[145]))[:])
}
// UA_FindServersRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9677
func UA_FindServersRequest_delete(p []UA_FindServersRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[145]))[:])
}
// UA_ReferenceDescription_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9683
// ReferenceDescription
func UA_ReferenceDescription_init(p []UA_ReferenceDescription) {
	noarch.Memset(p, byte(0), 472)
}
// UA_ReferenceDescription_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9688
func UA_ReferenceDescription_new() []UA_ReferenceDescription {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[146]))[:]).([]UA_ReferenceDescription)
}
// UA_ReferenceDescription_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9693
func UA_ReferenceDescription_copy(src []UA_ReferenceDescription, dst []UA_ReferenceDescription) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[146]))[:])
}
// UA_ReferenceDescription_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9698
func UA_ReferenceDescription_deleteMembers(p []UA_ReferenceDescription) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[146]))[:])
}
// UA_ReferenceDescription_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9703
func UA_ReferenceDescription_delete(p []UA_ReferenceDescription) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[146]))[:])
}
// UA_SetPublishingModeResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9709
// SetPublishingModeResponse
func UA_SetPublishingModeResponse_init(p []UA_SetPublishingModeResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_SetPublishingModeResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9714
func UA_SetPublishingModeResponse_new() []UA_SetPublishingModeResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[147]))[:]).([]UA_SetPublishingModeResponse)
}
// UA_SetPublishingModeResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9719
func UA_SetPublishingModeResponse_copy(src []UA_SetPublishingModeResponse, dst []UA_SetPublishingModeResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[147]))[:])
}
// UA_SetPublishingModeResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9724
func UA_SetPublishingModeResponse_deleteMembers(p []UA_SetPublishingModeResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[147]))[:])
}
// UA_SetPublishingModeResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9729
func UA_SetPublishingModeResponse_delete(p []UA_SetPublishingModeResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[147]))[:])
}
// UA_ContentFilterResult_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9735
// ContentFilterResult
func UA_ContentFilterResult_init(p []UA_ContentFilterResult) {
	noarch.Memset(p, byte(0), 32)
}
// UA_ContentFilterResult_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9740
func UA_ContentFilterResult_new() []UA_ContentFilterResult {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[148]))[:]).([]UA_ContentFilterResult)
}
// UA_ContentFilterResult_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9745
func UA_ContentFilterResult_copy(src []UA_ContentFilterResult, dst []UA_ContentFilterResult) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[148]))[:])
}
// UA_ContentFilterResult_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9750
func UA_ContentFilterResult_deleteMembers(p []UA_ContentFilterResult) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[148]))[:])
}
// UA_ContentFilterResult_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9755
func UA_ContentFilterResult_delete(p []UA_ContentFilterResult) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[148]))[:])
}
// UA_RegisterServerResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9761
// RegisterServerResponse
func UA_RegisterServerResponse_init(p []UA_RegisterServerResponse) {
	noarch.Memset(p, byte(0), 720)
}
// UA_RegisterServerResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9766
func UA_RegisterServerResponse_new() []UA_RegisterServerResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[149]))[:]).([]UA_RegisterServerResponse)
}
// UA_RegisterServerResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9771
func UA_RegisterServerResponse_copy(src []UA_RegisterServerResponse, dst []UA_RegisterServerResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[149]))[:])
}
// UA_RegisterServerResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9776
func UA_RegisterServerResponse_deleteMembers(p []UA_RegisterServerResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[149]))[:])
}
// UA_RegisterServerResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9781
func UA_RegisterServerResponse_delete(p []UA_RegisterServerResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[149]))[:])
}
// UA_AddReferencesItem_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9787
// AddReferencesItem
func UA_AddReferencesItem_init(p []UA_AddReferencesItem) {
	noarch.Memset(p, byte(0), 408)
}
// UA_AddReferencesItem_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9792
func UA_AddReferencesItem_new() []UA_AddReferencesItem {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[150]))[:]).([]UA_AddReferencesItem)
}
// UA_AddReferencesItem_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9797
func UA_AddReferencesItem_copy(src []UA_AddReferencesItem, dst []UA_AddReferencesItem) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[150]))[:])
}
// UA_AddReferencesItem_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9802
func UA_AddReferencesItem_deleteMembers(p []UA_AddReferencesItem) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[150]))[:])
}
// UA_AddReferencesItem_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9807
func UA_AddReferencesItem_delete(p []UA_AddReferencesItem) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[150]))[:])
}
// UA_QueryDataDescription_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9813
// QueryDataDescription
func UA_QueryDataDescription_init(p []UA_QueryDataDescription) {
	noarch.Memset(p, byte(0), 40)
}
// UA_QueryDataDescription_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9818
func UA_QueryDataDescription_new() []UA_QueryDataDescription {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[151]))[:]).([]UA_QueryDataDescription)
}
// UA_QueryDataDescription_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9823
func UA_QueryDataDescription_copy(src []UA_QueryDataDescription, dst []UA_QueryDataDescription) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[151]))[:])
}
// UA_QueryDataDescription_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9828
func UA_QueryDataDescription_deleteMembers(p []UA_QueryDataDescription) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[151]))[:])
}
// UA_QueryDataDescription_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9833
func UA_QueryDataDescription_delete(p []UA_QueryDataDescription) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[151]))[:])
}
// UA_CreateSubscriptionResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9839
// CreateSubscriptionResponse
func UA_CreateSubscriptionResponse_init(p []UA_CreateSubscriptionResponse) {
	noarch.Memset(p, byte(0), 744)
}
// UA_CreateSubscriptionResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9844
func UA_CreateSubscriptionResponse_new() []UA_CreateSubscriptionResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[152]))[:]).([]UA_CreateSubscriptionResponse)
}
// UA_CreateSubscriptionResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9849
func UA_CreateSubscriptionResponse_copy(src []UA_CreateSubscriptionResponse, dst []UA_CreateSubscriptionResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[152]))[:])
}
// UA_CreateSubscriptionResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9854
func UA_CreateSubscriptionResponse_deleteMembers(p []UA_CreateSubscriptionResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[152]))[:])
}
// UA_CreateSubscriptionResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9859
func UA_CreateSubscriptionResponse_delete(p []UA_CreateSubscriptionResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[152]))[:])
}
// UA_NetworkGroupDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9865
// NetworkGroupDataType
func UA_NetworkGroupDataType_init(p []UA_NetworkGroupDataType) {
	noarch.Memset(p, byte(0), 32)
}
// UA_NetworkGroupDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9870
func UA_NetworkGroupDataType_new() []UA_NetworkGroupDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[153]))[:]).([]UA_NetworkGroupDataType)
}
// UA_NetworkGroupDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9875
func UA_NetworkGroupDataType_copy(src []UA_NetworkGroupDataType, dst []UA_NetworkGroupDataType) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[153]))[:])
}
// UA_NetworkGroupDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9880
func UA_NetworkGroupDataType_deleteMembers(p []UA_NetworkGroupDataType) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[153]))[:])
}
// UA_NetworkGroupDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9885
func UA_NetworkGroupDataType_delete(p []UA_NetworkGroupDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[153]))[:])
}
// UA_DeleteReferencesResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9891
// DeleteReferencesResponse
func UA_DeleteReferencesResponse_init(p []UA_DeleteReferencesResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_DeleteReferencesResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9896
func UA_DeleteReferencesResponse_new() []UA_DeleteReferencesResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[154]))[:]).([]UA_DeleteReferencesResponse)
}
// UA_DeleteReferencesResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9901
func UA_DeleteReferencesResponse_copy(src []UA_DeleteReferencesResponse, dst []UA_DeleteReferencesResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[154]))[:])
}
// UA_DeleteReferencesResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9906
func UA_DeleteReferencesResponse_deleteMembers(p []UA_DeleteReferencesResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[154]))[:])
}
// UA_DeleteReferencesResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9911
func UA_DeleteReferencesResponse_delete(p []UA_DeleteReferencesResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[154]))[:])
}
// UA_CreateMonitoredItemsResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9917
// CreateMonitoredItemsResponse
func UA_CreateMonitoredItemsResponse_init(p []UA_CreateMonitoredItemsResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_CreateMonitoredItemsResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9922
func UA_CreateMonitoredItemsResponse_new() []UA_CreateMonitoredItemsResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[155]))[:]).([]UA_CreateMonitoredItemsResponse)
}
// UA_CreateMonitoredItemsResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9927
func UA_CreateMonitoredItemsResponse_copy(src []UA_CreateMonitoredItemsResponse, dst []UA_CreateMonitoredItemsResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[155]))[:])
}
// UA_CreateMonitoredItemsResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9932
func UA_CreateMonitoredItemsResponse_deleteMembers(p []UA_CreateMonitoredItemsResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[155]))[:])
}
// UA_CreateMonitoredItemsResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9937
func UA_CreateMonitoredItemsResponse_delete(p []UA_CreateMonitoredItemsResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[155]))[:])
}
// UA_CallResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9943
// CallResponse
func UA_CallResponse_init(p []UA_CallResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_CallResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9948
func UA_CallResponse_new() []UA_CallResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[156]))[:]).([]UA_CallResponse)
}
// UA_CallResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9953
func UA_CallResponse_copy(src []UA_CallResponse, dst []UA_CallResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[156]))[:])
}
// UA_CallResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9958
func UA_CallResponse_deleteMembers(p []UA_CallResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[156]))[:])
}
// UA_CallResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9963
func UA_CallResponse_delete(p []UA_CallResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[156]))[:])
}
// UA_DeleteNodesResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9969
// DeleteNodesResponse
func UA_DeleteNodesResponse_init(p []UA_DeleteNodesResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_DeleteNodesResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9974
func UA_DeleteNodesResponse_new() []UA_DeleteNodesResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[157]))[:]).([]UA_DeleteNodesResponse)
}
// UA_DeleteNodesResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9979
func UA_DeleteNodesResponse_copy(src []UA_DeleteNodesResponse, dst []UA_DeleteNodesResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[157]))[:])
}
// UA_DeleteNodesResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9984
func UA_DeleteNodesResponse_deleteMembers(p []UA_DeleteNodesResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[157]))[:])
}
// UA_DeleteNodesResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9989
func UA_DeleteNodesResponse_delete(p []UA_DeleteNodesResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[157]))[:])
}
// UA_RepublishResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:9995
// RepublishResponse
func UA_RepublishResponse_init(p []UA_RepublishResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_RepublishResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10000
func UA_RepublishResponse_new() []UA_RepublishResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[158]))[:]).([]UA_RepublishResponse)
}
// UA_RepublishResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10005
func UA_RepublishResponse_copy(src []UA_RepublishResponse, dst []UA_RepublishResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[158]))[:])
}
// UA_RepublishResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10010
func UA_RepublishResponse_deleteMembers(p []UA_RepublishResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[158]))[:])
}
// UA_RepublishResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10015
func UA_RepublishResponse_delete(p []UA_RepublishResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[158]))[:])
}
// UA_MonitoredItemCreateRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10021
// MonitoredItemCreateRequest
func UA_MonitoredItemCreateRequest_init(p []UA_MonitoredItemCreateRequest) {
	noarch.Memset(p, byte(0), 816)
}
// UA_MonitoredItemCreateRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10026
func UA_MonitoredItemCreateRequest_new() []UA_MonitoredItemCreateRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[159]))[:]).([]UA_MonitoredItemCreateRequest)
}
// UA_MonitoredItemCreateRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10031
func UA_MonitoredItemCreateRequest_copy(src []UA_MonitoredItemCreateRequest, dst []UA_MonitoredItemCreateRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[159]))[:])
}
// UA_MonitoredItemCreateRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10036
func UA_MonitoredItemCreateRequest_deleteMembers(p []UA_MonitoredItemCreateRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[159]))[:])
}
// UA_MonitoredItemCreateRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10041
func UA_MonitoredItemCreateRequest_delete(p []UA_MonitoredItemCreateRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[159]))[:])
}
// UA_DeleteReferencesRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10047
// DeleteReferencesRequest
func UA_DeleteReferencesRequest_init(p []UA_DeleteReferencesRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_DeleteReferencesRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10052
func UA_DeleteReferencesRequest_new() []UA_DeleteReferencesRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[160]))[:]).([]UA_DeleteReferencesRequest)
}
// UA_DeleteReferencesRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10057
func UA_DeleteReferencesRequest_copy(src []UA_DeleteReferencesRequest, dst []UA_DeleteReferencesRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[160]))[:])
}
// UA_DeleteReferencesRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10062
func UA_DeleteReferencesRequest_deleteMembers(p []UA_DeleteReferencesRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[160]))[:])
}
// UA_DeleteReferencesRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10067
func UA_DeleteReferencesRequest_delete(p []UA_DeleteReferencesRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[160]))[:])
}
// UA_ReadResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10073
// ReadResponse
func UA_ReadResponse_init(p []UA_ReadResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_ReadResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10078
func UA_ReadResponse_new() []UA_ReadResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[161]))[:]).([]UA_ReadResponse)
}
// UA_ReadResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10083
func UA_ReadResponse_copy(src []UA_ReadResponse, dst []UA_ReadResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[161]))[:])
}
// UA_ReadResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10088
func UA_ReadResponse_deleteMembers(p []UA_ReadResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[161]))[:])
}
// UA_ReadResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10093
func UA_ReadResponse_delete(p []UA_ReadResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[161]))[:])
}
// UA_AddReferencesRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10099
// AddReferencesRequest
func UA_AddReferencesRequest_init(p []UA_AddReferencesRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_AddReferencesRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10104
func UA_AddReferencesRequest_new() []UA_AddReferencesRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[162]))[:]).([]UA_AddReferencesRequest)
}
// UA_AddReferencesRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10109
func UA_AddReferencesRequest_copy(src []UA_AddReferencesRequest, dst []UA_AddReferencesRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[162]))[:])
}
// UA_AddReferencesRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10114
func UA_AddReferencesRequest_deleteMembers(p []UA_AddReferencesRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[162]))[:])
}
// UA_AddReferencesRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10119
func UA_AddReferencesRequest_delete(p []UA_AddReferencesRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[162]))[:])
}
// UA_ReadRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10125
// ReadRequest
func UA_ReadRequest_init(p []UA_ReadRequest) {
	noarch.Memset(p, byte(0), 808)
}
// UA_ReadRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10130
func UA_ReadRequest_new() []UA_ReadRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[163]))[:]).([]UA_ReadRequest)
}
// UA_ReadRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10135
func UA_ReadRequest_copy(src []UA_ReadRequest, dst []UA_ReadRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[163]))[:])
}
// UA_ReadRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10140
func UA_ReadRequest_deleteMembers(p []UA_ReadRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[163]))[:])
}
// UA_ReadRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10145
func UA_ReadRequest_delete(p []UA_ReadRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[163]))[:])
}
// UA_OpenSecureChannelRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10151
// OpenSecureChannelRequest
func UA_OpenSecureChannelRequest_init(p []UA_OpenSecureChannelRequest) {
	noarch.Memset(p, byte(0), 808)
}
// UA_OpenSecureChannelRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10156
func UA_OpenSecureChannelRequest_new() []UA_OpenSecureChannelRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[164]))[:]).([]UA_OpenSecureChannelRequest)
}
// UA_OpenSecureChannelRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10161
func UA_OpenSecureChannelRequest_copy(src []UA_OpenSecureChannelRequest, dst []UA_OpenSecureChannelRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[164]))[:])
}
// UA_OpenSecureChannelRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10166
func UA_OpenSecureChannelRequest_deleteMembers(p []UA_OpenSecureChannelRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[164]))[:])
}
// UA_OpenSecureChannelRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10171
func UA_OpenSecureChannelRequest_delete(p []UA_OpenSecureChannelRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[164]))[:])
}
// UA_RegisterServer2Response_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10177
// RegisterServer2Response
func UA_RegisterServer2Response_init(p []UA_RegisterServer2Response) {
	noarch.Memset(p, byte(0), 752)
}
// UA_RegisterServer2Response_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10182
func UA_RegisterServer2Response_new() []UA_RegisterServer2Response {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[165]))[:]).([]UA_RegisterServer2Response)
}
// UA_RegisterServer2Response_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10187
func UA_RegisterServer2Response_copy(src []UA_RegisterServer2Response, dst []UA_RegisterServer2Response) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[165]))[:])
}
// UA_RegisterServer2Response_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10192
func UA_RegisterServer2Response_deleteMembers(p []UA_RegisterServer2Response) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[165]))[:])
}
// UA_RegisterServer2Response_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10197
func UA_RegisterServer2Response_delete(p []UA_RegisterServer2Response) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[165]))[:])
}
// UA_AddNodesItem_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10203
// AddNodesItem
func UA_AddNodesItem_init(p []UA_AddNodesItem) {
	noarch.Memset(p, byte(0), 1200)
}
// UA_AddNodesItem_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10208
func UA_AddNodesItem_new() []UA_AddNodesItem {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[166]))[:]).([]UA_AddNodesItem)
}
// UA_AddNodesItem_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10213
func UA_AddNodesItem_copy(src []UA_AddNodesItem, dst []UA_AddNodesItem) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[166]))[:])
}
// UA_AddNodesItem_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10218
func UA_AddNodesItem_deleteMembers(p []UA_AddNodesItem) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[166]))[:])
}
// UA_AddNodesItem_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10223
func UA_AddNodesItem_delete(p []UA_AddNodesItem) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[166]))[:])
}
// UA_NodeTypeDescription_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10229
// NodeTypeDescription
func UA_NodeTypeDescription_init(p []UA_NodeTypeDescription) {
	noarch.Memset(p, byte(0), 168)
}
// UA_NodeTypeDescription_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10234
func UA_NodeTypeDescription_new() []UA_NodeTypeDescription {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[167]))[:]).([]UA_NodeTypeDescription)
}
// UA_NodeTypeDescription_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10239
func UA_NodeTypeDescription_copy(src []UA_NodeTypeDescription, dst []UA_NodeTypeDescription) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[167]))[:])
}
// UA_NodeTypeDescription_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10244
func UA_NodeTypeDescription_deleteMembers(p []UA_NodeTypeDescription) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[167]))[:])
}
// UA_NodeTypeDescription_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10249
func UA_NodeTypeDescription_delete(p []UA_NodeTypeDescription) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[167]))[:])
}
// UA_ServerStatusDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10255
// ServerStatusDataType
func UA_ServerStatusDataType_init(p []UA_ServerStatusDataType) {
	noarch.Memset(p, byte(0), 144)
}
// UA_ServerStatusDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10260
func UA_ServerStatusDataType_new() []UA_ServerStatusDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[168]))[:]).([]UA_ServerStatusDataType)
}
// UA_ServerStatusDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10265
func UA_ServerStatusDataType_copy(src []UA_ServerStatusDataType, dst []UA_ServerStatusDataType) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[168]))[:])
}
// UA_ServerStatusDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10270
func UA_ServerStatusDataType_deleteMembers(p []UA_ServerStatusDataType) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[168]))[:])
}
// UA_ServerStatusDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10275
func UA_ServerStatusDataType_delete(p []UA_ServerStatusDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[168]))[:])
}
// UA_AttributeOperand_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10281
// AttributeOperand
func UA_AttributeOperand_init(p []UA_AttributeOperand) {
	noarch.Memset(p, byte(0), 176)
}
// UA_AttributeOperand_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10286
func UA_AttributeOperand_new() []UA_AttributeOperand {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[169]))[:]).([]UA_AttributeOperand)
}
// UA_AttributeOperand_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10291
func UA_AttributeOperand_copy(src []UA_AttributeOperand, dst []UA_AttributeOperand) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[169]))[:])
}
// UA_AttributeOperand_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10296
func UA_AttributeOperand_deleteMembers(p []UA_AttributeOperand) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[169]))[:])
}
// UA_AttributeOperand_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10301
func UA_AttributeOperand_delete(p []UA_AttributeOperand) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[169]))[:])
}
// UA_AddReferencesResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10307
// AddReferencesResponse
func UA_AddReferencesResponse_init(p []UA_AddReferencesResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_AddReferencesResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10312
func UA_AddReferencesResponse_new() []UA_AddReferencesResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[170]))[:]).([]UA_AddReferencesResponse)
}
// UA_AddReferencesResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10317
func UA_AddReferencesResponse_copy(src []UA_AddReferencesResponse, dst []UA_AddReferencesResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[170]))[:])
}
// UA_AddReferencesResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10322
func UA_AddReferencesResponse_deleteMembers(p []UA_AddReferencesResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[170]))[:])
}
// UA_AddReferencesResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10327
func UA_AddReferencesResponse_delete(p []UA_AddReferencesResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[170]))[:])
}
// UA_EventFilterResult_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10333
// EventFilterResult
func UA_EventFilterResult_init(p []UA_EventFilterResult) {
	noarch.Memset(p, byte(0), 64)
}
// UA_EventFilterResult_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10338
func UA_EventFilterResult_new() []UA_EventFilterResult {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[171]))[:]).([]UA_EventFilterResult)
}
// UA_EventFilterResult_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10343
func UA_EventFilterResult_copy(src []UA_EventFilterResult, dst []UA_EventFilterResult) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[171]))[:])
}
// UA_EventFilterResult_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10348
func UA_EventFilterResult_deleteMembers(p []UA_EventFilterResult) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[171]))[:])
}
// UA_EventFilterResult_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10353
func UA_EventFilterResult_delete(p []UA_EventFilterResult) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[171]))[:])
}
// UA_TranslateBrowsePathsToNodeIdsResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10359
// TranslateBrowsePathsToNodeIdsResponse
func UA_TranslateBrowsePathsToNodeIdsResponse_init(p []UA_TranslateBrowsePathsToNodeIdsResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_TranslateBrowsePathsToNodeIdsResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10364
func UA_TranslateBrowsePathsToNodeIdsResponse_new() []UA_TranslateBrowsePathsToNodeIdsResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[172]))[:]).([]UA_TranslateBrowsePathsToNodeIdsResponse)
}
// UA_TranslateBrowsePathsToNodeIdsResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10369
func UA_TranslateBrowsePathsToNodeIdsResponse_copy(src []UA_TranslateBrowsePathsToNodeIdsResponse, dst []UA_TranslateBrowsePathsToNodeIdsResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[172]))[:])
}
// UA_TranslateBrowsePathsToNodeIdsResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10374
func UA_TranslateBrowsePathsToNodeIdsResponse_deleteMembers(p []UA_TranslateBrowsePathsToNodeIdsResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[172]))[:])
}
// UA_TranslateBrowsePathsToNodeIdsResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10379
func UA_TranslateBrowsePathsToNodeIdsResponse_delete(p []UA_TranslateBrowsePathsToNodeIdsResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[172]))[:])
}
// UA_DataChangeFilter_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10385
// DataChangeFilter
func UA_DataChangeFilter_init(p []UA_DataChangeFilter) {
	noarch.Memset(p, byte(0), 16)
}
// UA_DataChangeFilter_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10390
func UA_DataChangeFilter_new() []UA_DataChangeFilter {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[173]))[:]).([]UA_DataChangeFilter)
}
// UA_DataChangeFilter_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10395
func UA_DataChangeFilter_copy(src []UA_DataChangeFilter, dst []UA_DataChangeFilter) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_DataChangeFilter_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10401
func UA_DataChangeFilter_deleteMembers(p []UA_DataChangeFilter) {
}
// UA_DataChangeFilter_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10404
func UA_DataChangeFilter_delete(p []UA_DataChangeFilter) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[173]))[:])
}
// UA_ContentFilterElement_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10410
// ContentFilterElement
func UA_ContentFilterElement_init(p []UA_ContentFilterElement) {
	noarch.Memset(p, byte(0), 24)
}
// UA_ContentFilterElement_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10415
func UA_ContentFilterElement_new() []UA_ContentFilterElement {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[174]))[:]).([]UA_ContentFilterElement)
}
// UA_ContentFilterElement_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10420
func UA_ContentFilterElement_copy(src []UA_ContentFilterElement, dst []UA_ContentFilterElement) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[174]))[:])
}
// UA_ContentFilterElement_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10425
func UA_ContentFilterElement_deleteMembers(p []UA_ContentFilterElement) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[174]))[:])
}
// UA_ContentFilterElement_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10430
func UA_ContentFilterElement_delete(p []UA_ContentFilterElement) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[174]))[:])
}
// UA_TranslateBrowsePathsToNodeIdsRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10436
// TranslateBrowsePathsToNodeIdsRequest
func UA_TranslateBrowsePathsToNodeIdsRequest_init(p []UA_TranslateBrowsePathsToNodeIdsRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_TranslateBrowsePathsToNodeIdsRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10441
func UA_TranslateBrowsePathsToNodeIdsRequest_new() []UA_TranslateBrowsePathsToNodeIdsRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[175]))[:]).([]UA_TranslateBrowsePathsToNodeIdsRequest)
}
// UA_TranslateBrowsePathsToNodeIdsRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10446
func UA_TranslateBrowsePathsToNodeIdsRequest_copy(src []UA_TranslateBrowsePathsToNodeIdsRequest, dst []UA_TranslateBrowsePathsToNodeIdsRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[175]))[:])
}
// UA_TranslateBrowsePathsToNodeIdsRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10451
func UA_TranslateBrowsePathsToNodeIdsRequest_deleteMembers(p []UA_TranslateBrowsePathsToNodeIdsRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[175]))[:])
}
// UA_TranslateBrowsePathsToNodeIdsRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10456
func UA_TranslateBrowsePathsToNodeIdsRequest_delete(p []UA_TranslateBrowsePathsToNodeIdsRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[175]))[:])
}
// UA_CloseSessionResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10462
// CloseSessionResponse
func UA_CloseSessionResponse_init(p []UA_CloseSessionResponse) {
	noarch.Memset(p, byte(0), 720)
}
// UA_CloseSessionResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10467
func UA_CloseSessionResponse_new() []UA_CloseSessionResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[176]))[:]).([]UA_CloseSessionResponse)
}
// UA_CloseSessionResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10472
func UA_CloseSessionResponse_copy(src []UA_CloseSessionResponse, dst []UA_CloseSessionResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[176]))[:])
}
// UA_CloseSessionResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10477
func UA_CloseSessionResponse_deleteMembers(p []UA_CloseSessionResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[176]))[:])
}
// UA_CloseSessionResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10482
func UA_CloseSessionResponse_delete(p []UA_CloseSessionResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[176]))[:])
}
// UA_ApplicationDescription_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10488
// ApplicationDescription
func UA_ApplicationDescription_init(p []UA_ApplicationDescription) {
	noarch.Memset(p, byte(0), 120)
}
// UA_ApplicationDescription_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10493
func UA_ApplicationDescription_new() []UA_ApplicationDescription {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[177]))[:]).([]UA_ApplicationDescription)
}
// UA_ApplicationDescription_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10498
func UA_ApplicationDescription_copy(src []UA_ApplicationDescription, dst []UA_ApplicationDescription) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[177]))[:])
}
// UA_ApplicationDescription_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10503
func UA_ApplicationDescription_deleteMembers(p []UA_ApplicationDescription) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[177]))[:])
}
// UA_ApplicationDescription_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10508
func UA_ApplicationDescription_delete(p []UA_ApplicationDescription) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[177]))[:])
}
// UA_SessionDiagnosticsDataType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10514
// SessionDiagnosticsDataType
func UA_SessionDiagnosticsDataType_init(p []UA_SessionDiagnosticsDataType) {
	noarch.Memset(p, byte(0), 584)
}
// UA_SessionDiagnosticsDataType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10519
func UA_SessionDiagnosticsDataType_new() []UA_SessionDiagnosticsDataType {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[178]))[:]).([]UA_SessionDiagnosticsDataType)
}
// UA_SessionDiagnosticsDataType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10524
func UA_SessionDiagnosticsDataType_copy(src []UA_SessionDiagnosticsDataType, dst []UA_SessionDiagnosticsDataType) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[178]))[:])
}
// UA_SessionDiagnosticsDataType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10529
func UA_SessionDiagnosticsDataType_deleteMembers(p []UA_SessionDiagnosticsDataType) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[178]))[:])
}
// UA_SessionDiagnosticsDataType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10534
func UA_SessionDiagnosticsDataType_delete(p []UA_SessionDiagnosticsDataType) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[178]))[:])
}
// UA_ServiceFault_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10540
// ServiceFault
func UA_ServiceFault_init(p []UA_ServiceFault) {
	noarch.Memset(p, byte(0), 720)
}
// UA_ServiceFault_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10545
func UA_ServiceFault_new() []UA_ServiceFault {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[179]))[:]).([]UA_ServiceFault)
}
// UA_ServiceFault_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10550
func UA_ServiceFault_copy(src []UA_ServiceFault, dst []UA_ServiceFault) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[179]))[:])
}
// UA_ServiceFault_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10555
func UA_ServiceFault_deleteMembers(p []UA_ServiceFault) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[179]))[:])
}
// UA_ServiceFault_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10560
func UA_ServiceFault_delete(p []UA_ServiceFault) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[179]))[:])
}
// UA_RegisteredServer_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10566
// RegisteredServer
func UA_RegisteredServer_init(p []UA_RegisteredServer) {
	noarch.Memset(p, byte(0), 104)
}
// UA_RegisteredServer_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10571
func UA_RegisteredServer_new() []UA_RegisteredServer {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[180]))[:]).([]UA_RegisteredServer)
}
// UA_RegisteredServer_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10576
func UA_RegisteredServer_copy(src []UA_RegisteredServer, dst []UA_RegisteredServer) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[180]))[:])
}
// UA_RegisteredServer_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10581
func UA_RegisteredServer_deleteMembers(p []UA_RegisteredServer) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[180]))[:])
}
// UA_RegisteredServer_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10586
func UA_RegisteredServer_delete(p []UA_RegisteredServer) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[180]))[:])
}
// UA_AggregateFilter_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10592
// AggregateFilter
func UA_AggregateFilter_init(p []UA_AggregateFilter) {
	noarch.Memset(p, byte(0), 152)
}
// UA_AggregateFilter_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10597
func UA_AggregateFilter_new() []UA_AggregateFilter {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[181]))[:]).([]UA_AggregateFilter)
}
// UA_AggregateFilter_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10602
func UA_AggregateFilter_copy(src []UA_AggregateFilter, dst []UA_AggregateFilter) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[181]))[:])
}
// UA_AggregateFilter_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10607
func UA_AggregateFilter_deleteMembers(p []UA_AggregateFilter) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[181]))[:])
}
// UA_AggregateFilter_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10612
func UA_AggregateFilter_delete(p []UA_AggregateFilter) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[181]))[:])
}
// UA_RegisterServerRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10618
// RegisterServerRequest
func UA_RegisterServerRequest_init(p []UA_RegisterServerRequest) {
	noarch.Memset(p, byte(0), 880)
}
// UA_RegisterServerRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10623
func UA_RegisterServerRequest_new() []UA_RegisterServerRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[182]))[:]).([]UA_RegisterServerRequest)
}
// UA_RegisterServerRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10628
func UA_RegisterServerRequest_copy(src []UA_RegisterServerRequest, dst []UA_RegisterServerRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[182]))[:])
}
// UA_RegisterServerRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10633
func UA_RegisterServerRequest_deleteMembers(p []UA_RegisterServerRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[182]))[:])
}
// UA_RegisterServerRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10638
func UA_RegisterServerRequest_delete(p []UA_RegisterServerRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[182]))[:])
}
// UA_EndpointDescription_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10644
// EndpointDescription
func UA_EndpointDescription_init(p []UA_EndpointDescription) {
	noarch.Memset(p, byte(0), 208)
}
// UA_EndpointDescription_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10649
func UA_EndpointDescription_new() []UA_EndpointDescription {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[183]))[:]).([]UA_EndpointDescription)
}
// UA_EndpointDescription_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10654
func UA_EndpointDescription_copy(src []UA_EndpointDescription, dst []UA_EndpointDescription) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[183]))[:])
}
// UA_EndpointDescription_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10659
func UA_EndpointDescription_deleteMembers(p []UA_EndpointDescription) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[183]))[:])
}
// UA_EndpointDescription_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10664
func UA_EndpointDescription_delete(p []UA_EndpointDescription) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[183]))[:])
}
// UA_CreateMonitoredItemsRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10670
// CreateMonitoredItemsRequest
func UA_CreateMonitoredItemsRequest_init(p []UA_CreateMonitoredItemsRequest) {
	noarch.Memset(p, byte(0), 800)
}
// UA_CreateMonitoredItemsRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10675
func UA_CreateMonitoredItemsRequest_new() []UA_CreateMonitoredItemsRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[184]))[:]).([]UA_CreateMonitoredItemsRequest)
}
// UA_CreateMonitoredItemsRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10680
func UA_CreateMonitoredItemsRequest_copy(src []UA_CreateMonitoredItemsRequest, dst []UA_CreateMonitoredItemsRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[184]))[:])
}
// UA_CreateMonitoredItemsRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10685
func UA_CreateMonitoredItemsRequest_deleteMembers(p []UA_CreateMonitoredItemsRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[184]))[:])
}
// UA_CreateMonitoredItemsRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10690
func UA_CreateMonitoredItemsRequest_delete(p []UA_CreateMonitoredItemsRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[184]))[:])
}
// UA_ContentFilter_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10696
// ContentFilter
func UA_ContentFilter_init(p []UA_ContentFilter) {
	noarch.Memset(p, byte(0), 16)
}
// UA_ContentFilter_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10701
func UA_ContentFilter_new() []UA_ContentFilter {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[185]))[:]).([]UA_ContentFilter)
}
// UA_ContentFilter_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10706
func UA_ContentFilter_copy(src []UA_ContentFilter, dst []UA_ContentFilter) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[185]))[:])
}
// UA_ContentFilter_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10711
func UA_ContentFilter_deleteMembers(p []UA_ContentFilter) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[185]))[:])
}
// UA_ContentFilter_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10716
func UA_ContentFilter_delete(p []UA_ContentFilter) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[185]))[:])
}
// UA_QueryFirstResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10722
// QueryFirstResponse
func UA_QueryFirstResponse_init(p []UA_QueryFirstResponse) {
	noarch.Memset(p, byte(0), 816)
}
// UA_QueryFirstResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10727
func UA_QueryFirstResponse_new() []UA_QueryFirstResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[186]))[:]).([]UA_QueryFirstResponse)
}
// UA_QueryFirstResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10732
func UA_QueryFirstResponse_copy(src []UA_QueryFirstResponse, dst []UA_QueryFirstResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[186]))[:])
}
// UA_QueryFirstResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10737
func UA_QueryFirstResponse_deleteMembers(p []UA_QueryFirstResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[186]))[:])
}
// UA_QueryFirstResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10742
func UA_QueryFirstResponse_delete(p []UA_QueryFirstResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[186]))[:])
}
// UA_AddNodesRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10748
// AddNodesRequest
func UA_AddNodesRequest_init(p []UA_AddNodesRequest) {
	noarch.Memset(p, byte(0), 792)
}
// UA_AddNodesRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10753
func UA_AddNodesRequest_new() []UA_AddNodesRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[187]))[:]).([]UA_AddNodesRequest)
}
// UA_AddNodesRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10758
func UA_AddNodesRequest_copy(src []UA_AddNodesRequest, dst []UA_AddNodesRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[187]))[:])
}
// UA_AddNodesRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10763
func UA_AddNodesRequest_deleteMembers(p []UA_AddNodesRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[187]))[:])
}
// UA_AddNodesRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10768
func UA_AddNodesRequest_delete(p []UA_AddNodesRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[187]))[:])
}
// UA_BrowseRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10774
// BrowseRequest
func UA_BrowseRequest_init(p []UA_BrowseRequest) {
	noarch.Memset(p, byte(0), 936)
}
// UA_BrowseRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10779
func UA_BrowseRequest_new() []UA_BrowseRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[188]))[:]).([]UA_BrowseRequest)
}
// UA_BrowseRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10784
func UA_BrowseRequest_copy(src []UA_BrowseRequest, dst []UA_BrowseRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[188]))[:])
}
// UA_BrowseRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10789
func UA_BrowseRequest_deleteMembers(p []UA_BrowseRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[188]))[:])
}
// UA_BrowseRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10794
func UA_BrowseRequest_delete(p []UA_BrowseRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[188]))[:])
}
// UA_BrowseResult_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10800
// BrowseResult
func UA_BrowseResult_init(p []UA_BrowseResult) {
	noarch.Memset(p, byte(0), 40)
}
// UA_BrowseResult_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10805
func UA_BrowseResult_new() []UA_BrowseResult {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[189]))[:]).([]UA_BrowseResult)
}
// UA_BrowseResult_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10810
func UA_BrowseResult_copy(src []UA_BrowseResult, dst []UA_BrowseResult) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[189]))[:])
}
// UA_BrowseResult_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10815
func UA_BrowseResult_deleteMembers(p []UA_BrowseResult) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[189]))[:])
}
// UA_BrowseResult_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10820
func UA_BrowseResult_delete(p []UA_BrowseResult) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[189]))[:])
}
// UA_RegisterServer2Request_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10826
// RegisterServer2Request
func UA_RegisterServer2Request_init(p []UA_RegisterServer2Request) {
	noarch.Memset(p, byte(0), 896)
}
// UA_RegisterServer2Request_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10831
func UA_RegisterServer2Request_new() []UA_RegisterServer2Request {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[190]))[:]).([]UA_RegisterServer2Request)
}
// UA_RegisterServer2Request_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10836
func UA_RegisterServer2Request_copy(src []UA_RegisterServer2Request, dst []UA_RegisterServer2Request) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[190]))[:])
}
// UA_RegisterServer2Request_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10841
func UA_RegisterServer2Request_deleteMembers(p []UA_RegisterServer2Request) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[190]))[:])
}
// UA_RegisterServer2Request_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10846
func UA_RegisterServer2Request_delete(p []UA_RegisterServer2Request) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[190]))[:])
}
// UA_CreateSessionRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10852
// CreateSessionRequest
func UA_CreateSessionRequest_init(p []UA_CreateSessionRequest) {
	noarch.Memset(p, byte(0), 992)
}
// UA_CreateSessionRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10857
func UA_CreateSessionRequest_new() []UA_CreateSessionRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[191]))[:]).([]UA_CreateSessionRequest)
}
// UA_CreateSessionRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10862
func UA_CreateSessionRequest_copy(src []UA_CreateSessionRequest, dst []UA_CreateSessionRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[191]))[:])
}
// UA_CreateSessionRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10867
func UA_CreateSessionRequest_deleteMembers(p []UA_CreateSessionRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[191]))[:])
}
// UA_CreateSessionRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10872
func UA_CreateSessionRequest_delete(p []UA_CreateSessionRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[191]))[:])
}
// UA_EventFilter_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10878
// EventFilter
func UA_EventFilter_init(p []UA_EventFilter) {
	noarch.Memset(p, byte(0), 32)
}
// UA_EventFilter_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10883
func UA_EventFilter_new() []UA_EventFilter {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[192]))[:]).([]UA_EventFilter)
}
// UA_EventFilter_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10888
func UA_EventFilter_copy(src []UA_EventFilter, dst []UA_EventFilter) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[192]))[:])
}
// UA_EventFilter_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10893
func UA_EventFilter_deleteMembers(p []UA_EventFilter) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[192]))[:])
}
// UA_EventFilter_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10898
func UA_EventFilter_delete(p []UA_EventFilter) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[192]))[:])
}
// UA_GetEndpointsResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10904
// GetEndpointsResponse
func UA_GetEndpointsResponse_init(p []UA_GetEndpointsResponse) {
	noarch.Memset(p, byte(0), 736)
}
// UA_GetEndpointsResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10909
func UA_GetEndpointsResponse_new() []UA_GetEndpointsResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[193]))[:]).([]UA_GetEndpointsResponse)
}
// UA_GetEndpointsResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10914
func UA_GetEndpointsResponse_copy(src []UA_GetEndpointsResponse, dst []UA_GetEndpointsResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[193]))[:])
}
// UA_GetEndpointsResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10919
func UA_GetEndpointsResponse_deleteMembers(p []UA_GetEndpointsResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[193]))[:])
}
// UA_GetEndpointsResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10924
func UA_GetEndpointsResponse_delete(p []UA_GetEndpointsResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[193]))[:])
}
// UA_FindServersResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10930
// FindServersResponse
func UA_FindServersResponse_init(p []UA_FindServersResponse) {
	noarch.Memset(p, byte(0), 736)
}
// UA_FindServersResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10935
func UA_FindServersResponse_new() []UA_FindServersResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[194]))[:]).([]UA_FindServersResponse)
}
// UA_FindServersResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10940
func UA_FindServersResponse_copy(src []UA_FindServersResponse, dst []UA_FindServersResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[194]))[:])
}
// UA_FindServersResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10945
func UA_FindServersResponse_deleteMembers(p []UA_FindServersResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[194]))[:])
}
// UA_FindServersResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10950
func UA_FindServersResponse_delete(p []UA_FindServersResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[194]))[:])
}
// UA_BrowseNextResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10956
// BrowseNextResponse
func UA_BrowseNextResponse_init(p []UA_BrowseNextResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_BrowseNextResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10961
func UA_BrowseNextResponse_new() []UA_BrowseNextResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[195]))[:]).([]UA_BrowseNextResponse)
}
// UA_BrowseNextResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10966
func UA_BrowseNextResponse_copy(src []UA_BrowseNextResponse, dst []UA_BrowseNextResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[195]))[:])
}
// UA_BrowseNextResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10971
func UA_BrowseNextResponse_deleteMembers(p []UA_BrowseNextResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[195]))[:])
}
// UA_BrowseNextResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10976
func UA_BrowseNextResponse_delete(p []UA_BrowseNextResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[195]))[:])
}
// UA_BrowseResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10982
// BrowseResponse
func UA_BrowseResponse_init(p []UA_BrowseResponse) {
	noarch.Memset(p, byte(0), 752)
}
// UA_BrowseResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10987
func UA_BrowseResponse_new() []UA_BrowseResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[196]))[:]).([]UA_BrowseResponse)
}
// UA_BrowseResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10992
func UA_BrowseResponse_copy(src []UA_BrowseResponse, dst []UA_BrowseResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[196]))[:])
}
// UA_BrowseResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:10997
func UA_BrowseResponse_deleteMembers(p []UA_BrowseResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[196]))[:])
}
// UA_BrowseResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11002
func UA_BrowseResponse_delete(p []UA_BrowseResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[196]))[:])
}
// UA_CreateSessionResponse_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11008
// CreateSessionResponse
func UA_CreateSessionResponse_init(p []UA_CreateSessionResponse) {
	noarch.Memset(p, byte(0), 1072)
}
// UA_CreateSessionResponse_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11013
func UA_CreateSessionResponse_new() []UA_CreateSessionResponse {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[197]))[:]).([]UA_CreateSessionResponse)
}
// UA_CreateSessionResponse_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11018
func UA_CreateSessionResponse_copy(src []UA_CreateSessionResponse, dst []UA_CreateSessionResponse) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[197]))[:])
}
// UA_CreateSessionResponse_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11023
func UA_CreateSessionResponse_deleteMembers(p []UA_CreateSessionResponse) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[197]))[:])
}
// UA_CreateSessionResponse_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11028
func UA_CreateSessionResponse_delete(p []UA_CreateSessionResponse) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[197]))[:])
}
// UA_QueryFirstRequest_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11034
// QueryFirstRequest
func UA_QueryFirstRequest_init(p []UA_QueryFirstRequest) {
	noarch.Memset(p, byte(0), 952)
}
// UA_QueryFirstRequest_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11039
func UA_QueryFirstRequest_new() []UA_QueryFirstRequest {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[198]))[:]).([]UA_QueryFirstRequest)
}
// UA_QueryFirstRequest_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11044
func UA_QueryFirstRequest_copy(src []UA_QueryFirstRequest, dst []UA_QueryFirstRequest) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[198]))[:])
}
// UA_QueryFirstRequest_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11049
func UA_QueryFirstRequest_deleteMembers(p []UA_QueryFirstRequest) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[198]))[:])
}
// UA_QueryFirstRequest_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11054
func UA_QueryFirstRequest_delete(p []UA_QueryFirstRequest) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[198]))[:])
}

type UA_ServerCallback func([]UA_Server , interface{})()
// UA_Server_readNodeId - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11209
func UA_Server_readNodeId(server []UA_Server, nodeId UA_NodeId, outNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_NODEID, outNodeId)
}
// UA_Server_readNodeClass - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11215
func UA_Server_readNodeClass(server []UA_Server, nodeId UA_NodeId, outNodeClass []int) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_NODECLASS, outNodeClass)
}
// UA_Server_readBrowseName - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11222
func UA_Server_readBrowseName(server []UA_Server, nodeId UA_NodeId, outBrowseName []UA_QualifiedName) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_BROWSENAME, outBrowseName)
}
// UA_Server_readDisplayName - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11229
func UA_Server_readDisplayName(server []UA_Server, nodeId UA_NodeId, outDisplayName []UA_LocalizedText) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DISPLAYNAME, outDisplayName)
}
// UA_Server_readDescription - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11236
func UA_Server_readDescription(server []UA_Server, nodeId UA_NodeId, outDescription []UA_LocalizedText) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DESCRIPTION, outDescription)
}
// UA_Server_readWriteMask - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11243
func UA_Server_readWriteMask(server []UA_Server, nodeId UA_NodeId, outWriteMask []UA_UInt32) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_WRITEMASK, outWriteMask)
}
// UA_Server_readIsAbstract - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11250
func UA_Server_readIsAbstract(server []UA_Server, nodeId UA_NodeId, outIsAbstract []UA_Boolean) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_ISABSTRACT, outIsAbstract)
}
// UA_Server_readSymmetric - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11257
func UA_Server_readSymmetric(server []UA_Server, nodeId UA_NodeId, outSymmetric []UA_Boolean) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_SYMMETRIC, outSymmetric)
}
// UA_Server_readInverseName - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11264
func UA_Server_readInverseName(server []UA_Server, nodeId UA_NodeId, outInverseName []UA_LocalizedText) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_INVERSENAME, outInverseName)
}
// UA_Server_readContainsNoLoop - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11271
func UA_Server_readContainsNoLoop(server []UA_Server, nodeId UA_NodeId, outContainsNoLoops []UA_Boolean) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_CONTAINSNOLOOPS, outContainsNoLoops)
}
// UA_Server_readEventNotifier - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11278
func UA_Server_readEventNotifier(server []UA_Server, nodeId UA_NodeId, outEventNotifier []UA_Byte) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_EVENTNOTIFIER, outEventNotifier)
}
// UA_Server_readValue - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11285
func UA_Server_readValue(server []UA_Server, nodeId UA_NodeId, outValue []UA_Variant) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_VALUE, outValue)
}
// UA_Server_readDataType - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11291
func UA_Server_readDataType(server []UA_Server, nodeId UA_NodeId, outDataType []UA_NodeId) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DATATYPE, outDataType)
}
// UA_Server_readValueRank - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11298
func UA_Server_readValueRank(server []UA_Server, nodeId UA_NodeId, outValueRank []UA_Int32) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_VALUERANK, outValueRank)
}
// UA_Server_readArrayDimensions - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11306
// Returns a variant with an int32 array
func UA_Server_readArrayDimensions(server []UA_Server, nodeId UA_NodeId, outArrayDimensions []UA_Variant) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_ARRAYDIMENSIONS, outArrayDimensions)
}
// UA_Server_readAccessLevel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11313
func UA_Server_readAccessLevel(server []UA_Server, nodeId UA_NodeId, outAccessLevel []UA_Byte) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_ACCESSLEVEL, outAccessLevel)
}
// UA_Server_readMinimumSamplingInterval - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11320
func UA_Server_readMinimumSamplingInterval(server []UA_Server, nodeId UA_NodeId, outMinimumSamplingInterval []UA_Double) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL, outMinimumSamplingInterval)
}
// UA_Server_readHistorizing - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11328
func UA_Server_readHistorizing(server []UA_Server, nodeId UA_NodeId, outHistorizing []UA_Boolean) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_HISTORIZING, outHistorizing)
}
// UA_Server_readExecutable - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11335
func UA_Server_readExecutable(server []UA_Server, nodeId UA_NodeId, outExecutable []UA_Boolean) UA_StatusCode {
	return __UA_Server_read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_EXECUTABLE, outExecutable)
}
// UA_Server_writeBrowseName - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11379
func UA_Server_writeBrowseName(server []UA_Server, nodeId UA_NodeId, browseName UA_QualifiedName) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_BROWSENAME, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:], (*[100000000]UA_QualifiedName)(unsafe.Pointer(&browseName))[:])
}
// UA_Server_writeDisplayName - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11386
func UA_Server_writeDisplayName(server []UA_Server, nodeId UA_NodeId, displayName UA_LocalizedText) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DISPLAYNAME, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&displayName))[:])
}
// UA_Server_writeDescription - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11393
func UA_Server_writeDescription(server []UA_Server, nodeId UA_NodeId, description UA_LocalizedText) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DESCRIPTION, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&description))[:])
}
// UA_Server_writeWriteMask - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11400
func UA_Server_writeWriteMask(server []UA_Server, nodeId UA_NodeId, writeMask UA_UInt32) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_WRITEMASK, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:], (*[100000000]UA_UInt32)(unsafe.Pointer(&writeMask))[:])
}
// UA_Server_writeIsAbstract - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11407
func UA_Server_writeIsAbstract(server []UA_Server, nodeId UA_NodeId, isAbstract UA_Boolean) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_ISABSTRACT, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:], (*[100000000]UA_Boolean)(unsafe.Pointer(&isAbstract))[:])
}
// UA_Server_writeInverseName - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11414
func UA_Server_writeInverseName(server []UA_Server, nodeId UA_NodeId, inverseName UA_LocalizedText) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_INVERSENAME, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&inverseName))[:])
}
// UA_Server_writeEventNotifier - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11421
func UA_Server_writeEventNotifier(server []UA_Server, nodeId UA_NodeId, eventNotifier UA_Byte) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_EVENTNOTIFIER, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:], (*[100000000]UA_Byte)(unsafe.Pointer(&eventNotifier))[:])
}
// UA_Server_writeValue - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11428
func UA_Server_writeValue(server []UA_Server, nodeId UA_NodeId, value UA_Variant) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_VALUE, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:], (*[100000000]UA_Variant)(unsafe.Pointer(&value))[:])
}
// UA_Server_writeDataType - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11435
func UA_Server_writeDataType(server []UA_Server, nodeId UA_NodeId, dataType UA_NodeId) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DATATYPE, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&dataType))[:])
}
// UA_Server_writeValueRank - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11442
func UA_Server_writeValueRank(server []UA_Server, nodeId UA_NodeId, valueRank UA_Int32) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_VALUERANK, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:], (*[100000000]UA_Int32)(unsafe.Pointer(&valueRank))[:])
}
// UA_Server_writeArrayDimensions - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11449
func UA_Server_writeArrayDimensions(server []UA_Server, nodeId UA_NodeId, arrayDimensions UA_Variant) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_VALUE, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:], (*[100000000]UA_Variant)(unsafe.Pointer(&arrayDimensions))[:])
}
// UA_Server_writeAccessLevel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11456
func UA_Server_writeAccessLevel(server []UA_Server, nodeId UA_NodeId, accessLevel UA_Byte) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_ACCESSLEVEL, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:], (*[100000000]UA_Byte)(unsafe.Pointer(&accessLevel))[:])
}
// UA_Server_writeMinimumSamplingInterval - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11463
func UA_Server_writeMinimumSamplingInterval(server []UA_Server, nodeId UA_NodeId, miniumSamplingInterval UA_Double) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:], (*[100000000]UA_Double)(unsafe.Pointer(&miniumSamplingInterval))[:])
}
// UA_Server_writeExecutable - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11472
func UA_Server_writeExecutable(server []UA_Server, nodeId UA_NodeId, executable UA_Boolean) UA_StatusCode {
	return __UA_Server_write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_EXECUTABLE, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:], (*[100000000]UA_Boolean)(unsafe.Pointer(&executable))[:])
}

type UA_NodeIteratorCallback func(UA_NodeId , UA_Boolean , UA_NodeId , interface{})(UA_StatusCode)
type UA_Server_registerServerCallback func([]UA_RegisteredServer , interface{})()
type UA_GlobalNodeLifecycle struct {
	constructor func([]UA_Server , []UA_NodeId , interface{} , []UA_NodeId , []interface{})(UA_StatusCode)
	destructor  func([]UA_Server , []UA_NodeId , interface{} , []UA_NodeId , interface{})()
}
type UA_NodeTypeLifecycle struct {
	constructor func([]UA_Server , []UA_NodeId , interface{} , []UA_NodeId , interface{} , []UA_NodeId , []interface{})(UA_StatusCode)
	destructor  func([]UA_Server , []UA_NodeId , interface{} , []UA_NodeId , interface{} , []UA_NodeId , []interface{})()
}
type UA_DataSource struct {
	read  func([]UA_Server , []UA_NodeId , interface{} , []UA_NodeId , interface{} , UA_Boolean , []UA_NumericRange , []UA_DataValue)(UA_StatusCode)
	write func([]UA_Server , []UA_NodeId , interface{} , []UA_NodeId , interface{} , []UA_NumericRange , []UA_DataValue)(UA_StatusCode)
}
type UA_ValueCallback struct {
	onRead  func([]UA_Server , []UA_NodeId , interface{} , []UA_NodeId , interface{} , []UA_NumericRange , []UA_DataValue)()
	onWrite func([]UA_Server , []UA_NodeId , interface{} , []UA_NodeId , interface{} , []UA_NumericRange , []UA_DataValue)()
}
type UA_MethodCallback func([]UA_Server , []UA_NodeId , interface{} , []UA_NodeId , interface{} , []UA_NodeId , interface{} , uint , []UA_Variant , uint , []UA_Variant)(UA_StatusCode)

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11875 :Cannot casting { -> UA_VariableAttributes}. err = cFromType is empty
UA_VariableAttributes_default UA_VariableAttributes
var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11876 :Cannot casting { -> UA_VariableTypeAttributes}. err = cFromType is empty
UA_VariableTypeAttributes_default UA_VariableTypeAttributes
var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11878 :Cannot casting { -> UA_MethodAttributes}. err = cFromType is empty
UA_MethodAttributes_default UA_MethodAttributes
var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11880 :Cannot casting { -> UA_ObjectAttributes}. err = cFromType is empty
UA_ObjectAttributes_default UA_ObjectAttributes
var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11881 :Cannot casting { -> UA_ObjectTypeAttributes}. err = cFromType is empty
UA_ObjectTypeAttributes_default UA_ObjectTypeAttributes
var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11882 :Cannot casting { -> UA_ReferenceTypeAttributes}. err = cFromType is empty
UA_ReferenceTypeAttributes_default UA_ReferenceTypeAttributes
var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11883 :Cannot casting { -> UA_DataTypeAttributes}. err = cFromType is empty
UA_DataTypeAttributes_default UA_DataTypeAttributes
var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11884 :Cannot casting { -> UA_ViewAttributes}. err = cFromType is empty
UA_ViewAttributes_default UA_ViewAttributes
// UA_Server_addVariableNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11899
func UA_Server_addVariableNode(server []UA_Server, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, typeDefinition UA_NodeId, attr UA_VariableAttributes, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Server_addNode(server, UA_NODECLASS_VARIABLE, (*[100000000]UA_NodeId)(unsafe.Pointer(&requestedNewNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeId))[:], browseName, (*[100000000]UA_NodeId)(unsafe.Pointer(&typeDefinition))[:], (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nodeContext, outNewNodeId)
}
// UA_Server_addVariableTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11914
func UA_Server_addVariableTypeNode(server []UA_Server, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, typeDefinition UA_NodeId, attr UA_VariableTypeAttributes, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Server_addNode(server, UA_NODECLASS_VARIABLETYPE, (*[100000000]UA_NodeId)(unsafe.Pointer(&requestedNewNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeId))[:], browseName, (*[100000000]UA_NodeId)(unsafe.Pointer(&typeDefinition))[:], (*[100000000]UA_VariableTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:], nodeContext, outNewNodeId)
}
// UA_Server_addObjectNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11931
func UA_Server_addObjectNode(server []UA_Server, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, typeDefinition UA_NodeId, attr UA_ObjectAttributes, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Server_addNode(server, UA_NODECLASS_OBJECT, (*[100000000]UA_NodeId)(unsafe.Pointer(&requestedNewNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeId))[:], browseName, (*[100000000]UA_NodeId)(unsafe.Pointer(&typeDefinition))[:], (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nodeContext, outNewNodeId)
}
// UA_Server_addObjectTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11946
func UA_Server_addObjectTypeNode(server []UA_Server, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_ObjectTypeAttributes, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Server_addNode(server, UA_NODECLASS_OBJECTTYPE, (*[100000000]UA_NodeId)(unsafe.Pointer(&requestedNewNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeId))[:], browseName, (*[100000000]UA_NodeId)(unsafe.Pointer(&UA_NODEID_NULL))[:], (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], nodeContext, outNewNodeId)
}
// UA_Server_addViewNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11960
func UA_Server_addViewNode(server []UA_Server, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_ViewAttributes, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Server_addNode(server, UA_NODECLASS_VIEW, (*[100000000]UA_NodeId)(unsafe.Pointer(&requestedNewNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeId))[:], browseName, (*[100000000]UA_NodeId)(unsafe.Pointer(&UA_NODEID_NULL))[:], (*[100000000]UA_ViewAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[29]))[:], nodeContext, outNewNodeId)
}
// UA_Server_addReferenceTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11974
func UA_Server_addReferenceTypeNode(server []UA_Server, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_ReferenceTypeAttributes, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Server_addNode(server, UA_NODECLASS_REFERENCETYPE, (*[100000000]UA_NodeId)(unsafe.Pointer(&requestedNewNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeId))[:], browseName, (*[100000000]UA_NodeId)(unsafe.Pointer(&UA_NODEID_NULL))[:], (*[100000000]UA_ReferenceTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:], nodeContext, outNewNodeId)
}
// UA_Server_addDataTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:11990
func UA_Server_addDataTypeNode(server []UA_Server, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_DataTypeAttributes, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Server_addNode(server, UA_NODECLASS_DATATYPE, (*[100000000]UA_NodeId)(unsafe.Pointer(&requestedNewNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeId))[:], browseName, (*[100000000]UA_NodeId)(unsafe.Pointer(&UA_NODEID_NULL))[:], (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nodeContext, outNewNodeId)
}
// UA_Server_addMethodNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:12030
func UA_Server_addMethodNode(server []UA_Server, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_MethodAttributes, method UA_MethodCallback, inputArgumentsSize uint, inputArguments []UA_Argument, outputArgumentsSize uint, outputArguments []UA_Argument, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	return UA_Server_addMethodNodeEx(server, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, attr, UA_MethodCallback(method), uint(inputArgumentsSize), inputArguments, UA_NODEID_NULL, nil, uint(outputArgumentsSize), outputArguments, UA_NODEID_NULL, nil, nodeContext, outNewNodeId)
}

const (
	UA_JOBTYPE_METHODCALL int = 0
)

type UA_JobType int
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_12144_9_ struct {
	data   interface{}
	method UA_ServerCallback
}
type __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_12143_5_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_12143_5_) copy() __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_12143_5_ {
	var buffer [32]byte
	for i := range buffer {
		buffer[i] = (*((*[32]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_12143_5_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_12143_5_) methodCall() *__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_12144_9_ {
	if unionVar.memory == nil {
		var buffer [32]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_12144_9_)(unionVar.memory)
}

type UA_Job struct {
	type_ int
	job   __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_12143_5_
}
// UA_Server_addRepeatedJob - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:12151
//
// * Deprecated Server API
// * ---------------------
// * This file contains outdated API definitions that are kept for backwards
// * compatibility. Please switch to the new API, as the following definitions
// * will be removed eventually.
// *
// * UA_Job API
// * ^^^^^^^^^^
// * UA_Job was replaced since it unnecessarily exposed server internals to the
// * end-user. Please use plain UA_ServerCallbacks instead. The following UA_Job
// * definition contains just the fraction of the original struct that was useful
// * to end-users.
func UA_Server_addRepeatedJob(server []UA_Server, job UA_Job, interval UA_UInt32, jobId []UA_Guid) UA_StatusCode {
	return UA_Server_addRepeatedCallback(server, UA_ServerCallback((*job.job.methodCall()).method), (*job.job.methodCall()).data, UA_UInt32(interval), nil)
}
// UA_Server_removeRepeatedJob - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:12159
func UA_Server_removeRepeatedJob(server []UA_Server, jobId UA_Guid) UA_StatusCode {
	return UA_Server_removeRepeatedCallback(server, UA_UInt64((nil)[0]))
}

type va_list = int64
type __gnuc_va_list = int64

const (
	UA_LOGLEVEL_TRACE   int = 0
	UA_LOGLEVEL_DEBUG       = 1
	UA_LOGLEVEL_INFO        = 2
	UA_LOGLEVEL_WARNING     = 3
	UA_LOGLEVEL_ERROR       = 4
	UA_LOGLEVEL_FATAL       = 5
)

type UA_LogLevel int

const (
	UA_LOGCATEGORY_NETWORK        int = 0
	UA_LOGCATEGORY_SECURECHANNEL      = 1
	UA_LOGCATEGORY_SESSION            = 2
	UA_LOGCATEGORY_SERVER             = 3
	UA_LOGCATEGORY_CLIENT             = 4
	UA_LOGCATEGORY_USERLAND           = 5
	UA_LOGCATEGORY_SECURITYPOLICY     = 6
)

type UA_LogCategory int
type UA_Logger func(int , int , []byte , []__va_list_tag)()
// UA_LOG_TRACE - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:12224
// amalgamated original file "/home/travis/build/open62541/open62541/include/ua_plugin_log.h"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
//
// * Logging Plugin API
// * ==================
// *
// * Servers and clients must define a logger in their configuration. The logger
// * is just a function pointer. Every log-message consists of a log-level, a
// * log-category and a string message content. The timestamp of the log-message
// * is created within the logger.
//
// * The message string and following varargs are formatted according to the rules
// * of the printf command. Do not call the logger directly. Instead, make use of
// * the convenience macros that take the minimum log-level defined in ua_config.h
// * into account.
func UA_LOG_TRACE(logger UA_Logger, category int, msg []byte, c4goArgs ...interface {}) {
	var c4goVaListPosition int = 0
	_ = c4goVaListPosition
}
// UA_LOG_DEBUG - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:12233
func UA_LOG_DEBUG(logger UA_Logger, category int, msg []byte, c4goArgs ...interface {}) {
	var c4goVaListPosition int = 0
	_ = c4goVaListPosition
}
// UA_LOG_INFO - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:12242
func UA_LOG_INFO(logger UA_Logger, category int, msg []byte, c4goArgs ...interface {}) {
	var c4goVaListPosition int = 0
	_ = c4goVaListPosition
	var args = c4goArgs
	c4goVaListPosition = 0
	logger(UA_LOGLEVEL_INFO, category, msg, int64((args)))
}
// UA_LOG_WARNING - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:12251
func UA_LOG_WARNING(logger UA_Logger, category int, msg []byte, c4goArgs ...interface {}) {
	var c4goVaListPosition int = 0
	_ = c4goVaListPosition
	var args = c4goArgs
	c4goVaListPosition = 0
	logger(UA_LOGLEVEL_WARNING, category, msg, int64((args)))
}
// UA_LOG_ERROR - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:12260
func UA_LOG_ERROR(logger UA_Logger, category int, msg []byte, c4goArgs ...interface {}) {
	var c4goVaListPosition int = 0
	_ = c4goVaListPosition
	var args = c4goArgs
	c4goVaListPosition = 0
	logger(UA_LOGLEVEL_ERROR, category, msg, int64((args)))
}
// UA_LOG_FATAL - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:12269
func UA_LOG_FATAL(logger UA_Logger, category int, msg []byte, c4goArgs ...interface {}) {
	var c4goVaListPosition int = 0
	_ = c4goVaListPosition
	var args = c4goArgs
	c4goVaListPosition = 0
	logger(UA_LOGLEVEL_FATAL, category, msg, int64((args)))
}

type UA_ConnectionConfig struct {
	protocolVersion UA_UInt32
	sendBufferSize  UA_UInt32
	recvBufferSize  UA_UInt32
	maxMessageSize  UA_UInt32
	maxChunkCount   UA_UInt32
}

const (
	UA_CONNECTION_CLOSED      int = 0
	UA_CONNECTION_OPENING         = 1
	UA_CONNECTION_ESTABLISHED     = 2
)

type UA_ConnectionState int
type UA_Connection struct {
	state             int
	localConf         UA_ConnectionConfig
	remoteConf        UA_ConnectionConfig
	channel           []UA_SecureChannel
	sockfd            UA_Int32
	openingDate       UA_DateTime
	handle            interface{}
	incompleteMessage UA_ByteString
	getSendBuffer     func([]UA_Connection , uint , []UA_ByteString)(UA_StatusCode)
	releaseSendBuffer func([]UA_Connection , []UA_ByteString)()
	send              func([]UA_Connection , []UA_ByteString)(UA_StatusCode)
	recv              func([]UA_Connection , []UA_ByteString , UA_UInt32)(UA_StatusCode)
	releaseRecvBuffer func([]UA_Connection , []UA_ByteString)()
	close             func([]UA_Connection)()
	free              func([]UA_Connection)()
}
type UA_ServerNetworkLayer struct {
	handle        interface{}
	discoveryUrl  UA_String
	start         func([]UA_ServerNetworkLayer , []UA_String)(UA_StatusCode)
	listen        func([]UA_ServerNetworkLayer , []UA_Server , UA_UInt16)(UA_StatusCode)
	stop          func([]UA_ServerNetworkLayer , []UA_Server)()
	deleteMembers func([]UA_ServerNetworkLayer)()
}
type UA_ConnectClientConnection func(UA_ConnectionConfig , []byte , UA_UInt32 , UA_Logger)(UA_Connection)
type UA_AccessControl struct {
	context                   interface{}
	deleteMembers             func([]UA_AccessControl)()
	userTokenPoliciesSize     uint
	userTokenPolicies         []UA_UserTokenPolicy
	activateSession           func([]UA_Server , []UA_AccessControl , []UA_NodeId , []UA_ExtensionObject , []interface{})(UA_StatusCode)
	closeSession              func([]UA_Server , []UA_AccessControl , []UA_NodeId , interface{})()
	getUserRightsMask         func([]UA_Server , []UA_AccessControl , []UA_NodeId , interface{} , []UA_NodeId , interface{})(UA_UInt32)
	getUserAccessLevel        func([]UA_Server , []UA_AccessControl , []UA_NodeId , interface{} , []UA_NodeId , interface{})(UA_Byte)
	getUserExecutable         func([]UA_Server , []UA_AccessControl , []UA_NodeId , interface{} , []UA_NodeId , interface{})(UA_Boolean)
	getUserExecutableOnObject func([]UA_Server , []UA_AccessControl , []UA_NodeId , interface{} , []UA_NodeId , interface{} , []UA_NodeId , interface{})(UA_Boolean)
	allowAddNode              func([]UA_Server , []UA_AccessControl , []UA_NodeId , interface{} , []UA_AddNodesItem)(UA_Boolean)
	allowAddReference         func([]UA_Server , []UA_AccessControl , []UA_NodeId , interface{} , []UA_AddReferencesItem)(UA_Boolean)
	allowDeleteNode           func([]UA_Server , []UA_AccessControl , []UA_NodeId , interface{} , []UA_DeleteNodesItem)(UA_Boolean)
	allowDeleteReference      func([]UA_Server , []UA_AccessControl , []UA_NodeId , interface{} , []UA_DeleteReferencesItem)(UA_Boolean)
}
type UA_CertificateVerification struct {
	context           interface{}
	verifyCertificate func(interface{} , []UA_ByteString)(UA_StatusCode)
	deleteMembers     func([]UA_CertificateVerification)()
}
type UA_SecurityPolicySignatureAlgorithm struct {
	uri                    UA_String
	verify                 func([]UA_SecurityPolicy , interface{} , []UA_ByteString , []UA_ByteString)(UA_StatusCode)
	sign                   func([]UA_SecurityPolicy , interface{} , []UA_ByteString , []UA_ByteString)(UA_StatusCode)
	getLocalSignatureSize  func([]UA_SecurityPolicy , interface{})(uint)
	getRemoteSignatureSize func([]UA_SecurityPolicy , interface{})(uint)
	getLocalKeyLength      func([]UA_SecurityPolicy , interface{})(uint)
	getRemoteKeyLength     func([]UA_SecurityPolicy , interface{})(uint)
}
type UA_SecurityPolicyEncryptionAlgorithm struct {
	uri                         UA_String
	encrypt                     func([]UA_SecurityPolicy , interface{} , []UA_ByteString)(UA_StatusCode)
	decrypt                     func([]UA_SecurityPolicy , interface{} , []UA_ByteString)(UA_StatusCode)
	getLocalKeyLength           func([]UA_SecurityPolicy , interface{})(uint)
	getRemoteKeyLength          func([]UA_SecurityPolicy , interface{})(uint)
	getLocalBlockSize           func([]UA_SecurityPolicy , interface{})(uint)
	getRemoteBlockSize          func([]UA_SecurityPolicy , interface{})(uint)
	getLocalPlainTextBlockSize  func([]UA_SecurityPolicy , interface{})(uint)
	getRemotePlainTextBlockSize func([]UA_SecurityPolicy , interface{})(uint)
}
type UA_SecurityPolicyCryptoModule struct {
	signatureAlgorithm  UA_SecurityPolicySignatureAlgorithm
	encryptionAlgorithm UA_SecurityPolicyEncryptionAlgorithm
}
type UA_SecurityPolicyAsymmetricModule struct {
	makeCertificateThumbprint    func([]UA_SecurityPolicy , []UA_ByteString , []UA_ByteString)(UA_StatusCode)
	compareCertificateThumbprint func([]UA_SecurityPolicy , []UA_ByteString)(UA_StatusCode)
	cryptoModule                 UA_SecurityPolicyCryptoModule
}
type UA_SecurityPolicySymmetricModule struct {
	generateKey              func([]UA_SecurityPolicy , []UA_ByteString , []UA_ByteString , []UA_ByteString)(UA_StatusCode)
	generateNonce            func([]UA_SecurityPolicy , []UA_ByteString)(UA_StatusCode)
	secureChannelNonceLength uint
	cryptoModule             UA_SecurityPolicyCryptoModule
}
type UA_SecurityPolicyChannelModule struct {
	newContext                func([]UA_SecurityPolicy , []UA_ByteString , []interface{})(UA_StatusCode)
	deleteContext             func(interface{})()
	setLocalSymEncryptingKey  func(interface{} , []UA_ByteString)(UA_StatusCode)
	setLocalSymSigningKey     func(interface{} , []UA_ByteString)(UA_StatusCode)
	setLocalSymIv             func(interface{} , []UA_ByteString)(UA_StatusCode)
	setRemoteSymEncryptingKey func(interface{} , []UA_ByteString)(UA_StatusCode)
	setRemoteSymSigningKey    func(interface{} , []UA_ByteString)(UA_StatusCode)
	setRemoteSymIv            func(interface{} , []UA_ByteString)(UA_StatusCode)
	compareCertificate        func(interface{} , []UA_ByteString)(UA_StatusCode)
}
type UA_SecurityPolicy struct {
	policyContext               interface{}
	policyUri                   UA_ByteString
	localCertificate            UA_ByteString
	asymmetricModule            UA_SecurityPolicyAsymmetricModule
	symmetricModule             UA_SecurityPolicySymmetricModule
	certificateSigningAlgorithm UA_SecurityPolicySignatureAlgorithm
	channelModule               UA_SecurityPolicyChannelModule
	certificateVerification     []UA_CertificateVerification
	logger                      UA_Logger
	deleteMembers               func([]UA_SecurityPolicy)()
}
type UA_Endpoint struct {
	securityPolicy      UA_SecurityPolicy
	endpointDescription UA_EndpointDescription
}
type UA_NodeReferenceKind struct {
	referenceTypeId UA_NodeId
	isInverse       UA_Boolean
	targetIdsSize   uint
	targetIds       []UA_ExpandedNodeId
}
type UA_Node struct {
	nodeId         UA_NodeId
	nodeClass      int
	browseName     UA_QualifiedName
	displayName    UA_LocalizedText
	description    UA_LocalizedText
	writeMask      UA_UInt32
	referencesSize uint
	references     []UA_NodeReferenceKind
	context        interface{}
}

const (
	UA_VALUESOURCE_DATA       int = 0
	UA_VALUESOURCE_DATASOURCE     = 1
)

type UA_ValueSource int
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13225_137_ struct {
	value    UA_DataValue
	callback UA_ValueCallback
}
type __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13225_129_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13225_129_) copy() __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13225_129_ {
	var buffer [216]byte
	for i := range buffer {
		buffer[i] = (*((*[216]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13225_129_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13225_129_) data() *__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13225_137_ {
	if unionVar.memory == nil {
		var buffer [216]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13225_137_)(unionVar.memory)
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13225_129_) dataSource() *UA_DataSource {
	if unionVar.memory == nil {
		var buffer [216]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*UA_DataSource)(unionVar.memory)
}

type UA_VariableNode struct {
	nodeId                  UA_NodeId
	nodeClass               int
	browseName              UA_QualifiedName
	displayName             UA_LocalizedText
	description             UA_LocalizedText
	writeMask               UA_UInt32
	referencesSize          uint
	references              []UA_NodeReferenceKind
	context                 interface{}
	dataType                UA_NodeId
	valueRank               UA_Int32
	arrayDimensionsSize     uint
	arrayDimensions         []UA_UInt32
	valueSource             int
	value                   __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13225_129_
	accessLevel             UA_Byte
	minimumSamplingInterval UA_Double
	historizing             UA_Boolean
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13246_137_ struct {
	value    UA_DataValue
	callback UA_ValueCallback
}
type __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13246_129_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13246_129_) copy() __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13246_129_ {
	var buffer [216]byte
	for i := range buffer {
		buffer[i] = (*((*[216]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13246_129_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13246_129_) data() *__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13246_137_ {
	if unionVar.memory == nil {
		var buffer [216]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13246_137_)(unionVar.memory)
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13246_129_) dataSource() *UA_DataSource {
	if unionVar.memory == nil {
		var buffer [216]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*UA_DataSource)(unionVar.memory)
}

type UA_VariableTypeNode struct {
	nodeId              UA_NodeId
	nodeClass           int
	browseName          UA_QualifiedName
	displayName         UA_LocalizedText
	description         UA_LocalizedText
	writeMask           UA_UInt32
	referencesSize      uint
	references          []UA_NodeReferenceKind
	context             interface{}
	dataType            UA_NodeId
	valueRank           UA_Int32
	arrayDimensionsSize uint
	arrayDimensions     []UA_UInt32
	valueSource         int
	value               __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_13246_129_
	isAbstract          UA_Boolean
	lifecycle           UA_NodeTypeLifecycle
}
type UA_MethodNode struct {
	nodeId         UA_NodeId
	nodeClass      int
	browseName     UA_QualifiedName
	displayName    UA_LocalizedText
	description    UA_LocalizedText
	writeMask      UA_UInt32
	referencesSize uint
	references     []UA_NodeReferenceKind
	context        interface{}
	executable     UA_Boolean
	method         UA_MethodCallback
}
type UA_ObjectNode struct {
	nodeId         UA_NodeId
	nodeClass      int
	browseName     UA_QualifiedName
	displayName    UA_LocalizedText
	description    UA_LocalizedText
	writeMask      UA_UInt32
	referencesSize uint
	references     []UA_NodeReferenceKind
	context        interface{}
	eventNotifier  UA_Byte
}
type UA_ObjectTypeNode struct {
	nodeId         UA_NodeId
	nodeClass      int
	browseName     UA_QualifiedName
	displayName    UA_LocalizedText
	description    UA_LocalizedText
	writeMask      UA_UInt32
	referencesSize uint
	references     []UA_NodeReferenceKind
	context        interface{}
	isAbstract     UA_Boolean
	lifecycle      UA_NodeTypeLifecycle
}
type UA_ReferenceTypeNode struct {
	nodeId         UA_NodeId
	nodeClass      int
	browseName     UA_QualifiedName
	displayName    UA_LocalizedText
	description    UA_LocalizedText
	writeMask      UA_UInt32
	referencesSize uint
	references     []UA_NodeReferenceKind
	context        interface{}
	isAbstract     UA_Boolean
	symmetric      UA_Boolean
	inverseName    UA_LocalizedText
}
type UA_DataTypeNode struct {
	nodeId         UA_NodeId
	nodeClass      int
	browseName     UA_QualifiedName
	displayName    UA_LocalizedText
	description    UA_LocalizedText
	writeMask      UA_UInt32
	referencesSize uint
	references     []UA_NodeReferenceKind
	context        interface{}
	isAbstract     UA_Boolean
}
type UA_ViewNode struct {
	nodeId          UA_NodeId
	nodeClass       int
	browseName      UA_QualifiedName
	displayName     UA_LocalizedText
	description     UA_LocalizedText
	writeMask       UA_UInt32
	referencesSize  uint
	references      []UA_NodeReferenceKind
	context         interface{}
	eventNotifier   UA_Byte
	containsNoLoops UA_Boolean
}
type UA_NodestoreVisitor func(interface{} , []UA_Node)()
type UA_Nodestore struct {
	context            interface{}
	deleteNodestore    func(interface{})()
	inPlaceEditAllowed UA_Boolean
	newNode            func(interface{} , int)([]UA_Node)
	deleteNode         func(interface{} , []UA_Node)()
	getNode            func(interface{} , []UA_NodeId)([]UA_Node)
	releaseNode        func(interface{} , []UA_Node)()
	getNodeCopy        func(interface{} , []UA_NodeId , [][]UA_Node)(UA_StatusCode)
	insertNode         func(interface{} , []UA_Node , []UA_NodeId)(UA_StatusCode)
	replaceNode        func(interface{} , []UA_Node)(UA_StatusCode)
	removeNode         func(interface{} , []UA_NodeId)(UA_StatusCode)
	iterate            func(interface{} , interface{} , UA_NodestoreVisitor)()
}
type UA_UInt32Range struct {
	min UA_UInt32
	max UA_UInt32
}
type UA_DurationRange struct {
	min UA_Duration
	max UA_Duration
}
type UA_ServerConfig struct {
	nThreads                                 UA_UInt16
	logger                                   UA_Logger
	buildInfo                                UA_BuildInfo
	applicationDescription                   UA_ApplicationDescription
	serverCertificate                        UA_ByteString
	mdnsServerName                           UA_String
	serverCapabilitiesSize                   uint
	serverCapabilities                       []UA_String
	customDataTypesSize                      uint
	customDataTypes                          []UA_DataType
	nodestore                                UA_Nodestore
	networkLayersSize                        uint
	networkLayers                            []UA_ServerNetworkLayer
	customHostname                           UA_String
	endpointsSize                            uint
	endpoints                                []UA_Endpoint
	nodeLifecycle                            UA_GlobalNodeLifecycle
	accessControl                            UA_AccessControl
	certificateVerification                  UA_CertificateVerification
	maxSecureChannels                        UA_UInt16
	maxSecurityTokenLifetime                 UA_UInt32
	maxSessions                              UA_UInt16
	maxSessionTimeout                        UA_Double
	maxNodesPerRead                          UA_UInt32
	maxNodesPerWrite                         UA_UInt32
	maxNodesPerMethodCall                    UA_UInt32
	maxNodesPerBrowse                        UA_UInt32
	maxNodesPerRegisterNodes                 UA_UInt32
	maxNodesPerTranslateBrowsePathsToNodeIds UA_UInt32
	maxNodesPerNodeManagement                UA_UInt32
	maxMonitoredItemsPerCall                 UA_UInt32
	maxReferencesPerNode                     UA_UInt32
	maxSubscriptionsPerSession               UA_UInt32
	publishingIntervalLimits                 UA_DurationRange
	lifeTimeCountLimits                      UA_UInt32Range
	keepAliveCountLimits                     UA_UInt32Range
	maxNotificationsPerPublish               UA_UInt32
	maxRetransmissionQueueSize               UA_UInt32
	maxMonitoredItemsPerSubscription         UA_UInt32
	samplingIntervalLimits                   UA_DurationRange
	queueSizeLimits                          UA_UInt32Range
	maxPublishReqPerSession                  UA_UInt32
	discoveryCleanupTimeout                  UA_UInt32
}

const (
	UA_CLIENTSTATE_DISCONNECTED    int = 0
	UA_CLIENTSTATE_CONNECTED           = 1
	UA_CLIENTSTATE_SECURECHANNEL       = 2
	UA_CLIENTSTATE_SESSION             = 3
	UA_CLIENTSTATE_SESSION_RENEWED     = 4
)

type UA_ClientState int
type UA_ClientStateCallback func([]UA_Client , int)()
type UA_SubscriptionInactivityCallback func([]UA_Client , UA_UInt32 , interface{})()
type UA_ClientConfig struct {
	timeout                        UA_UInt32
	secureChannelLifeTime          UA_UInt32
	logger                         UA_Logger
	localConnectionConfig          UA_ConnectionConfig
	connectionFunc                 UA_ConnectClientConnection
	customDataTypesSize            uint
	customDataTypes                []UA_DataType
	stateCallback                  UA_ClientStateCallback
	subscriptionInactivityCallback UA_SubscriptionInactivityCallback
	clientContext                  interface{}
	outStandingPublishRequests     UA_UInt16
}
// UA_Client_Service_read - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14016
//
// * Attribute Service Set
// * ^^^^^^^^^^^^^^^^^^^^^
func UA_Client_Service_read(client []UA_Client, request UA_ReadRequest) UA_ReadResponse {
	var response UA_ReadResponse
	__UA_Client_Service(client, (*[100000000]UA_ReadRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[163]))[:], (*[100000000]UA_ReadResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[161]))[:])
	return response
}
// UA_Client_Service_write - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14024
func UA_Client_Service_write(client []UA_Client, request UA_WriteRequest) UA_WriteResponse {
	var response UA_WriteResponse
	__UA_Client_Service(client, (*[100000000]UA_WriteRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[130]))[:], (*[100000000]UA_WriteResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[113]))[:])
	return response
}
// UA_Client_Service_call - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14036
//
// * Method Service Set
// * ^^^^^^^^^^^^^^^^^^
func UA_Client_Service_call(client []UA_Client, request UA_CallRequest) UA_CallResponse {
	var response UA_CallResponse
	__UA_Client_Service(client, (*[100000000]UA_CallRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[57]))[:], (*[100000000]UA_CallResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[156]))[:])
	return response
}
// UA_Client_Service_addNodes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14048
//
// * NodeManagement Service Set
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^
func UA_Client_Service_addNodes(client []UA_Client, request UA_AddNodesRequest) UA_AddNodesResponse {
	var response UA_AddNodesResponse
	__UA_Client_Service(client, (*[100000000]UA_AddNodesRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[187]))[:], (*[100000000]UA_AddNodesResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[140]))[:])
	return response
}
// UA_Client_Service_addReferences - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14056
func UA_Client_Service_addReferences(client []UA_Client, request UA_AddReferencesRequest) UA_AddReferencesResponse {
	var response UA_AddReferencesResponse
	__UA_Client_Service(client, (*[100000000]UA_AddReferencesRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[162]))[:], (*[100000000]UA_AddReferencesResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[170]))[:])
	return response
}
// UA_Client_Service_deleteNodes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14065
func UA_Client_Service_deleteNodes(client []UA_Client, request UA_DeleteNodesRequest) UA_DeleteNodesResponse {
	var response UA_DeleteNodesResponse
	__UA_Client_Service(client, (*[100000000]UA_DeleteNodesRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[93]))[:], (*[100000000]UA_DeleteNodesResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[157]))[:])
	return response
}
// UA_Client_Service_deleteReferences - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14074
func UA_Client_Service_deleteReferences(client []UA_Client, request UA_DeleteReferencesRequest) UA_DeleteReferencesResponse {
	var response UA_DeleteReferencesResponse
	__UA_Client_Service(client, (*[100000000]UA_DeleteReferencesRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[160]))[:], (*[100000000]UA_DeleteReferencesResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[154]))[:])
	return response
}
// UA_Client_Service_browse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14086
//
// * View Service Set
// * ^^^^^^^^^^^^^^^^
func UA_Client_Service_browse(client []UA_Client, request UA_BrowseRequest) UA_BrowseResponse {
	var response UA_BrowseResponse
	__UA_Client_Service(client, (*[100000000]UA_BrowseRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[188]))[:], (*[100000000]UA_BrowseResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[196]))[:])
	return response
}
// UA_Client_Service_browseNext - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14094
func UA_Client_Service_browseNext(client []UA_Client, request UA_BrowseNextRequest) UA_BrowseNextResponse {
	var response UA_BrowseNextResponse
	__UA_Client_Service(client, (*[100000000]UA_BrowseNextRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[114]))[:], (*[100000000]UA_BrowseNextResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[195]))[:])
	return response
}
// UA_Client_Service_translateBrowsePathsToNodeIds - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14103
func UA_Client_Service_translateBrowsePathsToNodeIds(client []UA_Client, request UA_TranslateBrowsePathsToNodeIdsRequest) UA_TranslateBrowsePathsToNodeIdsResponse {
	var response UA_TranslateBrowsePathsToNodeIdsResponse
	__UA_Client_Service(client, (*[100000000]UA_TranslateBrowsePathsToNodeIdsRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[175]))[:], (*[100000000]UA_TranslateBrowsePathsToNodeIdsResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[172]))[:])
	return response
}
// UA_Client_Service_registerNodes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14114
func UA_Client_Service_registerNodes(client []UA_Client, request UA_RegisterNodesRequest) UA_RegisterNodesResponse {
	var response UA_RegisterNodesResponse
	__UA_Client_Service(client, (*[100000000]UA_RegisterNodesRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[91]))[:], (*[100000000]UA_RegisterNodesResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[120]))[:])
	return response
}
// UA_Client_Service_unregisterNodes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14123
func UA_Client_Service_unregisterNodes(client []UA_Client, request UA_UnregisterNodesRequest) UA_UnregisterNodesResponse {
	var response UA_UnregisterNodesResponse
	__UA_Client_Service(client, (*[100000000]UA_UnregisterNodesRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[48]))[:], (*[100000000]UA_UnregisterNodesResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[129]))[:])
	return response
}
// UA_Client_Service_queryFirst - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14136
//
// * Query Service Set
// * ^^^^^^^^^^^^^^^^^
func UA_Client_Service_queryFirst(client []UA_Client, request UA_QueryFirstRequest) UA_QueryFirstResponse {
	var response UA_QueryFirstResponse
	__UA_Client_Service(client, (*[100000000]UA_QueryFirstRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[198]))[:], (*[100000000]UA_QueryFirstResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[186]))[:])
	return response
}
// UA_Client_Service_queryNext - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14145
func UA_Client_Service_queryNext(client []UA_Client, request UA_QueryNextRequest) UA_QueryNextResponse {
	var response UA_QueryNextResponse
	__UA_Client_Service(client, (*[100000000]UA_QueryNextRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[198]))[:], (*[100000000]UA_QueryNextResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[186]))[:])
	return response
}

type UA_ClientAsyncServiceCallback func([]UA_Client , interface{} , UA_UInt32 , interface{} , []UA_DataType)()
// UA_Client_AsyncService_read - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14194
func UA_Client_AsyncService_read(client []UA_Client, request []UA_ReadRequest, callback UA_ClientAsyncServiceCallback, userdata interface{}, requestId []UA_UInt32) UA_StatusCode {
	return __UA_Client_AsyncService(client, request, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[163]))[:], UA_ClientAsyncServiceCallback(callback), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[161]))[:], userdata, requestId)
}
// UA_Client_AsyncService_write - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14204
func UA_Client_AsyncService_write(client []UA_Client, request []UA_WriteRequest, callback UA_ClientAsyncServiceCallback, userdata interface{}, requestId []UA_UInt32) UA_StatusCode {
	return __UA_Client_AsyncService(client, request, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[130]))[:], UA_ClientAsyncServiceCallback(callback), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[113]))[:], userdata, requestId)
}
// UA_Client_AsyncService_call - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14214
func UA_Client_AsyncService_call(client []UA_Client, request []UA_CallRequest, callback UA_ClientAsyncServiceCallback, userdata interface{}, requestId []UA_UInt32) UA_StatusCode {
	return __UA_Client_AsyncService(client, request, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[57]))[:], UA_ClientAsyncServiceCallback(callback), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[156]))[:], userdata, requestId)
}
// UA_Client_AsyncService_browse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14224
func UA_Client_AsyncService_browse(client []UA_Client, request []UA_BrowseRequest, callback UA_ClientAsyncServiceCallback, userdata interface{}, requestId []UA_UInt32) UA_StatusCode {
	return __UA_Client_AsyncService(client, request, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[188]))[:], UA_ClientAsyncServiceCallback(callback), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[196]))[:], userdata, requestId)
}
// UA_Client_readNodeIdAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14291
func UA_Client_readNodeIdAttribute(client []UA_Client, nodeId UA_NodeId, outNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_NODEID, outNodeId, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
}
// UA_Client_readNodeClassAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14298
func UA_Client_readNodeClassAttribute(client []UA_Client, nodeId UA_NodeId, outNodeClass []int) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_NODECLASS, outNodeClass, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[75]))[:])
}
// UA_Client_readBrowseNameAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14305
func UA_Client_readBrowseNameAttribute(client []UA_Client, nodeId UA_NodeId, outBrowseName []UA_QualifiedName) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_BROWSENAME, outBrowseName, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:])
}
// UA_Client_readDisplayNameAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14313
func UA_Client_readDisplayNameAttribute(client []UA_Client, nodeId UA_NodeId, outDisplayName []UA_LocalizedText) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DISPLAYNAME, outDisplayName, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
}
// UA_Client_readDescriptionAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14321
func UA_Client_readDescriptionAttribute(client []UA_Client, nodeId UA_NodeId, outDescription []UA_LocalizedText) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DESCRIPTION, outDescription, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
}
// UA_Client_readWriteMaskAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14329
func UA_Client_readWriteMaskAttribute(client []UA_Client, nodeId UA_NodeId, outWriteMask []UA_UInt32) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_WRITEMASK, outWriteMask, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
}
// UA_Client_readUserWriteMaskAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14336
func UA_Client_readUserWriteMaskAttribute(client []UA_Client, nodeId UA_NodeId, outUserWriteMask []UA_UInt32) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_USERWRITEMASK, outUserWriteMask, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
}
// UA_Client_readIsAbstractAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14345
func UA_Client_readIsAbstractAttribute(client []UA_Client, nodeId UA_NodeId, outIsAbstract []UA_Boolean) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_ISABSTRACT, outIsAbstract, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_readSymmetricAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14352
func UA_Client_readSymmetricAttribute(client []UA_Client, nodeId UA_NodeId, outSymmetric []UA_Boolean) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_SYMMETRIC, outSymmetric, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_readInverseNameAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14359
func UA_Client_readInverseNameAttribute(client []UA_Client, nodeId UA_NodeId, outInverseName []UA_LocalizedText) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_INVERSENAME, outInverseName, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
}
// UA_Client_readContainsNoLoopsAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14367
func UA_Client_readContainsNoLoopsAttribute(client []UA_Client, nodeId UA_NodeId, outContainsNoLoops []UA_Boolean) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_CONTAINSNOLOOPS, outContainsNoLoops, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_readEventNotifierAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14376
func UA_Client_readEventNotifierAttribute(client []UA_Client, nodeId UA_NodeId, outEventNotifier []UA_Byte) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_EVENTNOTIFIER, outEventNotifier, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
}
// UA_Client_readValueAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14383
func UA_Client_readValueAttribute(client []UA_Client, nodeId UA_NodeId, outValue []UA_Variant) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_VALUE, outValue, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:])
}
// UA_Client_readDataTypeAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14390
func UA_Client_readDataTypeAttribute(client []UA_Client, nodeId UA_NodeId, outDataType []UA_NodeId) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DATATYPE, outDataType, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
}
// UA_Client_readValueRankAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14397
func UA_Client_readValueRankAttribute(client []UA_Client, nodeId UA_NodeId, outValueRank []UA_Int32) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_VALUERANK, outValueRank, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
}
// UA_Client_readAccessLevelAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14409
func UA_Client_readAccessLevelAttribute(client []UA_Client, nodeId UA_NodeId, outAccessLevel []UA_Byte) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_ACCESSLEVEL, outAccessLevel, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
}
// UA_Client_readUserAccessLevelAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14416
func UA_Client_readUserAccessLevelAttribute(client []UA_Client, nodeId UA_NodeId, outUserAccessLevel []UA_Byte) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_USERACCESSLEVEL, outUserAccessLevel, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
}
// UA_Client_readMinimumSamplingIntervalAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14425
func UA_Client_readMinimumSamplingIntervalAttribute(client []UA_Client, nodeId UA_NodeId, outMinSamplingInterval []UA_Double) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL, outMinSamplingInterval, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:])
}
// UA_Client_readHistorizingAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14435
func UA_Client_readHistorizingAttribute(client []UA_Client, nodeId UA_NodeId, outHistorizing []UA_Boolean) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_HISTORIZING, outHistorizing, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_readExecutableAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14442
func UA_Client_readExecutableAttribute(client []UA_Client, nodeId UA_NodeId, outExecutable []UA_Boolean) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_EXECUTABLE, outExecutable, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_readUserExecutableAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14449
func UA_Client_readUserExecutableAttribute(client []UA_Client, nodeId UA_NodeId, outUserExecutable []UA_Boolean) UA_StatusCode {
	return __UA_Client_readAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_USEREXECUTABLE, outUserExecutable, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_writeNodeIdAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14470
func UA_Client_writeNodeIdAttribute(client []UA_Client, nodeId UA_NodeId, newNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_NODEID, newNodeId, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
}
// UA_Client_writeNodeClassAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14477
func UA_Client_writeNodeClassAttribute(client []UA_Client, nodeId UA_NodeId, newNodeClass []int) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_NODECLASS, newNodeClass, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[75]))[:])
}
// UA_Client_writeBrowseNameAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14484
func UA_Client_writeBrowseNameAttribute(client []UA_Client, nodeId UA_NodeId, newBrowseName []UA_QualifiedName) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_BROWSENAME, newBrowseName, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:])
}
// UA_Client_writeDisplayNameAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14492
func UA_Client_writeDisplayNameAttribute(client []UA_Client, nodeId UA_NodeId, newDisplayName []UA_LocalizedText) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DISPLAYNAME, newDisplayName, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
}
// UA_Client_writeDescriptionAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14500
func UA_Client_writeDescriptionAttribute(client []UA_Client, nodeId UA_NodeId, newDescription []UA_LocalizedText) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DESCRIPTION, newDescription, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
}
// UA_Client_writeWriteMaskAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14508
func UA_Client_writeWriteMaskAttribute(client []UA_Client, nodeId UA_NodeId, newWriteMask []UA_UInt32) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_WRITEMASK, newWriteMask, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
}
// UA_Client_writeUserWriteMaskAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14515
func UA_Client_writeUserWriteMaskAttribute(client []UA_Client, nodeId UA_NodeId, newUserWriteMask []UA_UInt32) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_USERWRITEMASK, newUserWriteMask, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
}
// UA_Client_writeIsAbstractAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14524
func UA_Client_writeIsAbstractAttribute(client []UA_Client, nodeId UA_NodeId, newIsAbstract []UA_Boolean) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_ISABSTRACT, newIsAbstract, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_writeSymmetricAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14531
func UA_Client_writeSymmetricAttribute(client []UA_Client, nodeId UA_NodeId, newSymmetric []UA_Boolean) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_SYMMETRIC, newSymmetric, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_writeInverseNameAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14538
func UA_Client_writeInverseNameAttribute(client []UA_Client, nodeId UA_NodeId, newInverseName []UA_LocalizedText) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_INVERSENAME, newInverseName, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
}
// UA_Client_writeContainsNoLoopsAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14546
func UA_Client_writeContainsNoLoopsAttribute(client []UA_Client, nodeId UA_NodeId, newContainsNoLoops []UA_Boolean) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_CONTAINSNOLOOPS, newContainsNoLoops, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_writeEventNotifierAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14555
func UA_Client_writeEventNotifierAttribute(client []UA_Client, nodeId UA_NodeId, newEventNotifier []UA_Byte) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_EVENTNOTIFIER, newEventNotifier, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
}
// UA_Client_writeValueAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14564
func UA_Client_writeValueAttribute(client []UA_Client, nodeId UA_NodeId, newValue []UA_Variant) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_VALUE, newValue, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:])
}
// UA_Client_writeDataTypeAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14571
func UA_Client_writeDataTypeAttribute(client []UA_Client, nodeId UA_NodeId, newDataType []UA_NodeId) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_DATATYPE, newDataType, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
}
// UA_Client_writeValueRankAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14578
func UA_Client_writeValueRankAttribute(client []UA_Client, nodeId UA_NodeId, newValueRank []UA_Int32) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_VALUERANK, newValueRank, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
}
// UA_Client_writeAccessLevelAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14590
func UA_Client_writeAccessLevelAttribute(client []UA_Client, nodeId UA_NodeId, newAccessLevel []UA_Byte) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_ACCESSLEVEL, newAccessLevel, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
}
// UA_Client_writeUserAccessLevelAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14597
func UA_Client_writeUserAccessLevelAttribute(client []UA_Client, nodeId UA_NodeId, newUserAccessLevel []UA_Byte) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_USERACCESSLEVEL, newUserAccessLevel, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
}
// UA_Client_writeMinimumSamplingIntervalAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14606
func UA_Client_writeMinimumSamplingIntervalAttribute(client []UA_Client, nodeId UA_NodeId, newMinInterval []UA_Double) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL, newMinInterval, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:])
}
// UA_Client_writeHistorizingAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14615
func UA_Client_writeHistorizingAttribute(client []UA_Client, nodeId UA_NodeId, newHistorizing []UA_Boolean) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_HISTORIZING, newHistorizing, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_writeExecutableAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14622
func UA_Client_writeExecutableAttribute(client []UA_Client, nodeId UA_NodeId, newExecutable []UA_Boolean) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_EXECUTABLE, newExecutable, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_writeUserExecutableAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14629
func UA_Client_writeUserExecutableAttribute(client []UA_Client, nodeId UA_NodeId, newUserExecutable []UA_Boolean) UA_StatusCode {
	return __UA_Client_writeAttribute(client, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_ATTRIBUTEID_USEREXECUTABLE, newUserExecutable, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
}
// UA_Client_addVariableNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14694
func UA_Client_addVariableNode(client []UA_Client, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, typeDefinition UA_NodeId, attr UA_VariableAttributes, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Client_addNode(client, UA_NODECLASS_VARIABLE, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, typeDefinition, (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], outNewNodeId)
}
// UA_Client_addVariableTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14709
func UA_Client_addVariableTypeNode(client []UA_Client, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_VariableTypeAttributes, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Client_addNode(client, UA_NODECLASS_VARIABLETYPE, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, (*[100000000]UA_VariableTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:], outNewNodeId)
}
// UA_Client_addObjectNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14725
func UA_Client_addObjectNode(client []UA_Client, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, typeDefinition UA_NodeId, attr UA_ObjectAttributes, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Client_addNode(client, UA_NODECLASS_OBJECT, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, typeDefinition, (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], outNewNodeId)
}
// UA_Client_addObjectTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14738
func UA_Client_addObjectTypeNode(client []UA_Client, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_ObjectTypeAttributes, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Client_addNode(client, UA_NODECLASS_OBJECTTYPE, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], outNewNodeId)
}
// UA_Client_addViewNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14752
func UA_Client_addViewNode(client []UA_Client, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_ViewAttributes, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Client_addNode(client, UA_NODECLASS_VIEW, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, (*[100000000]UA_ViewAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[29]))[:], outNewNodeId)
}
// UA_Client_addReferenceTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14765
func UA_Client_addReferenceTypeNode(client []UA_Client, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_ReferenceTypeAttributes, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Client_addNode(client, UA_NODECLASS_REFERENCETYPE, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, (*[100000000]UA_ReferenceTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:], outNewNodeId)
}
// UA_Client_addDataTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14781
func UA_Client_addDataTypeNode(client []UA_Client, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_DataTypeAttributes, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Client_addNode(client, UA_NODECLASS_DATATYPE, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], outNewNodeId)
}
// UA_Client_addMethodNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14795
func UA_Client_addMethodNode(client []UA_Client, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_MethodAttributes, outNewNodeId []UA_NodeId) UA_StatusCode {
	return __UA_Client_addNode(client, UA_NODECLASS_METHOD, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, UA_NODEID_NULL, (*[100000000]UA_MethodAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[58]))[:], outNewNodeId)
}

type UA_Client_DeleteSubscriptionCallback func([]UA_Client , UA_UInt32 , interface{})()
type UA_Client_StatusChangeNotificationCallback func([]UA_Client , UA_UInt32 , interface{} , []UA_StatusChangeNotification)()
// UA_CreateSubscriptionRequest_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14890
// amalgamated original file "/home/travis/build/open62541/open62541/include/ua_client_subscriptions.h"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
// * .. _client-subscriptions:
// *
// * Subscriptions
// * -------------
// *
// * Subscriptions in OPC UA are asynchronous. That is, the client sends several
// * PublishRequests to the server. The server returns PublishResponses with
// * notifications. But only when a notification has been generated. The client
// * does not wait for the responses and continues normal operations.
// *
// * Note the difference between Subscriptions and MonitoredItems. Subscriptions
// * are used to report back notifications. MonitoredItems are used to generate
// * notifications. Every MonitoredItem is attached to exactly one Subscription.
// * And a Subscription can contain many MonitoredItems.
// *
// * The client automatically processes PublishResponses (with a callback) in the
// * background and keeps enough PublishRequests in transit. The PublishResponses
// * may be recieved during a synchronous service call or in
// * ``UA_Client_runAsync``.
// Callbacks defined for Subscriptions
// Provides default values for a new subscription.
// *
// * RequestedPublishingInterval:  500.0 [ms]
// * RequestedLifetimeCount: 10000
// * RequestedMaxKeepAliveCount: 10
// * MaxNotificationsPerPublish: 0 (unlimited)
// * PublishingEnabled: true
// * Priority: 0
func UA_CreateSubscriptionRequest_default() UA_CreateSubscriptionRequest {
	var request UA_CreateSubscriptionRequest
	UA_CreateSubscriptionRequest_init((*[100000000]UA_CreateSubscriptionRequest)(unsafe.Pointer(&request))[:])
	request.requestedPublishingInterval = UA_Double((500))
	request.requestedLifetimeCount = 10000
	request.requestedMaxKeepAliveCount = 10
	request.maxNotificationsPerPublish = 0
	request.publishingEnabled = 1
	request.priority = UA_Byte(0)
	return request
}
// UA_Client_Subscriptions_setPublishingMode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14922
func UA_Client_Subscriptions_setPublishingMode(client []UA_Client, request UA_SetPublishingModeRequest) UA_SetPublishingModeResponse {
	var response UA_SetPublishingModeResponse
	__UA_Client_Service(client, (*[100000000]UA_SetPublishingModeRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[54]))[:], (*[100000000]UA_SetPublishingModeResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[147]))[:])
	return response
}
// UA_MonitoredItemCreateRequest_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:14945
//
// * MonitoredItems
// * --------------
// *
// * MonitoredItems for Events indicate the ``EventNotifier`` attribute. This
// * indicates to the server not to monitor changes of the attribute, but to
// * forward Event notifications from that node.
// *
// * During the creation of a MonitoredItem, the server may return changed
// * adjusted parameters. Use ``UA_Client_MonitoredItem_getParameters`` to get the
// * current parameters.
// Provides default values for a new monitored item.
func UA_MonitoredItemCreateRequest_default(nodeId UA_NodeId) UA_MonitoredItemCreateRequest {
	var request UA_MonitoredItemCreateRequest
	UA_MonitoredItemCreateRequest_init((*[100000000]UA_MonitoredItemCreateRequest)(unsafe.Pointer(&request))[:])
	request.itemToMonitor.nodeId = nodeId
	request.itemToMonitor.attributeId = UA_UInt32((uint32_t((uint32((uint32(UA_ATTRIBUTEID_VALUE)))))))
	request.monitoringMode = UA_MONITORINGMODE_REPORTING
	request.requestedParameters.samplingInterval = 250
	request.requestedParameters.discardOldest = 1
	request.requestedParameters.queueSize = 1
	return request
}

type UA_Client_DeleteMonitoredItemCallback func([]UA_Client , UA_UInt32 , interface{} , UA_UInt32 , interface{})()
type UA_Client_DataChangeNotificationCallback func([]UA_Client , UA_UInt32 , interface{} , UA_UInt32 , interface{} , []UA_DataValue)()
type UA_Client_EventNotificationCallback func([]UA_Client , UA_UInt32 , interface{} , UA_UInt32 , interface{} , uint , []UA_Variant)()
// UA_Client_MonitoredItems_modify - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:15011
//
// * The following service calls go directly to the server. The MonitoredItem settings are
// * not stored in the client.
func UA_Client_MonitoredItems_modify(client []UA_Client, request UA_ModifyMonitoredItemsRequest) UA_ModifyMonitoredItemsResponse {
	var response UA_ModifyMonitoredItemsResponse
	__UA_Client_Service(client, (*[100000000]UA_ModifyMonitoredItemsRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[143]))[:], (*[100000000]UA_ModifyMonitoredItemsResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[122]))[:])
	return response
}
// UA_Client_MonitoredItems_setMonitoringMode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:15021
func UA_Client_MonitoredItems_setMonitoringMode(client []UA_Client, request UA_SetMonitoringModeRequest) UA_SetMonitoringModeResponse {
	var response UA_SetMonitoringModeResponse
	__UA_Client_Service(client, (*[100000000]UA_SetMonitoringModeRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[128]))[:], (*[100000000]UA_SetMonitoringModeResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[144]))[:])
	return response
}
// UA_Client_MonitoredItems_setTriggering - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:15031
func UA_Client_MonitoredItems_setTriggering(client []UA_Client, request UA_SetTriggeringRequest) UA_SetTriggeringResponse {
	var response UA_SetTriggeringResponse
	__UA_Client_Service(client, (*[100000000]UA_SetTriggeringRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[134]))[:], (*[100000000]UA_SetTriggeringResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[101]))[:])
	return response
}

type UA_SubscriptionSettings struct {
	requestedPublishingInterval UA_Double
	requestedLifetimeCount      UA_UInt32
	requestedMaxKeepAliveCount  UA_UInt32
	maxNotificationsPerPublish  UA_UInt32
	publishingEnabled           UA_Boolean
	priority                    UA_Byte
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:15056 :Cannot casting { -> UA_SubscriptionSettings}. err = cFromType is empty
UA_SubscriptionSettings_default UA_SubscriptionSettings

type UA_MonitoredItemHandlingFunction func([]UA_Client , UA_UInt32 , []UA_DataValue , interface{})()
type UA_MonitoredEventHandlingFunction func([]UA_Client , UA_UInt32 , uint , []UA_Variant , interface{})()
type UA_UsernamePasswordLogin struct {
	username UA_String
	password UA_String
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:15292 :Cannot casting { -> UA_ConnectionConfig}. err = cFromType is empty
UA_ConnectionConfig_default UA_ConnectionConfig
// UA_ServerConfig_new_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:15343
// Creates a server config on the default port 4840 with no server
// * certificate.
func UA_ServerConfig_new_default() []UA_ServerConfig {
	return UA_ServerConfig_new_minimal(4840, nil)
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.h:15365 :Cannot casting { -> UA_ClientConfig}. err = cFromType is empty
UA_ClientConfig_default UA_ClientConfig

type pcg_state_setseq_64 struct {
	state uint64_t
	inc   uint64_t
}
type pcg32_random_t = pcg_state_setseq_64
type mytm struct {
	tm_sec   int
	tm_min   int
	tm_hour  int
	tm_mday  int
	tm_mon   int
	tm_year  int
	tm_wday  int
	tm_yday  int
	tm_isdst int
}
type u8 = UA_Byte
type i8 = UA_SByte
type u16 = UA_UInt16
type i16 = UA_Int16
type u32 = UA_UInt32
type i32 = UA_Int32
type u64 = UA_UInt64
type i64 = UA_Int64
type status = UA_StatusCode
// UA_atomic_xchg - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:837
// amalgamated original file "/home/travis/build/open62541/open62541/src/ua_util.h"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014, 2017 (c) Florian Palm
// *    Copyright 2015 (c) LEvertz
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015 (c) Chris Iatrou
// *    Copyright 2015-2016 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
// BSD Queue Macros
// Macro-Expand for MSVC workarounds
// Thread-Local Storage
// * --------------------
// * Thread-local storage is not required by the main library functionality. It is
// * only used for some testing strategies. ``UA_THREAD_LOCAL`` is empty if the
// * feature is not available.
// Integer Shortnames
// * ------------------
// * These are not exposed on the public API, since many user-applications make
// * the same definitions in their headers.
// Atomic Operations
// * -----------------
// * Atomic operations that synchronize across processor cores (for
// * multithreading). Only the inline-functions defined next are used. Replace
// * with architecture-specific operations if necessary.
func UA_atomic_xchg(addr []interface{}, newptr interface{}) interface{} {
	var old interface{} = addr[0]
	addr[0] = newptr
	return old
}
// UA_atomic_cmpxchg - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:852
func UA_atomic_cmpxchg(addr []interface{}, expected interface{}, newptr interface{}) interface{} {
	var old interface{} = addr[0]
	if old == expected {
		addr[0] = newptr
	}
	return old
}
// UA_atomic_addUInt32 - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:869
func UA_atomic_addUInt32(addr []uint32_t, increase uint32_t) uint32_t {
	addr[0] += increase
	return uint32_t(addr[0])
}
// UA_atomic_addSize - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:883
func UA_atomic_addSize(addr []uint, increase uint) uint {
	addr[0] += increase
	return uint(addr[0])
}
// UA_atomic_subUInt32 - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:897
func UA_atomic_subUInt32(addr []uint32_t, decrease uint32_t) uint32_t {
	addr[0] -= decrease
	return uint32_t(addr[0])
}
// UA_atomic_subSize - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:911
func UA_atomic_subSize(addr []uint, decrease uint) uint {
	addr[0] -= decrease
	return uint(addr[0])
}

type UA_exchangeEncodeBuffer func(interface{} , [][]UA_Byte , [][]UA_Byte)(UA_StatusCode)
// UA_Boolean_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1034
// amalgamated original file "/home/travis/build/open62541/open62541/build/src_generated/ua_types_generated_encoding_binary.h"
// Generated from Opc.Ua.Types.bsd with script /home/travis/build/open62541/open62541/tools/generate_datatypes.py
// * on host travis-job-58e35654-0d0b-419b-8d10-2d50a5ceef65 by user travis at 2018-06-12 07:23:58
// Boolean
func UA_Boolean_encodeBinary(src []UA_Boolean, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:], bufPos, bufEnd, nil, nil)
}
// UA_Boolean_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1038
func UA_Boolean_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_Boolean) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:], 0, nil)
}
// UA_SByte_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1044
// SByte
func UA_SByte_encodeBinary(src []UA_SByte, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[1]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SByte_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1048
func UA_SByte_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SByte) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[1]))[:], 0, nil)
}
// UA_Byte_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1054
// Byte
func UA_Byte_encodeBinary(src []UA_Byte, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:], bufPos, bufEnd, nil, nil)
}
// UA_Byte_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1058
func UA_Byte_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_Byte) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:], 0, nil)
}
// UA_Int16_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1064
// Int16
func UA_Int16_encodeBinary(src []UA_Int16, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[3]))[:], bufPos, bufEnd, nil, nil)
}
// UA_Int16_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1068
func UA_Int16_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_Int16) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[3]))[:], 0, nil)
}
// UA_UInt16_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1074
// UInt16
func UA_UInt16_encodeBinary(src []UA_UInt16, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:], bufPos, bufEnd, nil, nil)
}
// UA_UInt16_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1078
func UA_UInt16_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_UInt16) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:], 0, nil)
}
// UA_Int32_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1084
// Int32
func UA_Int32_encodeBinary(src []UA_Int32, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:], bufPos, bufEnd, nil, nil)
}
// UA_Int32_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1088
func UA_Int32_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_Int32) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:], 0, nil)
}
// UA_UInt32_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1094
// UInt32
func UA_UInt32_encodeBinary(src []UA_UInt32, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:], bufPos, bufEnd, nil, nil)
}
// UA_UInt32_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1098
func UA_UInt32_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_UInt32) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:], 0, nil)
}
// UA_Int64_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1104
// Int64
func UA_Int64_encodeBinary(src []UA_Int64, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[7]))[:], bufPos, bufEnd, nil, nil)
}
// UA_Int64_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1108
func UA_Int64_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_Int64) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[7]))[:], 0, nil)
}
// UA_UInt64_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1114
// UInt64
func UA_UInt64_encodeBinary(src []UA_UInt64, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[8]))[:], bufPos, bufEnd, nil, nil)
}
// UA_UInt64_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1118
func UA_UInt64_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_UInt64) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[8]))[:], 0, nil)
}
// UA_Float_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1124
// Float
func UA_Float_encodeBinary(src []UA_Float, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[9]))[:], bufPos, bufEnd, nil, nil)
}
// UA_Float_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1128
func UA_Float_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_Float) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[9]))[:], 0, nil)
}
// UA_Double_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1134
// Double
func UA_Double_encodeBinary(src []UA_Double, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:], bufPos, bufEnd, nil, nil)
}
// UA_Double_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1138
func UA_Double_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_Double) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:], 0, nil)
}
// UA_String_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1144
// String
func UA_String_encodeBinary(src []UA_String, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:], bufPos, bufEnd, nil, nil)
}
// UA_String_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1148
func UA_String_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_String) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:], 0, nil)
}
// UA_DateTime_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1154
// DateTime
func UA_DateTime_encodeBinary(src []UA_DateTime, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DateTime_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1158
func UA_DateTime_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DateTime) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:], 0, nil)
}
// UA_Guid_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1164
// Guid
func UA_Guid_encodeBinary(src []UA_Guid, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[13]))[:], bufPos, bufEnd, nil, nil)
}
// UA_Guid_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1168
func UA_Guid_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_Guid) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[13]))[:], 0, nil)
}
// UA_ByteString_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1174
// ByteString
func UA_ByteString_encodeBinary(src []UA_ByteString, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ByteString_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1178
func UA_ByteString_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ByteString) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:], 0, nil)
}
// UA_XmlElement_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1184
// XmlElement
func UA_XmlElement_encodeBinary(src []UA_XmlElement, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[15]))[:], bufPos, bufEnd, nil, nil)
}
// UA_XmlElement_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1188
func UA_XmlElement_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_XmlElement) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[15]))[:], 0, nil)
}
// UA_NodeId_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1194
// NodeId
func UA_NodeId_encodeBinary(src []UA_NodeId, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:], bufPos, bufEnd, nil, nil)
}
// UA_NodeId_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1198
func UA_NodeId_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_NodeId) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:], 0, nil)
}
// UA_ExpandedNodeId_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1204
// ExpandedNodeId
func UA_ExpandedNodeId_encodeBinary(src []UA_ExpandedNodeId, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[17]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ExpandedNodeId_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1208
func UA_ExpandedNodeId_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ExpandedNodeId) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[17]))[:], 0, nil)
}
// UA_StatusCode_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1214
// StatusCode
func UA_StatusCode_encodeBinary(src []UA_StatusCode, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:], bufPos, bufEnd, nil, nil)
}
// UA_StatusCode_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1218
func UA_StatusCode_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_StatusCode) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:], 0, nil)
}
// UA_QualifiedName_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1224
// QualifiedName
func UA_QualifiedName_encodeBinary(src []UA_QualifiedName, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:], bufPos, bufEnd, nil, nil)
}
// UA_QualifiedName_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1228
func UA_QualifiedName_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_QualifiedName) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:], 0, nil)
}
// UA_LocalizedText_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1234
// LocalizedText
func UA_LocalizedText_encodeBinary(src []UA_LocalizedText, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], bufPos, bufEnd, nil, nil)
}
// UA_LocalizedText_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1238
func UA_LocalizedText_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_LocalizedText) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], 0, nil)
}
// UA_ExtensionObject_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1244
// ExtensionObject
func UA_ExtensionObject_encodeBinary(src []UA_ExtensionObject, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ExtensionObject_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1248
func UA_ExtensionObject_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ExtensionObject) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:], 0, nil)
}
// UA_DataValue_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1254
// DataValue
func UA_DataValue_encodeBinary(src []UA_DataValue, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[22]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DataValue_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1258
func UA_DataValue_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DataValue) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[22]))[:], 0, nil)
}
// UA_Variant_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1264
// Variant
func UA_Variant_encodeBinary(src []UA_Variant, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:], bufPos, bufEnd, nil, nil)
}
// UA_Variant_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1268
func UA_Variant_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_Variant) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:], 0, nil)
}
// UA_DiagnosticInfo_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1274
// DiagnosticInfo
func UA_DiagnosticInfo_encodeBinary(src []UA_DiagnosticInfo, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[24]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DiagnosticInfo_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1278
func UA_DiagnosticInfo_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DiagnosticInfo) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[24]))[:], 0, nil)
}
// UA_SignedSoftwareCertificate_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1284
// SignedSoftwareCertificate
func UA_SignedSoftwareCertificate_encodeBinary(src []UA_SignedSoftwareCertificate, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[25]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SignedSoftwareCertificate_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1288
func UA_SignedSoftwareCertificate_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SignedSoftwareCertificate) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[25]))[:], 0, nil)
}
// UA_SemanticChangeStructureDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1294
// SemanticChangeStructureDataType
func UA_SemanticChangeStructureDataType_encodeBinary(src []UA_SemanticChangeStructureDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[26]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SemanticChangeStructureDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1298
func UA_SemanticChangeStructureDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SemanticChangeStructureDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[26]))[:], 0, nil)
}
// UA_StatusChangeNotification_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1304
// StatusChangeNotification
func UA_StatusChangeNotification_encodeBinary(src []UA_StatusChangeNotification, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[27]))[:], bufPos, bufEnd, nil, nil)
}
// UA_StatusChangeNotification_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1308
func UA_StatusChangeNotification_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_StatusChangeNotification) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[27]))[:], 0, nil)
}
// UA_BrowsePathTarget_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1314
// BrowsePathTarget
func UA_BrowsePathTarget_encodeBinary(src []UA_BrowsePathTarget, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[28]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowsePathTarget_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1318
func UA_BrowsePathTarget_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_BrowsePathTarget) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[28]))[:], 0, nil)
}
// UA_ViewAttributes_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1324
// ViewAttributes
func UA_ViewAttributes_encodeBinary(src []UA_ViewAttributes, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[29]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ViewAttributes_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1328
func UA_ViewAttributes_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ViewAttributes) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[29]))[:], 0, nil)
}
// UA_RequestHeader_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1334
// RequestHeader
func UA_RequestHeader_encodeBinary(src []UA_RequestHeader, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[30]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RequestHeader_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1338
func UA_RequestHeader_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RequestHeader) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[30]))[:], 0, nil)
}
// UA_MonitoredItemModifyResult_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1344
// MonitoredItemModifyResult
func UA_MonitoredItemModifyResult_encodeBinary(src []UA_MonitoredItemModifyResult, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[31]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MonitoredItemModifyResult_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1348
func UA_MonitoredItemModifyResult_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_MonitoredItemModifyResult) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[31]))[:], 0, nil)
}
// UA_ElementOperand_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1354
// ElementOperand
func UA_ElementOperand_encodeBinary(src []UA_ElementOperand, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[32]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ElementOperand_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1358
func UA_ElementOperand_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ElementOperand) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[32]))[:], 0, nil)
}
// UA_CloseSecureChannelRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1364
// CloseSecureChannelRequest
func UA_CloseSecureChannelRequest_encodeBinary(src []UA_CloseSecureChannelRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[33]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CloseSecureChannelRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1368
func UA_CloseSecureChannelRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CloseSecureChannelRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[33]))[:], 0, nil)
}
// UA_AddNodesResult_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1374
// AddNodesResult
func UA_AddNodesResult_encodeBinary(src []UA_AddNodesResult, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[34]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AddNodesResult_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1378
func UA_AddNodesResult_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AddNodesResult) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[34]))[:], 0, nil)
}
// UA_VariableAttributes_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1384
// VariableAttributes
func UA_VariableAttributes_encodeBinary(src []UA_VariableAttributes, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], bufPos, bufEnd, nil, nil)
}
// UA_VariableAttributes_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1388
func UA_VariableAttributes_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_VariableAttributes) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], 0, nil)
}
// UA_NotificationMessage_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1394
// NotificationMessage
func UA_NotificationMessage_encodeBinary(src []UA_NotificationMessage, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[36]))[:], bufPos, bufEnd, nil, nil)
}
// UA_NotificationMessage_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1398
func UA_NotificationMessage_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_NotificationMessage) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[36]))[:], 0, nil)
}
// UA_FindServersOnNetworkRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1404
// FindServersOnNetworkRequest
func UA_FindServersOnNetworkRequest_encodeBinary(src []UA_FindServersOnNetworkRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[37]))[:], bufPos, bufEnd, nil, nil)
}
// UA_FindServersOnNetworkRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1408
func UA_FindServersOnNetworkRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_FindServersOnNetworkRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[37]))[:], 0, nil)
}
// UA_EventFieldList_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1414
// EventFieldList
func UA_EventFieldList_encodeBinary(src []UA_EventFieldList, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[38]))[:], bufPos, bufEnd, nil, nil)
}
// UA_EventFieldList_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1418
func UA_EventFieldList_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_EventFieldList) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[38]))[:], 0, nil)
}
// UA_MonitoringMode_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1424
// MonitoringMode
func UA_MonitoringMode_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[39]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MonitoringMode_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1428
func UA_MonitoringMode_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[39]))[:], 0, nil)
}
// UA_MdnsDiscoveryConfiguration_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1434
// MdnsDiscoveryConfiguration
func UA_MdnsDiscoveryConfiguration_encodeBinary(src []UA_MdnsDiscoveryConfiguration, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[40]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MdnsDiscoveryConfiguration_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1438
func UA_MdnsDiscoveryConfiguration_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_MdnsDiscoveryConfiguration) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[40]))[:], 0, nil)
}
// UA_CallMethodResult_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1444
// CallMethodResult
func UA_CallMethodResult_encodeBinary(src []UA_CallMethodResult, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[41]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CallMethodResult_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1448
func UA_CallMethodResult_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CallMethodResult) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[41]))[:], 0, nil)
}
// UA_ParsingResult_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1454
// ParsingResult
func UA_ParsingResult_encodeBinary(src []UA_ParsingResult, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[42]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ParsingResult_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1458
func UA_ParsingResult_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ParsingResult) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[42]))[:], 0, nil)
}
// UA_RelativePathElement_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1464
// RelativePathElement
func UA_RelativePathElement_encodeBinary(src []UA_RelativePathElement, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[43]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RelativePathElement_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1468
func UA_RelativePathElement_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RelativePathElement) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[43]))[:], 0, nil)
}
// UA_BrowseDirection_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1474
// BrowseDirection
func UA_BrowseDirection_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[44]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowseDirection_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1478
func UA_BrowseDirection_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[44]))[:], 0, nil)
}
// UA_CallMethodRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1484
// CallMethodRequest
func UA_CallMethodRequest_encodeBinary(src []UA_CallMethodRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[45]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CallMethodRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1488
func UA_CallMethodRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CallMethodRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[45]))[:], 0, nil)
}
// UA_RedundancySupport_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1494
// RedundancySupport
func UA_RedundancySupport_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[46]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RedundancySupport_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1498
func UA_RedundancySupport_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[46]))[:], 0, nil)
}
// UA_EventNotificationList_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1504
// EventNotificationList
func UA_EventNotificationList_encodeBinary(src []UA_EventNotificationList, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[47]))[:], bufPos, bufEnd, nil, nil)
}
// UA_EventNotificationList_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1508
func UA_EventNotificationList_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_EventNotificationList) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[47]))[:], 0, nil)
}
// UA_UnregisterNodesRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1514
// UnregisterNodesRequest
func UA_UnregisterNodesRequest_encodeBinary(src []UA_UnregisterNodesRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[48]))[:], bufPos, bufEnd, nil, nil)
}
// UA_UnregisterNodesRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1518
func UA_UnregisterNodesRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_UnregisterNodesRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[48]))[:], 0, nil)
}
// UA_ContentFilterElementResult_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1524
// ContentFilterElementResult
func UA_ContentFilterElementResult_encodeBinary(src []UA_ContentFilterElementResult, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[49]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ContentFilterElementResult_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1528
func UA_ContentFilterElementResult_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ContentFilterElementResult) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[49]))[:], 0, nil)
}
// UA_SimpleAttributeOperand_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1534
// SimpleAttributeOperand
func UA_SimpleAttributeOperand_encodeBinary(src []UA_SimpleAttributeOperand, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[50]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SimpleAttributeOperand_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1538
func UA_SimpleAttributeOperand_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SimpleAttributeOperand) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[50]))[:], 0, nil)
}
// UA_LiteralOperand_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1544
// LiteralOperand
func UA_LiteralOperand_encodeBinary(src []UA_LiteralOperand, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[51]))[:], bufPos, bufEnd, nil, nil)
}
// UA_LiteralOperand_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1548
func UA_LiteralOperand_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_LiteralOperand) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[51]))[:], 0, nil)
}
// UA_QueryDataSet_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1554
// QueryDataSet
func UA_QueryDataSet_encodeBinary(src []UA_QueryDataSet, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[52]))[:], bufPos, bufEnd, nil, nil)
}
// UA_QueryDataSet_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1558
func UA_QueryDataSet_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_QueryDataSet) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[52]))[:], 0, nil)
}
// UA_AnonymousIdentityToken_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1564
// AnonymousIdentityToken
func UA_AnonymousIdentityToken_encodeBinary(src []UA_AnonymousIdentityToken, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[53]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AnonymousIdentityToken_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1568
func UA_AnonymousIdentityToken_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AnonymousIdentityToken) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[53]))[:], 0, nil)
}
// UA_SetPublishingModeRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1574
// SetPublishingModeRequest
func UA_SetPublishingModeRequest_encodeBinary(src []UA_SetPublishingModeRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[54]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SetPublishingModeRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1578
func UA_SetPublishingModeRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SetPublishingModeRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[54]))[:], 0, nil)
}
// UA_MonitoredItemCreateResult_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1584
// MonitoredItemCreateResult
func UA_MonitoredItemCreateResult_encodeBinary(src []UA_MonitoredItemCreateResult, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[55]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MonitoredItemCreateResult_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1588
func UA_MonitoredItemCreateResult_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_MonitoredItemCreateResult) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[55]))[:], 0, nil)
}
// UA_TimestampsToReturn_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1594
// TimestampsToReturn
func UA_TimestampsToReturn_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[56]))[:], bufPos, bufEnd, nil, nil)
}
// UA_TimestampsToReturn_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1598
func UA_TimestampsToReturn_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[56]))[:], 0, nil)
}
// UA_CallRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1604
// CallRequest
func UA_CallRequest_encodeBinary(src []UA_CallRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[57]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CallRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1608
func UA_CallRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CallRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[57]))[:], 0, nil)
}
// UA_MethodAttributes_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1614
// MethodAttributes
func UA_MethodAttributes_encodeBinary(src []UA_MethodAttributes, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[58]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MethodAttributes_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1618
func UA_MethodAttributes_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_MethodAttributes) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[58]))[:], 0, nil)
}
// UA_DeleteReferencesItem_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1624
// DeleteReferencesItem
func UA_DeleteReferencesItem_encodeBinary(src []UA_DeleteReferencesItem, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[59]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeleteReferencesItem_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1628
func UA_DeleteReferencesItem_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DeleteReferencesItem) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[59]))[:], 0, nil)
}
// UA_WriteValue_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1634
// WriteValue
func UA_WriteValue_encodeBinary(src []UA_WriteValue, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[60]))[:], bufPos, bufEnd, nil, nil)
}
// UA_WriteValue_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1638
func UA_WriteValue_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_WriteValue) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[60]))[:], 0, nil)
}
// UA_NodeAttributesMask_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1644
// NodeAttributesMask
func UA_NodeAttributesMask_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[61]))[:], bufPos, bufEnd, nil, nil)
}
// UA_NodeAttributesMask_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1648
func UA_NodeAttributesMask_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[61]))[:], 0, nil)
}
// UA_MessageSecurityMode_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1654
// MessageSecurityMode
func UA_MessageSecurityMode_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[62]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MessageSecurityMode_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1658
func UA_MessageSecurityMode_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[62]))[:], 0, nil)
}
// UA_MonitoringParameters_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1664
// MonitoringParameters
func UA_MonitoringParameters_encodeBinary(src []UA_MonitoringParameters, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[63]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MonitoringParameters_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1668
func UA_MonitoringParameters_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_MonitoringParameters) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[63]))[:], 0, nil)
}
// UA_ReferenceNode_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1674
// ReferenceNode
func UA_ReferenceNode_encodeBinary(src []UA_ReferenceNode, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[64]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ReferenceNode_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1678
func UA_ReferenceNode_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ReferenceNode) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[64]))[:], 0, nil)
}
// UA_Argument_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1684
// Argument
func UA_Argument_encodeBinary(src []UA_Argument, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[65]))[:], bufPos, bufEnd, nil, nil)
}
// UA_Argument_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1688
func UA_Argument_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_Argument) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[65]))[:], 0, nil)
}
// UA_ChannelSecurityToken_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1694
// ChannelSecurityToken
func UA_ChannelSecurityToken_encodeBinary(src []UA_ChannelSecurityToken, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[66]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ChannelSecurityToken_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1698
func UA_ChannelSecurityToken_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ChannelSecurityToken) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[66]))[:], 0, nil)
}
// UA_UserIdentityToken_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1704
// UserIdentityToken
func UA_UserIdentityToken_encodeBinary(src []UA_UserIdentityToken, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[67]))[:], bufPos, bufEnd, nil, nil)
}
// UA_UserIdentityToken_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1708
func UA_UserIdentityToken_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_UserIdentityToken) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[67]))[:], 0, nil)
}
// UA_SignatureData_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1714
// SignatureData
func UA_SignatureData_encodeBinary(src []UA_SignatureData, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[68]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SignatureData_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1718
func UA_SignatureData_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SignatureData) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[68]))[:], 0, nil)
}
// UA_ObjectTypeAttributes_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1724
// ObjectTypeAttributes
func UA_ObjectTypeAttributes_encodeBinary(src []UA_ObjectTypeAttributes, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ObjectTypeAttributes_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1728
func UA_ObjectTypeAttributes_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ObjectTypeAttributes) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], 0, nil)
}
// UA_DeadbandType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1734
// DeadbandType
func UA_DeadbandType_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[70]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeadbandType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1738
func UA_DeadbandType_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[70]))[:], 0, nil)
}
// UA_SecurityTokenRequestType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1744
// SecurityTokenRequestType
func UA_SecurityTokenRequestType_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[71]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SecurityTokenRequestType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1748
func UA_SecurityTokenRequestType_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[71]))[:], 0, nil)
}
// UA_NodeAttributes_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1754
// NodeAttributes
func UA_NodeAttributes_encodeBinary(src []UA_NodeAttributes, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[72]))[:], bufPos, bufEnd, nil, nil)
}
// UA_NodeAttributes_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1758
func UA_NodeAttributes_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_NodeAttributes) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[72]))[:], 0, nil)
}
// UA_DataChangeTrigger_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1764
// DataChangeTrigger
func UA_DataChangeTrigger_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[73]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DataChangeTrigger_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1768
func UA_DataChangeTrigger_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[73]))[:], 0, nil)
}
// UA_BuildInfo_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1774
// BuildInfo
func UA_BuildInfo_encodeBinary(src []UA_BuildInfo, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[74]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BuildInfo_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1778
func UA_BuildInfo_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_BuildInfo) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[74]))[:], 0, nil)
}
// UA_NodeClass_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1784
// NodeClass
func UA_NodeClass_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[75]))[:], bufPos, bufEnd, nil, nil)
}
// UA_NodeClass_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1788
func UA_NodeClass_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[75]))[:], 0, nil)
}
// UA_SubscriptionDiagnosticsDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1794
// SubscriptionDiagnosticsDataType
func UA_SubscriptionDiagnosticsDataType_encodeBinary(src []UA_SubscriptionDiagnosticsDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[76]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SubscriptionDiagnosticsDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1798
func UA_SubscriptionDiagnosticsDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SubscriptionDiagnosticsDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[76]))[:], 0, nil)
}
// UA_FilterOperand_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1804
// FilterOperand
func UA_FilterOperand_encodeBinary(src []UA_FilterOperand, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[77]))[:], bufPos, bufEnd, nil, nil)
}
// UA_FilterOperand_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1808
func UA_FilterOperand_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_FilterOperand) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[77]))[:], 0, nil)
}
// UA_MonitoredItemNotification_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1814
// MonitoredItemNotification
func UA_MonitoredItemNotification_encodeBinary(src []UA_MonitoredItemNotification, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[78]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MonitoredItemNotification_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1818
func UA_MonitoredItemNotification_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_MonitoredItemNotification) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[78]))[:], 0, nil)
}
// UA_DeleteNodesItem_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1824
// DeleteNodesItem
func UA_DeleteNodesItem_encodeBinary(src []UA_DeleteNodesItem, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[79]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeleteNodesItem_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1828
func UA_DeleteNodesItem_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DeleteNodesItem) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[79]))[:], 0, nil)
}
// UA_DeleteSubscriptionsRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1834
// DeleteSubscriptionsRequest
func UA_DeleteSubscriptionsRequest_encodeBinary(src []UA_DeleteSubscriptionsRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[80]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeleteSubscriptionsRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1838
func UA_DeleteSubscriptionsRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DeleteSubscriptionsRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[80]))[:], 0, nil)
}
// UA_SubscriptionAcknowledgement_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1844
// SubscriptionAcknowledgement
func UA_SubscriptionAcknowledgement_encodeBinary(src []UA_SubscriptionAcknowledgement, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[81]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SubscriptionAcknowledgement_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1848
func UA_SubscriptionAcknowledgement_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SubscriptionAcknowledgement) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[81]))[:], 0, nil)
}
// UA_ReadValueId_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1854
// ReadValueId
func UA_ReadValueId_encodeBinary(src []UA_ReadValueId, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[82]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ReadValueId_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1858
func UA_ReadValueId_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ReadValueId) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[82]))[:], 0, nil)
}
// UA_DataTypeAttributes_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1864
// DataTypeAttributes
func UA_DataTypeAttributes_encodeBinary(src []UA_DataTypeAttributes, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DataTypeAttributes_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1868
func UA_DataTypeAttributes_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DataTypeAttributes) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], 0, nil)
}
// UA_ResponseHeader_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1874
// ResponseHeader
func UA_ResponseHeader_encodeBinary(src []UA_ResponseHeader, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[84]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ResponseHeader_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1878
func UA_ResponseHeader_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ResponseHeader) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[84]))[:], 0, nil)
}
// UA_DeleteMonitoredItemsRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1884
// DeleteMonitoredItemsRequest
func UA_DeleteMonitoredItemsRequest_encodeBinary(src []UA_DeleteMonitoredItemsRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[85]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeleteMonitoredItemsRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1888
func UA_DeleteMonitoredItemsRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DeleteMonitoredItemsRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[85]))[:], 0, nil)
}
// UA_ViewDescription_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1894
// ViewDescription
func UA_ViewDescription_encodeBinary(src []UA_ViewDescription, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[86]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ViewDescription_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1898
func UA_ViewDescription_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ViewDescription) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[86]))[:], 0, nil)
}
// UA_ServerOnNetwork_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1904
// ServerOnNetwork
func UA_ServerOnNetwork_encodeBinary(src []UA_ServerOnNetwork, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[87]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ServerOnNetwork_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1908
func UA_ServerOnNetwork_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ServerOnNetwork) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[87]))[:], 0, nil)
}
// UA_DeleteMonitoredItemsResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1914
// DeleteMonitoredItemsResponse
func UA_DeleteMonitoredItemsResponse_encodeBinary(src []UA_DeleteMonitoredItemsResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[88]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeleteMonitoredItemsResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1918
func UA_DeleteMonitoredItemsResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DeleteMonitoredItemsResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[88]))[:], 0, nil)
}
// UA_FindServersOnNetworkResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1924
// FindServersOnNetworkResponse
func UA_FindServersOnNetworkResponse_encodeBinary(src []UA_FindServersOnNetworkResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[89]))[:], bufPos, bufEnd, nil, nil)
}
// UA_FindServersOnNetworkResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1928
func UA_FindServersOnNetworkResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_FindServersOnNetworkResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[89]))[:], 0, nil)
}
// UA_RelativePath_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1934
// RelativePath
func UA_RelativePath_encodeBinary(src []UA_RelativePath, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[90]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RelativePath_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1938
func UA_RelativePath_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RelativePath) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[90]))[:], 0, nil)
}
// UA_RegisterNodesRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1944
// RegisterNodesRequest
func UA_RegisterNodesRequest_encodeBinary(src []UA_RegisterNodesRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[91]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RegisterNodesRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1948
func UA_RegisterNodesRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RegisterNodesRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[91]))[:], 0, nil)
}
// UA_AggregateConfiguration_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1954
// AggregateConfiguration
func UA_AggregateConfiguration_encodeBinary(src []UA_AggregateConfiguration, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[92]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AggregateConfiguration_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1958
func UA_AggregateConfiguration_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AggregateConfiguration) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[92]))[:], 0, nil)
}
// UA_DeleteNodesRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1964
// DeleteNodesRequest
func UA_DeleteNodesRequest_encodeBinary(src []UA_DeleteNodesRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[93]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeleteNodesRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1968
func UA_DeleteNodesRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DeleteNodesRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[93]))[:], 0, nil)
}
// UA_PublishResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1974
// PublishResponse
func UA_PublishResponse_encodeBinary(src []UA_PublishResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:], bufPos, bufEnd, nil, nil)
}
// UA_PublishResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1978
func UA_PublishResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_PublishResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:], 0, nil)
}
// UA_MonitoredItemModifyRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1984
// MonitoredItemModifyRequest
func UA_MonitoredItemModifyRequest_encodeBinary(src []UA_MonitoredItemModifyRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[95]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MonitoredItemModifyRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1988
func UA_MonitoredItemModifyRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_MonitoredItemModifyRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[95]))[:], 0, nil)
}
// UA_ServiceCounterDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1994
// ServiceCounterDataType
func UA_ServiceCounterDataType_encodeBinary(src []UA_ServiceCounterDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[96]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ServiceCounterDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:1998
func UA_ServiceCounterDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ServiceCounterDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[96]))[:], 0, nil)
}
// UA_ModelChangeStructureDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2004
// ModelChangeStructureDataType
func UA_ModelChangeStructureDataType_encodeBinary(src []UA_ModelChangeStructureDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[97]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ModelChangeStructureDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2008
func UA_ModelChangeStructureDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ModelChangeStructureDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[97]))[:], 0, nil)
}
// UA_UserNameIdentityToken_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2014
// UserNameIdentityToken
func UA_UserNameIdentityToken_encodeBinary(src []UA_UserNameIdentityToken, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[98]))[:], bufPos, bufEnd, nil, nil)
}
// UA_UserNameIdentityToken_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2018
func UA_UserNameIdentityToken_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_UserNameIdentityToken) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[98]))[:], 0, nil)
}
// UA_IdType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2024
// IdType
func UA_IdType_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[99]))[:], bufPos, bufEnd, nil, nil)
}
// UA_IdType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2028
func UA_IdType_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[99]))[:], 0, nil)
}
// UA_UserTokenType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2034
// UserTokenType
func UA_UserTokenType_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[100]))[:], bufPos, bufEnd, nil, nil)
}
// UA_UserTokenType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2038
func UA_UserTokenType_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[100]))[:], 0, nil)
}
// UA_SetTriggeringResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2044
// SetTriggeringResponse
func UA_SetTriggeringResponse_encodeBinary(src []UA_SetTriggeringResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[101]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SetTriggeringResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2048
func UA_SetTriggeringResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SetTriggeringResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[101]))[:], 0, nil)
}
// UA_TimeZoneDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2054
// TimeZoneDataType
func UA_TimeZoneDataType_encodeBinary(src []UA_TimeZoneDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[102]))[:], bufPos, bufEnd, nil, nil)
}
// UA_TimeZoneDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2058
func UA_TimeZoneDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_TimeZoneDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[102]))[:], 0, nil)
}
// UA_ActivateSessionRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2064
// ActivateSessionRequest
func UA_ActivateSessionRequest_encodeBinary(src []UA_ActivateSessionRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[103]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ActivateSessionRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2068
func UA_ActivateSessionRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ActivateSessionRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[103]))[:], 0, nil)
}
// UA_OpenSecureChannelResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2074
// OpenSecureChannelResponse
func UA_OpenSecureChannelResponse_encodeBinary(src []UA_OpenSecureChannelResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[104]))[:], bufPos, bufEnd, nil, nil)
}
// UA_OpenSecureChannelResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2078
func UA_OpenSecureChannelResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_OpenSecureChannelResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[104]))[:], 0, nil)
}
// UA_ApplicationType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2084
// ApplicationType
func UA_ApplicationType_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[105]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ApplicationType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2088
func UA_ApplicationType_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[105]))[:], 0, nil)
}
// UA_ServerState_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2094
// ServerState
func UA_ServerState_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[106]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ServerState_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2098
func UA_ServerState_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[106]))[:], 0, nil)
}
// UA_QueryNextResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2104
// QueryNextResponse
func UA_QueryNextResponse_encodeBinary(src []UA_QueryNextResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[107]))[:], bufPos, bufEnd, nil, nil)
}
// UA_QueryNextResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2108
func UA_QueryNextResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_QueryNextResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[107]))[:], 0, nil)
}
// UA_DiscoveryConfiguration_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2114
// DiscoveryConfiguration
func UA_DiscoveryConfiguration_encodeBinary(src []UA_DiscoveryConfiguration, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[108]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DiscoveryConfiguration_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2118
func UA_DiscoveryConfiguration_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DiscoveryConfiguration) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[108]))[:], 0, nil)
}
// UA_ActivateSessionResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2124
// ActivateSessionResponse
func UA_ActivateSessionResponse_encodeBinary(src []UA_ActivateSessionResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[109]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ActivateSessionResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2128
func UA_ActivateSessionResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ActivateSessionResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[109]))[:], 0, nil)
}
// UA_EndpointUrlListDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2134
// EndpointUrlListDataType
func UA_EndpointUrlListDataType_encodeBinary(src []UA_EndpointUrlListDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[110]))[:], bufPos, bufEnd, nil, nil)
}
// UA_EndpointUrlListDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2138
func UA_EndpointUrlListDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_EndpointUrlListDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[110]))[:], 0, nil)
}
// UA_FilterOperator_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2144
// FilterOperator
func UA_FilterOperator_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[111]))[:], bufPos, bufEnd, nil, nil)
}
// UA_FilterOperator_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2148
func UA_FilterOperator_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[111]))[:], 0, nil)
}
// UA_QueryNextRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2154
// QueryNextRequest
func UA_QueryNextRequest_encodeBinary(src []UA_QueryNextRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[112]))[:], bufPos, bufEnd, nil, nil)
}
// UA_QueryNextRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2158
func UA_QueryNextRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_QueryNextRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[112]))[:], 0, nil)
}
// UA_WriteResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2164
// WriteResponse
func UA_WriteResponse_encodeBinary(src []UA_WriteResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[113]))[:], bufPos, bufEnd, nil, nil)
}
// UA_WriteResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2168
func UA_WriteResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_WriteResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[113]))[:], 0, nil)
}
// UA_BrowseNextRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2174
// BrowseNextRequest
func UA_BrowseNextRequest_encodeBinary(src []UA_BrowseNextRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[114]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowseNextRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2178
func UA_BrowseNextRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_BrowseNextRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[114]))[:], 0, nil)
}
// UA_CreateSubscriptionRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2184
// CreateSubscriptionRequest
func UA_CreateSubscriptionRequest_encodeBinary(src []UA_CreateSubscriptionRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[115]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CreateSubscriptionRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2188
func UA_CreateSubscriptionRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CreateSubscriptionRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[115]))[:], 0, nil)
}
// UA_VariableTypeAttributes_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2194
// VariableTypeAttributes
func UA_VariableTypeAttributes_encodeBinary(src []UA_VariableTypeAttributes, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:], bufPos, bufEnd, nil, nil)
}
// UA_VariableTypeAttributes_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2198
func UA_VariableTypeAttributes_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_VariableTypeAttributes) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:], 0, nil)
}
// UA_BrowsePathResult_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2204
// BrowsePathResult
func UA_BrowsePathResult_encodeBinary(src []UA_BrowsePathResult, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[117]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowsePathResult_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2208
func UA_BrowsePathResult_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_BrowsePathResult) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[117]))[:], 0, nil)
}
// UA_ModifySubscriptionResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2214
// ModifySubscriptionResponse
func UA_ModifySubscriptionResponse_encodeBinary(src []UA_ModifySubscriptionResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[118]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ModifySubscriptionResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2218
func UA_ModifySubscriptionResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ModifySubscriptionResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[118]))[:], 0, nil)
}
// UA_RedundantServerDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2224
// RedundantServerDataType
func UA_RedundantServerDataType_encodeBinary(src []UA_RedundantServerDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[119]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RedundantServerDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2228
func UA_RedundantServerDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RedundantServerDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[119]))[:], 0, nil)
}
// UA_RegisterNodesResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2234
// RegisterNodesResponse
func UA_RegisterNodesResponse_encodeBinary(src []UA_RegisterNodesResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[120]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RegisterNodesResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2238
func UA_RegisterNodesResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RegisterNodesResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[120]))[:], 0, nil)
}
// UA_CloseSessionRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2244
// CloseSessionRequest
func UA_CloseSessionRequest_encodeBinary(src []UA_CloseSessionRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[121]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CloseSessionRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2248
func UA_CloseSessionRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CloseSessionRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[121]))[:], 0, nil)
}
// UA_ModifyMonitoredItemsResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2254
// ModifyMonitoredItemsResponse
func UA_ModifyMonitoredItemsResponse_encodeBinary(src []UA_ModifyMonitoredItemsResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[122]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ModifyMonitoredItemsResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2258
func UA_ModifyMonitoredItemsResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ModifyMonitoredItemsResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[122]))[:], 0, nil)
}
// UA_ModifySubscriptionRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2264
// ModifySubscriptionRequest
func UA_ModifySubscriptionRequest_encodeBinary(src []UA_ModifySubscriptionRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[123]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ModifySubscriptionRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2268
func UA_ModifySubscriptionRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ModifySubscriptionRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[123]))[:], 0, nil)
}
// UA_ServerDiagnosticsSummaryDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2274
// ServerDiagnosticsSummaryDataType
func UA_ServerDiagnosticsSummaryDataType_encodeBinary(src []UA_ServerDiagnosticsSummaryDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[124]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ServerDiagnosticsSummaryDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2278
func UA_ServerDiagnosticsSummaryDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ServerDiagnosticsSummaryDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[124]))[:], 0, nil)
}
// UA_UserTokenPolicy_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2284
// UserTokenPolicy
func UA_UserTokenPolicy_encodeBinary(src []UA_UserTokenPolicy, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[125]))[:], bufPos, bufEnd, nil, nil)
}
// UA_UserTokenPolicy_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2288
func UA_UserTokenPolicy_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_UserTokenPolicy) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[125]))[:], 0, nil)
}
// UA_ReferenceTypeAttributes_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2294
// ReferenceTypeAttributes
func UA_ReferenceTypeAttributes_encodeBinary(src []UA_ReferenceTypeAttributes, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ReferenceTypeAttributes_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2298
func UA_ReferenceTypeAttributes_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ReferenceTypeAttributes) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:], 0, nil)
}
// UA_BrowsePath_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2304
// BrowsePath
func UA_BrowsePath_encodeBinary(src []UA_BrowsePath, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[127]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowsePath_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2308
func UA_BrowsePath_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_BrowsePath) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[127]))[:], 0, nil)
}
// UA_SetMonitoringModeRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2314
// SetMonitoringModeRequest
func UA_SetMonitoringModeRequest_encodeBinary(src []UA_SetMonitoringModeRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[128]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SetMonitoringModeRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2318
func UA_SetMonitoringModeRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SetMonitoringModeRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[128]))[:], 0, nil)
}
// UA_UnregisterNodesResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2324
// UnregisterNodesResponse
func UA_UnregisterNodesResponse_encodeBinary(src []UA_UnregisterNodesResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[129]))[:], bufPos, bufEnd, nil, nil)
}
// UA_UnregisterNodesResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2328
func UA_UnregisterNodesResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_UnregisterNodesResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[129]))[:], 0, nil)
}
// UA_WriteRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2334
// WriteRequest
func UA_WriteRequest_encodeBinary(src []UA_WriteRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[130]))[:], bufPos, bufEnd, nil, nil)
}
// UA_WriteRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2338
func UA_WriteRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_WriteRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[130]))[:], 0, nil)
}
// UA_ObjectAttributes_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2344
// ObjectAttributes
func UA_ObjectAttributes_encodeBinary(src []UA_ObjectAttributes, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ObjectAttributes_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2348
func UA_ObjectAttributes_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ObjectAttributes) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], 0, nil)
}
// UA_BrowseResultMask_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2354
// BrowseResultMask
func UA_BrowseResultMask_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[132]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowseResultMask_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2358
func UA_BrowseResultMask_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[132]))[:], 0, nil)
}
// UA_BrowseDescription_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2364
// BrowseDescription
func UA_BrowseDescription_encodeBinary(src []UA_BrowseDescription, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[133]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowseDescription_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2368
func UA_BrowseDescription_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_BrowseDescription) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[133]))[:], 0, nil)
}
// UA_SetTriggeringRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2374
// SetTriggeringRequest
func UA_SetTriggeringRequest_encodeBinary(src []UA_SetTriggeringRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[134]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SetTriggeringRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2378
func UA_SetTriggeringRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SetTriggeringRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[134]))[:], 0, nil)
}
// UA_SessionSecurityDiagnosticsDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2384
// SessionSecurityDiagnosticsDataType
func UA_SessionSecurityDiagnosticsDataType_encodeBinary(src []UA_SessionSecurityDiagnosticsDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[135]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SessionSecurityDiagnosticsDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2388
func UA_SessionSecurityDiagnosticsDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SessionSecurityDiagnosticsDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[135]))[:], 0, nil)
}
// UA_RepublishRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2394
// RepublishRequest
func UA_RepublishRequest_encodeBinary(src []UA_RepublishRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[136]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RepublishRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2398
func UA_RepublishRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RepublishRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[136]))[:], 0, nil)
}
// UA_GetEndpointsRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2404
// GetEndpointsRequest
func UA_GetEndpointsRequest_encodeBinary(src []UA_GetEndpointsRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[137]))[:], bufPos, bufEnd, nil, nil)
}
// UA_GetEndpointsRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2408
func UA_GetEndpointsRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_GetEndpointsRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[137]))[:], 0, nil)
}
// UA_PublishRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2414
// PublishRequest
func UA_PublishRequest_encodeBinary(src []UA_PublishRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[138]))[:], bufPos, bufEnd, nil, nil)
}
// UA_PublishRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2418
func UA_PublishRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_PublishRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[138]))[:], 0, nil)
}
// UA_DeleteSubscriptionsResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2424
// DeleteSubscriptionsResponse
func UA_DeleteSubscriptionsResponse_encodeBinary(src []UA_DeleteSubscriptionsResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[139]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeleteSubscriptionsResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2428
func UA_DeleteSubscriptionsResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DeleteSubscriptionsResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[139]))[:], 0, nil)
}
// UA_AddNodesResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2434
// AddNodesResponse
func UA_AddNodesResponse_encodeBinary(src []UA_AddNodesResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[140]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AddNodesResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2438
func UA_AddNodesResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AddNodesResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[140]))[:], 0, nil)
}
// UA_DataChangeNotification_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2444
// DataChangeNotification
func UA_DataChangeNotification_encodeBinary(src []UA_DataChangeNotification, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[141]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DataChangeNotification_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2448
func UA_DataChangeNotification_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DataChangeNotification) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[141]))[:], 0, nil)
}
// UA_CloseSecureChannelResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2454
// CloseSecureChannelResponse
func UA_CloseSecureChannelResponse_encodeBinary(src []UA_CloseSecureChannelResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[142]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CloseSecureChannelResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2458
func UA_CloseSecureChannelResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CloseSecureChannelResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[142]))[:], 0, nil)
}
// UA_ModifyMonitoredItemsRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2464
// ModifyMonitoredItemsRequest
func UA_ModifyMonitoredItemsRequest_encodeBinary(src []UA_ModifyMonitoredItemsRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[143]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ModifyMonitoredItemsRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2468
func UA_ModifyMonitoredItemsRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ModifyMonitoredItemsRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[143]))[:], 0, nil)
}
// UA_SetMonitoringModeResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2474
// SetMonitoringModeResponse
func UA_SetMonitoringModeResponse_encodeBinary(src []UA_SetMonitoringModeResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[144]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SetMonitoringModeResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2478
func UA_SetMonitoringModeResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SetMonitoringModeResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[144]))[:], 0, nil)
}
// UA_FindServersRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2484
// FindServersRequest
func UA_FindServersRequest_encodeBinary(src []UA_FindServersRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[145]))[:], bufPos, bufEnd, nil, nil)
}
// UA_FindServersRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2488
func UA_FindServersRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_FindServersRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[145]))[:], 0, nil)
}
// UA_ReferenceDescription_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2494
// ReferenceDescription
func UA_ReferenceDescription_encodeBinary(src []UA_ReferenceDescription, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[146]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ReferenceDescription_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2498
func UA_ReferenceDescription_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ReferenceDescription) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[146]))[:], 0, nil)
}
// UA_SetPublishingModeResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2504
// SetPublishingModeResponse
func UA_SetPublishingModeResponse_encodeBinary(src []UA_SetPublishingModeResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[147]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SetPublishingModeResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2508
func UA_SetPublishingModeResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SetPublishingModeResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[147]))[:], 0, nil)
}
// UA_ContentFilterResult_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2514
// ContentFilterResult
func UA_ContentFilterResult_encodeBinary(src []UA_ContentFilterResult, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[148]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ContentFilterResult_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2518
func UA_ContentFilterResult_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ContentFilterResult) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[148]))[:], 0, nil)
}
// UA_RegisterServerResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2524
// RegisterServerResponse
func UA_RegisterServerResponse_encodeBinary(src []UA_RegisterServerResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[149]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RegisterServerResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2528
func UA_RegisterServerResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RegisterServerResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[149]))[:], 0, nil)
}
// UA_AddReferencesItem_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2534
// AddReferencesItem
func UA_AddReferencesItem_encodeBinary(src []UA_AddReferencesItem, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[150]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AddReferencesItem_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2538
func UA_AddReferencesItem_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AddReferencesItem) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[150]))[:], 0, nil)
}
// UA_QueryDataDescription_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2544
// QueryDataDescription
func UA_QueryDataDescription_encodeBinary(src []UA_QueryDataDescription, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[151]))[:], bufPos, bufEnd, nil, nil)
}
// UA_QueryDataDescription_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2548
func UA_QueryDataDescription_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_QueryDataDescription) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[151]))[:], 0, nil)
}
// UA_CreateSubscriptionResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2554
// CreateSubscriptionResponse
func UA_CreateSubscriptionResponse_encodeBinary(src []UA_CreateSubscriptionResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[152]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CreateSubscriptionResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2558
func UA_CreateSubscriptionResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CreateSubscriptionResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[152]))[:], 0, nil)
}
// UA_NetworkGroupDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2564
// NetworkGroupDataType
func UA_NetworkGroupDataType_encodeBinary(src []UA_NetworkGroupDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[153]))[:], bufPos, bufEnd, nil, nil)
}
// UA_NetworkGroupDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2568
func UA_NetworkGroupDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_NetworkGroupDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[153]))[:], 0, nil)
}
// UA_DeleteReferencesResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2574
// DeleteReferencesResponse
func UA_DeleteReferencesResponse_encodeBinary(src []UA_DeleteReferencesResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[154]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeleteReferencesResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2578
func UA_DeleteReferencesResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DeleteReferencesResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[154]))[:], 0, nil)
}
// UA_CreateMonitoredItemsResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2584
// CreateMonitoredItemsResponse
func UA_CreateMonitoredItemsResponse_encodeBinary(src []UA_CreateMonitoredItemsResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[155]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CreateMonitoredItemsResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2588
func UA_CreateMonitoredItemsResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CreateMonitoredItemsResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[155]))[:], 0, nil)
}
// UA_CallResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2594
// CallResponse
func UA_CallResponse_encodeBinary(src []UA_CallResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[156]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CallResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2598
func UA_CallResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CallResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[156]))[:], 0, nil)
}
// UA_DeleteNodesResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2604
// DeleteNodesResponse
func UA_DeleteNodesResponse_encodeBinary(src []UA_DeleteNodesResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[157]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeleteNodesResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2608
func UA_DeleteNodesResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DeleteNodesResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[157]))[:], 0, nil)
}
// UA_RepublishResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2614
// RepublishResponse
func UA_RepublishResponse_encodeBinary(src []UA_RepublishResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[158]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RepublishResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2618
func UA_RepublishResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RepublishResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[158]))[:], 0, nil)
}
// UA_MonitoredItemCreateRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2624
// MonitoredItemCreateRequest
func UA_MonitoredItemCreateRequest_encodeBinary(src []UA_MonitoredItemCreateRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[159]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MonitoredItemCreateRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2628
func UA_MonitoredItemCreateRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_MonitoredItemCreateRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[159]))[:], 0, nil)
}
// UA_DeleteReferencesRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2634
// DeleteReferencesRequest
func UA_DeleteReferencesRequest_encodeBinary(src []UA_DeleteReferencesRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[160]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DeleteReferencesRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2638
func UA_DeleteReferencesRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DeleteReferencesRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[160]))[:], 0, nil)
}
// UA_ReadResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2644
// ReadResponse
func UA_ReadResponse_encodeBinary(src []UA_ReadResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[161]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ReadResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2648
func UA_ReadResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ReadResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[161]))[:], 0, nil)
}
// UA_AddReferencesRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2654
// AddReferencesRequest
func UA_AddReferencesRequest_encodeBinary(src []UA_AddReferencesRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[162]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AddReferencesRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2658
func UA_AddReferencesRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AddReferencesRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[162]))[:], 0, nil)
}
// UA_ReadRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2664
// ReadRequest
func UA_ReadRequest_encodeBinary(src []UA_ReadRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[163]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ReadRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2668
func UA_ReadRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ReadRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[163]))[:], 0, nil)
}
// UA_OpenSecureChannelRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2674
// OpenSecureChannelRequest
func UA_OpenSecureChannelRequest_encodeBinary(src []UA_OpenSecureChannelRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[164]))[:], bufPos, bufEnd, nil, nil)
}
// UA_OpenSecureChannelRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2678
func UA_OpenSecureChannelRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_OpenSecureChannelRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[164]))[:], 0, nil)
}
// UA_RegisterServer2Response_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2684
// RegisterServer2Response
func UA_RegisterServer2Response_encodeBinary(src []UA_RegisterServer2Response, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[165]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RegisterServer2Response_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2688
func UA_RegisterServer2Response_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RegisterServer2Response) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[165]))[:], 0, nil)
}
// UA_AddNodesItem_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2694
// AddNodesItem
func UA_AddNodesItem_encodeBinary(src []UA_AddNodesItem, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[166]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AddNodesItem_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2698
func UA_AddNodesItem_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AddNodesItem) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[166]))[:], 0, nil)
}
// UA_NodeTypeDescription_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2704
// NodeTypeDescription
func UA_NodeTypeDescription_encodeBinary(src []UA_NodeTypeDescription, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[167]))[:], bufPos, bufEnd, nil, nil)
}
// UA_NodeTypeDescription_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2708
func UA_NodeTypeDescription_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_NodeTypeDescription) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[167]))[:], 0, nil)
}
// UA_ServerStatusDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2714
// ServerStatusDataType
func UA_ServerStatusDataType_encodeBinary(src []UA_ServerStatusDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[168]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ServerStatusDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2718
func UA_ServerStatusDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ServerStatusDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[168]))[:], 0, nil)
}
// UA_AttributeOperand_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2724
// AttributeOperand
func UA_AttributeOperand_encodeBinary(src []UA_AttributeOperand, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[169]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AttributeOperand_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2728
func UA_AttributeOperand_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AttributeOperand) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[169]))[:], 0, nil)
}
// UA_AddReferencesResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2734
// AddReferencesResponse
func UA_AddReferencesResponse_encodeBinary(src []UA_AddReferencesResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[170]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AddReferencesResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2738
func UA_AddReferencesResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AddReferencesResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[170]))[:], 0, nil)
}
// UA_EventFilterResult_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2744
// EventFilterResult
func UA_EventFilterResult_encodeBinary(src []UA_EventFilterResult, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[171]))[:], bufPos, bufEnd, nil, nil)
}
// UA_EventFilterResult_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2748
func UA_EventFilterResult_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_EventFilterResult) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[171]))[:], 0, nil)
}
// UA_TranslateBrowsePathsToNodeIdsResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2754
// TranslateBrowsePathsToNodeIdsResponse
func UA_TranslateBrowsePathsToNodeIdsResponse_encodeBinary(src []UA_TranslateBrowsePathsToNodeIdsResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[172]))[:], bufPos, bufEnd, nil, nil)
}
// UA_TranslateBrowsePathsToNodeIdsResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2758
func UA_TranslateBrowsePathsToNodeIdsResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_TranslateBrowsePathsToNodeIdsResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[172]))[:], 0, nil)
}
// UA_DataChangeFilter_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2764
// DataChangeFilter
func UA_DataChangeFilter_encodeBinary(src []UA_DataChangeFilter, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[173]))[:], bufPos, bufEnd, nil, nil)
}
// UA_DataChangeFilter_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2768
func UA_DataChangeFilter_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_DataChangeFilter) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[173]))[:], 0, nil)
}
// UA_ContentFilterElement_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2774
// ContentFilterElement
func UA_ContentFilterElement_encodeBinary(src []UA_ContentFilterElement, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[174]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ContentFilterElement_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2778
func UA_ContentFilterElement_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ContentFilterElement) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[174]))[:], 0, nil)
}
// UA_TranslateBrowsePathsToNodeIdsRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2784
// TranslateBrowsePathsToNodeIdsRequest
func UA_TranslateBrowsePathsToNodeIdsRequest_encodeBinary(src []UA_TranslateBrowsePathsToNodeIdsRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[175]))[:], bufPos, bufEnd, nil, nil)
}
// UA_TranslateBrowsePathsToNodeIdsRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2788
func UA_TranslateBrowsePathsToNodeIdsRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_TranslateBrowsePathsToNodeIdsRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[175]))[:], 0, nil)
}
// UA_CloseSessionResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2794
// CloseSessionResponse
func UA_CloseSessionResponse_encodeBinary(src []UA_CloseSessionResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[176]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CloseSessionResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2798
func UA_CloseSessionResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CloseSessionResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[176]))[:], 0, nil)
}
// UA_ApplicationDescription_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2804
// ApplicationDescription
func UA_ApplicationDescription_encodeBinary(src []UA_ApplicationDescription, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[177]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ApplicationDescription_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2808
func UA_ApplicationDescription_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ApplicationDescription) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[177]))[:], 0, nil)
}
// UA_SessionDiagnosticsDataType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2814
// SessionDiagnosticsDataType
func UA_SessionDiagnosticsDataType_encodeBinary(src []UA_SessionDiagnosticsDataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[178]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SessionDiagnosticsDataType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2818
func UA_SessionDiagnosticsDataType_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SessionDiagnosticsDataType) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[178]))[:], 0, nil)
}
// UA_ServiceFault_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2824
// ServiceFault
func UA_ServiceFault_encodeBinary(src []UA_ServiceFault, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[179]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ServiceFault_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2828
func UA_ServiceFault_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ServiceFault) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[179]))[:], 0, nil)
}
// UA_RegisteredServer_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2834
// RegisteredServer
func UA_RegisteredServer_encodeBinary(src []UA_RegisteredServer, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[180]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RegisteredServer_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2838
func UA_RegisteredServer_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RegisteredServer) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[180]))[:], 0, nil)
}
// UA_AggregateFilter_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2844
// AggregateFilter
func UA_AggregateFilter_encodeBinary(src []UA_AggregateFilter, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[181]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AggregateFilter_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2848
func UA_AggregateFilter_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AggregateFilter) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[181]))[:], 0, nil)
}
// UA_RegisterServerRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2854
// RegisterServerRequest
func UA_RegisterServerRequest_encodeBinary(src []UA_RegisterServerRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[182]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RegisterServerRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2858
func UA_RegisterServerRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RegisterServerRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[182]))[:], 0, nil)
}
// UA_EndpointDescription_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2864
// EndpointDescription
func UA_EndpointDescription_encodeBinary(src []UA_EndpointDescription, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[183]))[:], bufPos, bufEnd, nil, nil)
}
// UA_EndpointDescription_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2868
func UA_EndpointDescription_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_EndpointDescription) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[183]))[:], 0, nil)
}
// UA_CreateMonitoredItemsRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2874
// CreateMonitoredItemsRequest
func UA_CreateMonitoredItemsRequest_encodeBinary(src []UA_CreateMonitoredItemsRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[184]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CreateMonitoredItemsRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2878
func UA_CreateMonitoredItemsRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CreateMonitoredItemsRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[184]))[:], 0, nil)
}
// UA_ContentFilter_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2884
// ContentFilter
func UA_ContentFilter_encodeBinary(src []UA_ContentFilter, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[185]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ContentFilter_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2888
func UA_ContentFilter_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_ContentFilter) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[185]))[:], 0, nil)
}
// UA_QueryFirstResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2894
// QueryFirstResponse
func UA_QueryFirstResponse_encodeBinary(src []UA_QueryFirstResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[186]))[:], bufPos, bufEnd, nil, nil)
}
// UA_QueryFirstResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2898
func UA_QueryFirstResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_QueryFirstResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[186]))[:], 0, nil)
}
// UA_AddNodesRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2904
// AddNodesRequest
func UA_AddNodesRequest_encodeBinary(src []UA_AddNodesRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[187]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AddNodesRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2908
func UA_AddNodesRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AddNodesRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[187]))[:], 0, nil)
}
// UA_BrowseRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2914
// BrowseRequest
func UA_BrowseRequest_encodeBinary(src []UA_BrowseRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[188]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowseRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2918
func UA_BrowseRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_BrowseRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[188]))[:], 0, nil)
}
// UA_BrowseResult_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2924
// BrowseResult
func UA_BrowseResult_encodeBinary(src []UA_BrowseResult, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[189]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowseResult_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2928
func UA_BrowseResult_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_BrowseResult) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[189]))[:], 0, nil)
}
// UA_RegisterServer2Request_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2934
// RegisterServer2Request
func UA_RegisterServer2Request_encodeBinary(src []UA_RegisterServer2Request, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[190]))[:], bufPos, bufEnd, nil, nil)
}
// UA_RegisterServer2Request_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2938
func UA_RegisterServer2Request_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_RegisterServer2Request) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[190]))[:], 0, nil)
}
// UA_CreateSessionRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2944
// CreateSessionRequest
func UA_CreateSessionRequest_encodeBinary(src []UA_CreateSessionRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[191]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CreateSessionRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2948
func UA_CreateSessionRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CreateSessionRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[191]))[:], 0, nil)
}
// UA_EventFilter_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2954
// EventFilter
func UA_EventFilter_encodeBinary(src []UA_EventFilter, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[192]))[:], bufPos, bufEnd, nil, nil)
}
// UA_EventFilter_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2958
func UA_EventFilter_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_EventFilter) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[192]))[:], 0, nil)
}
// UA_GetEndpointsResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2964
// GetEndpointsResponse
func UA_GetEndpointsResponse_encodeBinary(src []UA_GetEndpointsResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[193]))[:], bufPos, bufEnd, nil, nil)
}
// UA_GetEndpointsResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2968
func UA_GetEndpointsResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_GetEndpointsResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[193]))[:], 0, nil)
}
// UA_FindServersResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2974
// FindServersResponse
func UA_FindServersResponse_encodeBinary(src []UA_FindServersResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[194]))[:], bufPos, bufEnd, nil, nil)
}
// UA_FindServersResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2978
func UA_FindServersResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_FindServersResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[194]))[:], 0, nil)
}
// UA_BrowseNextResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2984
// BrowseNextResponse
func UA_BrowseNextResponse_encodeBinary(src []UA_BrowseNextResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[195]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowseNextResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2988
func UA_BrowseNextResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_BrowseNextResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[195]))[:], 0, nil)
}
// UA_BrowseResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2994
// BrowseResponse
func UA_BrowseResponse_encodeBinary(src []UA_BrowseResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[196]))[:], bufPos, bufEnd, nil, nil)
}
// UA_BrowseResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:2998
func UA_BrowseResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_BrowseResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[196]))[:], 0, nil)
}
// UA_CreateSessionResponse_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3004
// CreateSessionResponse
func UA_CreateSessionResponse_encodeBinary(src []UA_CreateSessionResponse, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[197]))[:], bufPos, bufEnd, nil, nil)
}
// UA_CreateSessionResponse_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3008
func UA_CreateSessionResponse_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_CreateSessionResponse) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[197]))[:], 0, nil)
}
// UA_QueryFirstRequest_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3014
// QueryFirstRequest
func UA_QueryFirstRequest_encodeBinary(src []UA_QueryFirstRequest, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[198]))[:], bufPos, bufEnd, nil, nil)
}
// UA_QueryFirstRequest_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3018
func UA_QueryFirstRequest_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_QueryFirstRequest) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[198]))[:], 0, nil)
}

var// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3044 :Cannot casting { -> UA_DataType [12]}. err = cFromType is empty
UA_TRANSPORT []UA_DataType = make([]UA_DataType, 12)

type UA_SecureConversationMessageAbortBody struct {
	error  UA_UInt32
	reason UA_String
}
type UA_SecureConversationMessageFooter struct {
	paddingSize uint
	padding     []UA_Byte
	signature   UA_Byte
}
type UA_TcpHelloMessage struct {
	protocolVersion   UA_UInt32
	receiveBufferSize UA_UInt32
	sendBufferSize    UA_UInt32
	maxMessageSize    UA_UInt32
	maxChunkCount     UA_UInt32
	endpointUrl       UA_String
}
type UA_TcpErrorMessage struct {
	error  UA_UInt32
	reason UA_String
}

const (
	UA_MESSAGETYPE_ACK          int = 4932417
	UA_MESSAGETYPE_HEL              = 4998472
	UA_MESSAGETYPE_MSG              = 4674381
	UA_MESSAGETYPE_OPN              = 5132367
	UA_MESSAGETYPE_CLO              = 5196867
	UA_MESSAGETYPE_ERR              = 5395013
	__UA_MESSAGETYPE_FORCE32BIT     = 2147483647
)

type UA_MessageType int
type UA_AsymmetricAlgorithmSecurityHeader struct {
	securityPolicyUri             UA_ByteString
	senderCertificate             UA_ByteString
	receiverCertificateThumbprint UA_ByteString
}
type UA_TcpAcknowledgeMessage struct {
	protocolVersion   UA_UInt32
	receiveBufferSize UA_UInt32
	sendBufferSize    UA_UInt32
	maxMessageSize    UA_UInt32
	maxChunkCount     UA_UInt32
}
type UA_SequenceHeader struct {
	sequenceNumber UA_UInt32
	requestId      UA_UInt32
}
type UA_TcpMessageHeader struct {
	messageTypeAndChunkType UA_UInt32
	messageSize             UA_UInt32
}

const (
	UA_CHUNKTYPE_FINAL        int = 1174405120
	UA_CHUNKTYPE_INTERMEDIATE     = 1124073472
	UA_CHUNKTYPE_ABORT            = 1090519040
	__UA_CHUNKTYPE_FORCE32BIT     = 2147483647
)

type UA_ChunkType int
type UA_SymmetricAlgorithmSecurityHeader struct {
	tokenId UA_UInt32
}
type UA_SecureConversationMessageHeader struct {
	messageHeader   UA_TcpMessageHeader
	secureChannelId UA_UInt32
}
// UA_SecureConversationMessageAbortBody_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3219
// amalgamated original file "/home/travis/build/open62541/open62541/build/src_generated/ua_transport_generated.h"
// Generated from Opc.Ua.Types.bsd, Custom.Opc.Ua.Transport.bsd with script /home/travis/build/open62541/open62541/tools/generate_datatypes.py
// * on host travis-job-58e35654-0d0b-419b-8d10-2d50a5ceef65 by user travis at 2018-06-12 07:23:58
//
// * Every type is assigned an index in an array containing the type descriptions.
// * These descriptions are used during type handling (copying, deletion,
// * binary encoding, ...).
//
// * SecureConversationMessageAbortBody
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
// * Secure Conversation Message Abort Body
//
// * SecureConversationMessageFooter
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
// * Secure Conversation Message Footer
//
// * TcpHelloMessage
// * ^^^^^^^^^^^^^^^
// * Hello Message
//
// * TcpErrorMessage
// * ^^^^^^^^^^^^^^^
// * Error Message
//
// * MessageType
// * ^^^^^^^^^^^
// * Message Type and whether the message contains an intermediate chunk
//
// * AsymmetricAlgorithmSecurityHeader
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
// * Security Header
//
// * TcpAcknowledgeMessage
// * ^^^^^^^^^^^^^^^^^^^^^
// * Acknowledge Message
//
// * SequenceHeader
// * ^^^^^^^^^^^^^^
// * Secure Layer Sequence Header
//
// * TcpMessageHeader
// * ^^^^^^^^^^^^^^^^
// * TCP Header
//
// * ChunkType
// * ^^^^^^^^^
// * Type of the chunk
//
// * SymmetricAlgorithmSecurityHeader
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
// * Secure Layer Symmetric Algorithm Header
//
// * SecureConversationMessageHeader
// * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
// * Secure Layer Sequence Header
// amalgamated original file "/home/travis/build/open62541/open62541/build/src_generated/ua_transport_generated_handling.h"
// Generated from Opc.Ua.Types.bsd, Custom.Opc.Ua.Transport.bsd with script /home/travis/build/open62541/open62541/tools/generate_datatypes.py
// * on host travis-job-58e35654-0d0b-419b-8d10-2d50a5ceef65 by user travis at 2018-06-12 07:23:58
// SecureConversationMessageAbortBody
func UA_SecureConversationMessageAbortBody_init(p []UA_SecureConversationMessageAbortBody) {
	// Warning (*ast.StaticAssertDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3170 :cannot transpile to node: &ast.StaticAssertDecl{Addr:0x56359e390400, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c", Line:3170, LineEnd:0, Column:1, ColumnEnd:78, StringValue:""}, Position2:"col:1", ChildNodes:[]ast.Node{(*ast.BinaryOperator)(0xc0047e5220), (*ast.StringLiteral)(0xc003526ea0)}}
	noarch.Memset(p, byte(0), 24)
}
// UA_SecureConversationMessageAbortBody_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3224
func UA_SecureConversationMessageAbortBody_new() []UA_SecureConversationMessageAbortBody {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[0]))[:]).([]UA_SecureConversationMessageAbortBody)
}
// UA_SecureConversationMessageAbortBody_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3229
func UA_SecureConversationMessageAbortBody_copy(src []UA_SecureConversationMessageAbortBody, dst []UA_SecureConversationMessageAbortBody) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[0]))[:])
}
// UA_SecureConversationMessageAbortBody_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3234
func UA_SecureConversationMessageAbortBody_deleteMembers(p []UA_SecureConversationMessageAbortBody) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[0]))[:])
}
// UA_SecureConversationMessageAbortBody_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3239
func UA_SecureConversationMessageAbortBody_delete(p []UA_SecureConversationMessageAbortBody) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[0]))[:])
}
// UA_SecureConversationMessageFooter_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3245
// SecureConversationMessageFooter
func UA_SecureConversationMessageFooter_init(p []UA_SecureConversationMessageFooter) {
	noarch.Memset(p, byte(0), 24)
}
// UA_SecureConversationMessageFooter_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3250
func UA_SecureConversationMessageFooter_new() []UA_SecureConversationMessageFooter {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[1]))[:]).([]UA_SecureConversationMessageFooter)
}
// UA_SecureConversationMessageFooter_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3255
func UA_SecureConversationMessageFooter_copy(src []UA_SecureConversationMessageFooter, dst []UA_SecureConversationMessageFooter) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[1]))[:])
}
// UA_SecureConversationMessageFooter_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3260
func UA_SecureConversationMessageFooter_deleteMembers(p []UA_SecureConversationMessageFooter) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[1]))[:])
}
// UA_SecureConversationMessageFooter_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3265
func UA_SecureConversationMessageFooter_delete(p []UA_SecureConversationMessageFooter) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[1]))[:])
}
// UA_TcpHelloMessage_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3271
// TcpHelloMessage
func UA_TcpHelloMessage_init(p []UA_TcpHelloMessage) {
	noarch.Memset(p, byte(0), 40)
}
// UA_TcpHelloMessage_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3276
func UA_TcpHelloMessage_new() []UA_TcpHelloMessage {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[2]))[:]).([]UA_TcpHelloMessage)
}
// UA_TcpHelloMessage_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3281
func UA_TcpHelloMessage_copy(src []UA_TcpHelloMessage, dst []UA_TcpHelloMessage) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[2]))[:])
}
// UA_TcpHelloMessage_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3286
func UA_TcpHelloMessage_deleteMembers(p []UA_TcpHelloMessage) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[2]))[:])
}
// UA_TcpHelloMessage_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3291
func UA_TcpHelloMessage_delete(p []UA_TcpHelloMessage) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[2]))[:])
}
// UA_TcpErrorMessage_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3297
// TcpErrorMessage
func UA_TcpErrorMessage_init(p []UA_TcpErrorMessage) {
	noarch.Memset(p, byte(0), 24)
}
// UA_TcpErrorMessage_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3302
func UA_TcpErrorMessage_new() []UA_TcpErrorMessage {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[3]))[:]).([]UA_TcpErrorMessage)
}
// UA_TcpErrorMessage_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3307
func UA_TcpErrorMessage_copy(src []UA_TcpErrorMessage, dst []UA_TcpErrorMessage) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[3]))[:])
}
// UA_TcpErrorMessage_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3312
func UA_TcpErrorMessage_deleteMembers(p []UA_TcpErrorMessage) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[3]))[:])
}
// UA_TcpErrorMessage_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3317
func UA_TcpErrorMessage_delete(p []UA_TcpErrorMessage) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[3]))[:])
}
// UA_MessageType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3323
// MessageType
func UA_MessageType_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_MessageType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3328
func UA_MessageType_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[4]))[:]).([]int)
}
// UA_MessageType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3333
func UA_MessageType_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_MessageType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3339
func UA_MessageType_deleteMembers(p []int) {
}
// UA_MessageType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3342
func UA_MessageType_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[4]))[:])
}
// UA_AsymmetricAlgorithmSecurityHeader_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3348
// AsymmetricAlgorithmSecurityHeader
func UA_AsymmetricAlgorithmSecurityHeader_init(p []UA_AsymmetricAlgorithmSecurityHeader) {
	noarch.Memset(p, byte(0), 48)
}
// UA_AsymmetricAlgorithmSecurityHeader_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3353
func UA_AsymmetricAlgorithmSecurityHeader_new() []UA_AsymmetricAlgorithmSecurityHeader {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[5]))[:]).([]UA_AsymmetricAlgorithmSecurityHeader)
}
// UA_AsymmetricAlgorithmSecurityHeader_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3358
func UA_AsymmetricAlgorithmSecurityHeader_copy(src []UA_AsymmetricAlgorithmSecurityHeader, dst []UA_AsymmetricAlgorithmSecurityHeader) UA_StatusCode {
	return UA_copy(src, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[5]))[:])
}
// UA_AsymmetricAlgorithmSecurityHeader_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3363
func UA_AsymmetricAlgorithmSecurityHeader_deleteMembers(p []UA_AsymmetricAlgorithmSecurityHeader) {
	UA_deleteMembers(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[5]))[:])
}
// UA_AsymmetricAlgorithmSecurityHeader_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3368
func UA_AsymmetricAlgorithmSecurityHeader_delete(p []UA_AsymmetricAlgorithmSecurityHeader) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[5]))[:])
}
// UA_TcpAcknowledgeMessage_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3374
// TcpAcknowledgeMessage
func UA_TcpAcknowledgeMessage_init(p []UA_TcpAcknowledgeMessage) {
	noarch.Memset(p, byte(0), 24)
}
// UA_TcpAcknowledgeMessage_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3379
func UA_TcpAcknowledgeMessage_new() []UA_TcpAcknowledgeMessage {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[6]))[:]).([]UA_TcpAcknowledgeMessage)
}
// UA_TcpAcknowledgeMessage_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3384
func UA_TcpAcknowledgeMessage_copy(src []UA_TcpAcknowledgeMessage, dst []UA_TcpAcknowledgeMessage) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_TcpAcknowledgeMessage_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3390
func UA_TcpAcknowledgeMessage_deleteMembers(p []UA_TcpAcknowledgeMessage) {
}
// UA_TcpAcknowledgeMessage_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3393
func UA_TcpAcknowledgeMessage_delete(p []UA_TcpAcknowledgeMessage) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[6]))[:])
}
// UA_SequenceHeader_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3399
// SequenceHeader
func UA_SequenceHeader_init(p []UA_SequenceHeader) {
	noarch.Memset(p, byte(0), 8)
}
// UA_SequenceHeader_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3404
func UA_SequenceHeader_new() []UA_SequenceHeader {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[7]))[:]).([]UA_SequenceHeader)
}
// UA_SequenceHeader_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3409
func UA_SequenceHeader_copy(src []UA_SequenceHeader, dst []UA_SequenceHeader) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_SequenceHeader_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3415
func UA_SequenceHeader_deleteMembers(p []UA_SequenceHeader) {
}
// UA_SequenceHeader_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3418
func UA_SequenceHeader_delete(p []UA_SequenceHeader) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[7]))[:])
}
// UA_TcpMessageHeader_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3424
// TcpMessageHeader
func UA_TcpMessageHeader_init(p []UA_TcpMessageHeader) {
	noarch.Memset(p, byte(0), 8)
}
// UA_TcpMessageHeader_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3429
func UA_TcpMessageHeader_new() []UA_TcpMessageHeader {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[8]))[:]).([]UA_TcpMessageHeader)
}
// UA_TcpMessageHeader_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3434
func UA_TcpMessageHeader_copy(src []UA_TcpMessageHeader, dst []UA_TcpMessageHeader) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_TcpMessageHeader_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3440
func UA_TcpMessageHeader_deleteMembers(p []UA_TcpMessageHeader) {
}
// UA_TcpMessageHeader_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3443
func UA_TcpMessageHeader_delete(p []UA_TcpMessageHeader) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[8]))[:])
}
// UA_ChunkType_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3449
// ChunkType
func UA_ChunkType_init(p []int) {
	noarch.Memset(p, byte(0), 4)
}
// UA_ChunkType_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3454
func UA_ChunkType_new() []int {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[9]))[:]).([]int)
}
// UA_ChunkType_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3459
func UA_ChunkType_copy(src []int, dst []int) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_ChunkType_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3465
func UA_ChunkType_deleteMembers(p []int) {
}
// UA_ChunkType_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3468
func UA_ChunkType_delete(p []int) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[9]))[:])
}
// UA_SymmetricAlgorithmSecurityHeader_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3474
// SymmetricAlgorithmSecurityHeader
func UA_SymmetricAlgorithmSecurityHeader_init(p []UA_SymmetricAlgorithmSecurityHeader) {
	noarch.Memset(p, byte(0), 8)
}
// UA_SymmetricAlgorithmSecurityHeader_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3479
func UA_SymmetricAlgorithmSecurityHeader_new() []UA_SymmetricAlgorithmSecurityHeader {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[10]))[:]).([]UA_SymmetricAlgorithmSecurityHeader)
}
// UA_SymmetricAlgorithmSecurityHeader_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3484
func UA_SymmetricAlgorithmSecurityHeader_copy(src []UA_SymmetricAlgorithmSecurityHeader, dst []UA_SymmetricAlgorithmSecurityHeader) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_SymmetricAlgorithmSecurityHeader_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3490
func UA_SymmetricAlgorithmSecurityHeader_deleteMembers(p []UA_SymmetricAlgorithmSecurityHeader) {
}
// UA_SymmetricAlgorithmSecurityHeader_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3493
func UA_SymmetricAlgorithmSecurityHeader_delete(p []UA_SymmetricAlgorithmSecurityHeader) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[10]))[:])
}
// UA_SecureConversationMessageHeader_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3499
// SecureConversationMessageHeader
func UA_SecureConversationMessageHeader_init(p []UA_SecureConversationMessageHeader) {
	noarch.Memset(p, byte(0), 16)
}
// UA_SecureConversationMessageHeader_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3504
func UA_SecureConversationMessageHeader_new() []UA_SecureConversationMessageHeader {
	return UA_new((*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[11]))[:]).([]UA_SecureConversationMessageHeader)
}
// UA_SecureConversationMessageHeader_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3509
func UA_SecureConversationMessageHeader_copy(src []UA_SecureConversationMessageHeader, dst []UA_SecureConversationMessageHeader) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// UA_SecureConversationMessageHeader_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3515
func UA_SecureConversationMessageHeader_deleteMembers(p []UA_SecureConversationMessageHeader) {
}
// UA_SecureConversationMessageHeader_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3518
func UA_SecureConversationMessageHeader_delete(p []UA_SecureConversationMessageHeader) {
	UA_delete(p, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[11]))[:])
}
// UA_SecureConversationMessageAbortBody_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3539
// amalgamated original file "/home/travis/build/open62541/open62541/build/src_generated/ua_transport_generated_encoding_binary.h"
// Generated from Opc.Ua.Types.bsd, Custom.Opc.Ua.Transport.bsd with script /home/travis/build/open62541/open62541/tools/generate_datatypes.py
// * on host travis-job-58e35654-0d0b-419b-8d10-2d50a5ceef65 by user travis at 2018-06-12 07:23:58
// SecureConversationMessageAbortBody
func UA_SecureConversationMessageAbortBody_encodeBinary(src []UA_SecureConversationMessageAbortBody, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[0]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SecureConversationMessageAbortBody_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3543
func UA_SecureConversationMessageAbortBody_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SecureConversationMessageAbortBody) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[0]))[:], 0, nil)
}
// UA_SecureConversationMessageFooter_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3549
// SecureConversationMessageFooter
func UA_SecureConversationMessageFooter_encodeBinary(src []UA_SecureConversationMessageFooter, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[1]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SecureConversationMessageFooter_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3553
func UA_SecureConversationMessageFooter_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SecureConversationMessageFooter) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[1]))[:], 0, nil)
}
// UA_TcpHelloMessage_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3559
// TcpHelloMessage
func UA_TcpHelloMessage_encodeBinary(src []UA_TcpHelloMessage, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[2]))[:], bufPos, bufEnd, nil, nil)
}
// UA_TcpHelloMessage_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3563
func UA_TcpHelloMessage_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_TcpHelloMessage) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[2]))[:], 0, nil)
}
// UA_TcpErrorMessage_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3569
// TcpErrorMessage
func UA_TcpErrorMessage_encodeBinary(src []UA_TcpErrorMessage, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[3]))[:], bufPos, bufEnd, nil, nil)
}
// UA_TcpErrorMessage_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3573
func UA_TcpErrorMessage_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_TcpErrorMessage) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[3]))[:], 0, nil)
}
// UA_MessageType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3579
// MessageType
func UA_MessageType_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[4]))[:], bufPos, bufEnd, nil, nil)
}
// UA_MessageType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3583
func UA_MessageType_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[4]))[:], 0, nil)
}
// UA_AsymmetricAlgorithmSecurityHeader_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3589
// AsymmetricAlgorithmSecurityHeader
func UA_AsymmetricAlgorithmSecurityHeader_encodeBinary(src []UA_AsymmetricAlgorithmSecurityHeader, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[5]))[:], bufPos, bufEnd, nil, nil)
}
// UA_AsymmetricAlgorithmSecurityHeader_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3593
func UA_AsymmetricAlgorithmSecurityHeader_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_AsymmetricAlgorithmSecurityHeader) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[5]))[:], 0, nil)
}
// UA_TcpAcknowledgeMessage_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3599
// TcpAcknowledgeMessage
func UA_TcpAcknowledgeMessage_encodeBinary(src []UA_TcpAcknowledgeMessage, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[6]))[:], bufPos, bufEnd, nil, nil)
}
// UA_TcpAcknowledgeMessage_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3603
func UA_TcpAcknowledgeMessage_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_TcpAcknowledgeMessage) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[6]))[:], 0, nil)
}
// UA_SequenceHeader_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3609
// SequenceHeader
func UA_SequenceHeader_encodeBinary(src []UA_SequenceHeader, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[7]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SequenceHeader_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3613
func UA_SequenceHeader_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SequenceHeader) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[7]))[:], 0, nil)
}
// UA_TcpMessageHeader_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3619
// TcpMessageHeader
func UA_TcpMessageHeader_encodeBinary(src []UA_TcpMessageHeader, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[8]))[:], bufPos, bufEnd, nil, nil)
}
// UA_TcpMessageHeader_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3623
func UA_TcpMessageHeader_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_TcpMessageHeader) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[8]))[:], 0, nil)
}
// UA_ChunkType_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3629
// ChunkType
func UA_ChunkType_encodeBinary(src []int, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[9]))[:], bufPos, bufEnd, nil, nil)
}
// UA_ChunkType_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3633
func UA_ChunkType_decodeBinary(src []UA_ByteString, offset []uint, dst []int) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[9]))[:], 0, nil)
}
// UA_SymmetricAlgorithmSecurityHeader_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3639
// SymmetricAlgorithmSecurityHeader
func UA_SymmetricAlgorithmSecurityHeader_encodeBinary(src []UA_SymmetricAlgorithmSecurityHeader, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[10]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SymmetricAlgorithmSecurityHeader_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3643
func UA_SymmetricAlgorithmSecurityHeader_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SymmetricAlgorithmSecurityHeader) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[10]))[:], 0, nil)
}
// UA_SecureConversationMessageHeader_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3649
// SecureConversationMessageHeader
func UA_SecureConversationMessageHeader_encodeBinary(src []UA_SecureConversationMessageHeader, bufPos [][]UA_Byte, bufEnd [][]UA_Byte) UA_StatusCode {
	return UA_encodeBinary(src, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[11]))[:], bufPos, bufEnd, nil, nil)
}
// UA_SecureConversationMessageHeader_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:3653
func UA_SecureConversationMessageHeader_decodeBinary(src []UA_ByteString, offset []uint, dst []UA_SecureConversationMessageHeader) UA_StatusCode {
	return UA_decodeBinary(src, offset, dst, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[11]))[:], 0, nil)
}

type UA_Connection_processChunk func(interface{} , []UA_Connection , []UA_ByteString)(UA_StatusCode)
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_3769_5_ struct {
	le_next []UA_SessionHeader
	le_prev [][]UA_SessionHeader
}
type UA_SessionHeader struct {
	pointers            __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_3769_5_
	authenticationToken UA_NodeId
	channel             []UA_SecureChannel
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_3776_5_ struct {
	sqe_next []ChunkPayload
}
type ChunkPayload struct {
	pointers __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_3776_5_
	bytes    UA_ByteString
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_3781_5_ struct {
	le_next []MessageEntry
	le_prev [][]MessageEntry
}
type chunkpayload_pointerlist struct {
	sqh_first []ChunkPayload
	sqh_last  [][]ChunkPayload
}
type MessageEntry struct {
	pointers         __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_3781_5_
	requestId        UA_UInt32
	chunkPayload     chunkpayload_pointerlist
	chunkPayloadSize uint
}

const (
	UA_SECURECHANNELSTATE_FRESH  int = 0
	UA_SECURECHANNELSTATE_OPEN       = 1
	UA_SECURECHANNELSTATE_CLOSED     = 2
)

type UA_SecureChannelState int
type session_pointerlist struct {
	lh_first []UA_SessionHeader
}
type chunk_pointerlist struct {
	lh_first []MessageEntry
}
type UA_SecureChannel struct {
	state                       int
	securityMode                int
	securityToken               UA_ChannelSecurityToken
	nextSecurityToken           UA_ChannelSecurityToken
	securityPolicy              []UA_SecurityPolicy
	channelContext              interface{}
	connection                  []UA_Connection
	remoteCertificate           UA_ByteString
	remoteCertificateThumbprint [20]UA_Byte
	remoteNonce                 UA_ByteString
	localNonce                  UA_ByteString
	receiveSequenceNumber       UA_UInt32
	sendSequenceNumber          UA_UInt32
	sessions                    session_pointerlist
	chunks                      chunk_pointerlist
}
type UA_MessageContext struct {
	channel          []UA_SecureChannel
	requestId        UA_UInt32
	messageType      UA_UInt32
	chunksSoFar      UA_UInt16
	messageSizeSoFar uint
	messageBuffer    UA_ByteString
	buf_pos          []UA_Byte
	buf_end          []UA_Byte
	final            UA_Boolean
}
type UA_ProcessMessageCallback func(interface{} , []UA_SecureChannel , int , UA_UInt32 , []UA_ByteString)(UA_StatusCode)
type UA_TimerCallbackList struct {
	slh_first []UA_TimerCallbackEntry
}
type UA_Timer struct {
	repeatedCallbacks UA_TimerCallbackList
	changes_head      []UA_TimerCallbackEntry
	changes_tail      []UA_TimerCallbackEntry
	changes_stub      []UA_TimerCallbackEntry
	idCounter         UA_UInt64
}
type UA_TimerCallback func(interface{} , interface{})()
type UA_TimerDispatchCallback func(interface{} , UA_TimerCallback , interface{})()
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4094_5_ struct {
	le_next []ContinuationPointEntry
	le_prev [][]ContinuationPointEntry
}
type ContinuationPointEntry struct {
	pointers           __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4094_5_
	identifier         UA_ByteString
	browseDescription  UA_BrowseDescription
	maxReferences      UA_UInt32
	referenceKindIndex uint
	targetIndex        uint
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4109_5_ struct {
	sqe_next []UA_PublishResponseEntry
}
type UA_PublishResponseEntry struct {
	listEntry __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4109_5_
	requestId UA_UInt32
	response  UA_PublishResponse
}
type ContinuationPointList struct {
	lh_first []ContinuationPointEntry
}
type UA_ListOfUASubscriptions struct {
	lh_first []UA_Subscription
}
type UA_ListOfQueuedPublishResponses struct {
	sqh_first []UA_PublishResponseEntry
	sqh_last  [][]UA_PublishResponseEntry
}
type UA_Session struct {
	header                      UA_SessionHeader
	clientDescription           UA_ApplicationDescription
	sessionName                 UA_String
	activated                   UA_Boolean
	sessionHandle               interface{}
	sessionId                   UA_NodeId
	maxRequestMessageSize       UA_UInt32
	maxResponseMessageSize      UA_UInt32
	timeout                     UA_Double
	validTill                   UA_DateTime
	serverNonce                 UA_ByteString
	availableContinuationPoints UA_UInt16
	continuationPoints          ContinuationPointList
	lastSubscriptionId          UA_UInt32
	lastSeenSubscriptionId      UA_UInt32
	serverSubscriptions         UA_ListOfUASubscriptions
	responseQueue               UA_ListOfQueuedPublishResponses
	numSubscriptions            UA_UInt32
	numPublishReq               UA_UInt32
}

const (
	UA_MONITOREDITEMTYPE_CHANGENOTIFY int = 1
	UA_MONITOREDITEMTYPE_STATUSNOTIFY     = 2
	UA_MONITOREDITEMTYPE_EVENTNOTIFY      = 4
)

type UA_MonitoredItemType int
type UA_Event struct {
	eventId UA_Int32
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4291_5_ struct {
	tqe_next []UA_Notification
	tqe_prev [][]UA_Notification
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4292_5_ struct {
	tqe_next []UA_Notification
	tqe_prev [][]UA_Notification
}
type __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4297_5_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4297_5_) copy() __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4297_5_ {
	var buffer [104]byte
	for i := range buffer {
		buffer[i] = (*((*[104]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4297_5_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4297_5_) event() *UA_Event {
	if unionVar.memory == nil {
		var buffer [104]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*UA_Event)(unionVar.memory)
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4297_5_) value() *UA_DataValue {
	if unionVar.memory == nil {
		var buffer [104]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*UA_DataValue)(unionVar.memory)
}

type UA_Notification struct {
	listEntry   __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4291_5_
	globalEntry __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4292_5_
	mon         []UA_MonitoredItem
	data        __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4297_5_
}
type NotificationQueue struct {
	tqh_first []UA_Notification
	tqh_last  [][]UA_Notification
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4306_5_ struct {
	le_next []UA_MonitoredItem
	le_prev [][]UA_MonitoredItem
}
type UA_MonitoredItem struct {
	listEntry                  __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4306_5_
	subscription               []UA_Subscription
	monitoredItemId            UA_UInt32
	clientHandle               UA_UInt32
	monitoredItemType          int
	timestampsToReturn         int
	monitoringMode             int
	monitoredNodeId            UA_NodeId
	attributeId                UA_UInt32
	indexRange                 UA_String
	samplingInterval           UA_Double
	maxQueueSize               UA_UInt32
	discardOldest              UA_Boolean
	filter                     UA_DataChangeFilter
	lastValue                  UA_Variant
	sampleCallbackId           UA_UInt64
	lastSampledValue           UA_ByteString
	sampleCallbackIsRegistered UA_Boolean
	queue                      NotificationQueue
	queueSize                  UA_UInt32
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4350_5_ struct {
	tqe_next []UA_NotificationMessageEntry
	tqe_prev [][]UA_NotificationMessageEntry
}
type UA_NotificationMessageEntry struct {
	listEntry __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4350_5_
	message   UA_NotificationMessage
}

const (
	UA_SUBSCRIPTIONSTATE_NORMAL    int = 0
	UA_SUBSCRIPTIONSTATE_LATE          = 1
	UA_SUBSCRIPTIONSTATE_KEEPALIVE     = 2
)

type UA_SubscriptionState int
type ListOfNotificationMessages struct {
	tqh_first []UA_NotificationMessageEntry
	tqh_last  [][]UA_NotificationMessageEntry
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4366_5_ struct {
	le_next []UA_Subscription
	le_prev [][]UA_Subscription
}
type UA_ListOfUAMonitoredItems struct {
	lh_first []UA_MonitoredItem
}
type UA_Subscription struct {
	listEntry                   __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4366_5_
	session                     []UA_Session
	subscriptionId              UA_UInt32
	lifeTimeCount               UA_UInt32
	maxKeepAliveCount           UA_UInt32
	publishingInterval          UA_Double
	notificationsPerPublish     UA_UInt32
	publishingEnabled           UA_Boolean
	priority                    UA_UInt32
	state                       int
	sequenceNumber              UA_UInt32
	currentKeepAliveCount       UA_UInt32
	currentLifetimeCount        UA_UInt32
	publishCallbackId           UA_UInt64
	publishCallbackIsRegistered UA_Boolean
	lastMonitoredItemId         UA_UInt32
	monitoredItems              UA_ListOfUAMonitoredItems
	monitoredItemsSize          UA_UInt32
	notificationQueue           NotificationQueue
	notificationQueueSize       UA_UInt32
	readyNotifications          UA_UInt32
	retransmissionQueue         ListOfNotificationMessages
	retransmissionQueueSize     UA_UInt32
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4440_5_ struct {
	le_next []session_list_entry
	le_prev [][]session_list_entry
}
type session_list_entry struct {
	pointers __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4440_5_
	session  UA_Session
}
type session_list struct {
	lh_first []session_list_entry
}
type UA_SessionManager struct {
	sessions            session_list
	currentSessionCount UA_UInt32
	server              []UA_Server
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4500_5_ struct {
	le_next []channel_list_entry
	le_prev [][]channel_list_entry
}
type channel_list_entry struct {
	channel  UA_SecureChannel
	pointers __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4500_5_
}
type channel_list struct {
	lh_first []channel_list_entry
}
type UA_SecureChannelManager struct {
	channels            channel_list
	currentChannelCount UA_UInt32
	lastChannelId       UA_UInt32
	lastTokenId         UA_UInt32
	server              []UA_Server
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4589_5_ struct {
	le_next []registeredServer_list_entry
	le_prev [][]registeredServer_list_entry
}
type registeredServer_list_entry struct {
	pointers         __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4589_5_
	registeredServer UA_RegisteredServer
	lastSeen         UA_DateTime
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4595_5_ struct {
	le_next []periodicServerRegisterCallback_entry
	le_prev [][]periodicServerRegisterCallback_entry
}
type periodicServerRegisterCallback_entry struct {
	pointers __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_4595_5_
	callback []PeriodicServerRegisterCallback
}
type registeredServer_list struct {
	lh_first []registeredServer_list_entry
}
type periodicServerRegisterCallback_list struct {
	lh_first []periodicServerRegisterCallback_entry
}
type DelayedCallbacksList struct {
	slh_first []UA_DelayedCallback
}
type UA_Server struct {
	startTime                       UA_DateTime
	secureChannelManager            UA_SecureChannelManager
	sessionManager                  UA_SessionManager
	registeredServers               registeredServer_list
	registeredServersSize           uint
	periodicServerRegisterCallbacks periodicServerRegisterCallback_list
	registerServerCallback          UA_Server_registerServerCallback
	registerServerCallbackData      interface{}
	namespacesSize                  uint
	namespaces                      []UA_String
	timer                           UA_Timer
	delayedCallbacks                DelayedCallbacksList
	bootstrapNS0                    UA_Boolean
	config                          UA_ServerConfig
}
type UA_EditNodeCallback func([]UA_Server , []UA_Session , []UA_Node , interface{})(UA_StatusCode)
type UA_ServiceOperation func([]UA_Server , []UA_Session , interface{} , interface{} , interface{})()
type UA_Service func([]UA_Server , []UA_Session , interface{} , interface{})()
type UA_InSituService func([]UA_Server , []UA_Session , []UA_MessageContext , interface{} , []UA_ResponseHeader)(UA_StatusCode)
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5482_5_ struct {
	le_next []UA_Client_NotificationsAckNumber
	le_prev [][]UA_Client_NotificationsAckNumber
}
type UA_Client_NotificationsAckNumber struct {
	listEntry __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5482_5_
	subAck    UA_SubscriptionAcknowledgement
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5487_5_ struct {
	le_next []UA_Client_MonitoredItem
	le_prev [][]UA_Client_MonitoredItem
}
type __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5492_5_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5492_5_) copy() __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5492_5_ {
	var buffer [8]byte
	for i := range buffer {
		buffer[i] = (*((*[8]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5492_5_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5492_5_) dataChangeCallback() *UA_Client_DataChangeNotificationCallback {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*UA_Client_DataChangeNotificationCallback)(unionVar.memory)
}
func (unionVar *__union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5492_5_) eventCallback() *UA_Client_EventNotificationCallback {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*UA_Client_EventNotificationCallback)(unionVar.memory)
}

type UA_Client_MonitoredItem struct {
	listEntry            __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5487_5_
	monitoredItemId      UA_UInt32
	clientHandle         UA_UInt32
	context              interface{}
	deleteCallback       UA_Client_DeleteMonitoredItemCallback
	handler              __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5492_5_
	isEventMonitoredItem UA_Boolean
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5500_5_ struct {
	le_next []UA_Client_Subscription
	le_prev [][]UA_Client_Subscription
}
type UA_ListOfClientMonitoredItems struct {
	lh_first []UA_Client_MonitoredItem
}
type UA_Client_Subscription struct {
	listEntry            __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5500_5_
	subscriptionId       UA_UInt32
	context              interface{}
	publishingInterval   UA_Double
	maxKeepAliveCount    UA_UInt32
	statusChangeCallback UA_Client_StatusChangeNotificationCallback
	deleteCallback       UA_Client_DeleteSubscriptionCallback
	sequenceNumber       UA_UInt32
	lastActivity         UA_DateTime
	monitoredItems       UA_ListOfClientMonitoredItems
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5540_5_ struct {
	le_next []AsyncServiceCall
	le_prev [][]AsyncServiceCall
}
type AsyncServiceCall struct {
	pointers     __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_5540_5_
	requestId    UA_UInt32
	callback     UA_ClientAsyncServiceCallback
	responseType []UA_DataType
	userdata     interface{}
}

const (
	UA_CLIENTAUTHENTICATION_NONE     int = 0
	UA_CLIENTAUTHENTICATION_USERNAME     = 1
)

type UA_Client_Authentication int
type ListOfAsyncServiceCall struct {
	lh_first []AsyncServiceCall
}
type ListOfUnacknowledgedNotifications struct {
	lh_first []UA_Client_NotificationsAckNumber
}
type ListOfClientSubscriptionItems struct {
	lh_first []UA_Client_Subscription
}
type UA_Client struct {
	state                               int
	config                              UA_ClientConfig
	connection                          UA_Connection
	endpointUrl                         UA_String
	securityPolicy                      UA_SecurityPolicy
	channel                             UA_SecureChannel
	requestId                           UA_UInt32
	nextChannelRenewal                  UA_DateTime
	authenticationMethod                int
	username                            UA_String
	password                            UA_String
	token                               UA_UserTokenPolicy
	authenticationToken                 UA_NodeId
	requestHandle                       UA_UInt32
	asyncServiceCalls                   ListOfAsyncServiceCall
	monitoredItemHandles                UA_UInt32
	pendingNotificationsAcks            ListOfUnacknowledgedNotifications
	subscriptions                       ListOfClientSubscriptionItems
	currentlyOutStandingPublishRequests UA_UInt16
}

var UA_STRING_NULL UA_String = UA_String{0, nil}
var UA_BYTESTRING_NULL UA_ByteString = UA_ByteString{0, nil}
var UA_GUID_NULL UA_Guid = UA_Guid{0, 0, 0, []UA_Byte{UA_Byte(0), UA_Byte(0), UA_Byte(0), UA_Byte(0), UA_Byte(0), UA_Byte(0), UA_Byte(0), UA_Byte(0)}}
var UA_NODEID_NULL UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}
var UA_EXPANDEDNODEID_NULL UA_ExpandedNodeId = UA_ExpandedNodeId{UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_String{0, nil}, 0}
// UA_findDataType - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5650
// amalgamated original file "/home/travis/build/open62541/open62541/src/ua_types.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014, 2016-2017 (c) Florian Palm
// *    Copyright 2014-2016 (c) Sten Grüner
// *    Copyright 2014 (c) Leon Urbas
// *    Copyright 2015 (c) Chris Iatrou
// *    Copyright 2015 (c) Markus Graube
// *    Copyright 2015 (c) Reza Ebrahimi
// *    Copyright 2015-2016 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2016 (c) Lorenz Haas
//
// Datatype Handling
// * -----------------
// * This file contains handling functions for the builtin types and functions
// * handling of structured types and arrays. These need type descriptions in a
// * UA_DataType structure. The UA_DataType structures as well as all non-builtin
// * datatypes are autogenerated.
// Global definition of NULL type instances. These are always zeroed out, as
// * mandated by the C/C++ standard for global values with no initializer.
// TODO: The standard-defined types are ordered. See if binary search is
// * more efficient.
func UA_findDataType(typeId []UA_NodeId) []UA_DataType {
	if uint32(int((typeId[0].identifierType))) != uint32(int((UA_NODEIDTYPE_NUMERIC))) {
		return nil
	}
	{
		var i uint
		for ; i < uint((199)); i++ {
			if UA_UInt32((*UA_TYPES[i].typeId.identifier.numeric())) == UA_UInt32((*typeId[0].identifier.numeric())) && int(uint16((uint16((uint16_t((UA_UInt16(UA_TYPES[i].typeId.namespaceIndex)))))))) == int(uint16((uint16((uint16_t((UA_UInt16(typeId[0].namespaceIndex)))))))) {
				// Always look in built-in types first
				//     * (may contain data types from all namespaces)
				return (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[i]))[:]
			}
		}
	}
	// TODO When other namespace look in custom types, too, requires access to custom types array here!
	//if(typeId->namespaceIndex != 0) {
	//        size_t customTypesArraySize;
	//        const UA_DataType *customTypesArray;
	//        UA_getCustomTypes(&customTypesArraySize, &customTypesArray);
	//        for(size_t i = 0; i < customTypesArraySize; ++i) {
	//            if(customTypesArray[i].typeId.identifier.numeric == typeId->identifier.numeric
	//               && customTypesArray[i].typeId.namespaceIndex == typeId->namespaceIndex)
	//                return &customTypesArray[i];
	//        }
	//    }
	return nil
}

var UA_rng pcg32_random_t = pcg32_random_t{uint64_t(9600629759793949339), uint64_t(15726070495360670683)}
// UA_random_seed - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5684
//
// Random Number Generator
//
func UA_random_seed(seed UA_UInt64) {
	pcg32_srandom_r((*[100000000]pcg32_random_t)(unsafe.Pointer(&UA_rng))[:], uint64_t((uint64((uint32((uint64((uint64_t((UA_UInt64((u64(seed))))))))))))), uint64_t((uint64((uint32((uint64((uint64_t((UA_UInt64((u64(UA_DateTime_now()))))))))))))))
}
// UA_UInt32_random - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5689
func UA_UInt32_random() UA_UInt32 {
	return UA_UInt32((uint32_t((uint32((uint32((uint32((uint32_t((UA_UInt32((u32(pcg32_random_r((*[100000000]pcg32_random_t)(unsafe.Pointer(&UA_rng))[:]))))))))))))))))
}
// UA_String_fromChars - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5701
func UA_String_fromChars(src []byte) UA_String {
	var str UA_String
	str.length = uint((uint32(noarch.Strlen(src))))
	if uint(str.length) > uint((0)) {
		str.data = make([]UA_Byte, uint(str.length)*uint((1))/1)
		if str.data == nil {
			return UA_STRING_NULL
		}
		memcpy(str.data, src, uint32((uint(str.length))))
	} else {
		str.data = (1).([]u8)
	}
	return str
}
// UA_String_equal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5716
func UA_String_equal(s1 []UA_String, s2 []UA_String) UA_Boolean {
	if uint(s1[0].length) != uint(s2[0].length) {
		return 0
	}
	var is i32 = i32((UA_Int32((int32_t((__int32_t((noarch.Memcmp(s1[0].data, s2[0].data, uint32((uint(s1[0].length))))))))))))
	return UA_Boolean(func() int {
		if is == i32((UA_Int32((int32_t((__int32_t((0)))))))) {
			return 1
		}
		return 0
	}())
}
// String_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5725
func String_deleteMembers(s []UA_String, __ []UA_DataType) {
	_ = (uint32((uintptr_t(s[0].data) & ^uintptr_t((1)))))
}
// UA_QualifiedName_equal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5730
func UA_QualifiedName_equal(qn1 []UA_QualifiedName, qn2 []UA_QualifiedName) UA_Boolean {
	if qn1 == nil || qn2 == nil {
		return 0
	}
	if int(uint16((uint16((uint16_t((UA_UInt16(qn1[0].namespaceIndex)))))))) != int(uint16((uint16((uint16_t((UA_UInt16(qn2[0].namespaceIndex)))))))) {
		return 0
	}
	if uint(qn1[0].name.length) != uint(qn2[0].name.length) {
		return 0
	}
	return UA_Boolean((noarch.Memcmp(qn1[0].name.data, qn2[0].name.data, uint32((uint(qn1[0].name.length)))) == 0))
}
// UA_DateTime_toStruct - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5744
// DateTime
func UA_DateTime_toStruct(t UA_DateTime) UA_DateTimeStruct {
	var dateTimeStruct UA_DateTimeStruct
	// Calculating the the milli-, micro- and nanoseconds
	dateTimeStruct.nanoSec = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16((int32((__int64_t((int64_t((t % UA_DateTime((int64_t((__int64_t((10)))))) * UA_DateTime((int64_t((__int64_t((100))))))))))))))))))))))))))))
	dateTimeStruct.microSec = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16((int32((__int64_t((int64_t((t % UA_DateTime((int64_t((__int64_t((10000)))))) / UA_DateTime((int64_t((__int64_t((10))))))))))))))))))))))))))))
	dateTimeStruct.milliSec = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16((int32((__int64_t((int64_t((t % UA_DateTime((int64_t((__int64_t((10000000)))))) / UA_DateTime((int64_t((__int64_t((10000))))))))))))))))))))))))))))
	var secSinceUnixEpoch int64 = ((int64(int32((__int64_t((int64_t((t))))))) - int64(11644473600*(10*1000*1000))) / int64(10*1000*1000))
	var ts mytm
	// Calculating the unix time with #include <time.h>
	noarch.Memset((*[100000000]mytm)(unsafe.Pointer(&ts))[:], byte(0), 40)
	__secs_to_tm(secSinceUnixEpoch, (*[100000000]mytm)(unsafe.Pointer(&ts))[:])
	dateTimeStruct.sec = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16(ts.tm_sec)))))))))))))))
	dateTimeStruct.min = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16(ts.tm_min)))))))))))))))
	dateTimeStruct.hour = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16(ts.tm_hour)))))))))))))))
	dateTimeStruct.day = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16(ts.tm_mday)))))))))))))))
	dateTimeStruct.month = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16((ts.tm_mon + 1))))))))))))))))
	dateTimeStruct.year = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16((ts.tm_year + 1900))))))))))))))))
	return UA_DateTimeStruct(dateTimeStruct)
}
// printNumber - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5767
func printNumber(n u16, pos []u8, digits uint) {
	{
		var i uint = digits
		for ; i > uint((0)); i-- {
			pos[i-uint((1))] = u8((int(uint16((uint16((uint16_t((UA_UInt16((n)))))))))%10 + int('0')))
			n = u16((UA_UInt16((uint16_t((uint16((uint16(int(uint16((uint16((uint16_t((UA_UInt16((n))))))))) / 10)))))))))
		}
	}
}
// UA_DateTime_toString - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5775
func UA_DateTime_toString(t UA_DateTime) UA_String {
	var str UA_String = UA_String{31, make([]byte, 32).([]u8)}
	if str.data == nil {
		// length of the string is 31 (plus \0 at the end)
		return UA_STRING_NULL
	}
	var tSt UA_DateTimeStruct = UA_DateTime_toStruct(UA_DateTime(t))
	printNumber(u16(tSt.month), str.data, 2)
	str.data[2] = UA_Byte((uint8_t((__uint8_t((uint8('/')))))))
	printNumber(u16(tSt.day), (*[100000000]UA_Byte)(unsafe.Pointer(&str.data[3]))[:], 2)
	str.data[5] = UA_Byte((uint8_t((__uint8_t((uint8('/')))))))
	printNumber(u16(tSt.year), (*[100000000]UA_Byte)(unsafe.Pointer(&str.data[6]))[:], 4)
	str.data[10] = UA_Byte((uint8_t((__uint8_t((uint8(' ')))))))
	printNumber(u16(tSt.hour), (*[100000000]UA_Byte)(unsafe.Pointer(&str.data[11]))[:], 2)
	str.data[13] = UA_Byte((uint8_t((__uint8_t((uint8(':')))))))
	printNumber(u16(tSt.min), (*[100000000]UA_Byte)(unsafe.Pointer(&str.data[14]))[:], 2)
	str.data[16] = UA_Byte((uint8_t((__uint8_t((uint8(':')))))))
	printNumber(u16(tSt.sec), (*[100000000]UA_Byte)(unsafe.Pointer(&str.data[17]))[:], 2)
	str.data[19] = UA_Byte((uint8_t((__uint8_t((uint8('.')))))))
	printNumber(u16(tSt.milliSec), (*[100000000]UA_Byte)(unsafe.Pointer(&str.data[20]))[:], 3)
	str.data[23] = UA_Byte((uint8_t((__uint8_t((uint8('.')))))))
	printNumber(u16(tSt.microSec), (*[100000000]UA_Byte)(unsafe.Pointer(&str.data[24]))[:], 3)
	str.data[27] = UA_Byte((uint8_t((__uint8_t((uint8('.')))))))
	printNumber(u16(tSt.nanoSec), (*[100000000]UA_Byte)(unsafe.Pointer(&str.data[28]))[:], 3)
	return str
}
// UA_Guid_equal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5803
// Guid
func UA_Guid_equal(g1 []UA_Guid, g2 []UA_Guid) UA_Boolean {
	if noarch.Memcmp(g1, g2, 16) == 0 {
		return 1
	}
	return 0
}
// UA_Guid_random - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5810
func UA_Guid_random() UA_Guid {
	var result UA_Guid
	result.data1 = UA_UInt32((uint32_t((uint32((uint32((uint32((uint32_t((UA_UInt32((u32(pcg32_random_r((*[100000000]pcg32_random_t)(unsafe.Pointer(&UA_rng))[:]))))))))))))))))
	var r u32 = u32(pcg32_random_r((*[100000000]pcg32_random_t)(unsafe.Pointer(&UA_rng))[:]))
	result.data2 = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16(u32(r))))))))))))))))
	result.data3 = UA_UInt16((uint16_t((uint16((uint16((uint16((uint16_t((UA_UInt16((u16((r >> uint64(16)))))))))))))))))
	r = u32(pcg32_random_r((*[100000000]pcg32_random_t)(unsafe.Pointer(&UA_rng))[:]))
	result.data4[:][0] = UA_Byte((uint8_t((__uint8_t((uint8((__uint8_t((uint8_t((UA_Byte((u8(u32(r))))))))))))))))
	result.data4[:][1] = UA_Byte((uint8_t((__uint8_t((uint8((__uint8_t((uint8_t((UA_Byte((u8((r >> uint64(4)))))))))))))))))
	result.data4[:][2] = UA_Byte((uint8_t((__uint8_t((uint8((__uint8_t((uint8_t((UA_Byte((u8((r >> uint64(8)))))))))))))))))
	result.data4[:][3] = UA_Byte((uint8_t((__uint8_t((uint8((__uint8_t((uint8_t((UA_Byte((u8((r >> uint64(12)))))))))))))))))
	r = u32(pcg32_random_r((*[100000000]pcg32_random_t)(unsafe.Pointer(&UA_rng))[:]))
	result.data4[:][4] = UA_Byte((uint8_t((__uint8_t((uint8((__uint8_t((uint8_t((UA_Byte((u8(u32(r))))))))))))))))
	result.data4[:][5] = UA_Byte((uint8_t((__uint8_t((uint8((__uint8_t((uint8_t((UA_Byte((u8((r >> uint64(4)))))))))))))))))
	result.data4[:][6] = UA_Byte((uint8_t((__uint8_t((uint8((__uint8_t((uint8_t((UA_Byte((u8((r >> uint64(8)))))))))))))))))
	result.data4[:][7] = UA_Byte((uint8_t((__uint8_t((uint8((__uint8_t((uint8_t((UA_Byte((u8((r >> uint64(12)))))))))))))))))
	return result
}
// UA_ByteString_allocBuffer - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5831
// ByteString
func UA_ByteString_allocBuffer(bs []UA_ByteString, length uint) UA_StatusCode {
	UA_ByteString_init(bs)
	if length == uint((0)) {
		return 0
	}
	bs[0].data = make([]UA_Byte, length*uint((1))/1)
	if bs[0].data == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	bs[0].length = length
	return 0
}
// NodeId_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5844
// NodeId
func NodeId_deleteMembers(p []UA_NodeId, __ []UA_DataType) {
	switch uint32(int((p[0].identifierType))) {
	case uint32(int((UA_NODEIDTYPE_STRING))):
		fallthrough
	case uint32(int((UA_NODEIDTYPE_BYTESTRING))):
		String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&(*p[0].identifier.string())))[:], nil)
	default:
		{
			break
		}
	}
}
// NodeId_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5855
func NodeId_copy(src []UA_NodeId, dst []UA_NodeId, __ []UA_DataType) UA_StatusCode {
	var retval UA_StatusCode
	switch uint32(int((src[0].identifierType))) {
	case uint32(int((UA_NODEIDTYPE_NUMERIC))):
		{
			dst[0] = src[0]
			return 0
		}
	case uint32(int((UA_NODEIDTYPE_STRING))):
		retval |= UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&(*src[0].identifier.string())))[:], (*[100000000]UA_String)(unsafe.Pointer(&(*dst[0].identifier.string())))[:])
	case uint32(int((UA_NODEIDTYPE_GUID))):
		retval |= UA_Guid_copy((*[100000000]UA_Guid)(unsafe.Pointer(&(*src[0].identifier.guid())))[:], (*[100000000]UA_Guid)(unsafe.Pointer(&(*dst[0].identifier.guid())))[:])
	case uint32(int((UA_NODEIDTYPE_BYTESTRING))):
		retval |= UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&(*src[0].identifier.byteString())))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&(*dst[0].identifier.byteString())))[:])
	default:
		{
			return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		}
	}
	dst[0].namespaceIndex = UA_UInt16(src[0].namespaceIndex)
	dst[0].identifierType = src[0].identifierType
	return UA_StatusCode(retval)
}
// UA_NodeId_isNull - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5881
func UA_NodeId_isNull(p []UA_NodeId) UA_Boolean {
	if int(uint16((uint16((uint16_t((UA_UInt16(p[0].namespaceIndex)))))))) != 0 {
		return 0
	}
	switch uint32(int((p[0].identifierType))) {
	case uint32(int((UA_NODEIDTYPE_NUMERIC))):
		{
			return UA_Boolean((UA_UInt32((*p[0].identifier.numeric())) == UA_UInt32((uint32_t((uint32((0))))))))
		}
	case uint32(int((UA_NODEIDTYPE_GUID))):
		{
			return UA_Boolean((UA_UInt32((*p[0].identifier.guid()).data1) == UA_UInt32((uint32_t((uint32((0)))))) && int(uint16((uint16((uint16_t((UA_UInt16((*p[0].identifier.guid()).data2)))))))) == 0 && int(uint16((uint16((uint16_t((UA_UInt16((*p[0].identifier.guid()).data3)))))))) == 0 && int(uint8((__uint8_t((uint8_t(((*p[0].identifier.guid()).data4[:][0]))))))) == 0 && int(uint8((__uint8_t((uint8_t(((*p[0].identifier.guid()).data4[:][1]))))))) == 0 && int(uint8((__uint8_t((uint8_t(((*p[0].identifier.guid()).data4[:][2]))))))) == 0 && int(uint8((__uint8_t((uint8_t(((*p[0].identifier.guid()).data4[:][3]))))))) == 0 && int(uint8((__uint8_t((uint8_t(((*p[0].identifier.guid()).data4[:][4]))))))) == 0 && int(uint8((__uint8_t((uint8_t(((*p[0].identifier.guid()).data4[:][5]))))))) == 0 && int(uint8((__uint8_t((uint8_t(((*p[0].identifier.guid()).data4[:][6]))))))) == 0 && int(uint8((__uint8_t((uint8_t(((*p[0].identifier.guid()).data4[:][7]))))))) == 0))
		}
	default:
		{
			break
		}
	}
	return UA_Boolean((uint((*p[0].identifier.string()).length) == uint((0))))
}
// UA_NodeId_equal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5906
func UA_NodeId_equal(n1 []UA_NodeId, n2 []UA_NodeId) UA_Boolean {
	if n1 == nil || n2 == nil {
		return 0
	}
	if int(uint16((uint16((uint16_t((UA_UInt16(n1[0].namespaceIndex)))))))) != int(uint16((uint16((uint16_t((UA_UInt16(n2[0].namespaceIndex)))))))) || uint32(int((n1[0].identifierType))) != uint32(int((n2[0].identifierType))) {
		return 0
	}
	switch uint32(int((n1[0].identifierType))) {
	case uint32(int((UA_NODEIDTYPE_NUMERIC))):
		{
			return UA_Boolean((UA_UInt32((*n1[0].identifier.numeric())) == UA_UInt32((*n2[0].identifier.numeric()))))
		}
	case uint32(int((UA_NODEIDTYPE_STRING))):
		{
			return UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&(*n1[0].identifier.string())))[:], (*[100000000]UA_String)(unsafe.Pointer(&(*n2[0].identifier.string())))[:])
		}
	case uint32(int((UA_NODEIDTYPE_GUID))):
		{
			return UA_Guid_equal((*[100000000]UA_Guid)(unsafe.Pointer(&(*n1[0].identifier.guid())))[:], (*[100000000]UA_Guid)(unsafe.Pointer(&(*n2[0].identifier.guid())))[:])
		}
	case uint32(int((UA_NODEIDTYPE_BYTESTRING))):
		{
			return UA_ByteString_equal((*[100000000]UA_ByteString)(unsafe.Pointer(&(*n1[0].identifier.byteString())))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&(*n2[0].identifier.byteString())))[:])
		}
	}
	return 0
}
// UA_ExpandedNodeId_equal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5929
func UA_ExpandedNodeId_equal(n1 []UA_ExpandedNodeId, n2 []UA_ExpandedNodeId) UA_Boolean {
	if n1 == nil || n2 == nil {
		return 0
	}
	if UA_UInt32(n1[0].serverIndex) != UA_UInt32(n2[0].serverIndex) {
		return 0
	}
	if int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&n1[0].namespaceUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&n2[0].namespaceUri))[:])))))) != 0 {
		return 0
	}
	return UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&n1[0].nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&n2[0].nodeId))[:])
}
// fnv32 - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5943
// FNV non-cryptographic hash function. See
// * https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function
func fnv32(fnv u32, buf []u8, size uint) u32 {
	{
		var i uint
		for ; i < size; i++ {
			fnv = fnv^uint32(uint8((__uint8_t((uint8_t((UA_Byte((buf[i])))))))))
			fnv = fnv*u32((UA_UInt32((uint32_t((uint32((16777619))))))))
		}
	}
	return u32(fnv)
}
// UA_NodeId_hash - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5952
func UA_NodeId_hash(n []UA_NodeId) (c4goDefaultReturn UA_UInt32) {
	switch uint32(int((n[0].identifierType))) {
	case uint32(int((UA_NODEIDTYPE_NUMERIC))):
		fallthrough
	default:
		{
			return UA_UInt32((uint32_t((uint32((uint32((uint32((uint32_t((UA_UInt32((u32(((uint32(uint16((uint16((uint16_t((UA_UInt16(n[0].namespaceIndex)))))))) + uint32((uint32((uint32_t((UA_UInt32((*n[0].identifier.numeric()))))))))*uint32((uint64((uint64_t((UA_UInt64((u64(2654435761)))))))))>>uint64(32)) & uint32(4294967295)))))))))))))))))
		}
	case uint32(int((UA_NODEIDTYPE_STRING))):
		fallthrough
	case uint32(int((UA_NODEIDTYPE_BYTESTRING))):
		{
			// shift knuth multiplication to use highest 32 bits and after addition make sure we don't have an integer overflow
			//  Knuth's multiplicative hashing
			return UA_UInt32((uint32_t((uint32((uint32((uint32((uint32_t((UA_UInt32((fnv32(u32(UA_UInt16(n[0].namespaceIndex)), (*n[0].identifier.string()).data, uint((*n[0].identifier.string()).length))))))))))))))))
		}
	case uint32(int((UA_NODEIDTYPE_GUID))):
		{
			return UA_UInt32((uint32_t((uint32((uint32((uint32((uint32_t((UA_UInt32((fnv32(u32(UA_UInt16(n[0].namespaceIndex)), (*[100000000]UA_Guid)(unsafe.Pointer(&(*n[0].identifier.guid())))[:], uint((16)))))))))))))))))
		}
	}
	return
}
// ExpandedNodeId_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5968
// ExpandedNodeId
func ExpandedNodeId_deleteMembers(p []UA_ExpandedNodeId, __ []UA_DataType) {
	NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&p[0].nodeId))[:], __)
	String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&p[0].namespaceUri))[:], nil)
}
// ExpandedNodeId_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5974
func ExpandedNodeId_copy(src []UA_ExpandedNodeId, dst []UA_ExpandedNodeId, __ []UA_DataType) UA_StatusCode {
	var retval UA_StatusCode = NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&src[0].nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&dst[0].nodeId))[:], nil)
	retval |= UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&src[0].namespaceUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&dst[0].namespaceUri))[:])
	dst[0].serverIndex = UA_UInt32(src[0].serverIndex)
	return UA_StatusCode(retval)
}
// ExtensionObject_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:5984
// ExtensionObject
func ExtensionObject_deleteMembers(p []UA_ExtensionObject, __ []UA_DataType) {
	switch uint32(p[0].encoding) {
	case uint32(UA_EXTENSIONOBJECT_ENCODED_NOBODY):
		fallthrough
	case uint32(UA_EXTENSIONOBJECT_ENCODED_BYTESTRING):
		fallthrough
	case uint32(UA_EXTENSIONOBJECT_ENCODED_XML):
		NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&(*p[0].content.encoded()).typeId))[:], nil)
		String_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&(*p[0].content.encoded()).body))[:], nil)
	case uint32(UA_EXTENSIONOBJECT_DECODED):
		if (*p[0].content.decoded()).data != nil {
			UA_delete((*p[0].content.decoded()).data, (*p[0].content.decoded()).type_)
		}
	default:
		{
			break
		}
	}
}
// ExtensionObject_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6002
func ExtensionObject_copy(src []UA_ExtensionObject, dst []UA_ExtensionObject, __ []UA_DataType) UA_StatusCode {
	var retval UA_StatusCode
	switch uint32(src[0].encoding) {
	case uint32(UA_EXTENSIONOBJECT_ENCODED_NOBODY):
		fallthrough
	case uint32(UA_EXTENSIONOBJECT_ENCODED_BYTESTRING):
		fallthrough
	case uint32(UA_EXTENSIONOBJECT_ENCODED_XML):
		dst[0].encoding = src[0].encoding
		retval = NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&(*src[0].content.encoded()).typeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&(*dst[0].content.encoded()).typeId))[:], nil)
		retval |= UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&(*src[0].content.encoded()).body))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&(*dst[0].content.encoded()).body))[:])
	case uint32(UA_EXTENSIONOBJECT_DECODED):
		fallthrough
	case uint32(UA_EXTENSIONOBJECT_DECODED_NODELETE):
		if (*src[0].content.decoded()).type_ == nil || (*src[0].content.decoded()).data == nil {
			return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		}
		dst[0].encoding = UA_EXTENSIONOBJECT_DECODED
		(*dst[0].content.decoded()).type_ = (*src[0].content.decoded()).type_
		retval = UA_Array_copy((*src[0].content.decoded()).data, 1, (*[100000000]interface{})(unsafe.Pointer(&(*dst[0].content.decoded()).data))[:], (*src[0].content.decoded()).type_)
	default:
		{
			break
		}
	}
	return UA_StatusCode(retval)
}
// Variant_deletemembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6032
// Variant
func Variant_deletemembers(p []UA_Variant, __ []UA_DataType) {
	if uint32(p[0].storageType) != uint32(UA_VARIANT_DATA) {
		return
	}
	if p[0].type_ != nil && p[0].data > 1 {
		if uint(p[0].arrayLength) == uint((0)) {
			p[0].arrayLength = 1
		}
		UA_Array_delete(p[0].data, uint(p[0].arrayLength), p[0].type_)
	}
	if p[0].arrayDimensions > 1 {
		_ = p[0].arrayDimensions
	}
}
// Variant_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6045
func Variant_copy(src []UA_Variant, dst []UA_Variant, __ []UA_DataType) UA_StatusCode {
	var length uint = uint(src[0].arrayLength)
	if int((int((UA_Variant_isScalar(src))))) != 0 {
		length = 1
	}
	var retval UA_StatusCode = UA_Array_copy(src[0].data, uint(length), (*[100000000]interface{})(unsafe.Pointer(&dst[0].data))[:], src[0].type_)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	dst[0].arrayLength = uint(src[0].arrayLength)
	dst[0].type_ = src[0].type_
	if src[0].arrayDimensions != nil {
		retval = UA_Array_copy(src[0].arrayDimensions, uint(src[0].arrayDimensionsSize), (*[100000000][]UA_UInt32)(unsafe.Pointer(&dst[0].arrayDimensions))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		dst[0].arrayDimensionsSize = uint(src[0].arrayDimensionsSize)
	}
	return 0
}
// UA_Variant_setScalar - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6066
func UA_Variant_setScalar(v []UA_Variant, p interface{}, type_ []UA_DataType) {
	UA_Variant_init(v)
	v[0].type_ = type_
	v[0].arrayLength = 0
	v[0].data = p
}
// UA_Variant_setScalarCopy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6075
func UA_Variant_setScalarCopy(v []UA_Variant, p interface{}, type_ []UA_DataType) UA_StatusCode {
	var n interface{} = make([]byte, uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize)))))))))
	if n == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var retval UA_StatusCode = UA_copy(p, n, type_)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		_ = n
		//cppcheck-suppress memleak
		return UA_StatusCode(retval)
	}
	UA_Variant_setScalar(v, n, type_)
	//cppcheck-suppress memleak
	return 0
}
// UA_Variant_setArray - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6092
func UA_Variant_setArray(v []UA_Variant, array interface{}, arraySize uint, type_ []UA_DataType) {
	UA_Variant_init(v)
	v[0].data = array
	v[0].arrayLength = arraySize
	v[0].type_ = type_
}
// UA_Variant_setArrayCopy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6100
func UA_Variant_setArrayCopy(v []UA_Variant, array interface{}, arraySize uint, type_ []UA_DataType) UA_StatusCode {
	UA_Variant_init(v)
	var retval UA_StatusCode = UA_Array_copy(array, uint(arraySize), (*[100000000]interface{})(unsafe.Pointer(&v[0].data))[:], type_)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	v[0].arrayLength = arraySize
	v[0].type_ = type_
	return 0
}
// computeStrides - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6119
// Test if a range is compatible with a variant. If yes, the following values
// * are set:
// * - total: how many elements are in the range
// * - block: how big is each contiguous block of elements in the variant that
// *   maps into the range
// * - stride: how many elements are between the blocks (beginning to beginning)
// * - first: where does the first block begin
func computeStrides(v []UA_Variant, range_ UA_NumericRange, total []uint, block []uint, stride []uint, first []uint) UA_StatusCode {
	if uint(v[0].arrayLength) > uint((uint32(4294967295))) {
		// Test for max array size (64bit only)
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var arrayLength u32 = u32(uint(v[0].arrayLength))
	var dims []u32 = (*[100000000]u32)(unsafe.Pointer(&arrayLength))[:]
	var dims_count uint = 1
	if uint(v[0].arrayDimensionsSize) > uint((0)) {
		var elements uint = 1
		// Test the integrity of the source variant dimensions, make dimensions
		//     * vector of one dimension if none defined
		dims_count = uint(v[0].arrayDimensionsSize)
		dims = v[0].arrayDimensions
		{
			var i uint
			for ; i < dims_count; i++ {
				elements *= uint((uint32((uint32((uint32_t((UA_UInt32((dims[i]))))))))))
			}
		}
		if elements != uint(v[0].arrayLength) {
			return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		}
	}
	var count uint = 1
	var realmax []UA_UInt32
	if uint(range_.dimensionsSize) != dims_count {
		// Test the integrity of the range and compute the max index used for every
		//     * dimension. The standard says in Part 4, Section 7.22:
		//     *
		//     * When reading a value, the indexes may not specify a range that is within
		//     * the bounds of the array. The Server shall return a partial result if some
		//     * elements exist within the range.
		return UA_StatusCode((uint32_t((uint32((uint32(2151088128)))))))
	}
	{
		var i uint
		for ; i < dims_count; i++ {
			if UA_UInt32(range_.dimensions[i].min) > UA_UInt32(range_.dimensions[i].max) {
				return UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
			}
			if UA_UInt32(range_.dimensions[i].min) >= dims[i] {
				return UA_StatusCode((uint32_t((uint32((uint32(2151088128)))))))
			}
			if UA_UInt32(range_.dimensions[i].max) < UA_UInt32((uint32_t((uint32((uint32((uint32((uint32_t((UA_UInt32((dims[i])))))))))))))) {
				realmax[i] = UA_UInt32(range_.dimensions[i].max)
			} else {
				realmax[i] = UA_UInt32((uint32_t((uint32((uint32((uint32((uint32_t((UA_UInt32((dims[i] - u32((UA_UInt32((uint32_t((uint32((1))))))))))))))))))))))
			}
			count *= uint((uint32((uint32((uint32_t((realmax[i] - UA_UInt32(range_.dimensions[i].min) + UA_UInt32((uint32_t((uint32((1))))))))))))))
		}
	}
	total[0] = count
	// Compute the stride length and the position of the first element
	// Assume the range describes the entire array.
	block[0] = count
	// So it can be copied as a contiguous block.
	stride[0] = uint(v[0].arrayLength)
	first[0] = 0
	var running_dimssize uint = 1
	var found_contiguous int
	{
		var k uint = dims_count
		for k > uint((0)) {
			k --
			var dimrange uint = uint((1 + uint32((uint32((uint32_t((realmax[k])))))) - uint32((uint32((uint32_t((UA_UInt32(range_.dimensions[k].min)))))))))
			if int((noarch.NotInt(found_contiguous))) != 0 && dimrange != uint((uint32((uint32((uint32_t((UA_UInt32((dims[k])))))))))) {
				// Found the maximum block that can be copied contiguously
				found_contiguous = 1
				block[0] = running_dimssize*dimrange
				stride[0] = running_dimssize*uint((uint32((uint32((uint32_t((UA_UInt32((dims[k]))))))))))
			}
			first[0] += running_dimssize*uint((uint32((uint32((uint32_t((UA_UInt32(range_.dimensions[k].min)))))))))
			running_dimssize *= uint((uint32((uint32((uint32_t((UA_UInt32((dims[k]))))))))))
		}
	}
	return 0
}
// isStringLike - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6192
// Is the type string-like?
func isStringLike(type_ []UA_DataType) int {
	if int(uint8((__uint8_t((uint8_t((UA_Byte(type_[0].membersSize)))))))) == 1 && int((int((UA_Boolean(type_[0].members[0].isArray))))) != 0 && int((int((UA_Boolean(type_[0].members[0].namespaceZero))))) != 0 && int(uint16((uint16((uint16_t((UA_UInt16(type_[0].members[0].memberTypeIndex)))))))) == 2 {
		return 1
	}
	return 0
}
// copySubString - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6202
// Returns the part of the string that lies within the rangedimension
func copySubString(src []UA_String, dst []UA_String, dim []UA_NumericRangeDimension) UA_StatusCode {
	if UA_UInt32(dim[0].min) > UA_UInt32(dim[0].max) {
		return UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
	}
	if uint32((uint32((uint32_t((UA_UInt32(dim[0].min))))))) >= uint(src[0].length) {
		return UA_StatusCode((uint32_t((uint32((uint32(2151088128)))))))
	}
	var length uint
	if uint32((uint32((uint32_t((UA_UInt32(dim[0].max))))))) < uint32((uint(src[0].length))) {
		length = uint((uint32((uint32((uint32_t((UA_UInt32(dim[0].max) - UA_UInt32(dim[0].min) + UA_UInt32((uint32_t((uint32((1))))))))))))))
	} else {
		length = uint(src[0].length)-uint((uint32((uint32((uint32_t((UA_UInt32(dim[0].min)))))))))
	}
	var retval UA_StatusCode = UA_ByteString_allocBuffer(dst, uint(length))
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	memcpy(dst[0].data, (*[100000000]UA_Byte)(unsafe.Pointer(&src[0].data[UA_UInt32(dim[0].min)]))[:], uint32((uint(length))))
	return 0
}
// UA_Variant_copyRange - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6224
func UA_Variant_copyRange(src []UA_Variant, dst []UA_Variant, range_ UA_NumericRange) UA_StatusCode {
	if src[0].type_ == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2158690304)))))))
	}
	var isScalar int = int((int((int((UA_Variant_isScalar(src)))))))
	var stringLike int = isStringLike(src[0].type_)
	var arraySrc UA_Variant
	var thisrange UA_NumericRange
	var nextrange UA_NumericRange
	var scalarThisDimension UA_NumericRangeDimension = UA_NumericRangeDimension{0, 0}
	if int((isScalar)) != 0 {
		// Extract the range for copying at this level. The remaining range is dealt
		//     * with in the "scalar" type that may define an array by itself (string,
		//     * variant, ...).
		// a single entry
		// Replace scalar src with array of length 1
		arraySrc = src[0]
		arraySrc.arrayLength = 1
		src = (*[100000000]UA_Variant)(unsafe.Pointer(&arraySrc))[:]
		// Deal with all range dimensions within the scalar
		thisrange.dimensions = (*[100000000]UA_NumericRangeDimension)(unsafe.Pointer(&scalarThisDimension))[:]
		thisrange.dimensionsSize = 1
		nextrange = range_
	} else {
		var dims uint = uint(src[0].arrayDimensionsSize)
		if dims == uint((0)) {
			// Deal with as many range dimensions as possible right now
			dims = 1
		}
		if dims > uint(range_.dimensionsSize) {
			return UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
		}
		thisrange = range_
		thisrange.dimensionsSize = dims
		nextrange.dimensions = (*[100000000]UA_NumericRangeDimension)(unsafe.Pointer(&range_.dimensions[dims]))[:]
		nextrange.dimensionsSize = uint(range_.dimensionsSize)-dims
	}
	var count uint
	var block uint
	var stride uint
	var first uint
	var retval UA_StatusCode = computeStrides(src, thisrange, (*[100000000]uint)(unsafe.Pointer(&count))[:], (*[100000000]uint)(unsafe.Pointer(&block))[:], (*[100000000]uint)(unsafe.Pointer(&stride))[:], (*[100000000]uint)(unsafe.Pointer(&first))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Compute the strides
		return UA_StatusCode(retval)
	}
	// Allocate the array
	UA_Variant_init(dst)
	dst[0].data = UA_Array_new(uint(count), src[0].type_)
	if dst[0].data == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var block_count uint = count / block
	var elem_size uint = uint((uint32(uint16((uint16((uint16_t((UA_UInt16(src[0].type_[0].memSize))))))))))
	var nextdst uintptr_t = uintptr_t(dst[0].data)
	var nextsrc uintptr_t = uintptr_t(src[0].data) + uintptr_t((uint32((elem_size * first))))
	if uint(nextrange.dimensionsSize) == uint((0)) {
		if int((int((UA_Boolean(src[0].type_[0].pointerFree))))) != 0 {
			{
				var i uint
				for ; i < block_count; i++ {
					// Copy the range
					// no nextrange
					memcpy(uint32((uintptr_t(nextdst))), uint32((uintptr_t(nextsrc))), uint32((elem_size * block)))
					nextdst += uintptr_t((uint32((block * elem_size))))
					nextsrc += uintptr_t((uint32((stride * elem_size))))
				}
			}
		} else {
			{
				var i uint
				for ; i < block_count; i++ {
					{
						var j uint
						for ; j < block; j++ {
							retval = UA_copy(uint32((uintptr_t(nextsrc))), uint32((uintptr_t(nextdst))), src[0].type_)
							nextdst += uintptr_t((uint32((elem_size))))
							nextsrc += uintptr_t((uint32((elem_size))))
						}
					}
					nextsrc += uintptr_t((uint32(((stride - block) * elem_size))))
				}
			}
		}
	} else {
		if src[0].type_ != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:] {
			if int((noarch.NotInt(stringLike))) != 0 {
				// nextrange can only be used for variants and stringlike with remaining
				//         * range of dimension 1
				retval = UA_StatusCode((uint32_t((uint32((uint32(2151088128)))))))
			}
			if uint(nextrange.dimensionsSize) != uint((1)) {
				retval = UA_StatusCode((uint32_t((uint32((uint32(2151088128)))))))
			}
		}
		{
			var i uint
			for ; i < block_count; i++ {
				{
					var j uint
					for ; j < block && retval == UA_StatusCode((uint32_t((uint32((0)))))); j++ {
						if int((stringLike)) != 0 {
							// Copy the content
							retval = copySubString(nil, nil, nextrange.dimensions)
						} else {
							retval = UA_Variant_copyRange(nil, nil, nextrange)
						}
						nextdst += uintptr_t((uint32((elem_size))))
						nextsrc += uintptr_t((uint32((elem_size))))
					}
				}
				nextsrc += uintptr_t((uint32(((stride - block) * elem_size))))
			}
		}
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Clean up if copying failed
		UA_Array_delete(dst[0].data, uint(count), src[0].type_)
		dst[0].data = nil
		return UA_StatusCode(retval)
	}
	// Done if scalar
	dst[0].type_ = src[0].type_
	if int((isScalar)) != 0 {
		return UA_StatusCode(retval)
	}
	// Copy array dimensions
	dst[0].arrayLength = count
	if uint(src[0].arrayDimensionsSize) > uint((0)) {
		dst[0].arrayDimensions = UA_Array_new(uint(thisrange.dimensionsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]u32)
		if dst[0].arrayDimensions == nil {
			Variant_deletemembers(dst, nil)
			return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		}
		dst[0].arrayDimensionsSize = uint(thisrange.dimensionsSize)
		{
			var k uint
			for ; k < uint(thisrange.dimensionsSize); k++ {
				dst[0].arrayDimensions[k] = UA_UInt32(thisrange.dimensions[k].max)-UA_UInt32(thisrange.dimensions[k].min)+UA_UInt32((uint32_t((uint32((1))))))
			}
		}
	}
	return 0
}
// Variant_setRange - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6356
// TODO: Allow ranges to reach inside a scalars that are array-like, e.g.
// * variant and strings. This is already possible for reading...
func Variant_setRange(v []UA_Variant, array interface{}, arraySize uint, range_ UA_NumericRange, copy int) UA_StatusCode {
	var count uint
	var block uint
	var stride uint
	var first uint
	var retval UA_StatusCode = computeStrides(v, range_, (*[100000000]uint)(unsafe.Pointer(&count))[:], (*[100000000]uint)(unsafe.Pointer(&block))[:], (*[100000000]uint)(unsafe.Pointer(&stride))[:], (*[100000000]uint)(unsafe.Pointer(&first))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Compute the strides
		return UA_StatusCode(retval)
	}
	if count != arraySize {
		return UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
	}
	var block_count uint = count / block
	var elem_size uint = uint((uint32(uint16((uint16((uint16_t((UA_UInt16(v[0].type_[0].memSize))))))))))
	var nextdst uintptr_t = uintptr_t(v[0].data) + uintptr_t((uint32((first * elem_size))))
	var nextsrc uintptr_t = uintptr_t(array)
	if int((int((UA_Boolean(v[0].type_[0].pointerFree))))) != 0 || int((noarch.NotInt(copy))) != 0 {
		{
			var i uint
			for ; i < block_count; i++ {
				// Move/copy the elements
				memcpy(uint32((uintptr_t(nextdst))), uint32((uintptr_t(nextsrc))), uint32((elem_size * block)))
				nextsrc += uintptr_t((uint32((block * elem_size))))
				nextdst += uintptr_t((uint32((stride * elem_size))))
			}
		}
	} else {
		{
			var i uint
			for ; i < block_count; i++ {
				{
					var j uint
					for ; j < block; j++ {
						deleteMembers_noInit(uint32((uintptr_t(nextdst))), v[0].type_)
						retval |= UA_copy(uint32((uintptr_t(nextsrc))), uint32((uintptr_t(nextdst))), v[0].type_)
						nextdst += uintptr_t((uint32((elem_size))))
						nextsrc += uintptr_t((uint32((elem_size))))
					}
				}
				nextdst += uintptr_t((uint32(((stride - block) * elem_size))))
			}
		}
	}
	if int((noarch.NotInt(copy))) != 0 && int((int((noarch.NotUA_Boolean(UA_Boolean(v[0].type_[0].pointerFree)))))) != 0 {
		// If members were moved, initialize original array to prevent reuse
		noarch.Memset(array.([]byte), byte(0), 8*uint32((arraySize)))
	}
	return UA_StatusCode(retval)
}
// UA_Variant_setRange - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6398
func UA_Variant_setRange(v []UA_Variant, array interface{}, arraySize uint, range_ UA_NumericRange) UA_StatusCode {
	return Variant_setRange(v, array, uint(arraySize), range_, 0)
}
// UA_Variant_setRangeCopy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6404
func UA_Variant_setRangeCopy(v []UA_Variant, array interface{}, arraySize uint, range_ UA_NumericRange) UA_StatusCode {
	return Variant_setRange(v, uint32((uintptr_t(array))), uint(arraySize), range_, 1)
}
// LocalizedText_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6412
// LocalizedText
func LocalizedText_deleteMembers(p []UA_LocalizedText, __ []UA_DataType) {
	String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&p[0].locale))[:], nil)
	String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&p[0].text))[:], nil)
}
// LocalizedText_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6418
func LocalizedText_copy(src []UA_LocalizedText, dst []UA_LocalizedText, __ []UA_DataType) UA_StatusCode {
	var retval UA_StatusCode = UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&src[0].locale))[:], (*[100000000]UA_String)(unsafe.Pointer(&dst[0].locale))[:])
	retval |= UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&src[0].text))[:], (*[100000000]UA_String)(unsafe.Pointer(&dst[0].text))[:])
	return UA_StatusCode(retval)
}
// DataValue_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6427
// DataValue
func DataValue_deleteMembers(p []UA_DataValue, __ []UA_DataType) {
	Variant_deletemembers((*[100000000]UA_Variant)(unsafe.Pointer(&p[0].value))[:], nil)
}
// DataValue_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6432
func DataValue_copy(src []UA_DataValue, dst []UA_DataValue, __ []UA_DataType) UA_StatusCode {
	memcpy(dst, src, 96)
	UA_Variant_init((*[100000000]UA_Variant)(unsafe.Pointer(&dst[0].value))[:])
	var retval UA_StatusCode = Variant_copy((*[100000000]UA_Variant)(unsafe.Pointer(&src[0].value))[:], (*[100000000]UA_Variant)(unsafe.Pointer(&dst[0].value))[:], nil)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		DataValue_deleteMembers(dst, nil)
	}
	return UA_StatusCode(retval)
}
// DiagnosticInfo_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6444
// DiagnosticInfo
func DiagnosticInfo_deleteMembers(p []UA_DiagnosticInfo, __ []UA_DataType) {
	String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&p[0].additionalInfo))[:], nil)
	if int((int((UA_Boolean(p[0].hasInnerDiagnosticInfo))))) != 0 && p[0].innerDiagnosticInfo != nil {
		DiagnosticInfo_deleteMembers(p[0].innerDiagnosticInfo, nil)
		_ = p[0].innerDiagnosticInfo
	}
}
// DiagnosticInfo_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6453
func DiagnosticInfo_copy(src []UA_DiagnosticInfo, dst []UA_DiagnosticInfo, __ []UA_DataType) UA_StatusCode {
	memcpy(dst, src, 72)
	UA_String_init((*[100000000]UA_String)(unsafe.Pointer(&dst[0].additionalInfo))[:])
	dst[0].innerDiagnosticInfo = nil
	var retval UA_StatusCode
	if int((int((UA_Boolean(src[0].hasAdditionalInfo))))) != 0 {
		retval = UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&src[0].additionalInfo))[:], (*[100000000]UA_String)(unsafe.Pointer(&dst[0].additionalInfo))[:])
	}
	if int((int((UA_Boolean(src[0].hasInnerDiagnosticInfo))))) != 0 && src[0].innerDiagnosticInfo != nil {
		dst[0].innerDiagnosticInfo = make([]UA_DiagnosticInfo, 72*1/72)
		if dst[0].innerDiagnosticInfo != nil {
			retval |= DiagnosticInfo_copy(src[0].innerDiagnosticInfo, dst[0].innerDiagnosticInfo, nil)
			dst[0].hasInnerDiagnosticInfo = 1
		} else {
			dst[0].hasInnerDiagnosticInfo = 0
			retval |= UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		}
	}
	return UA_StatusCode(retval)
}
// UA_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6480
//
// Structured Types
//
func UA_new(type_ []UA_DataType) interface{} {
	var p interface{} = make([]byte, (UA_UInt16(type_[0].memSize))*(UA_UInt16((uint16_t((uint16((uint16(1)))))))))
	return p
}
// copyByte - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6486
func copyByte(src []u8, dst []u8, __ []UA_DataType) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// copy2Byte - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6492
func copy2Byte(src []u16, dst []u16, __ []UA_DataType) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// copy4Byte - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6498
func copy4Byte(src []u32, dst []u32, __ []UA_DataType) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// copy8Byte - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6504
func copy8Byte(src []u64, dst []u64, __ []UA_DataType) UA_StatusCode {
	dst[0] = src[0]
	return 0
}
// copyGuid - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6510
func copyGuid(src []UA_Guid, dst []UA_Guid, __ []UA_DataType) UA_StatusCode {
	dst[0] = src[0]
	return 0
}

type UA_copySignature func(interface{} , interface{} , []UA_DataType)(UA_StatusCode)

var copyJumpTable []UA_copySignature = []UA_copySignature{UA_copySignature(copyByte), UA_copySignature(copyByte), UA_copySignature(copyByte), UA_copySignature(copy2Byte), UA_copySignature(copy2Byte), UA_copySignature(copy4Byte), UA_copySignature(copy4Byte), UA_copySignature(copy8Byte), UA_copySignature(copy8Byte), UA_copySignature(copy4Byte), UA_copySignature(copy8Byte), UA_copySignature(copy_noInit), UA_copySignature(copy8Byte), UA_copySignature(copyGuid), UA_copySignature(copy_noInit), UA_copySignature(copy_noInit), UA_copySignature(NodeId_copy), UA_copySignature(ExpandedNodeId_copy), UA_copySignature(copy4Byte), UA_copySignature(copy_noInit), UA_copySignature(LocalizedText_copy), UA_copySignature(ExtensionObject_copy), UA_copySignature(DataValue_copy), UA_copySignature(Variant_copy), UA_copySignature(DiagnosticInfo_copy), UA_copySignature(copy_noInit)}
// copy_noInit - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6548
// Boolean
// SByte
// Byte
// Int16
// UInt16
// Int32
// UInt32
// Int64
// UInt64
// Float
// Double
// String
// DateTime
// Guid
// ByteString
// XmlElement
// StatusCode
// QualifiedName
// LocalizedText
// all others
func copy_noInit(src interface{}, dst interface{}, type_ []UA_DataType) UA_StatusCode {
	var retval UA_StatusCode
	var ptrs uintptr_t = uintptr_t(src)
	var ptrd uintptr_t = uintptr_t(dst)
	var membersSize u8 = u8((UA_Byte(type_[0].membersSize)))
	{
		var i uint
		for ; i < uint((uint32(uint8((__uint8_t((uint8_t((UA_Byte((membersSize))))))))))); i++ {
			var m []UA_DataTypeMember = (*[100000000]UA_DataTypeMember)(unsafe.Pointer(&type_[0].members[i]))[:]
			var typelists [][]UA_DataType = [][]UA_DataType{UA_TYPES, (*[100000000]UA_DataType)(unsafe.Pointer(&type_[-int(uint16((uint16((uint16_t((UA_UInt16(type_[0].typeIndex))))))))]))[:]}
			var mt []UA_DataType = (*[100000000]UA_DataType)(unsafe.Pointer(&typelists[noarch.NotUA_Boolean(UA_Boolean(m[0].namespaceZero))][UA_UInt16(m[0].memberTypeIndex)]))[:]
			if int((int((noarch.NotUA_Boolean(UA_Boolean(m[0].isArray)))))) != 0 {
				ptrs += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(m[0].padding))))))))))
				ptrd += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(m[0].padding))))))))))
				var fi uint = uint((func() uint32 {
					if int((int((UA_Boolean(mt[0].builtin))))) != 0 {
						return uint32(uint16((uint16((uint16_t((UA_UInt16(mt[0].typeIndex))))))))
					}
					return uint32(25)
				}()))
				retval |= copyJumpTable[fi](uint32((uintptr_t(ptrs))), uint32((uintptr_t(ptrd))), mt)
				ptrs += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(mt[0].memSize))))))))))
				ptrd += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(mt[0].memSize))))))))))
			} else {
				ptrs += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(m[0].padding))))))))))
				ptrd += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(m[0].padding))))))))))
				var dst_size []uint
				var size uint = (nil)[(0)]
				ptrs += uintptr_t((8))
				ptrd += uintptr_t((8))
				retval |= UA_Array_copy((nil)[0], uint(size), nil, mt)
				if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
					dst_size[0] = size
				} else {
					dst_size[0] = 0
				}
				ptrs += uintptr_t((8))
				ptrd += uintptr_t((8))
			}
		}
	}
	return UA_StatusCode(retval)
}
// UA_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6584
func UA_copy(src interface{}, dst interface{}, type_ []UA_DataType) UA_StatusCode {
	// init
	noarch.Memset(dst.([]byte), byte(0), uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize)))))))))
	var retval UA_StatusCode = copy_noInit(src, dst, type_)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_deleteMembers(dst, type_)
	}
	return UA_StatusCode(retval)
}
// nopDeleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6593
func nopDeleteMembers(p interface{}, type_ []UA_DataType) {
}

type UA_deleteMembersSignature func(interface{} , []UA_DataType)()

var deleteMembersJumpTable []UA_deleteMembersSignature = []UA_deleteMembersSignature{UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(String_deleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(String_deleteMembers), UA_deleteMembersSignature(String_deleteMembers), UA_deleteMembersSignature(NodeId_deleteMembers), UA_deleteMembersSignature(ExpandedNodeId_deleteMembers), UA_deleteMembersSignature(nopDeleteMembers), UA_deleteMembersSignature(deleteMembers_noInit), UA_deleteMembersSignature(LocalizedText_deleteMembers), UA_deleteMembersSignature(ExtensionObject_deleteMembers), UA_deleteMembersSignature(DataValue_deleteMembers), UA_deleteMembersSignature(Variant_deletemembers), UA_deleteMembersSignature(DiagnosticInfo_deleteMembers), UA_deleteMembersSignature(deleteMembers_noInit)}
// deleteMembers_noInit - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6627
// Boolean
// SByte
// Byte
// Int16
// UInt16
// Int32
// UInt32
// Int64
// UInt64
// Float
// Double
// String
// DateTime
// Guid
// ByteString
// XmlElement
// ExpandedNodeId
// StatusCode
// QualifiedName
// LocalizedText
func deleteMembers_noInit(p interface{}, type_ []UA_DataType) {
	var ptr uintptr_t = uintptr_t(p)
	var membersSize u8 = u8((UA_Byte(type_[0].membersSize)))
	{
		var i uint
		for ; i < uint((uint32(uint8((__uint8_t((uint8_t((UA_Byte((membersSize))))))))))); i++ {
			var m []UA_DataTypeMember = (*[100000000]UA_DataTypeMember)(unsafe.Pointer(&type_[0].members[i]))[:]
			var typelists [][]UA_DataType = [][]UA_DataType{UA_TYPES, (*[100000000]UA_DataType)(unsafe.Pointer(&type_[-int(uint16((uint16((uint16_t((UA_UInt16(type_[0].typeIndex))))))))]))[:]}
			var mt []UA_DataType = (*[100000000]UA_DataType)(unsafe.Pointer(&typelists[noarch.NotUA_Boolean(UA_Boolean(m[0].namespaceZero))][UA_UInt16(m[0].memberTypeIndex)]))[:]
			if int((int((noarch.NotUA_Boolean(UA_Boolean(m[0].isArray)))))) != 0 {
				ptr += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(m[0].padding))))))))))
				var fi uint = uint((func() uint32 {
					if int((int((UA_Boolean(mt[0].builtin))))) != 0 {
						return uint32(uint16((uint16((uint16_t((UA_UInt16(mt[0].typeIndex))))))))
					}
					return uint32(25)
				}()))
				deleteMembersJumpTable[fi](uint32((uintptr_t(ptr))), mt)
				ptr += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(mt[0].memSize))))))))))
			} else {
				ptr += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(m[0].padding))))))))))
				var length uint = (nil)[0]
				ptr += uintptr_t((8))
				UA_Array_delete((nil)[0], uint(length), mt)
				ptr += uintptr_t((8))
			}
		}
	}
}
// UA_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6650
func UA_deleteMembers(p interface{}, type_ []UA_DataType) {
	deleteMembers_noInit(p, type_)
	// init
	noarch.Memset(p.([]byte), byte(0), uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize)))))))))
}
// UA_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6656
func UA_delete(p interface{}, type_ []UA_DataType) {
	deleteMembers_noInit(p, type_)
	_ = p
}
// UA_Array_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6666
//
// Array Handling
//
func UA_Array_new(size uint, type_ []UA_DataType) interface{} {
	if size > uint((2147483647)) {
		return nil
	}
	if size == uint((0)) {
		return (1)
	}
	return make([]byte, (UA_UInt16(type_[0].memSize))*(UA_UInt16((uint16_t((uint16((uint16(uint32((uint32((uint(size))))))))))))))
}
// UA_Array_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6675
func UA_Array_copy(src interface{}, size uint, dst []interface{}, type_ []UA_DataType) UA_StatusCode {
	if size == uint((0)) {
		if src == nil {
			dst[0] = nil
		} else {
			dst[0] = 1
		}
		return 0
	}
	if type_ == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	// calloc, so we don't have to check retval in every iteration of copying
	dst[0] = make([]byte, size*uint((uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))))/1)
	if dst[0] == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	if int((int((UA_Boolean(type_[0].pointerFree))))) != 0 {
		memcpy(dst[0], src, uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))*uint32((size)))
		return 0
	}
	var ptrs uintptr_t = uintptr_t(src)
	var ptrd uintptr_t = uintptr_t(dst[0])
	var retval UA_StatusCode
	{
		var i uint
		for ; i < size; i++ {
			retval |= UA_copy(uint32((uintptr_t(ptrs))), uint32((uintptr_t(ptrd))), type_)
			ptrs += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))))
			ptrd += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))))
		}
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_Array_delete(dst[0], uint(size), type_)
		dst[0] = nil
	}
	return UA_StatusCode(retval)
}
// UA_Array_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6714
func UA_Array_delete(p interface{}, size uint, type_ []UA_DataType) {
	if int((int((noarch.NotUA_Boolean(UA_Boolean(type_[0].pointerFree)))))) != 0 {
		var ptr uintptr_t = uintptr_t(p)
		{
			var i uint
			for ; i < size; i++ {
				UA_deleteMembers(uint32((uintptr_t(ptr))), type_)
				ptr += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))))
			}
		}
	}
	_ = (uint32((uintptr_t(p) & ^uintptr_t((1)))))
}
// isDataTypeNumeric - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6726
func isDataTypeNumeric(type_ []UA_DataType) UA_Boolean {
	{
		var i int = 1
		for ; i <= 10; i++ {
			if (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[i]))[:] == type_ {
				// All data types ids between UA_TYPES_SBYTE and UA_TYPES_DOUBLE are numeric
				return 1
			}
		}
	}
	return 0
}

type Ctx struct {
	pos                          []u8
	end                          []u8
	depth                        u16
	customTypesArraySize         uint
	customTypesArray             []UA_DataType
	exchangeBufferCallback       UA_exchangeEncodeBuffer
	exchangeBufferCallbackHandle interface{}
}
type encodeBinarySignature func(interface{} , []UA_DataType , []Ctx)(status)
type decodeBinarySignature func(interface{} , []UA_DataType , []Ctx)(status)
type calcSizeBinarySignature func(interface{} , []UA_DataType)(uint)
// exchangeBuffer - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6836
//
// * Chunking
// * ^^^^^^^^
// * Breaking a message into chunks is integrated with the encoding. When the end
// * of a buffer is reached, a callback is executed that sends the current buffer
// * as a chunk and exchanges the encoding buffer "underneath" the ongoing
// * encoding. This reduces the RAM requirements and unnecessary copying.
// *
// * In encodeBinaryInternal and Array_encodeBinary, we store a pointer to the
// * last "good position" in the buffer. If we reach the end of the buffer, the
// * encoding until that point is sent out. Afterwards the "good position" pointer
// * is no longer valid. In order to prevent reuse, no method must return
// * UA_STATUSCODE_BADENCODINGLIMITSEXCEEDED after having called exchangeBuffer().
// * This needs to be ensured for the following methods:
// *
// * encodeBinaryInternal
// * Array_encodeBinary
// * NodeId_encodeBinary
// * ExpandedNodeId_encodeBinary
// * LocalizedText_encodeBinary
// * ExtensionObject_encodeBinary
// * Variant_encodeBinary
// * DataValue_encodeBinary
// * DiagnosticInfo_encodeBinary
// Send the current chunk and replace the buffer
func exchangeBuffer(ctx []Ctx) status {
	if func(interface{} , [][]UA_Byte , [][]UA_Byte)(UA_StatusCode)((noarch.NotUA_exchangeEncodeBuffer(UA_exchangeEncodeBuffer(ctx[0].exchangeBufferCallback)))) != nil {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147876864)))))))))
	}
	return status((ctx.exchangeBufferCallback(ctx[0].exchangeBufferCallbackHandle, (*[100000000][]u8)(unsafe.Pointer(&ctx[0].pos))[:], (*[100000000][]u8)(unsafe.Pointer(&ctx[0].end))[:])))
}
// encodeWithExchangeBuffer - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6845
// If encoding fails, exchange the buffer and try again. It is assumed that the
// * following encoding never fails on a fresh buffer. This is true for numerical
// * types.
func encodeWithExchangeBuffer(ptr interface{}, encodeFunc encodeBinarySignature, ctx []Ctx) status {
	var ret status = encodeFunc(ptr, nil, ctx)
	if ret == status((UA_StatusCode((uint32_t((uint32((uint32(2148007936))))))))) {
		ret = exchangeBuffer(ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			return status(ret)
		}
		encodeFunc(ptr, nil, ctx)
	}
	return 0
}
// Boolean_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6917
//
// Integer Types
//
// Boolean
func Boolean_encodeBinary(src []UA_Boolean, type_ []UA_DataType, ctx []Ctx) status {
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(4))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2148007936)))))))))
	}
	ctx[0].pos[0] = (src)[0]
	ctx.pos = ctx[0].pos[1:]
	return 0
}
// Boolean_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6925
func Boolean_decodeBinary(dst []UA_Boolean, type_ []UA_DataType, ctx []Ctx) status {
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(4))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	dst[0] = UA_Boolean((int((func() int {
		if int(uint8((__uint8_t((uint8_t((UA_Byte((ctx[0].pos[0]))))))))) > 0 {
			return 1
		}
		return 0
	}()))))
	ctx.pos = ctx[0].pos[1:]
	return 0
}
// Byte_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6934
// Byte
func Byte_encodeBinary(src []UA_Byte, type_ []UA_DataType, ctx []Ctx) status {
	if ctx[0].pos[1:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2148007936)))))))))
	}
	ctx[0].pos[0] = (src)[0]
	ctx.pos = ctx[0].pos[1:]
	return 0
}
// Byte_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6942
func Byte_decodeBinary(dst []UA_Byte, type_ []UA_DataType, ctx []Ctx) status {
	if ctx[0].pos[1:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	dst[0] = UA_Byte((uint8_t((__uint8_t((uint8((__uint8_t((uint8_t((UA_Byte((ctx[0].pos[0]))))))))))))))
	ctx.pos = ctx[0].pos[1:]
	return 0
}
// UInt16_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6951
// UInt16
func UInt16_encodeBinary(src []UA_UInt16, type_ []UA_DataType, ctx []Ctx) status {
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(2))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2148007936)))))))))
	}
	memcpy(ctx[0].pos, src, 2)
	ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(2)*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	return 0
}
// UInt16_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6963
func UInt16_decodeBinary(dst []UA_UInt16, type_ []UA_DataType, ctx []Ctx) status {
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(2))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	memcpy(dst, ctx[0].pos, 2)
	ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(2)*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	return 0
}
// UInt32_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6976
// UInt32
func UInt32_encodeBinary(src []UA_UInt32, type_ []UA_DataType, ctx []Ctx) status {
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(4))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2148007936)))))))))
	}
	memcpy(ctx[0].pos, src, 4)
	ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(4)*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	return 0
}
// UInt32_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:6988
func UInt32_decodeBinary(dst []UA_UInt32, type_ []UA_DataType, ctx []Ctx) status {
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(4))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	memcpy(dst, ctx[0].pos, 4)
	ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(4)*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	return 0
}
// UInt64_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7001
// UInt64
func UInt64_encodeBinary(src []UA_UInt64, type_ []UA_DataType, ctx []Ctx) status {
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(8))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2148007936)))))))))
	}
	memcpy(ctx[0].pos, src, 8)
	ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(8)*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	return 0
}
// UInt64_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7013
func UInt64_decodeBinary(dst []UA_UInt64, type_ []UA_DataType, ctx []Ctx) status {
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(8))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	memcpy(dst, ctx[0].pos, 8)
	ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(8)*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	return 0
}
// Array_encodeBinaryOverlayable - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7143
//
// Floating Point Types
//
//
// Array Handling
//
func Array_encodeBinaryOverlayable(ptr uintptr_t, length uint, elementMemSize uint, ctx []Ctx) status {
	var finished uint
	for ctx[0].end < (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(uint32((elementMemSize*(length-finished)))))*unsafe.Sizeof(ctx[0].pos[0]))))[:] {
		var possible uint = uint((uint32(((uintptr_t(ctx[0].end) - uintptr_t(ctx[0].pos)) / uintptr_t((1 * uint32((elementMemSize))))))))
		var possibleMem uint = possible * elementMemSize
		// Store the number of already encoded elements
		// Loop as long as more elements remain than fit into the chunk
		memcpy(ctx[0].pos, uint32((uintptr_t(ptr))), uint32((uint(possibleMem))))
		ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(uint32((possibleMem))))*unsafe.Sizeof(ctx[0].pos[0]))))[:]
		ptr += uintptr_t((uint32((possibleMem))))
		finished += possible
		var ret status = exchangeBuffer(ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			return status(ret)
		}
	}
	// Encode the remaining elements
	memcpy(ctx[0].pos, uint32((uintptr_t(ptr))), uint32((elementMemSize * (length - finished))))
	ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(uint32((elementMemSize*(length-finished)))))*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	return 0
}
// Array_encodeBinaryComplex - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7167
func Array_encodeBinaryComplex(ptr uintptr_t, length uint, type_ []UA_DataType, ctx []Ctx) status {
	var encode_index uint = uint((func() uint32 {
		if int((int((UA_Boolean(type_[0].builtin))))) != 0 {
			return uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].typeIndex))))))))
		}
		return uint32(25)
	}()))
	var encodeType encodeBinarySignature = encodeBinaryJumpTable[encode_index]
	{
		var i uint
		for ; i < length; i++ {
			var oldpos []u8 = ctx[0].pos
			var ret status = encodeType(uint32((uintptr_t(ptr))), type_, ctx)
			// Get the encoding function for the data type. The jumptable at
			//     * UA_BUILTIN_TYPES_COUNT points to the generic UA_encodeBinary method
			// Encode every element
			ptr += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))))
			if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
				if ret == status((UA_StatusCode((uint32_t((uint32((uint32(2148007936))))))))) {
					// Encoding failed, switch to the next chunk when possible
					// Set buffer position to the end of the last encoded element
					ctx[0].pos = oldpos
					ret = exchangeBuffer(ctx)
					// Undo to retry encoding the ith element
					ptr -= uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))))
					i --
				}
				if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
					// Unrecoverable fail
					return status(ret)
				}
			}
		}
	}
	return 0
}
// Array_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7195
func Array_encodeBinary(src interface{}, length uint, type_ []UA_DataType, ctx []Ctx) status {
	var signed_length i32 = i32((UA_Int32((int32_t((__int32_t((-1))))))))
	if length > uint((2147483647)) {
		// Check and convert the array length to int32
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))))
	}
	if length > uint((0)) {
		signed_length = i32(uint(length))
	} else if src == 1 {
		signed_length = i32((UA_Int32((int32_t((__int32_t((0))))))))
	}
	var ret status = encodeWithExchangeBuffer((*[100000000]i32)(unsafe.Pointer(&signed_length))[:], encodeBinarySignature(UInt32_encodeBinary), ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) || length == uint((0)) {
		// Encode the array length
		// Quit early?
		return status(ret)
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(type_[0].overlayable)))))) != 0 {
		// Encode the content
		return Array_encodeBinaryComplex(uintptr_t(src), uint(length), type_, ctx)
	}
	return Array_encodeBinaryOverlayable(uintptr_t(src), uint(length), uint(UA_UInt16(type_[0].memSize)), ctx)
}
// Array_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7219
func Array_decodeBinary(dst []interface{}, out_length []uint, type_ []UA_DataType, ctx []Ctx) status {
	var signed_length i32
	var ret status = UInt32_decodeBinary((*[100000000]i32)(unsafe.Pointer(&signed_length))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Decode the length
		// Int32
		return status(ret)
	}
	if signed_length <= 0 {
		// Return early for empty arrays
		out_length[0] = 0
		if signed_length < i32((UA_Int32((int32_t((__int32_t((0)))))))) {
			dst[0] = nil
		} else {
			dst[0] = 1
		}
		return 0
	}
	var length uint = uint(i32(signed_length))
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))*uint32((length))/32))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		// Filter out arrays that can obviously not be decoded, because the message
		//     * is too small for the array length. This prevents the allocation of very
		//     * long arrays for bogus messages.
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	// Allocate memory
	dst[0] = make([]byte, length*uint((uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))))/1)
	if dst[0] == nil {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))))
	}
	if int((int((UA_Boolean(type_[0].overlayable))))) != 0 {
		if ctx[0].end < (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))*uint32((length))))*unsafe.Sizeof(ctx[0].pos[0]))))[:] {
			_ = dst[0]
			// memcpy overlayable array
			dst[0] = nil
			return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
		}
		memcpy(dst[0], ctx[0].pos, uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))*uint32((length)))
		ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))*uint32((length))))*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	} else {
		var ptr uintptr_t = uintptr_t(dst[0])
		var decode_index uint = uint((func() uint32 {
			if int((int((UA_Boolean(type_[0].builtin))))) != 0 {
				return uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].typeIndex))))))))
			}
			return uint32(25)
		}()))
		{
			var i uint
			for ; i < length; i++ {
				// Decode array members
				ret = decodeBinaryJumpTable[decode_index](uint32((uintptr_t(ptr))), type_, ctx)
				if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
					// +1 because last element is also already initialized
					UA_Array_delete(dst[0], i+uint((1)), type_)
					dst[0] = nil
					return status(ret)
				}
				ptr += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))))
			}
		}
	}
	out_length[0] = length
	return 0
}
// String_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7282
//
// Builtin Types
//
func String_encodeBinary(src []UA_String, type_ []UA_DataType, ctx []Ctx) status {
	return Array_encodeBinary(src[0].data, uint(src[0].length), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:], ctx)
}
// String_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7286
func String_decodeBinary(dst []UA_String, type_ []UA_DataType, ctx []Ctx) status {
	return Array_decodeBinary((*[100000000][]UA_Byte)(unsafe.Pointer(&dst[0].data))[:], (*[100000000]uint)(unsafe.Pointer(&dst[0].length))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:], ctx)
}
// Guid_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7291
// Guid
func Guid_encodeBinary(src []UA_Guid, type_ []UA_DataType, ctx []Ctx) status {
	var ret status
	ret |= UInt32_encodeBinary((*[100000000]UA_UInt32)(unsafe.Pointer(&src[0].data1))[:], nil, ctx)
	ret |= UInt16_encodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&src[0].data2))[:], nil, ctx)
	ret |= UInt16_encodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&src[0].data3))[:], nil, ctx)
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(8*1))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2148007936)))))))))
	}
	memcpy(ctx[0].pos, src[0].data4[:], 8*1)
	ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(8)*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	return status(ret)
}
// Guid_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7303
func Guid_decodeBinary(dst []UA_Guid, type_ []UA_DataType, ctx []Ctx) status {
	var ret status
	ret |= UInt32_decodeBinary((*[100000000]UA_UInt32)(unsafe.Pointer(&dst[0].data1))[:], nil, ctx)
	ret |= UInt16_decodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&dst[0].data2))[:], nil, ctx)
	ret |= UInt16_decodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&dst[0].data3))[:], nil, ctx)
	if (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(8*1))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	memcpy(dst[0].data4[:], ctx[0].pos, 8*1)
	ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(8)*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	return status(ret)
}
// NodeId_encodeBinaryWithEncodingMask - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7326
// NodeId
// For ExpandedNodeId, we prefill the encoding mask. We can return
// * UA_STATUSCODE_BADENCODINGLIMITSEXCEEDED before encoding the string, as the
// * buffer is not replaced.
func NodeId_encodeBinaryWithEncodingMask(src []UA_NodeId, encoding u8, ctx []Ctx) status {
	var ret status
	switch uint32(int((src[0].identifierType))) {
	case uint32(int((UA_NODEIDTYPE_NUMERIC))):
		if UA_UInt32((*src[0].identifier.numeric())) > UA_UInt32((uint32_t((uint32((65535)))))) || int(uint16((uint16((uint16_t((UA_UInt16(src[0].namespaceIndex)))))))) > 255 {
			encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(2)))))))))
			ret |= Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
			ret |= UInt16_encodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&src[0].namespaceIndex))[:], nil, ctx)
			ret |= UInt32_encodeBinary((*[100000000]UA_UInt32)(unsafe.Pointer(&(*src[0].identifier.numeric())))[:], nil, ctx)
		} else if UA_UInt32((*src[0].identifier.numeric())) > UA_UInt32((uint32_t((uint32((255)))))) || int(uint16((uint16((uint16_t((UA_UInt16(src[0].namespaceIndex)))))))) > 0 {
			encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(1)))))))))
			ret |= Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
			var nsindex u8 = u8(UA_UInt16(src[0].namespaceIndex))
			ret |= Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&nsindex))[:], nil, ctx)
			var identifier16 u16 = u16(UA_UInt32((*src[0].identifier.numeric())))
			ret |= UInt16_encodeBinary((*[100000000]u16)(unsafe.Pointer(&identifier16))[:], nil, ctx)
		} else {
			encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(0)))))))))
			ret |= Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
			var identifier8 u8 = u8(UA_UInt32((*src[0].identifier.numeric())))
			ret |= Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&identifier8))[:], nil, ctx)
		}
	case uint32(int((UA_NODEIDTYPE_STRING))):
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(int((UA_NODEIDTYPE_STRING)))))))))))
		ret |= Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
		ret |= UInt16_encodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&src[0].namespaceIndex))[:], nil, ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			return status(ret)
		}
		ret = String_encodeBinary((*[100000000]UA_String)(unsafe.Pointer(&(*src[0].identifier.string())))[:], nil, ctx)
	case uint32(int((UA_NODEIDTYPE_GUID))):
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(int((UA_NODEIDTYPE_GUID)))))))))))
		ret |= Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
		ret |= UInt16_encodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&src[0].namespaceIndex))[:], nil, ctx)
		ret |= Guid_encodeBinary((*[100000000]UA_Guid)(unsafe.Pointer(&(*src[0].identifier.guid())))[:], nil, ctx)
	case uint32(int((UA_NODEIDTYPE_BYTESTRING))):
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(int((UA_NODEIDTYPE_BYTESTRING)))))))))))
		ret |= Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
		ret |= UInt16_encodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&src[0].namespaceIndex))[:], nil, ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			return status(ret)
		}
		// ByteString
		ret = String_encodeBinary((*[100000000]UA_ByteString)(unsafe.Pointer(&(*src[0].identifier.byteString())))[:], nil, ctx)
	default:
		{
			return status((UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))))
		}
	}
	return status(ret)
}
// NodeId_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7378
func NodeId_encodeBinary(src []UA_NodeId, type_ []UA_DataType, ctx []Ctx) status {
	return NodeId_encodeBinaryWithEncodingMask(src, u8(0), ctx)
}
// NodeId_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7382
func NodeId_decodeBinary(dst []UA_NodeId, type_ []UA_DataType, ctx []Ctx) status {
	var dstByte u8
	var encodingByte u8
	var dstUInt16 u16
	var ret status = Byte_decodeBinary((*[100000000]u8)(unsafe.Pointer(&encodingByte))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Decode the encoding bitfield
		return status(ret)
	}
	// Filter out the bits used only for ExpandedNodeIds
	encodingByte &= u8((UA_Byte((uint8_t((__uint8_t((uint8(int(uint8((__uint8_t((uint8_t((UA_Byte((u8(^(64 | 128))))))))))))))))))))
	switch int(uint8((__uint8_t((uint8_t((UA_Byte((u8(encodingByte)))))))))) {
	case 0:
		// Decode the namespace and identifier
		dst[0].identifierType = UA_NODEIDTYPE_NUMERIC
		ret = Byte_decodeBinary((*[100000000]u8)(unsafe.Pointer(&dstByte))[:], nil, ctx)
		(*dst[0].identifier.numeric()) = UA_UInt32((uint32_t((uint32((uint32(uint8((__uint8_t((uint8_t((UA_Byte((dstByte)))))))))))))))
		dst[0].namespaceIndex = 0
	case 1:
		dst[0].identifierType = UA_NODEIDTYPE_NUMERIC
		ret |= Byte_decodeBinary((*[100000000]u8)(unsafe.Pointer(&dstByte))[:], nil, ctx)
		dst[0].namespaceIndex = UA_UInt16((uint16_t((uint16((uint16(uint8((__uint8_t((uint8_t((UA_Byte((dstByte)))))))))))))))
		ret |= UInt16_decodeBinary((*[100000000]u16)(unsafe.Pointer(&dstUInt16))[:], nil, ctx)
		(*dst[0].identifier.numeric()) = UA_UInt32((uint32_t((uint32((uint32(uint16((uint16((uint16_t((UA_UInt16((dstUInt16)))))))))))))))
	case 2:
		dst[0].identifierType = UA_NODEIDTYPE_NUMERIC
		ret |= UInt16_decodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&dst[0].namespaceIndex))[:], nil, ctx)
		ret |= UInt32_decodeBinary((*[100000000]UA_UInt32)(unsafe.Pointer(&(*dst[0].identifier.numeric())))[:], nil, ctx)
	case UA_NODEIDTYPE_STRING:
		dst[0].identifierType = UA_NODEIDTYPE_STRING
		ret |= UInt16_decodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&dst[0].namespaceIndex))[:], nil, ctx)
		ret |= String_decodeBinary((*[100000000]UA_String)(unsafe.Pointer(&(*dst[0].identifier.string())))[:], nil, ctx)
	case UA_NODEIDTYPE_GUID:
		dst[0].identifierType = UA_NODEIDTYPE_GUID
		ret |= UInt16_decodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&dst[0].namespaceIndex))[:], nil, ctx)
		ret |= Guid_decodeBinary((*[100000000]UA_Guid)(unsafe.Pointer(&(*dst[0].identifier.guid())))[:], nil, ctx)
	case UA_NODEIDTYPE_BYTESTRING:
		dst[0].identifierType = UA_NODEIDTYPE_BYTESTRING
		ret |= UInt16_decodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&dst[0].namespaceIndex))[:], nil, ctx)
		// ByteString
		ret |= String_decodeBinary((*[100000000]UA_ByteString)(unsafe.Pointer(&(*dst[0].identifier.byteString())))[:], nil, ctx)
	default:
		{
			ret |= status((UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))))
			break
		}
	}
	return status(ret)
}
// ExpandedNodeId_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7438
// ExpandedNodeId
func ExpandedNodeId_encodeBinary(src []UA_ExpandedNodeId, type_ []UA_DataType, ctx []Ctx) status {
	var encoding u8
	if src[0].namespaceUri.data > 1 {
		// Set up the encoding mask
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(128)))))))))
	}
	if UA_UInt32(src[0].serverIndex) > UA_UInt32((uint32_t((uint32((0)))))) {
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(64)))))))))
	}
	var ret status = NodeId_encodeBinaryWithEncodingMask((*[100000000]UA_NodeId)(unsafe.Pointer(&src[0].nodeId))[:], u8(encoding), ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Encode the NodeId
		return status(ret)
	}
	if src[0].namespaceUri.data > 1 {
		// Encode the namespace. Do not return
		//     * UA_STATUSCODE_BADENCODINGLIMITSEXCEEDED afterwards.
		ret = String_encodeBinary((*[100000000]UA_String)(unsafe.Pointer(&src[0].namespaceUri))[:], nil, ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			return status(ret)
		}
	}
	if UA_UInt32(src[0].serverIndex) > UA_UInt32((uint32_t((uint32((0)))))) {
		// Encode the serverIndex
		ret = encodeWithExchangeBuffer((*[100000000]UA_UInt32)(unsafe.Pointer(&src[0].serverIndex))[:], encodeBinarySignature(UInt32_encodeBinary), ctx)
	}
	return status(ret)
}
// ExpandedNodeId_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7467
func ExpandedNodeId_decodeBinary(dst []UA_ExpandedNodeId, type_ []UA_DataType, ctx []Ctx) status {
	if ctx[0].pos >= ctx[0].end {
		// Decode the encoding mask
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	var encoding u8 = ctx[0].pos[0]
	var ret status = NodeId_decodeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&dst[0].nodeId))[:], nil, ctx)
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding)))))))))&128 != 0 {
		// Decode the NodeId
		// Decode the NamespaceUri
		dst[0].nodeId.namespaceIndex = 0
		ret |= String_decodeBinary((*[100000000]UA_String)(unsafe.Pointer(&dst[0].namespaceUri))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding)))))))))&64 != 0 {
		// Decode the ServerIndex
		ret |= UInt32_decodeBinary((*[100000000]UA_UInt32)(unsafe.Pointer(&dst[0].serverIndex))[:], nil, ctx)
	}
	return status(ret)
}
// LocalizedText_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7492
// LocalizedText
func LocalizedText_encodeBinary(src []UA_LocalizedText, type_ []UA_DataType, ctx []Ctx) status {
	var encoding u8
	if src[0].locale.data != nil {
		// Set up the encoding mask
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(1)))))))))
	}
	if src[0].text.data != nil {
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(2)))))))))
	}
	var ret status = Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Encode the encoding byte
		return status(ret)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding)))))))))&1 != 0 {
		// Encode the strings
		ret |= String_encodeBinary((*[100000000]UA_String)(unsafe.Pointer(&src[0].locale))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding)))))))))&2 != 0 {
		ret |= String_encodeBinary((*[100000000]UA_String)(unsafe.Pointer(&src[0].text))[:], nil, ctx)
	}
	return status(ret)
}
// LocalizedText_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7514
func LocalizedText_decodeBinary(dst []UA_LocalizedText, type_ []UA_DataType, ctx []Ctx) status {
	var encoding u8
	var ret status = Byte_decodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding)))))))))&1 != 0 {
		// Decode the encoding mask
		// Decode the content
		ret |= String_decodeBinary((*[100000000]UA_String)(unsafe.Pointer(&dst[0].locale))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding)))))))))&2 != 0 {
		ret |= String_decodeBinary((*[100000000]UA_String)(unsafe.Pointer(&dst[0].text))[:], nil, ctx)
	}
	return status(ret)
}
// UA_findDataTypeByBinaryInternal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7529
// The binary encoding has a different nodeid from the data type. So it is not
// * possible to reuse UA_findDataType
func UA_findDataTypeByBinaryInternal(typeId []UA_NodeId, ctx []Ctx) []UA_DataType {
	if uint32(int((typeId[0].identifierType))) != uint32(int((UA_NODEIDTYPE_NUMERIC))) {
		// We only store a numeric identifier for the encoding nodeid of data types
		return nil
	}
	{
		var i uint
		for ; i < uint((199)); i++ {
			if uint32(uint16((uint16((uint16_t((UA_UInt16(UA_TYPES[i].binaryEncodingId)))))))) == uint32((uint32((uint32_t((UA_UInt32((*typeId[0].identifier.numeric())))))))) && int(uint16((uint16((uint16_t((UA_UInt16(UA_TYPES[i].typeId.namespaceIndex)))))))) == int(uint16((uint16((uint16_t((UA_UInt16(typeId[0].namespaceIndex)))))))) {
				// Always look in built-in types first
				//     * (may contain data types from all namespaces)
				return (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[i]))[:]
			}
		}
	}
	if int(uint16((uint16((uint16_t((UA_UInt16(typeId[0].namespaceIndex)))))))) != 0 {
		{
			var i uint
			for ; i < uint(ctx[0].customTypesArraySize); i++ {
				if uint32(uint16((uint16((uint16_t((UA_UInt16(ctx[0].customTypesArray[i].binaryEncodingId)))))))) == uint32((uint32((uint32_t((UA_UInt32((*typeId[0].identifier.numeric())))))))) && int(uint16((uint16((uint16_t((UA_UInt16(ctx[0].customTypesArray[i].typeId.namespaceIndex)))))))) == int(uint16((uint16((uint16_t((UA_UInt16(typeId[0].namespaceIndex)))))))) {
					// When other namespace look in custom types, too
					return (*[100000000]UA_DataType)(unsafe.Pointer(&ctx[0].customTypesArray[i]))[:]
				}
			}
		}
	}
	return nil
}
// UA_findDataTypeByBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7555
func UA_findDataTypeByBinary(typeId []UA_NodeId) []UA_DataType {
	var ctx Ctx
	ctx.customTypesArraySize = 0
	ctx.customTypesArray = nil
	return UA_findDataTypeByBinaryInternal(typeId, (*[100000000]Ctx)(unsafe.Pointer(&ctx))[:])
}
// ExtensionObject_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7564
// ExtensionObject
func ExtensionObject_encodeBinary(src []UA_ExtensionObject, type_ []UA_DataType, ctx []Ctx) status {
	var encoding u8 = u8(src[0].encoding)
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding))))))))) <= UA_EXTENSIONOBJECT_ENCODED_XML {
		var ret status = NodeId_encodeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&(*src[0].content.encoded()).typeId))[:], nil, ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			// No content or already encoded content. Do not return
			//     * UA_STATUSCODE_BADENCODINGLIMITSEXCEEDED after encoding the NodeId.
			return status(ret)
		}
		ret = encodeWithExchangeBuffer((*[100000000]u8)(unsafe.Pointer(&encoding))[:], encodeBinarySignature(Byte_encodeBinary), ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			return status(ret)
		}
		switch uint32(src[0].encoding) {
		case uint32(UA_EXTENSIONOBJECT_ENCODED_NOBODY):
		case uint32(UA_EXTENSIONOBJECT_ENCODED_BYTESTRING):
			fallthrough
		case uint32(UA_EXTENSIONOBJECT_ENCODED_XML):
			// ByteString
			ret = String_encodeBinary((*[100000000]UA_ByteString)(unsafe.Pointer(&(*src[0].content.encoded()).body))[:], nil, ctx)
		default:
			{
				ret = status((UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))))
			}
		}
		return status(ret)
	}
	if (*src[0].content.decoded()).type_ == nil || (*src[0].content.decoded()).data == nil {
		// Cannot encode with no data or no type description
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147876864)))))))))
	}
	var typeId UA_NodeId = (*src[0].content.decoded()).type_[0].typeId
	if uint32(int((typeId.identifierType))) != uint32(int((UA_NODEIDTYPE_NUMERIC))) {
		// Write the NodeId for the binary encoded type. The NodeId is always
		//     * numeric, so no buffer replacement is taking place.
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147876864)))))))))
	}
	(*typeId.identifier.numeric()) = UA_UInt32((uint32_t((uint32((uint32(uint16((uint16((uint16_t((UA_UInt16((*src[0].content.decoded()).type_[0].binaryEncodingId))))))))))))))
	var ret status = NodeId_encodeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&typeId))[:], nil, ctx)
	// Write the encoding byte
	encoding = u8((UA_Byte((uint8_t((__uint8_t((uint8(UA_EXTENSIONOBJECT_ENCODED_BYTESTRING)))))))))
	ret |= Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
	var contentType []UA_DataType = (*src[0].content.decoded()).type_
	var len uint = UA_calcSizeBinary((*src[0].content.decoded()).data, contentType)
	if len > uint((2147483647)) {
		// Compute the content length
		// Encode the content length
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147876864)))))))))
	}
	var signed_len i32 = i32(uint(len))
	// Int32
	ret |= UInt32_encodeBinary((*[100000000]i32)(unsafe.Pointer(&signed_len))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Return early upon failures (no buffer exchange until here)
		return status(ret)
	}
	// Encode the content
	return encodeBinaryInternal((*src[0].content.decoded()).data, contentType, ctx)
}
// ExtensionObject_decodeBinaryContent - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7623
func ExtensionObject_decodeBinaryContent(dst []UA_ExtensionObject, typeId []UA_NodeId, ctx []Ctx) status {
	var type_ []UA_DataType = UA_findDataTypeByBinaryInternal(typeId, ctx)
	if type_ == nil {
		// Lookup the datatype
		// Unknown type, just take the binary content
		dst[0].encoding = UA_EXTENSIONOBJECT_ENCODED_BYTESTRING
		UA_NodeId_copy(typeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&(*dst[0].content.encoded()).typeId))[:])
		// ByteString
		return String_decodeBinary((*[100000000]UA_ByteString)(unsafe.Pointer(&(*dst[0].content.encoded()).body))[:], nil, ctx)
	}
	// Allocate memory
	(*dst[0].content.decoded()).data = UA_new(type_)
	if (*dst[0].content.decoded()).data == nil {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))))
	}
	// Jump over the length field (TODO: check if the decoded length matches)
	ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(4)*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	// Decode
	dst[0].encoding = UA_EXTENSIONOBJECT_DECODED
	(*dst[0].content.decoded()).type_ = type_
	var decode_index uint = uint((func() uint32 {
		if int((int((UA_Boolean(type_[0].builtin))))) != 0 {
			return uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].typeIndex))))))))
		}
		return uint32(25)
	}()))
	return decodeBinaryJumpTable[decode_index]((*dst[0].content.decoded()).data, type_, ctx)
}
// ExtensionObject_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7650
func ExtensionObject_decodeBinary(dst []UA_ExtensionObject, type_ []UA_DataType, ctx []Ctx) status {
	var encoding u8
	var binTypeId UA_NodeId
	// Can contain a string nodeid. But no corresponding
	//                          * type is then found in open62541. We only store
	//                          * numerical nodeids of the binary encoding identifier.
	//                          * The extenionobject will be decoded to contain a
	//                          * binary blob.
	UA_NodeId_init((*[100000000]UA_NodeId)(unsafe.Pointer(&binTypeId))[:])
	var ret status
	ret |= NodeId_decodeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&binTypeId))[:], nil, ctx)
	ret |= Byte_decodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&binTypeId))[:])
		return status(ret)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding))))))))) == UA_EXTENSIONOBJECT_ENCODED_BYTESTRING {
		ret = ExtensionObject_decodeBinaryContent(dst, (*[100000000]UA_NodeId)(unsafe.Pointer(&binTypeId))[:], ctx)
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&binTypeId))[:])
	} else if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding))))))))) == UA_EXTENSIONOBJECT_ENCODED_NOBODY {
		dst[0].encoding = int(uint8((__uint8_t((uint8_t((UA_Byte((u8(encoding))))))))))
		// move to dst
		(*dst[0].content.encoded()).typeId = binTypeId
		(*dst[0].content.encoded()).body = UA_BYTESTRING_NULL
	} else if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding))))))))) == UA_EXTENSIONOBJECT_ENCODED_XML {
		dst[0].encoding = int(uint8((__uint8_t((uint8_t((UA_Byte((u8(encoding))))))))))
		// move to dst
		(*dst[0].content.encoded()).typeId = binTypeId
		// ByteString
		ret = String_decodeBinary((*[100000000]UA_ByteString)(unsafe.Pointer(&(*dst[0].content.encoded()).body))[:], nil, ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&(*dst[0].content.encoded()).typeId))[:])
		}
	} else {
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&binTypeId))[:])
		ret = status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	return status(ret)
}
// Variant_encodeBinaryWrapExtensionObject - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7690
// Variant
// Never returns UA_STATUSCODE_BADENCODINGLIMITSEXCEEDED
func Variant_encodeBinaryWrapExtensionObject(src []UA_Variant, isArray int, ctx []Ctx) status {
	var length uint = 1
	var ret status
	if int((isArray)) != 0 {
		if uint(src[0].arrayLength) > uint((2147483647)) {
			// Default to 1 for a scalar.
			// Encode the array length if required
			return status((UA_StatusCode((uint32_t((uint32((uint32(2147876864)))))))))
		}
		length = uint(src[0].arrayLength)
		var encodedLength i32 = i32(uint(src[0].arrayLength))
		// Int32
		ret = UInt32_encodeBinary((*[100000000]i32)(unsafe.Pointer(&encodedLength))[:], nil, ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			return status(ret)
		}
	}
	var eo UA_ExtensionObject
	// Set up the ExtensionObject
	UA_ExtensionObject_init((*[100000000]UA_ExtensionObject)(unsafe.Pointer(&eo))[:])
	eo.encoding = UA_EXTENSIONOBJECT_DECODED
	(*eo.content.decoded()).type_ = src[0].type_
	var memSize u16 = u16((UA_UInt16(src[0].type_[0].memSize)))
	var ptr uintptr_t = uintptr_t(src[0].data)
	{
		var i uint
		for ; i < length && ret == status((UA_StatusCode((uint32_t((uint32((0)))))))); i++ {
			// Iterate over the array
			(*eo.content.decoded()).data = uint32((uintptr_t(ptr)))
			ret = encodeBinaryInternal((*[100000000]UA_ExtensionObject)(unsafe.Pointer(&eo))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:], ctx)
			ptr += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16((memSize)))))))))))
		}
	}
	return status(ret)
}

type UA_VARIANT_ENCODINGMASKTYPE int

const (
	UA_VARIANT_ENCODINGMASKTYPE_TYPEID_MASK UA_VARIANT_ENCODINGMASKTYPE = 63
	UA_VARIANT_ENCODINGMASKTYPE_DIMENSIONS                              = 1 << uint64(6)
	UA_VARIANT_ENCODINGMASKTYPE_ARRAY                                   = 1 << uint64(7)
)
// Variant_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7732
// bits 0:5
// bit 6
// bit 7
func Variant_encodeBinary(src []UA_Variant, type_ []UA_DataType, ctx []Ctx) status {
	var encoding u8
	if src[0].type_ == nil {
		// Quit early for the empty variant
		return Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
	}
	var isBuiltin int = int((int((int((UA_Boolean(src[0].type_[0].builtin)))))))
	var isAlias int = int((map[bool]int{false: 0, true: 1}[int(uint8((__uint8_t((uint8_t((UA_Byte(src[0].type_[0].membersSize)))))))) == 1 && int((int((UA_Boolean(UA_TYPES[UA_UInt16(src[0].type_[0].members[0].memberTypeIndex)].builtin))))) != 0]))
	if int((isBuiltin)) != 0 {
		// Set the content type in the encoding mask
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(int((int((UA_VARIANT_ENCODINGMASKTYPE_TYPEID_MASK)) & int((UA_VARIANT_ENCODINGMASKTYPE((int(uint8((__uint8_t((uint8_t((UA_Byte((u8((int(uint16((uint16((uint16_t((UA_UInt16(src[0].type_[0].typeIndex)))))))) + 1))))))))))))))))))))))))))
	} else if int((isAlias)) != 0 {
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(int((int((UA_VARIANT_ENCODINGMASKTYPE_TYPEID_MASK)) & int((UA_VARIANT_ENCODINGMASKTYPE((int(uint8((__uint8_t((uint8_t((UA_Byte((u8((int(uint16((uint16((uint16_t((UA_UInt16(src[0].type_[0].members[0].memberTypeIndex)))))))) + 1))))))))))))))))))))))))))
	} else {
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(int((int((UA_VARIANT_ENCODINGMASKTYPE_TYPEID_MASK)) & int((UA_VARIANT_ENCODINGMASKTYPE((int(uint8((__uint8_t((uint8_t((UA_Byte((u8((21 + 1))))))))))))))))))))))))))
	}
	var isArray int = int((map[bool]int{false: 0, true: 1}[uint(src[0].arrayLength) > uint((0)) || src[0].data <= 1]))
	var hasDimensions int = int((map[bool]int{false: 0, true: 1}[int((isArray)) != 0 && uint(src[0].arrayDimensionsSize) > uint((0))]))
	if int((isArray)) != 0 {
		// Set the array type in the encoding mask
		encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(int((UA_VARIANT_ENCODINGMASKTYPE_ARRAY)))))))))))
		if int((hasDimensions)) != 0 {
			encoding |= u8((UA_Byte((uint8_t((__uint8_t((uint8(int((UA_VARIANT_ENCODINGMASKTYPE_DIMENSIONS)))))))))))
		}
	}
	var ret status = Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Encode the encoding byte
		return status(ret)
	}
	if int((noarch.NotInt(isBuiltin))) != 0 && int((noarch.NotInt(isAlias))) != 0 {
		// Encode the content
		ret = Variant_encodeBinaryWrapExtensionObject(src, isArray, ctx)
	} else if int((noarch.NotInt(isArray))) != 0 {
		ret = encodeBinaryInternal(src[0].data, src[0].type_, ctx)
	} else {
		ret = Array_encodeBinary(src[0].data, uint(src[0].arrayLength), src[0].type_, ctx)
	}
	if int((hasDimensions)) != 0 && ret == status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Encode the array dimensions
		ret = Array_encodeBinary(src[0].arrayDimensions, uint(src[0].arrayDimensionsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:], ctx)
	}
	return status(ret)
}
// Variant_decodeBinaryUnwrapExtensionObject - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7778
func Variant_decodeBinaryUnwrapExtensionObject(dst []UA_Variant, ctx []Ctx) status {
	var old_pos []u8 = ctx[0].pos
	var typeId UA_NodeId
	// Save the position in the ByteString. If unwrapping is not possible, start
	//     * from here to decode a normal ExtensionObject.
	// Decode the DataType
	UA_NodeId_init((*[100000000]UA_NodeId)(unsafe.Pointer(&typeId))[:])
	var ret status = NodeId_decodeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&typeId))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		return status(ret)
	}
	var encoding u8
	// Decode the EncodingByte
	ret = Byte_decodeBinary((*[100000000]u8)(unsafe.Pointer(&encoding))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&typeId))[:])
		return status(ret)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encoding))))))))) == UA_EXTENSIONOBJECT_ENCODED_BYTESTRING && (dst[0].type_ = UA_findDataTypeByBinaryInternal((*[100000000]UA_NodeId)(unsafe.Pointer(&typeId))[:], ctx)) != nil {
		// Search for the datatype. Default to ExtensionObject.
		// Jump over the length field (TODO: check if length matches)
		ctx.pos = (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(4)*unsafe.Sizeof(ctx[0].pos[0]))))[:]
	} else {
		// Reset and decode as ExtensionObject
		dst[0].type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:]
		ctx[0].pos = old_pos
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&typeId))[:])
	}
	// Allocate memory
	dst[0].data = UA_new(dst[0].type_)
	if dst[0].data == nil {
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))))
	}
	var decode_index uint = uint((func() uint32 {
		if int((int((UA_Boolean(dst[0].type_[0].builtin))))) != 0 {
			return uint32(uint16((uint16((uint16_t((UA_UInt16(dst[0].type_[0].typeIndex))))))))
		}
		return uint32(25)
	}()))
	// Decode the content
	return decodeBinaryJumpTable[decode_index](dst[0].data, dst[0].type_, ctx)
}
// Variant_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7822
// The resulting variant always has the storagetype UA_VARIANT_DATA.
func Variant_decodeBinary(dst []UA_Variant, type_ []UA_DataType, ctx []Ctx) status {
	var encodingByte u8
	var ret status = Byte_decodeBinary((*[100000000]u8)(unsafe.Pointer(&encodingByte))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Decode the encoding byte
		return status(ret)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingByte))))))))) == 0 {
		// Return early for an empty variant (was already _inited)
		return 0
	}
	var isArray int = int((map[bool]int{false: 0, true: 1}[int(uint8((__uint8_t((uint8_t((UA_Byte((encodingByte)))))))))&int((UA_VARIANT_ENCODINGMASKTYPE_ARRAY)) > 0]))
	var typeIndex uint = uint((int(uint8((__uint8_t((uint8_t((UA_Byte((encodingByte)))))))))&int((UA_VARIANT_ENCODINGMASKTYPE_TYPEID_MASK)) - 1))
	if typeIndex > uint((24)) {
		// Does the variant contain an array?
		// Get the datatype of the content. The type must be a builtin data type.
		//     * All not-builtin types are wrapped in an ExtensionObject.
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	if typeIndex == uint((23)) && int((noarch.NotInt(isArray))) != 0 {
		// A variant cannot contain a variant. But it can contain an array of
		//     * variants
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147942400)))))))))
	}
	if int(uint16((uint16((uint16_t((UA_UInt16((u16(ctx[0].depth)))))))))) > 20 {
		// Check the recursion limit
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147876864)))))))))
	}
	ctx[0].depth ++
	// Decode the content
	dst[0].type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[typeIndex]))[:]
	if int((isArray)) != 0 {
		ret = Array_decodeBinary((*[100000000]interface{})(unsafe.Pointer(&dst[0].data))[:], (*[100000000]uint)(unsafe.Pointer(&dst[0].arrayLength))[:], dst[0].type_, ctx)
	} else if typeIndex != uint((21)) {
		dst[0].data = UA_new(dst[0].type_)
		if dst[0].data == nil {
			return status((UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))))
		}
		ret = decodeBinaryJumpTable[typeIndex](dst[0].data, dst[0].type_, ctx)
	} else {
		ret = Variant_decodeBinaryUnwrapExtensionObject(dst, ctx)
	}
	if int((isArray)) != 0 && int(uint8((__uint8_t((uint8_t((UA_Byte((encodingByte)))))))))&int((UA_VARIANT_ENCODINGMASKTYPE_DIMENSIONS)) > 0 {
		// Decode array dimensions
		ret |= Array_decodeBinary((*[100000000][]UA_UInt32)(unsafe.Pointer(&dst[0].arrayDimensions))[:], (*[100000000]uint)(unsafe.Pointer(&dst[0].arrayDimensionsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:], ctx)
	}
	ctx[0].depth --
	return status(ret)
}
// DataValue_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7875
// DataValue
func DataValue_encodeBinary(src []UA_DataValue, type_ []UA_DataType, ctx []Ctx) status {
	var encodingMask u8 = u8((int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasValue))))))))))) | int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasStatus)))))))))))<<uint64(1) | int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasSourceTimestamp)))))))))))<<uint64(2) | int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasServerTimestamp)))))))))))<<uint64(3) | int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasSourcePicoseconds)))))))))))<<uint64(4) | int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasServerPicoseconds)))))))))))<<uint64(5)))
	var ret status = Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encodingMask))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Set up the encoding mask
		// Encode the encoding byte
		return status(ret)
	}
	if int((int((UA_Boolean(src[0].hasValue))))) != 0 {
		// Encode the variant. Afterwards, do not return
		//     * UA_STATUSCODE_BADENCODINGLIMITSEXCEEDED, as the buffer might have been
		//     * exchanged during encoding of the variant.
		ret = Variant_encodeBinary((*[100000000]UA_Variant)(unsafe.Pointer(&src[0].value))[:], nil, ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			return status(ret)
		}
	}
	if int((int((UA_Boolean(src[0].hasStatus))))) != 0 {
		ret |= encodeWithExchangeBuffer((*[100000000]UA_StatusCode)(unsafe.Pointer(&src[0].status))[:], encodeBinarySignature(UInt32_encodeBinary), ctx)
	}
	if int((int((UA_Boolean(src[0].hasSourceTimestamp))))) != 0 {
		ret |= encodeWithExchangeBuffer((*[100000000]UA_DateTime)(unsafe.Pointer(&src[0].sourceTimestamp))[:], encodeBinarySignature(UInt64_encodeBinary), ctx)
	}
	if int((int((UA_Boolean(src[0].hasSourcePicoseconds))))) != 0 {
		ret |= encodeWithExchangeBuffer((*[100000000]UA_UInt16)(unsafe.Pointer(&src[0].sourcePicoseconds))[:], encodeBinarySignature(UInt16_encodeBinary), ctx)
	}
	if int((int((UA_Boolean(src[0].hasServerTimestamp))))) != 0 {
		ret |= encodeWithExchangeBuffer((*[100000000]UA_DateTime)(unsafe.Pointer(&src[0].serverTimestamp))[:], encodeBinarySignature(UInt64_encodeBinary), ctx)
	}
	if int((int((UA_Boolean(src[0].hasServerPicoseconds))))) != 0 {
		ret |= encodeWithExchangeBuffer((*[100000000]UA_UInt16)(unsafe.Pointer(&src[0].serverPicoseconds))[:], encodeBinarySignature(UInt16_encodeBinary), ctx)
	}
	return status(ret)
}
// DataValue_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7915
func DataValue_decodeBinary(dst []UA_DataValue, type_ []UA_DataType, ctx []Ctx) status {
	var encodingMask u8
	var ret status = Byte_decodeBinary((*[100000000]u8)(unsafe.Pointer(&encodingMask))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Decode the encoding mask
		return status(ret)
	}
	if int(uint16((uint16((uint16_t((UA_UInt16((u16(ctx[0].depth)))))))))) > 20 {
		// Check the recursion limit
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147876864)))))))))
	}
	ctx[0].depth ++
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&1 != 0 {
		// Decode the content
		dst[0].hasValue = 1
		ret |= Variant_decodeBinary((*[100000000]UA_Variant)(unsafe.Pointer(&dst[0].value))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&2 != 0 {
		dst[0].hasStatus = 1
		// StatusCode
		ret |= UInt32_decodeBinary((*[100000000]UA_StatusCode)(unsafe.Pointer(&dst[0].status))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&4 != 0 {
		dst[0].hasSourceTimestamp = 1
		// DateTime
		ret |= UInt64_decodeBinary((*[100000000]UA_DateTime)(unsafe.Pointer(&dst[0].sourceTimestamp))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&16 != 0 {
		dst[0].hasSourcePicoseconds = 1
		ret |= UInt16_decodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&dst[0].sourcePicoseconds))[:], nil, ctx)
		if int(uint16((uint16((uint16_t((UA_UInt16(dst[0].sourcePicoseconds)))))))) > 9999 {
			dst[0].sourcePicoseconds = 9999
		}
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&8 != 0 {
		dst[0].hasServerTimestamp = 1
		// DateTime
		ret |= UInt64_decodeBinary((*[100000000]UA_DateTime)(unsafe.Pointer(&dst[0].serverTimestamp))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&32 != 0 {
		dst[0].hasServerPicoseconds = 1
		ret |= UInt16_decodeBinary((*[100000000]UA_UInt16)(unsafe.Pointer(&dst[0].serverPicoseconds))[:], nil, ctx)
		if int(uint16((uint16((uint16_t((UA_UInt16(dst[0].serverPicoseconds)))))))) > 9999 {
			dst[0].serverPicoseconds = 9999
		}
	}
	ctx[0].depth --
	return status(ret)
}
// DiagnosticInfo_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:7964
// DiagnosticInfo
func DiagnosticInfo_encodeBinary(src []UA_DiagnosticInfo, type_ []UA_DataType, ctx []Ctx) status {
	var encodingMask u8 = u8((int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasSymbolicId))))))))))) | int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasNamespaceUri)))))))))))<<uint64(1) | int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasLocalizedText)))))))))))<<uint64(2) | int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasLocale)))))))))))<<uint64(3) | int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasAdditionalInfo)))))))))))<<uint64(4) | int(uint8((__uint8_t((uint8_t((UA_Byte((u8(UA_Boolean(src[0].hasInnerDiagnosticInfo)))))))))))<<uint64(5)))
	var ret status = Byte_encodeBinary((*[100000000]u8)(unsafe.Pointer(&encodingMask))[:], nil, ctx)
	if int((int((UA_Boolean(src[0].hasSymbolicId))))) != 0 {
		// Set up the encoding mask
		// Encode the numeric content
		// Int32
		ret |= UInt32_encodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&src[0].symbolicId))[:], nil, ctx)
	}
	if int((int((UA_Boolean(src[0].hasNamespaceUri))))) != 0 {
		// Int32
		ret |= UInt32_encodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&src[0].namespaceUri))[:], nil, ctx)
	}
	if int((int((UA_Boolean(src[0].hasLocalizedText))))) != 0 {
		// Int32
		ret |= UInt32_encodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&src[0].localizedText))[:], nil, ctx)
	}
	if int((int((UA_Boolean(src[0].hasLocale))))) != 0 {
		// Int32
		ret |= UInt32_encodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&src[0].locale))[:], nil, ctx)
	}
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		return status(ret)
	}
	if int((int((UA_Boolean(src[0].hasAdditionalInfo))))) != 0 {
		// Encode the additional info
		ret = String_encodeBinary((*[100000000]UA_String)(unsafe.Pointer(&src[0].additionalInfo))[:], nil, ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			return status(ret)
		}
	}
	if int((int((UA_Boolean(src[0].hasInnerStatusCode))))) != 0 {
		// From here on, do not return UA_STATUSCODE_BADENCODINGLIMITSEXCEEDED, as
		//     * the buffer might have been exchanged during encoding of the string.
		// Encode the inner status code
		ret = encodeWithExchangeBuffer((*[100000000]UA_StatusCode)(unsafe.Pointer(&src[0].innerStatusCode))[:], encodeBinarySignature(UInt32_encodeBinary), ctx)
		if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
			return status(ret)
		}
	}
	if int((int((UA_Boolean(src[0].hasInnerDiagnosticInfo))))) != 0 {
		// Encode the inner diagnostic info
		ret = encodeBinaryInternal(src[0].innerDiagnosticInfo, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[24]))[:], ctx)
	}
	return status(ret)
}
// DiagnosticInfo_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8010
func DiagnosticInfo_decodeBinary(dst []UA_DiagnosticInfo, type_ []UA_DataType, ctx []Ctx) status {
	var encodingMask u8
	var ret status = Byte_decodeBinary((*[100000000]u8)(unsafe.Pointer(&encodingMask))[:], nil, ctx)
	if ret != status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Decode the encoding mask
		return status(ret)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&1 != 0 {
		// Decode the content
		dst[0].hasSymbolicId = 1
		// Int32
		ret |= UInt32_decodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&dst[0].symbolicId))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&2 != 0 {
		dst[0].hasNamespaceUri = 1
		// Int32
		ret |= UInt32_decodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&dst[0].namespaceUri))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&4 != 0 {
		dst[0].hasLocalizedText = 1
		// Int32
		ret |= UInt32_decodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&dst[0].localizedText))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&8 != 0 {
		dst[0].hasLocale = 1
		// Int32
		ret |= UInt32_decodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&dst[0].locale))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&16 != 0 {
		dst[0].hasAdditionalInfo = 1
		ret |= String_decodeBinary((*[100000000]UA_String)(unsafe.Pointer(&dst[0].additionalInfo))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&32 != 0 {
		dst[0].hasInnerStatusCode = 1
		// StatusCode
		ret |= UInt32_decodeBinary((*[100000000]UA_StatusCode)(unsafe.Pointer(&dst[0].innerStatusCode))[:], nil, ctx)
	}
	if int(uint8((__uint8_t((uint8_t((UA_Byte((encodingMask)))))))))&64 != 0 {
		// innerDiagnosticInfo is allocated on the heap
		dst[0].innerDiagnosticInfo = make([]UA_DiagnosticInfo, 1*72/72)
		if dst[0].innerDiagnosticInfo == nil {
			return status((UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))))
		}
		dst[0].hasInnerDiagnosticInfo = 1
		if int(uint16((uint16((uint16_t((UA_UInt16((u16(ctx[0].depth)))))))))) > 20 {
			// Check the recursion limit
			return status((UA_StatusCode((uint32_t((uint32((uint32(2147876864)))))))))
		}
		ctx[0].depth ++
		ret |= DiagnosticInfo_decodeBinary(dst[0].innerDiagnosticInfo, nil, ctx)
		ctx[0].depth --
	}
	return status(ret)
}

var encodeBinaryJumpTable []encodeBinarySignature = []encodeBinarySignature{encodeBinarySignature(Boolean_encodeBinary), encodeBinarySignature(Byte_encodeBinary), encodeBinarySignature(Byte_encodeBinary), encodeBinarySignature(UInt16_encodeBinary), encodeBinarySignature(UInt16_encodeBinary), encodeBinarySignature(UInt32_encodeBinary), encodeBinarySignature(UInt32_encodeBinary), encodeBinarySignature(UInt64_encodeBinary), encodeBinarySignature(UInt64_encodeBinary), encodeBinarySignature(UInt32_encodeBinary), encodeBinarySignature(UInt64_encodeBinary), encodeBinarySignature(String_encodeBinary), encodeBinarySignature(UInt64_encodeBinary), encodeBinarySignature(Guid_encodeBinary), encodeBinarySignature(String_encodeBinary), encodeBinarySignature(String_encodeBinary), encodeBinarySignature(NodeId_encodeBinary), encodeBinarySignature(ExpandedNodeId_encodeBinary), encodeBinarySignature(UInt32_encodeBinary), encodeBinarySignature(encodeBinaryInternal), encodeBinarySignature(LocalizedText_encodeBinary), encodeBinarySignature(ExtensionObject_encodeBinary), encodeBinarySignature(DataValue_encodeBinary), encodeBinarySignature(Variant_encodeBinary), encodeBinarySignature(DiagnosticInfo_encodeBinary), encodeBinarySignature(encodeBinaryInternal)}
// encodeBinaryInternal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8094
//
// Structured Types
//
// SByte
// Int16
// Int32
// Int64
// DateTime
// ByteString
// XmlElement
// StatusCode
// QualifiedName
func encodeBinaryInternal(src interface{}, type_ []UA_DataType, ctx []Ctx) status {
	if int(uint16((uint16((uint16_t((UA_UInt16((u16(ctx[0].depth)))))))))) > 20 {
		// Check the recursion limit
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147876864)))))))))
	}
	ctx[0].depth ++
	var ptr uintptr_t = uintptr_t(src)
	var ret status
	var membersSize u8 = u8((UA_Byte(type_[0].membersSize)))
	var typelists [][]UA_DataType = [][]UA_DataType{UA_TYPES, (*[100000000]UA_DataType)(unsafe.Pointer(&type_[-int(uint16((uint16((uint16_t((UA_UInt16(type_[0].typeIndex))))))))]))[:]}
	{
		var i uint
		for ; i < uint((uint32(uint8((__uint8_t((uint8_t((UA_Byte((membersSize))))))))))) && ret == status((UA_StatusCode((uint32_t((uint32((0)))))))); i++ {
			var member []UA_DataTypeMember = (*[100000000]UA_DataTypeMember)(unsafe.Pointer(&type_[0].members[i]))[:]
			var membertype []UA_DataType = (*[100000000]UA_DataType)(unsafe.Pointer(&typelists[noarch.NotUA_Boolean(UA_Boolean(member[0].namespaceZero))][UA_UInt16(member[0].memberTypeIndex)]))[:]
			if int((int((noarch.NotUA_Boolean(UA_Boolean(member[0].isArray)))))) != 0 {
				ptr += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(member[0].padding))))))))))
				var encode_index uint = uint((func() uint32 {
					if int((int((UA_Boolean(membertype[0].builtin))))) != 0 {
						return uint32(uint16((uint16((uint16_t((UA_UInt16(membertype[0].typeIndex))))))))
					}
					return uint32(25)
				}()))
				var memSize uint = uint((uint32(uint16((uint16((uint16_t((UA_UInt16(membertype[0].memSize))))))))))
				var oldpos []u8 = ctx[0].pos
				ret = encodeBinaryJumpTable[encode_index](uint32((uintptr_t(ptr))), membertype, ctx)
				ptr += uintptr_t((uint32((memSize))))
				if ret == status((UA_StatusCode((uint32_t((uint32((uint32(2148007936))))))))) {
					// exchange/send the buffer
					ctx[0].pos = oldpos
					ret = exchangeBuffer(ctx)
					// encode the same member in the next iteration
					ptr -= uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(member[0].padding)))))))) + uint32((memSize))))
					if ret == status((UA_StatusCode((uint32_t((uint32((uint32(2148007936))))))))) || (*(*[1000000000]u8)(unsafe.Pointer(uintptr(unsafe.Pointer(&ctx[0].pos[0])) + (uintptr)(int(uint32((memSize))))*unsafe.Sizeof(ctx[0].pos[0]))))[:] > ctx[0].end {
						// the send buffer is too small to encode the member, even after exchangeBuffer
						ret = status((UA_StatusCode((uint32_t((uint32((uint32(2159607808)))))))))
						break
					}
					i --
				}
			} else {
				ptr += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(member[0].padding))))))))))
				var length uint = (nil)[(0)]
				ptr += uintptr_t((8))
				ret = Array_encodeBinary((nil)[0], uint(length), membertype, ctx)
				ptr += uintptr_t((8))
			}
		}
	}
	ctx[0].depth --
	return status(ret)
}
// UA_encodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8140
func UA_encodeBinary(src interface{}, type_ []UA_DataType, bufPos [][]UA_Byte, bufEnd [][]UA_Byte, exchangeCallback UA_exchangeEncodeBuffer, exchangeHandle interface{}) UA_StatusCode {
	var ctx Ctx
	// Set up the context
	ctx.pos = bufPos[0]
	ctx.end = bufEnd[0]
	ctx.depth = 0
	ctx.exchangeBufferCallback = exchangeCallback
	ctx.exchangeBufferCallbackHandle = exchangeHandle
	var ret status = encodeBinaryInternal(src, type_, (*[100000000]Ctx)(unsafe.Pointer(&ctx))[:])
	// Encode
	// Set the new buffer position for the output. Beware that the buffer might
	//     * have been exchanged internally.
	bufPos[0] = ctx.pos
	bufEnd[0] = ctx.end
	return UA_StatusCode((uint32_t((uint32((uint32((uint32((uint32_t((UA_StatusCode((status(ret)))))))))))))))
}

var decodeBinaryJumpTable []decodeBinarySignature = []decodeBinarySignature{decodeBinarySignature(Boolean_decodeBinary), decodeBinarySignature(Byte_decodeBinary), decodeBinarySignature(Byte_decodeBinary), decodeBinarySignature(UInt16_decodeBinary), decodeBinarySignature(UInt16_decodeBinary), decodeBinarySignature(UInt32_decodeBinary), decodeBinarySignature(UInt32_decodeBinary), decodeBinarySignature(UInt64_decodeBinary), decodeBinarySignature(UInt64_decodeBinary), decodeBinarySignature(UInt32_decodeBinary), decodeBinarySignature(UInt64_decodeBinary), decodeBinarySignature(String_decodeBinary), decodeBinarySignature(UInt64_decodeBinary), decodeBinarySignature(Guid_decodeBinary), decodeBinarySignature(String_decodeBinary), decodeBinarySignature(String_decodeBinary), decodeBinarySignature(NodeId_decodeBinary), decodeBinarySignature(ExpandedNodeId_decodeBinary), decodeBinarySignature(UInt32_decodeBinary), decodeBinarySignature(decodeBinaryInternal), decodeBinarySignature(LocalizedText_decodeBinary), decodeBinarySignature(ExtensionObject_decodeBinary), decodeBinarySignature(DataValue_decodeBinary), decodeBinarySignature(Variant_decodeBinary), decodeBinarySignature(DiagnosticInfo_decodeBinary), decodeBinarySignature(decodeBinaryInternal)}
// decodeBinaryInternal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8191
// SByte
// Int16
// Int32
// Int64
// DateTime
// ByteString
// XmlElement
// StatusCode
// QualifiedName
func decodeBinaryInternal(dst interface{}, type_ []UA_DataType, ctx []Ctx) status {
	if int(uint16((uint16((uint16_t((UA_UInt16((u16(ctx[0].depth)))))))))) > 20 {
		// Check the recursion limit
		return status((UA_StatusCode((uint32_t((uint32((uint32(2147876864)))))))))
	}
	ctx[0].depth ++
	var ptr uintptr_t = uintptr_t(dst)
	var ret status
	var membersSize u8 = u8((UA_Byte(type_[0].membersSize)))
	var typelists [][]UA_DataType = [][]UA_DataType{UA_TYPES, (*[100000000]UA_DataType)(unsafe.Pointer(&type_[-int(uint16((uint16((uint16_t((UA_UInt16(type_[0].typeIndex))))))))]))[:]}
	{
		var i uint
		for ; i < uint((uint32(uint8((__uint8_t((uint8_t((UA_Byte((membersSize))))))))))) && ret == status((UA_StatusCode((uint32_t((uint32((0)))))))); i++ {
			var member []UA_DataTypeMember = (*[100000000]UA_DataTypeMember)(unsafe.Pointer(&type_[0].members[i]))[:]
			var membertype []UA_DataType = (*[100000000]UA_DataType)(unsafe.Pointer(&typelists[noarch.NotUA_Boolean(UA_Boolean(member[0].namespaceZero))][UA_UInt16(member[0].memberTypeIndex)]))[:]
			if int((int((noarch.NotUA_Boolean(UA_Boolean(member[0].isArray)))))) != 0 {
				ptr += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(member[0].padding))))))))))
				var fi uint = uint((func() uint32 {
					if int((int((UA_Boolean(membertype[0].builtin))))) != 0 {
						return uint32(uint16((uint16((uint16_t((UA_UInt16(membertype[0].typeIndex))))))))
					}
					return uint32(25)
				}()))
				var memSize uint = uint((uint32(uint16((uint16((uint16_t((UA_UInt16(membertype[0].memSize))))))))))
				ret |= decodeBinaryJumpTable[fi](uint32((uintptr_t(ptr))), membertype, ctx)
				ptr += uintptr_t((uint32((memSize))))
			} else {
				ptr += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(member[0].padding))))))))))
				var length []uint
				ptr += uintptr_t((8))
				ret |= Array_decodeBinary(nil, length, membertype, ctx)
				ptr += uintptr_t((8))
			}
		}
	}
	ctx[0].depth --
	return status(ret)
}
// UA_decodeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8224
func UA_decodeBinary(src []UA_ByteString, offset []uint, dst interface{}, type_ []UA_DataType, customTypesSize uint, customTypes []UA_DataType) UA_StatusCode {
	var ctx Ctx
	// Set up the context
	ctx.pos = (*[100000000]UA_Byte)(unsafe.Pointer(&src[0].data[offset[0]]))[:]
	ctx.end = (*[100000000]UA_Byte)(unsafe.Pointer(&src[0].data[uint(src[0].length)]))[:]
	ctx.depth = 0
	ctx.customTypesArraySize = customTypesSize
	ctx.customTypesArray = customTypes
	// Decode
	// Initialize the value
	noarch.Memset(dst.([]byte), byte(0), uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize)))))))))
	var ret status = decodeBinaryInternal(dst, type_, (*[100000000]Ctx)(unsafe.Pointer(&ctx))[:])
	if ret == status((UA_StatusCode((uint32_t((uint32((0)))))))) {
		// Set the new offset
		offset[0] = uint((uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&ctx.pos)))))-uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&src[0].data)))))))/uint((1))
	} else {
		// Clean up
		UA_deleteMembers(dst, type_)
		noarch.Memset(dst.([]byte), byte(0), uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize)))))))))
	}
	return UA_StatusCode((uint32_t((uint32((uint32((uint32((uint32_t((UA_StatusCode((status(ret)))))))))))))))
}
// Array_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8257
//
// * Compute the Message Size
// * ------------------------
// * The following methods are used to compute the length of a datum in binary
// * encoding.
func Array_calcSizeBinary(src interface{}, length uint, type_ []UA_DataType) uint {
	var s uint = 4
	if int((int((UA_Boolean(type_[0].overlayable))))) != 0 {
		// length
		s += uint((uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize)))))))) * uint32((length))))
		return uint(s)
	}
	var ptr uintptr_t = uintptr_t(src)
	var encode_index uint = uint((func() uint32 {
		if int((int((UA_Boolean(type_[0].builtin))))) != 0 {
			return uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].typeIndex))))))))
		}
		return uint32(25)
	}()))
	{
		var i uint
		for ; i < length; i++ {
			s += calcSizeBinaryJumpTable[encode_index](uint32((uintptr_t(ptr))), type_)
			ptr += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize))))))))))
		}
	}
	return uint(s)
}
// calcSizeBinaryMemSize - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8273
func calcSizeBinaryMemSize(p interface{}, type_ []UA_DataType) uint {
	return uint(UA_UInt16(type_[0].memSize))
}
// String_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8278
func String_calcSizeBinary(src []UA_String, __ []UA_DataType) uint {
	return uint((4 + uint32((uint(src[0].length)))))
}
// Guid_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8282
func Guid_calcSizeBinary(src []UA_Guid, __ []UA_DataType) uint {
	return 16
}
// NodeId_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8286
func NodeId_calcSizeBinary(src []UA_NodeId, __ []UA_DataType) uint {
	var s uint = 1
	switch uint32(int((src[0].identifierType))) {
	case uint32(int((UA_NODEIDTYPE_NUMERIC))):
		if UA_UInt32((*src[0].identifier.numeric())) > UA_UInt32((uint32_t((uint32((65535)))))) || int(uint16((uint16((uint16_t((UA_UInt16(src[0].namespaceIndex)))))))) > 255 {
			// encoding byte
			s += uint((6))
		} else if UA_UInt32((*src[0].identifier.numeric())) > UA_UInt32((uint32_t((uint32((255)))))) || int(uint16((uint16((uint16_t((UA_UInt16(src[0].namespaceIndex)))))))) > 0 {
			s += uint((3))
		} else {
			s += uint((1))
		}
	case uint32(int((UA_NODEIDTYPE_BYTESTRING))):
		fallthrough
	case uint32(int((UA_NODEIDTYPE_STRING))):
		s += uint((2))
		s += String_calcSizeBinary((*[100000000]UA_String)(unsafe.Pointer(&(*src[0].identifier.string())))[:], nil)
	case uint32(int((UA_NODEIDTYPE_GUID))):
		s += uint((18))
	default:
		{
			return 0
		}
	}
	return uint(s)
}
// ExpandedNodeId_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8312
func ExpandedNodeId_calcSizeBinary(src []UA_ExpandedNodeId, __ []UA_DataType) uint {
	var s uint = NodeId_calcSizeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&src[0].nodeId))[:], nil)
	if uint(src[0].namespaceUri.length) > uint((0)) {
		s += String_calcSizeBinary((*[100000000]UA_String)(unsafe.Pointer(&src[0].namespaceUri))[:], nil)
	}
	if UA_UInt32(src[0].serverIndex) > UA_UInt32((uint32_t((uint32((0)))))) {
		s += uint((4))
	}
	return uint(s)
}
// LocalizedText_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8321
func LocalizedText_calcSizeBinary(src []UA_LocalizedText, __ []UA_DataType) uint {
	var s uint = 1
	if src[0].locale.data != nil {
		// encoding byte
		s += String_calcSizeBinary((*[100000000]UA_String)(unsafe.Pointer(&src[0].locale))[:], nil)
	}
	if src[0].text.data != nil {
		s += String_calcSizeBinary((*[100000000]UA_String)(unsafe.Pointer(&src[0].text))[:], nil)
	}
	return uint(s)
}
// ExtensionObject_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8330
func ExtensionObject_calcSizeBinary(src []UA_ExtensionObject, __ []UA_DataType) uint {
	var s uint = 1
	if uint32(src[0].encoding) > uint32(UA_EXTENSIONOBJECT_ENCODED_XML) {
		if (*src[0].content.decoded()).type_ == nil || (*src[0].content.decoded()).data == nil {
			// encoding byte
			return 0
		}
		if uint32(int(((*src[0].content.decoded()).type_[0].typeId.identifierType))) != uint32(int((UA_NODEIDTYPE_NUMERIC))) {
			return 0
		}
		s += NodeId_calcSizeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&(*src[0].content.decoded()).type_[0].typeId))[:], nil)
		// length
		s += uint((4))
		var type_ []UA_DataType = (*src[0].content.decoded()).type_
		var encode_index uint = uint((func() uint32 {
			if int((int((UA_Boolean(type_[0].builtin))))) != 0 {
				return uint32(uint16((uint16((uint16_t((UA_UInt16(type_[0].typeIndex))))))))
			}
			return uint32(25)
		}()))
		s += calcSizeBinaryJumpTable[encode_index]((*src[0].content.decoded()).data, type_)
	} else {
		s += NodeId_calcSizeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&(*src[0].content.encoded()).typeId))[:], nil)
		switch uint32(src[0].encoding) {
		case uint32(UA_EXTENSIONOBJECT_ENCODED_NOBODY):
		case uint32(UA_EXTENSIONOBJECT_ENCODED_BYTESTRING):
			fallthrough
		case uint32(UA_EXTENSIONOBJECT_ENCODED_XML):
			s += String_calcSizeBinary((*[100000000]UA_ByteString)(unsafe.Pointer(&(*src[0].content.encoded()).body))[:], nil)
		default:
			{
				return 0
			}
		}
	}
	return uint(s)
}
// Variant_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8358
func Variant_calcSizeBinary(src []UA_Variant, __ []UA_DataType) uint {
	var s uint = 1
	if src[0].type_ == nil {
		// encoding byte
		return uint(s)
	}
	var isArray int = int((map[bool]int{false: 0, true: 1}[uint(src[0].arrayLength) > uint((0)) || src[0].data <= 1]))
	var hasDimensions int = int((map[bool]int{false: 0, true: 1}[int((isArray)) != 0 && uint(src[0].arrayDimensionsSize) > uint((0))]))
	var isBuiltin int = int((int((int((UA_Boolean(src[0].type_[0].builtin)))))))
	var encode_index uint = uint((uint32(uint16((uint16((uint16_t((UA_UInt16(src[0].type_[0].typeIndex))))))))))
	if int((noarch.NotInt(isBuiltin))) != 0 {
		encode_index = uint(25)
		if uint32(int((src[0].type_[0].typeId.identifierType))) != uint32(int((UA_NODEIDTYPE_NUMERIC))) {
			return 0
		}
	}
	var ptr uintptr_t = uintptr_t(src[0].data)
	var length uint = uint((func() uint32 {
		if int((isArray)) != 0 {
			return uint32((uint(src[0].arrayLength)))
		}
		return 1
	}()))
	if int((isArray)) != 0 {
		s += Array_calcSizeBinary(uint32((uintptr_t(ptr))), uint(length), src[0].type_)
	} else {
		s += calcSizeBinaryJumpTable[encode_index](uint32((uintptr_t(ptr))), src[0].type_)
	}
	if int((noarch.NotInt(isBuiltin))) != 0 {
		// The type is wrapped inside an extensionobject
		// (NodeId + encoding byte + extension object length) * array length
		s += (NodeId_calcSizeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&src[0].type_[0].typeId))[:], nil)+uint((1))+uint((4)))*length
	}
	if int((hasDimensions)) != 0 {
		s += Array_calcSizeBinary(src[0].arrayDimensions, uint(src[0].arrayDimensionsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
	}
	return uint(s)
}
// DataValue_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8394
func DataValue_calcSizeBinary(src []UA_DataValue, __ []UA_DataType) uint {
	var s uint = 1
	if int((int((UA_Boolean(src[0].hasValue))))) != 0 {
		// encoding byte
		s += Variant_calcSizeBinary((*[100000000]UA_Variant)(unsafe.Pointer(&src[0].value))[:], nil)
	}
	if int((int((UA_Boolean(src[0].hasStatus))))) != 0 {
		s += uint((4))
	}
	if int((int((UA_Boolean(src[0].hasSourceTimestamp))))) != 0 {
		s += uint((8))
	}
	if int((int((UA_Boolean(src[0].hasSourcePicoseconds))))) != 0 {
		s += uint((2))
	}
	if int((int((UA_Boolean(src[0].hasServerTimestamp))))) != 0 {
		s += uint((8))
	}
	if int((int((UA_Boolean(src[0].hasServerPicoseconds))))) != 0 {
		s += uint((2))
	}
	return uint(s)
}
// DiagnosticInfo_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8411
func DiagnosticInfo_calcSizeBinary(src []UA_DiagnosticInfo, __ []UA_DataType) uint {
	var s uint = 1
	if int((int((UA_Boolean(src[0].hasSymbolicId))))) != 0 {
		// encoding byte
		s += uint((4))
	}
	if int((int((UA_Boolean(src[0].hasNamespaceUri))))) != 0 {
		s += uint((4))
	}
	if int((int((UA_Boolean(src[0].hasLocalizedText))))) != 0 {
		s += uint((4))
	}
	if int((int((UA_Boolean(src[0].hasLocale))))) != 0 {
		s += uint((4))
	}
	if int((int((UA_Boolean(src[0].hasAdditionalInfo))))) != 0 {
		s += String_calcSizeBinary((*[100000000]UA_String)(unsafe.Pointer(&src[0].additionalInfo))[:], nil)
	}
	if int((int((UA_Boolean(src[0].hasInnerStatusCode))))) != 0 {
		s += uint((4))
	}
	if int((int((UA_Boolean(src[0].hasInnerDiagnosticInfo))))) != 0 {
		s += DiagnosticInfo_calcSizeBinary(src[0].innerDiagnosticInfo, nil)
	}
	return uint(s)
}

var calcSizeBinaryJumpTable []calcSizeBinarySignature = []calcSizeBinarySignature{calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(String_calcSizeBinary), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(Guid_calcSizeBinary), calcSizeBinarySignature(String_calcSizeBinary), calcSizeBinarySignature(String_calcSizeBinary), calcSizeBinarySignature(NodeId_calcSizeBinary), calcSizeBinarySignature(ExpandedNodeId_calcSizeBinary), calcSizeBinarySignature(calcSizeBinaryMemSize), calcSizeBinarySignature(UA_calcSizeBinary), calcSizeBinarySignature(LocalizedText_calcSizeBinary), calcSizeBinarySignature(ExtensionObject_calcSizeBinary), calcSizeBinarySignature(DataValue_calcSizeBinary), calcSizeBinarySignature(Variant_calcSizeBinary), calcSizeBinarySignature(DiagnosticInfo_calcSizeBinary), calcSizeBinarySignature(UA_calcSizeBinary)}
// UA_calcSizeBinary - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:8459
// Boolean
// Byte
// Int16
// Int32
// Int64
// Float
// Double
// DateTime
// ByteString
// XmlElement
// StatusCode
// QualifiedName
func UA_calcSizeBinary(p interface{}, type_ []UA_DataType) uint {
	var s uint
	var ptr uintptr_t = uintptr_t(p)
	var membersSize u8 = u8((UA_Byte(type_[0].membersSize)))
	var typelists [][]UA_DataType = [][]UA_DataType{UA_TYPES, (*[100000000]UA_DataType)(unsafe.Pointer(&type_[-int(uint16((uint16((uint16_t((UA_UInt16(type_[0].typeIndex))))))))]))[:]}
	{
		var i uint
		for ; i < uint((uint32(uint8((__uint8_t((uint8_t((UA_Byte((membersSize))))))))))); i++ {
			var member []UA_DataTypeMember = (*[100000000]UA_DataTypeMember)(unsafe.Pointer(&type_[0].members[i]))[:]
			var membertype []UA_DataType = (*[100000000]UA_DataType)(unsafe.Pointer(&typelists[noarch.NotUA_Boolean(UA_Boolean(member[0].namespaceZero))][UA_UInt16(member[0].memberTypeIndex)]))[:]
			if int((int((noarch.NotUA_Boolean(UA_Boolean(member[0].isArray)))))) != 0 {
				ptr += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(member[0].padding))))))))))
				var encode_index uint = uint((func() uint32 {
					if int((int((UA_Boolean(membertype[0].builtin))))) != 0 {
						return uint32(uint16((uint16((uint16_t((UA_UInt16(membertype[0].typeIndex))))))))
					}
					return uint32(25)
				}()))
				s += calcSizeBinaryJumpTable[encode_index](uint32((uintptr_t(ptr))), membertype)
				ptr += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(membertype[0].memSize))))))))))
			} else {
				ptr += uintptr_t((uint32(uint8((__uint8_t((uint8_t((UA_Byte(member[0].padding))))))))))
				var length uint = (nil)[(0)]
				ptr += uintptr_t((8))
				s += Array_calcSizeBinary((nil)[0], uint(length), membertype)
				ptr += uintptr_t((8))
			}
		}
	}
	return uint(s)
}

var Boolean_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 0, UA_Byte(0), 1, 0}}
var SByte_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 1, UA_Byte(0), 1, 0}}
var Byte_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 2, UA_Byte(0), 1, 0}}
var Int16_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 3, UA_Byte(0), 1, 0}}
var UInt16_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 4, UA_Byte(0), 1, 0}}
var Int32_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var UInt32_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 6, UA_Byte(0), 1, 0}}
var Int64_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 7, UA_Byte(0), 1, 0}}
var UInt64_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 8, UA_Byte(0), 1, 0}}
var Float_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 9, UA_Byte(0), 1, 0}}
var Double_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 10, UA_Byte(0), 1, 0}}
var String_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 2, UA_Byte(0), 1, 1}}
var DateTime_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 12, UA_Byte(0), 1, 0}}
var Guid_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 13, UA_Byte(0), 1, 0}}
var ByteString_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 2, UA_Byte(0), 1, 1}}
var XmlElement_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 2, UA_Byte(0), 1, 1}}
var NodeId_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 16, UA_Byte(0), 1, 0}}
var ExpandedNodeId_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 17, UA_Byte(0), 1, 0}}
var StatusCode_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 18, UA_Byte(0), 1, 0}}
var QualifiedName_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("namespaceIndex\x00"), 3, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("name\x00"), 11, UA_Byte(unsafe.Offsetof(UA_QualifiedName{}.name) - unsafe.Offsetof(UA_QualifiedName{}.namespaceIndex) - 2), 1, 0}}
var LocalizedText_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 20, UA_Byte(0), 1, 0}}
var ExtensionObject_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 21, UA_Byte(0), 1, 0}}
var DataValue_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 22, UA_Byte(0), 1, 0}}
var Variant_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 23, UA_Byte(0), 1, 0}}
var DiagnosticInfo_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 24, UA_Byte(0), 1, 0}}
var SignedSoftwareCertificate_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("certificateData\x00"), 14, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("signature\x00"), 14, UA_Byte(unsafe.Offsetof(UA_SignedSoftwareCertificate{}.signature) - unsafe.Offsetof(UA_SignedSoftwareCertificate{}.certificateData) - 16), 1, 0}}
var SemanticChangeStructureDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("affected\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("affectedType\x00"), 16, UA_Byte(unsafe.Offsetof(UA_SemanticChangeStructureDataType{}.affectedType) - unsafe.Offsetof(UA_SemanticChangeStructureDataType{}.affected) - 120), 1, 0}}
var StatusChangeNotification_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("status\x00"), 18, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("diagnosticInfo\x00"), 24, UA_Byte(unsafe.Offsetof(UA_StatusChangeNotification{}.diagnosticInfo) - unsafe.Offsetof(UA_StatusChangeNotification{}.status) - 4), 1, 0}}
var BrowsePathTarget_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("targetId\x00"), 17, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("remainingPathIndex\x00"), 6, UA_Byte(unsafe.Offsetof(UA_BrowsePathTarget{}.remainingPathIndex) - unsafe.Offsetof(UA_BrowsePathTarget{}.targetId) - 144), 1, 0}}
var ViewAttributes_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("specifiedAttributes\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("displayName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ViewAttributes{}.displayName) - unsafe.Offsetof(UA_ViewAttributes{}.specifiedAttributes) - 4), 1, 0}, UA_DataTypeMember{[]byte("description\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ViewAttributes{}.description) - unsafe.Offsetof(UA_ViewAttributes{}.displayName) - 32), 1, 0}, UA_DataTypeMember{[]byte("writeMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ViewAttributes{}.writeMask) - unsafe.Offsetof(UA_ViewAttributes{}.description) - 32), 1, 0}, UA_DataTypeMember{[]byte("userWriteMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ViewAttributes{}.userWriteMask) - unsafe.Offsetof(UA_ViewAttributes{}.writeMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("containsNoLoops\x00"), 0, UA_Byte(unsafe.Offsetof(UA_ViewAttributes{}.containsNoLoops) - unsafe.Offsetof(UA_ViewAttributes{}.userWriteMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("eventNotifier\x00"), 2, UA_Byte(unsafe.Offsetof(UA_ViewAttributes{}.eventNotifier) - unsafe.Offsetof(UA_ViewAttributes{}.containsNoLoops) - 4), 1, 0}}
var RequestHeader_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("authenticationToken\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("timestamp\x00"), 12, UA_Byte(unsafe.Offsetof(UA_RequestHeader{}.timestamp) - unsafe.Offsetof(UA_RequestHeader{}.authenticationToken) - 120), 1, 0}, UA_DataTypeMember{[]byte("requestHandle\x00"), 6, UA_Byte(unsafe.Offsetof(UA_RequestHeader{}.requestHandle) - unsafe.Offsetof(UA_RequestHeader{}.timestamp) - 8), 1, 0}, UA_DataTypeMember{[]byte("returnDiagnostics\x00"), 6, UA_Byte(unsafe.Offsetof(UA_RequestHeader{}.returnDiagnostics) - unsafe.Offsetof(UA_RequestHeader{}.requestHandle) - 4), 1, 0}, UA_DataTypeMember{[]byte("auditEntryId\x00"), 11, UA_Byte(unsafe.Offsetof(UA_RequestHeader{}.auditEntryId) - unsafe.Offsetof(UA_RequestHeader{}.returnDiagnostics) - 4), 1, 0}, UA_DataTypeMember{[]byte("timeoutHint\x00"), 6, UA_Byte(unsafe.Offsetof(UA_RequestHeader{}.timeoutHint) - unsafe.Offsetof(UA_RequestHeader{}.auditEntryId) - 16), 1, 0}, UA_DataTypeMember{[]byte("additionalHeader\x00"), 21, UA_Byte(unsafe.Offsetof(UA_RequestHeader{}.additionalHeader) - unsafe.Offsetof(UA_RequestHeader{}.timeoutHint) - 4), 1, 0}}
var MonitoredItemModifyResult_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("statusCode\x00"), 18, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("revisedSamplingInterval\x00"), 10, UA_Byte(unsafe.Offsetof(UA_MonitoredItemModifyResult{}.revisedSamplingInterval) - unsafe.Offsetof(UA_MonitoredItemModifyResult{}.statusCode) - 4), 1, 0}, UA_DataTypeMember{[]byte("revisedQueueSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_MonitoredItemModifyResult{}.revisedQueueSize) - unsafe.Offsetof(UA_MonitoredItemModifyResult{}.revisedSamplingInterval) - 8), 1, 0}, UA_DataTypeMember{[]byte("filterResult\x00"), 21, UA_Byte(unsafe.Offsetof(UA_MonitoredItemModifyResult{}.filterResult) - unsafe.Offsetof(UA_MonitoredItemModifyResult{}.revisedQueueSize) - 4), 1, 0}}
var ElementOperand_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("index\x00"), 6, UA_Byte(0), 1, 0}}
var CloseSecureChannelRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}}
var AddNodesResult_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("statusCode\x00"), 18, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("addedNodeId\x00"), 16, UA_Byte(unsafe.Offsetof(UA_AddNodesResult{}.addedNodeId) - unsafe.Offsetof(UA_AddNodesResult{}.statusCode) - 4), 1, 0}}
var VariableAttributes_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("specifiedAttributes\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("displayName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.displayName) - unsafe.Offsetof(UA_VariableAttributes{}.specifiedAttributes) - 4), 1, 0}, UA_DataTypeMember{[]byte("description\x00"), 20, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.description) - unsafe.Offsetof(UA_VariableAttributes{}.displayName) - 32), 1, 0}, UA_DataTypeMember{[]byte("writeMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.writeMask) - unsafe.Offsetof(UA_VariableAttributes{}.description) - 32), 1, 0}, UA_DataTypeMember{[]byte("userWriteMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.userWriteMask) - unsafe.Offsetof(UA_VariableAttributes{}.writeMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("value\x00"), 23, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.value) - unsafe.Offsetof(UA_VariableAttributes{}.userWriteMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("dataType\x00"), 16, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.dataType) - unsafe.Offsetof(UA_VariableAttributes{}.value) - 48), 1, 0}, UA_DataTypeMember{[]byte("valueRank\x00"), 5, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.valueRank) - unsafe.Offsetof(UA_VariableAttributes{}.dataType) - 120), 1, 0}, UA_DataTypeMember{[]byte("arrayDimensions\x00"), 6, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.arrayDimensionsSize) - unsafe.Offsetof(UA_VariableAttributes{}.valueRank) - 4), 1, 1}, UA_DataTypeMember{[]byte("accessLevel\x00"), 2, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.accessLevel) - unsafe.Offsetof(UA_VariableAttributes{}.arrayDimensions) - 8), 1, 0}, UA_DataTypeMember{[]byte("userAccessLevel\x00"), 2, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.userAccessLevel) - unsafe.Offsetof(UA_VariableAttributes{}.accessLevel) - 1), 1, 0}, UA_DataTypeMember{[]byte("minimumSamplingInterval\x00"), 10, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.minimumSamplingInterval) - unsafe.Offsetof(UA_VariableAttributes{}.userAccessLevel) - 1), 1, 0}, UA_DataTypeMember{[]byte("historizing\x00"), 0, UA_Byte(unsafe.Offsetof(UA_VariableAttributes{}.historizing) - unsafe.Offsetof(UA_VariableAttributes{}.minimumSamplingInterval) - 8), 1, 0}}
var NotificationMessage_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("sequenceNumber\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("publishTime\x00"), 12, UA_Byte(unsafe.Offsetof(UA_NotificationMessage{}.publishTime) - unsafe.Offsetof(UA_NotificationMessage{}.sequenceNumber) - 4), 1, 0}, UA_DataTypeMember{[]byte("notificationData\x00"), 21, UA_Byte(unsafe.Offsetof(UA_NotificationMessage{}.notificationDataSize) - unsafe.Offsetof(UA_NotificationMessage{}.publishTime) - 8), 1, 1}}
var FindServersOnNetworkRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("startingRecordId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_FindServersOnNetworkRequest{}.startingRecordId) - unsafe.Offsetof(UA_FindServersOnNetworkRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("maxRecordsToReturn\x00"), 6, UA_Byte(unsafe.Offsetof(UA_FindServersOnNetworkRequest{}.maxRecordsToReturn) - unsafe.Offsetof(UA_FindServersOnNetworkRequest{}.startingRecordId) - 4), 1, 0}, UA_DataTypeMember{[]byte("serverCapabilityFilter\x00"), 11, UA_Byte(unsafe.Offsetof(UA_FindServersOnNetworkRequest{}.serverCapabilityFilterSize) - unsafe.Offsetof(UA_FindServersOnNetworkRequest{}.maxRecordsToReturn) - 4), 1, 1}}
var EventFieldList_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("clientHandle\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("eventFields\x00"), 23, UA_Byte(unsafe.Offsetof(UA_EventFieldList{}.eventFieldsSize) - unsafe.Offsetof(UA_EventFieldList{}.clientHandle) - 4), 1, 1}}
var MonitoringMode_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var MdnsDiscoveryConfiguration_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("mdnsServerName\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("serverCapabilities\x00"), 11, UA_Byte(unsafe.Offsetof(UA_MdnsDiscoveryConfiguration{}.serverCapabilitiesSize) - unsafe.Offsetof(UA_MdnsDiscoveryConfiguration{}.mdnsServerName) - 16), 1, 1}}
var CallMethodResult_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("statusCode\x00"), 18, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("inputArgumentResults\x00"), 18, UA_Byte(unsafe.Offsetof(UA_CallMethodResult{}.inputArgumentResultsSize) - unsafe.Offsetof(UA_CallMethodResult{}.statusCode) - 4), 1, 1}, UA_DataTypeMember{[]byte("inputArgumentDiagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_CallMethodResult{}.inputArgumentDiagnosticInfosSize) - unsafe.Offsetof(UA_CallMethodResult{}.inputArgumentResults) - 8), 1, 1}, UA_DataTypeMember{[]byte("outputArguments\x00"), 23, UA_Byte(unsafe.Offsetof(UA_CallMethodResult{}.outputArgumentsSize) - unsafe.Offsetof(UA_CallMethodResult{}.inputArgumentDiagnosticInfos) - 8), 1, 1}}
var ParsingResult_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("statusCode\x00"), 18, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("dataStatusCodes\x00"), 18, UA_Byte(unsafe.Offsetof(UA_ParsingResult{}.dataStatusCodesSize) - unsafe.Offsetof(UA_ParsingResult{}.statusCode) - 4), 1, 1}, UA_DataTypeMember{[]byte("dataDiagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_ParsingResult{}.dataDiagnosticInfosSize) - unsafe.Offsetof(UA_ParsingResult{}.dataStatusCodes) - 8), 1, 1}}
var RelativePathElement_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("referenceTypeId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("isInverse\x00"), 0, UA_Byte(unsafe.Offsetof(UA_RelativePathElement{}.isInverse) - unsafe.Offsetof(UA_RelativePathElement{}.referenceTypeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("includeSubtypes\x00"), 0, UA_Byte(unsafe.Offsetof(UA_RelativePathElement{}.includeSubtypes) - unsafe.Offsetof(UA_RelativePathElement{}.isInverse) - 4), 1, 0}, UA_DataTypeMember{[]byte("targetName\x00"), 19, UA_Byte(unsafe.Offsetof(UA_RelativePathElement{}.targetName) - unsafe.Offsetof(UA_RelativePathElement{}.includeSubtypes) - 4), 1, 0}}
var BrowseDirection_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var CallMethodRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("objectId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("methodId\x00"), 16, UA_Byte(unsafe.Offsetof(UA_CallMethodRequest{}.methodId) - unsafe.Offsetof(UA_CallMethodRequest{}.objectId) - 120), 1, 0}, UA_DataTypeMember{[]byte("inputArguments\x00"), 23, UA_Byte(unsafe.Offsetof(UA_CallMethodRequest{}.inputArgumentsSize) - unsafe.Offsetof(UA_CallMethodRequest{}.methodId) - 120), 1, 1}}
var RedundancySupport_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var EventNotificationList_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("events\x00"), 38, UA_Byte(0), 1, 1}}
var UnregisterNodesRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("nodesToUnregister\x00"), 16, UA_Byte(unsafe.Offsetof(UA_UnregisterNodesRequest{}.nodesToUnregisterSize) - unsafe.Offsetof(UA_UnregisterNodesRequest{}.requestHeader) - 776), 1, 1}}
var ContentFilterElementResult_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("statusCode\x00"), 18, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("operandStatusCodes\x00"), 18, UA_Byte(unsafe.Offsetof(UA_ContentFilterElementResult{}.operandStatusCodesSize) - unsafe.Offsetof(UA_ContentFilterElementResult{}.statusCode) - 4), 1, 1}, UA_DataTypeMember{[]byte("operandDiagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_ContentFilterElementResult{}.operandDiagnosticInfosSize) - unsafe.Offsetof(UA_ContentFilterElementResult{}.operandStatusCodes) - 8), 1, 1}}
var SimpleAttributeOperand_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("typeDefinitionId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("browsePath\x00"), 19, UA_Byte(unsafe.Offsetof(UA_SimpleAttributeOperand{}.browsePathSize) - unsafe.Offsetof(UA_SimpleAttributeOperand{}.typeDefinitionId) - 120), 1, 1}, UA_DataTypeMember{[]byte("attributeId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SimpleAttributeOperand{}.attributeId) - unsafe.Offsetof(UA_SimpleAttributeOperand{}.browsePath) - 8), 1, 0}, UA_DataTypeMember{[]byte("indexRange\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SimpleAttributeOperand{}.indexRange) - unsafe.Offsetof(UA_SimpleAttributeOperand{}.attributeId) - 4), 1, 0}}
var LiteralOperand_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("value\x00"), 23, UA_Byte(0), 1, 0}}
var QueryDataSet_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("nodeId\x00"), 17, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("typeDefinitionNode\x00"), 17, UA_Byte(unsafe.Offsetof(UA_QueryDataSet{}.typeDefinitionNode) - unsafe.Offsetof(UA_QueryDataSet{}.nodeId) - 144), 1, 0}, UA_DataTypeMember{[]byte("values\x00"), 23, UA_Byte(unsafe.Offsetof(UA_QueryDataSet{}.valuesSize) - unsafe.Offsetof(UA_QueryDataSet{}.typeDefinitionNode) - 144), 1, 1}}
var AnonymousIdentityToken_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("policyId\x00"), 11, UA_Byte(0), 1, 0}}
var SetPublishingModeRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("publishingEnabled\x00"), 0, UA_Byte(unsafe.Offsetof(UA_SetPublishingModeRequest{}.publishingEnabled) - unsafe.Offsetof(UA_SetPublishingModeRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("subscriptionIds\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SetPublishingModeRequest{}.subscriptionIdsSize) - unsafe.Offsetof(UA_SetPublishingModeRequest{}.publishingEnabled) - 4), 1, 1}}
var MonitoredItemCreateResult_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("statusCode\x00"), 18, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("monitoredItemId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_MonitoredItemCreateResult{}.monitoredItemId) - unsafe.Offsetof(UA_MonitoredItemCreateResult{}.statusCode) - 4), 1, 0}, UA_DataTypeMember{[]byte("revisedSamplingInterval\x00"), 10, UA_Byte(unsafe.Offsetof(UA_MonitoredItemCreateResult{}.revisedSamplingInterval) - unsafe.Offsetof(UA_MonitoredItemCreateResult{}.monitoredItemId) - 4), 1, 0}, UA_DataTypeMember{[]byte("revisedQueueSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_MonitoredItemCreateResult{}.revisedQueueSize) - unsafe.Offsetof(UA_MonitoredItemCreateResult{}.revisedSamplingInterval) - 8), 1, 0}, UA_DataTypeMember{[]byte("filterResult\x00"), 21, UA_Byte(unsafe.Offsetof(UA_MonitoredItemCreateResult{}.filterResult) - unsafe.Offsetof(UA_MonitoredItemCreateResult{}.revisedQueueSize) - 4), 1, 0}}
var TimestampsToReturn_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var CallRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("methodsToCall\x00"), 45, UA_Byte(unsafe.Offsetof(UA_CallRequest{}.methodsToCallSize) - unsafe.Offsetof(UA_CallRequest{}.requestHeader) - 776), 1, 1}}
var MethodAttributes_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("specifiedAttributes\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("displayName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_MethodAttributes{}.displayName) - unsafe.Offsetof(UA_MethodAttributes{}.specifiedAttributes) - 4), 1, 0}, UA_DataTypeMember{[]byte("description\x00"), 20, UA_Byte(unsafe.Offsetof(UA_MethodAttributes{}.description) - unsafe.Offsetof(UA_MethodAttributes{}.displayName) - 32), 1, 0}, UA_DataTypeMember{[]byte("writeMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_MethodAttributes{}.writeMask) - unsafe.Offsetof(UA_MethodAttributes{}.description) - 32), 1, 0}, UA_DataTypeMember{[]byte("userWriteMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_MethodAttributes{}.userWriteMask) - unsafe.Offsetof(UA_MethodAttributes{}.writeMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("executable\x00"), 0, UA_Byte(unsafe.Offsetof(UA_MethodAttributes{}.executable) - unsafe.Offsetof(UA_MethodAttributes{}.userWriteMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("userExecutable\x00"), 0, UA_Byte(unsafe.Offsetof(UA_MethodAttributes{}.userExecutable) - unsafe.Offsetof(UA_MethodAttributes{}.executable) - 4), 1, 0}}
var DeleteReferencesItem_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("sourceNodeId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("referenceTypeId\x00"), 16, UA_Byte(unsafe.Offsetof(UA_DeleteReferencesItem{}.referenceTypeId) - unsafe.Offsetof(UA_DeleteReferencesItem{}.sourceNodeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("isForward\x00"), 0, UA_Byte(unsafe.Offsetof(UA_DeleteReferencesItem{}.isForward) - unsafe.Offsetof(UA_DeleteReferencesItem{}.referenceTypeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("targetNodeId\x00"), 17, UA_Byte(unsafe.Offsetof(UA_DeleteReferencesItem{}.targetNodeId) - unsafe.Offsetof(UA_DeleteReferencesItem{}.isForward) - 4), 1, 0}, UA_DataTypeMember{[]byte("deleteBidirectional\x00"), 0, UA_Byte(unsafe.Offsetof(UA_DeleteReferencesItem{}.deleteBidirectional) - unsafe.Offsetof(UA_DeleteReferencesItem{}.targetNodeId) - 144), 1, 0}}
var WriteValue_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("nodeId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("attributeId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_WriteValue{}.attributeId) - unsafe.Offsetof(UA_WriteValue{}.nodeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("indexRange\x00"), 11, UA_Byte(unsafe.Offsetof(UA_WriteValue{}.indexRange) - unsafe.Offsetof(UA_WriteValue{}.attributeId) - 4), 1, 0}, UA_DataTypeMember{[]byte("value\x00"), 22, UA_Byte(unsafe.Offsetof(UA_WriteValue{}.value) - unsafe.Offsetof(UA_WriteValue{}.indexRange) - 16), 1, 0}}
var NodeAttributesMask_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var MessageSecurityMode_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var MonitoringParameters_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("clientHandle\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("samplingInterval\x00"), 10, UA_Byte(unsafe.Offsetof(UA_MonitoringParameters{}.samplingInterval) - unsafe.Offsetof(UA_MonitoringParameters{}.clientHandle) - 4), 1, 0}, UA_DataTypeMember{[]byte("filter\x00"), 21, UA_Byte(unsafe.Offsetof(UA_MonitoringParameters{}.filter) - unsafe.Offsetof(UA_MonitoringParameters{}.samplingInterval) - 8), 1, 0}, UA_DataTypeMember{[]byte("queueSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_MonitoringParameters{}.queueSize) - unsafe.Offsetof(UA_MonitoringParameters{}.filter) - 616), 1, 0}, UA_DataTypeMember{[]byte("discardOldest\x00"), 0, UA_Byte(unsafe.Offsetof(UA_MonitoringParameters{}.discardOldest) - unsafe.Offsetof(UA_MonitoringParameters{}.queueSize) - 4), 1, 0}}
var ReferenceNode_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("referenceTypeId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("isInverse\x00"), 0, UA_Byte(unsafe.Offsetof(UA_ReferenceNode{}.isInverse) - unsafe.Offsetof(UA_ReferenceNode{}.referenceTypeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("targetId\x00"), 17, UA_Byte(unsafe.Offsetof(UA_ReferenceNode{}.targetId) - unsafe.Offsetof(UA_ReferenceNode{}.isInverse) - 4), 1, 0}}
var Argument_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("name\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("dataType\x00"), 16, UA_Byte(unsafe.Offsetof(UA_Argument{}.dataType) - unsafe.Offsetof(UA_Argument{}.name) - 16), 1, 0}, UA_DataTypeMember{[]byte("valueRank\x00"), 5, UA_Byte(unsafe.Offsetof(UA_Argument{}.valueRank) - unsafe.Offsetof(UA_Argument{}.dataType) - 120), 1, 0}, UA_DataTypeMember{[]byte("arrayDimensions\x00"), 6, UA_Byte(unsafe.Offsetof(UA_Argument{}.arrayDimensionsSize) - unsafe.Offsetof(UA_Argument{}.valueRank) - 4), 1, 1}, UA_DataTypeMember{[]byte("description\x00"), 20, UA_Byte(unsafe.Offsetof(UA_Argument{}.description) - unsafe.Offsetof(UA_Argument{}.arrayDimensions) - 8), 1, 0}}
var ChannelSecurityToken_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("channelId\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("tokenId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ChannelSecurityToken{}.tokenId) - unsafe.Offsetof(UA_ChannelSecurityToken{}.channelId) - 4), 1, 0}, UA_DataTypeMember{[]byte("createdAt\x00"), 12, UA_Byte(unsafe.Offsetof(UA_ChannelSecurityToken{}.createdAt) - unsafe.Offsetof(UA_ChannelSecurityToken{}.tokenId) - 4), 1, 0}, UA_DataTypeMember{[]byte("revisedLifetime\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ChannelSecurityToken{}.revisedLifetime) - unsafe.Offsetof(UA_ChannelSecurityToken{}.createdAt) - 8), 1, 0}}
var UserIdentityToken_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("policyId\x00"), 11, UA_Byte(0), 1, 0}}
var SignatureData_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("algorithm\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("signature\x00"), 14, UA_Byte(unsafe.Offsetof(UA_SignatureData{}.signature) - unsafe.Offsetof(UA_SignatureData{}.algorithm) - 16), 1, 0}}
var ObjectTypeAttributes_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("specifiedAttributes\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("displayName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ObjectTypeAttributes{}.displayName) - unsafe.Offsetof(UA_ObjectTypeAttributes{}.specifiedAttributes) - 4), 1, 0}, UA_DataTypeMember{[]byte("description\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ObjectTypeAttributes{}.description) - unsafe.Offsetof(UA_ObjectTypeAttributes{}.displayName) - 32), 1, 0}, UA_DataTypeMember{[]byte("writeMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ObjectTypeAttributes{}.writeMask) - unsafe.Offsetof(UA_ObjectTypeAttributes{}.description) - 32), 1, 0}, UA_DataTypeMember{[]byte("userWriteMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ObjectTypeAttributes{}.userWriteMask) - unsafe.Offsetof(UA_ObjectTypeAttributes{}.writeMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("isAbstract\x00"), 0, UA_Byte(unsafe.Offsetof(UA_ObjectTypeAttributes{}.isAbstract) - unsafe.Offsetof(UA_ObjectTypeAttributes{}.userWriteMask) - 4), 1, 0}}
var DeadbandType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var SecurityTokenRequestType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var NodeAttributes_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("specifiedAttributes\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("displayName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_NodeAttributes{}.displayName) - unsafe.Offsetof(UA_NodeAttributes{}.specifiedAttributes) - 4), 1, 0}, UA_DataTypeMember{[]byte("description\x00"), 20, UA_Byte(unsafe.Offsetof(UA_NodeAttributes{}.description) - unsafe.Offsetof(UA_NodeAttributes{}.displayName) - 32), 1, 0}, UA_DataTypeMember{[]byte("writeMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_NodeAttributes{}.writeMask) - unsafe.Offsetof(UA_NodeAttributes{}.description) - 32), 1, 0}, UA_DataTypeMember{[]byte("userWriteMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_NodeAttributes{}.userWriteMask) - unsafe.Offsetof(UA_NodeAttributes{}.writeMask) - 4), 1, 0}}
var DataChangeTrigger_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var BuildInfo_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("productUri\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("manufacturerName\x00"), 11, UA_Byte(unsafe.Offsetof(UA_BuildInfo{}.manufacturerName) - unsafe.Offsetof(UA_BuildInfo{}.productUri) - 16), 1, 0}, UA_DataTypeMember{[]byte("productName\x00"), 11, UA_Byte(unsafe.Offsetof(UA_BuildInfo{}.productName) - unsafe.Offsetof(UA_BuildInfo{}.manufacturerName) - 16), 1, 0}, UA_DataTypeMember{[]byte("softwareVersion\x00"), 11, UA_Byte(unsafe.Offsetof(UA_BuildInfo{}.softwareVersion) - unsafe.Offsetof(UA_BuildInfo{}.productName) - 16), 1, 0}, UA_DataTypeMember{[]byte("buildNumber\x00"), 11, UA_Byte(unsafe.Offsetof(UA_BuildInfo{}.buildNumber) - unsafe.Offsetof(UA_BuildInfo{}.softwareVersion) - 16), 1, 0}, UA_DataTypeMember{[]byte("buildDate\x00"), 12, UA_Byte(unsafe.Offsetof(UA_BuildInfo{}.buildDate) - unsafe.Offsetof(UA_BuildInfo{}.buildNumber) - 16), 1, 0}}
var NodeClass_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var SubscriptionDiagnosticsDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("sessionId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.subscriptionId) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.sessionId) - 120), 1, 0}, UA_DataTypeMember{[]byte("priority\x00"), 2, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.priority) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.subscriptionId) - 4), 1, 0}, UA_DataTypeMember{[]byte("publishingInterval\x00"), 10, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.publishingInterval) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.priority) - 1), 1, 0}, UA_DataTypeMember{[]byte("maxKeepAliveCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.maxKeepAliveCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.publishingInterval) - 8), 1, 0}, UA_DataTypeMember{[]byte("maxLifetimeCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.maxLifetimeCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.maxKeepAliveCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("maxNotificationsPerPublish\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.maxNotificationsPerPublish) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.maxLifetimeCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("publishingEnabled\x00"), 0, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.publishingEnabled) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.maxNotificationsPerPublish) - 4), 1, 0}, UA_DataTypeMember{[]byte("modifyCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.modifyCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.publishingEnabled) - 4), 1, 0}, UA_DataTypeMember{[]byte("enableCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.enableCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.modifyCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("disableCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.disableCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.enableCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("republishRequestCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.republishRequestCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.disableCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("republishMessageRequestCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.republishMessageRequestCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.republishRequestCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("republishMessageCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.republishMessageCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.republishMessageRequestCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("transferRequestCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.transferRequestCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.republishMessageCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("transferredToAltClientCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.transferredToAltClientCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.transferRequestCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("transferredToSameClientCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.transferredToSameClientCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.transferredToAltClientCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("publishRequestCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.publishRequestCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.transferredToSameClientCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("dataChangeNotificationsCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.dataChangeNotificationsCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.publishRequestCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("eventNotificationsCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.eventNotificationsCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.dataChangeNotificationsCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("notificationsCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.notificationsCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.eventNotificationsCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("latePublishRequestCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.latePublishRequestCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.notificationsCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("currentKeepAliveCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.currentKeepAliveCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.latePublishRequestCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("currentLifetimeCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.currentLifetimeCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.currentKeepAliveCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("unacknowledgedMessageCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.unacknowledgedMessageCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.currentLifetimeCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("discardedMessageCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.discardedMessageCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.unacknowledgedMessageCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("monitoredItemCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.monitoredItemCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.discardedMessageCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("disabledMonitoredItemCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.disabledMonitoredItemCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.monitoredItemCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("monitoringQueueOverflowCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.monitoringQueueOverflowCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.disabledMonitoredItemCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("nextSequenceNumber\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.nextSequenceNumber) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.monitoringQueueOverflowCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("eventQueueOverFlowCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.eventQueueOverFlowCount) - unsafe.Offsetof(UA_SubscriptionDiagnosticsDataType{}.nextSequenceNumber) - 4), 1, 0}}
var MonitoredItemNotification_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("clientHandle\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("value\x00"), 22, UA_Byte(unsafe.Offsetof(UA_MonitoredItemNotification{}.value) - unsafe.Offsetof(UA_MonitoredItemNotification{}.clientHandle) - 4), 1, 0}}
var DeleteNodesItem_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("nodeId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("deleteTargetReferences\x00"), 0, UA_Byte(unsafe.Offsetof(UA_DeleteNodesItem{}.deleteTargetReferences) - unsafe.Offsetof(UA_DeleteNodesItem{}.nodeId) - 120), 1, 0}}
var DeleteSubscriptionsRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionIds\x00"), 6, UA_Byte(unsafe.Offsetof(UA_DeleteSubscriptionsRequest{}.subscriptionIdsSize) - unsafe.Offsetof(UA_DeleteSubscriptionsRequest{}.requestHeader) - 776), 1, 1}}
var SubscriptionAcknowledgement_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("sequenceNumber\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SubscriptionAcknowledgement{}.sequenceNumber) - unsafe.Offsetof(UA_SubscriptionAcknowledgement{}.subscriptionId) - 4), 1, 0}}
var ReadValueId_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("nodeId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("attributeId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ReadValueId{}.attributeId) - unsafe.Offsetof(UA_ReadValueId{}.nodeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("indexRange\x00"), 11, UA_Byte(unsafe.Offsetof(UA_ReadValueId{}.indexRange) - unsafe.Offsetof(UA_ReadValueId{}.attributeId) - 4), 1, 0}, UA_DataTypeMember{[]byte("dataEncoding\x00"), 19, UA_Byte(unsafe.Offsetof(UA_ReadValueId{}.dataEncoding) - unsafe.Offsetof(UA_ReadValueId{}.indexRange) - 16), 1, 0}}
var DataTypeAttributes_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("specifiedAttributes\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("displayName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_DataTypeAttributes{}.displayName) - unsafe.Offsetof(UA_DataTypeAttributes{}.specifiedAttributes) - 4), 1, 0}, UA_DataTypeMember{[]byte("description\x00"), 20, UA_Byte(unsafe.Offsetof(UA_DataTypeAttributes{}.description) - unsafe.Offsetof(UA_DataTypeAttributes{}.displayName) - 32), 1, 0}, UA_DataTypeMember{[]byte("writeMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_DataTypeAttributes{}.writeMask) - unsafe.Offsetof(UA_DataTypeAttributes{}.description) - 32), 1, 0}, UA_DataTypeMember{[]byte("userWriteMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_DataTypeAttributes{}.userWriteMask) - unsafe.Offsetof(UA_DataTypeAttributes{}.writeMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("isAbstract\x00"), 0, UA_Byte(unsafe.Offsetof(UA_DataTypeAttributes{}.isAbstract) - unsafe.Offsetof(UA_DataTypeAttributes{}.userWriteMask) - 4), 1, 0}}
var ResponseHeader_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("timestamp\x00"), 12, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("requestHandle\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ResponseHeader{}.requestHandle) - unsafe.Offsetof(UA_ResponseHeader{}.timestamp) - 8), 1, 0}, UA_DataTypeMember{[]byte("serviceResult\x00"), 18, UA_Byte(unsafe.Offsetof(UA_ResponseHeader{}.serviceResult) - unsafe.Offsetof(UA_ResponseHeader{}.requestHandle) - 4), 1, 0}, UA_DataTypeMember{[]byte("serviceDiagnostics\x00"), 24, UA_Byte(unsafe.Offsetof(UA_ResponseHeader{}.serviceDiagnostics) - unsafe.Offsetof(UA_ResponseHeader{}.serviceResult) - 4), 1, 0}, UA_DataTypeMember{[]byte("stringTable\x00"), 11, UA_Byte(unsafe.Offsetof(UA_ResponseHeader{}.stringTableSize) - unsafe.Offsetof(UA_ResponseHeader{}.serviceDiagnostics) - 72), 1, 1}, UA_DataTypeMember{[]byte("additionalHeader\x00"), 21, UA_Byte(unsafe.Offsetof(UA_ResponseHeader{}.additionalHeader) - unsafe.Offsetof(UA_ResponseHeader{}.stringTable) - 8), 1, 0}}
var DeleteMonitoredItemsRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_DeleteMonitoredItemsRequest{}.subscriptionId) - unsafe.Offsetof(UA_DeleteMonitoredItemsRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("monitoredItemIds\x00"), 6, UA_Byte(unsafe.Offsetof(UA_DeleteMonitoredItemsRequest{}.monitoredItemIdsSize) - unsafe.Offsetof(UA_DeleteMonitoredItemsRequest{}.subscriptionId) - 4), 1, 1}}
var ViewDescription_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("viewId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("timestamp\x00"), 12, UA_Byte(unsafe.Offsetof(UA_ViewDescription{}.timestamp) - unsafe.Offsetof(UA_ViewDescription{}.viewId) - 120), 1, 0}, UA_DataTypeMember{[]byte("viewVersion\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ViewDescription{}.viewVersion) - unsafe.Offsetof(UA_ViewDescription{}.timestamp) - 8), 1, 0}}
var ServerOnNetwork_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("recordId\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("serverName\x00"), 11, UA_Byte(unsafe.Offsetof(UA_ServerOnNetwork{}.serverName) - unsafe.Offsetof(UA_ServerOnNetwork{}.recordId) - 4), 1, 0}, UA_DataTypeMember{[]byte("discoveryUrl\x00"), 11, UA_Byte(unsafe.Offsetof(UA_ServerOnNetwork{}.discoveryUrl) - unsafe.Offsetof(UA_ServerOnNetwork{}.serverName) - 16), 1, 0}, UA_DataTypeMember{[]byte("serverCapabilities\x00"), 11, UA_Byte(unsafe.Offsetof(UA_ServerOnNetwork{}.serverCapabilitiesSize) - unsafe.Offsetof(UA_ServerOnNetwork{}.discoveryUrl) - 16), 1, 1}}
var DeleteMonitoredItemsResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 18, UA_Byte(unsafe.Offsetof(UA_DeleteMonitoredItemsResponse{}.resultsSize) - unsafe.Offsetof(UA_DeleteMonitoredItemsResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_DeleteMonitoredItemsResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_DeleteMonitoredItemsResponse{}.results) - 8), 1, 1}}
var FindServersOnNetworkResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("lastCounterResetTime\x00"), 12, UA_Byte(unsafe.Offsetof(UA_FindServersOnNetworkResponse{}.lastCounterResetTime) - unsafe.Offsetof(UA_FindServersOnNetworkResponse{}.responseHeader) - 720), 1, 0}, UA_DataTypeMember{[]byte("servers\x00"), 87, UA_Byte(unsafe.Offsetof(UA_FindServersOnNetworkResponse{}.serversSize) - unsafe.Offsetof(UA_FindServersOnNetworkResponse{}.lastCounterResetTime) - 8), 1, 1}}
var RelativePath_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("elements\x00"), 43, UA_Byte(0), 1, 1}}
var RegisterNodesRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("nodesToRegister\x00"), 16, UA_Byte(unsafe.Offsetof(UA_RegisterNodesRequest{}.nodesToRegisterSize) - unsafe.Offsetof(UA_RegisterNodesRequest{}.requestHeader) - 776), 1, 1}}
var AggregateConfiguration_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("useServerCapabilitiesDefaults\x00"), 0, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("treatUncertainAsBad\x00"), 0, UA_Byte(unsafe.Offsetof(UA_AggregateConfiguration{}.treatUncertainAsBad) - unsafe.Offsetof(UA_AggregateConfiguration{}.useServerCapabilitiesDefaults) - 4), 1, 0}, UA_DataTypeMember{[]byte("percentDataBad\x00"), 2, UA_Byte(unsafe.Offsetof(UA_AggregateConfiguration{}.percentDataBad) - unsafe.Offsetof(UA_AggregateConfiguration{}.treatUncertainAsBad) - 4), 1, 0}, UA_DataTypeMember{[]byte("percentDataGood\x00"), 2, UA_Byte(unsafe.Offsetof(UA_AggregateConfiguration{}.percentDataGood) - unsafe.Offsetof(UA_AggregateConfiguration{}.percentDataBad) - 1), 1, 0}, UA_DataTypeMember{[]byte("useSlopedExtrapolation\x00"), 0, UA_Byte(unsafe.Offsetof(UA_AggregateConfiguration{}.useSlopedExtrapolation) - unsafe.Offsetof(UA_AggregateConfiguration{}.percentDataGood) - 1), 1, 0}}
var DeleteNodesRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("nodesToDelete\x00"), 79, UA_Byte(unsafe.Offsetof(UA_DeleteNodesRequest{}.nodesToDeleteSize) - unsafe.Offsetof(UA_DeleteNodesRequest{}.requestHeader) - 776), 1, 1}}
var PublishResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_PublishResponse{}.subscriptionId) - unsafe.Offsetof(UA_PublishResponse{}.responseHeader) - 720), 1, 0}, UA_DataTypeMember{[]byte("availableSequenceNumbers\x00"), 6, UA_Byte(unsafe.Offsetof(UA_PublishResponse{}.availableSequenceNumbersSize) - unsafe.Offsetof(UA_PublishResponse{}.subscriptionId) - 4), 1, 1}, UA_DataTypeMember{[]byte("moreNotifications\x00"), 0, UA_Byte(unsafe.Offsetof(UA_PublishResponse{}.moreNotifications) - unsafe.Offsetof(UA_PublishResponse{}.availableSequenceNumbers) - 8), 1, 0}, UA_DataTypeMember{[]byte("notificationMessage\x00"), 36, UA_Byte(unsafe.Offsetof(UA_PublishResponse{}.notificationMessage) - unsafe.Offsetof(UA_PublishResponse{}.moreNotifications) - 4), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 18, UA_Byte(unsafe.Offsetof(UA_PublishResponse{}.resultsSize) - unsafe.Offsetof(UA_PublishResponse{}.notificationMessage) - 32), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_PublishResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_PublishResponse{}.results) - 8), 1, 1}}
var MonitoredItemModifyRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("monitoredItemId\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("requestedParameters\x00"), 63, UA_Byte(unsafe.Offsetof(UA_MonitoredItemModifyRequest{}.requestedParameters) - unsafe.Offsetof(UA_MonitoredItemModifyRequest{}.monitoredItemId) - 4), 1, 0}}
var ServiceCounterDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("totalCount\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("errorCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServiceCounterDataType{}.errorCount) - unsafe.Offsetof(UA_ServiceCounterDataType{}.totalCount) - 4), 1, 0}}
var ModelChangeStructureDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("affected\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("affectedType\x00"), 16, UA_Byte(unsafe.Offsetof(UA_ModelChangeStructureDataType{}.affectedType) - unsafe.Offsetof(UA_ModelChangeStructureDataType{}.affected) - 120), 1, 0}, UA_DataTypeMember{[]byte("verb\x00"), 2, UA_Byte(unsafe.Offsetof(UA_ModelChangeStructureDataType{}.verb) - unsafe.Offsetof(UA_ModelChangeStructureDataType{}.affectedType) - 120), 1, 0}}
var UserNameIdentityToken_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("policyId\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("userName\x00"), 11, UA_Byte(unsafe.Offsetof(UA_UserNameIdentityToken{}.userName) - unsafe.Offsetof(UA_UserNameIdentityToken{}.policyId) - 16), 1, 0}, UA_DataTypeMember{[]byte("password\x00"), 14, UA_Byte(unsafe.Offsetof(UA_UserNameIdentityToken{}.password) - unsafe.Offsetof(UA_UserNameIdentityToken{}.userName) - 16), 1, 0}, UA_DataTypeMember{[]byte("encryptionAlgorithm\x00"), 11, UA_Byte(unsafe.Offsetof(UA_UserNameIdentityToken{}.encryptionAlgorithm) - unsafe.Offsetof(UA_UserNameIdentityToken{}.password) - 16), 1, 0}}
var IdType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var UserTokenType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var SetTriggeringResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("addResults\x00"), 18, UA_Byte(unsafe.Offsetof(UA_SetTriggeringResponse{}.addResultsSize) - unsafe.Offsetof(UA_SetTriggeringResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("addDiagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_SetTriggeringResponse{}.addDiagnosticInfosSize) - unsafe.Offsetof(UA_SetTriggeringResponse{}.addResults) - 8), 1, 1}, UA_DataTypeMember{[]byte("removeResults\x00"), 18, UA_Byte(unsafe.Offsetof(UA_SetTriggeringResponse{}.removeResultsSize) - unsafe.Offsetof(UA_SetTriggeringResponse{}.addDiagnosticInfos) - 8), 1, 1}, UA_DataTypeMember{[]byte("removeDiagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_SetTriggeringResponse{}.removeDiagnosticInfosSize) - unsafe.Offsetof(UA_SetTriggeringResponse{}.removeResults) - 8), 1, 1}}
var TimeZoneDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("offset\x00"), 3, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("daylightSavingInOffset\x00"), 0, UA_Byte(unsafe.Offsetof(UA_TimeZoneDataType{}.daylightSavingInOffset) - unsafe.Offsetof(UA_TimeZoneDataType{}.offset) - 2), 1, 0}}
var ActivateSessionRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("clientSignature\x00"), 68, UA_Byte(unsafe.Offsetof(UA_ActivateSessionRequest{}.clientSignature) - unsafe.Offsetof(UA_ActivateSessionRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("clientSoftwareCertificates\x00"), 25, UA_Byte(unsafe.Offsetof(UA_ActivateSessionRequest{}.clientSoftwareCertificatesSize) - unsafe.Offsetof(UA_ActivateSessionRequest{}.clientSignature) - 32), 1, 1}, UA_DataTypeMember{[]byte("localeIds\x00"), 11, UA_Byte(unsafe.Offsetof(UA_ActivateSessionRequest{}.localeIdsSize) - unsafe.Offsetof(UA_ActivateSessionRequest{}.clientSoftwareCertificates) - 8), 1, 1}, UA_DataTypeMember{[]byte("userIdentityToken\x00"), 21, UA_Byte(unsafe.Offsetof(UA_ActivateSessionRequest{}.userIdentityToken) - unsafe.Offsetof(UA_ActivateSessionRequest{}.localeIds) - 8), 1, 0}, UA_DataTypeMember{[]byte("userTokenSignature\x00"), 68, UA_Byte(unsafe.Offsetof(UA_ActivateSessionRequest{}.userTokenSignature) - unsafe.Offsetof(UA_ActivateSessionRequest{}.userIdentityToken) - 616), 1, 0}}
var OpenSecureChannelResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("serverProtocolVersion\x00"), 6, UA_Byte(unsafe.Offsetof(UA_OpenSecureChannelResponse{}.serverProtocolVersion) - unsafe.Offsetof(UA_OpenSecureChannelResponse{}.responseHeader) - 720), 1, 0}, UA_DataTypeMember{[]byte("securityToken\x00"), 66, UA_Byte(unsafe.Offsetof(UA_OpenSecureChannelResponse{}.securityToken) - unsafe.Offsetof(UA_OpenSecureChannelResponse{}.serverProtocolVersion) - 4), 1, 0}, UA_DataTypeMember{[]byte("serverNonce\x00"), 14, UA_Byte(unsafe.Offsetof(UA_OpenSecureChannelResponse{}.serverNonce) - unsafe.Offsetof(UA_OpenSecureChannelResponse{}.securityToken) - 24), 1, 0}}
var ApplicationType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var ServerState_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var QueryNextResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("queryDataSets\x00"), 52, UA_Byte(unsafe.Offsetof(UA_QueryNextResponse{}.queryDataSetsSize) - unsafe.Offsetof(UA_QueryNextResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("revisedContinuationPoint\x00"), 14, UA_Byte(unsafe.Offsetof(UA_QueryNextResponse{}.revisedContinuationPoint) - unsafe.Offsetof(UA_QueryNextResponse{}.queryDataSets) - 8), 1, 0}}
var ActivateSessionResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("serverNonce\x00"), 14, UA_Byte(unsafe.Offsetof(UA_ActivateSessionResponse{}.serverNonce) - unsafe.Offsetof(UA_ActivateSessionResponse{}.responseHeader) - 720), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 18, UA_Byte(unsafe.Offsetof(UA_ActivateSessionResponse{}.resultsSize) - unsafe.Offsetof(UA_ActivateSessionResponse{}.serverNonce) - 16), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_ActivateSessionResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_ActivateSessionResponse{}.results) - 8), 1, 1}}
var EndpointUrlListDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("endpointUrlList\x00"), 11, UA_Byte(0), 1, 1}}
var FilterOperator_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var QueryNextRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("releaseContinuationPoint\x00"), 0, UA_Byte(unsafe.Offsetof(UA_QueryNextRequest{}.releaseContinuationPoint) - unsafe.Offsetof(UA_QueryNextRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("continuationPoint\x00"), 14, UA_Byte(unsafe.Offsetof(UA_QueryNextRequest{}.continuationPoint) - unsafe.Offsetof(UA_QueryNextRequest{}.releaseContinuationPoint) - 4), 1, 0}}
var WriteResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 18, UA_Byte(unsafe.Offsetof(UA_WriteResponse{}.resultsSize) - unsafe.Offsetof(UA_WriteResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_WriteResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_WriteResponse{}.results) - 8), 1, 1}}
var BrowseNextRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("releaseContinuationPoints\x00"), 0, UA_Byte(unsafe.Offsetof(UA_BrowseNextRequest{}.releaseContinuationPoints) - unsafe.Offsetof(UA_BrowseNextRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("continuationPoints\x00"), 14, UA_Byte(unsafe.Offsetof(UA_BrowseNextRequest{}.continuationPointsSize) - unsafe.Offsetof(UA_BrowseNextRequest{}.releaseContinuationPoints) - 4), 1, 1}}
var CreateSubscriptionRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("requestedPublishingInterval\x00"), 10, UA_Byte(unsafe.Offsetof(UA_CreateSubscriptionRequest{}.requestedPublishingInterval) - unsafe.Offsetof(UA_CreateSubscriptionRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("requestedLifetimeCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_CreateSubscriptionRequest{}.requestedLifetimeCount) - unsafe.Offsetof(UA_CreateSubscriptionRequest{}.requestedPublishingInterval) - 8), 1, 0}, UA_DataTypeMember{[]byte("requestedMaxKeepAliveCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_CreateSubscriptionRequest{}.requestedMaxKeepAliveCount) - unsafe.Offsetof(UA_CreateSubscriptionRequest{}.requestedLifetimeCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("maxNotificationsPerPublish\x00"), 6, UA_Byte(unsafe.Offsetof(UA_CreateSubscriptionRequest{}.maxNotificationsPerPublish) - unsafe.Offsetof(UA_CreateSubscriptionRequest{}.requestedMaxKeepAliveCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("publishingEnabled\x00"), 0, UA_Byte(unsafe.Offsetof(UA_CreateSubscriptionRequest{}.publishingEnabled) - unsafe.Offsetof(UA_CreateSubscriptionRequest{}.maxNotificationsPerPublish) - 4), 1, 0}, UA_DataTypeMember{[]byte("priority\x00"), 2, UA_Byte(unsafe.Offsetof(UA_CreateSubscriptionRequest{}.priority) - unsafe.Offsetof(UA_CreateSubscriptionRequest{}.publishingEnabled) - 4), 1, 0}}
var VariableTypeAttributes_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("specifiedAttributes\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("displayName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_VariableTypeAttributes{}.displayName) - unsafe.Offsetof(UA_VariableTypeAttributes{}.specifiedAttributes) - 4), 1, 0}, UA_DataTypeMember{[]byte("description\x00"), 20, UA_Byte(unsafe.Offsetof(UA_VariableTypeAttributes{}.description) - unsafe.Offsetof(UA_VariableTypeAttributes{}.displayName) - 32), 1, 0}, UA_DataTypeMember{[]byte("writeMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_VariableTypeAttributes{}.writeMask) - unsafe.Offsetof(UA_VariableTypeAttributes{}.description) - 32), 1, 0}, UA_DataTypeMember{[]byte("userWriteMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_VariableTypeAttributes{}.userWriteMask) - unsafe.Offsetof(UA_VariableTypeAttributes{}.writeMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("value\x00"), 23, UA_Byte(unsafe.Offsetof(UA_VariableTypeAttributes{}.value) - unsafe.Offsetof(UA_VariableTypeAttributes{}.userWriteMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("dataType\x00"), 16, UA_Byte(unsafe.Offsetof(UA_VariableTypeAttributes{}.dataType) - unsafe.Offsetof(UA_VariableTypeAttributes{}.value) - 48), 1, 0}, UA_DataTypeMember{[]byte("valueRank\x00"), 5, UA_Byte(unsafe.Offsetof(UA_VariableTypeAttributes{}.valueRank) - unsafe.Offsetof(UA_VariableTypeAttributes{}.dataType) - 120), 1, 0}, UA_DataTypeMember{[]byte("arrayDimensions\x00"), 6, UA_Byte(unsafe.Offsetof(UA_VariableTypeAttributes{}.arrayDimensionsSize) - unsafe.Offsetof(UA_VariableTypeAttributes{}.valueRank) - 4), 1, 1}, UA_DataTypeMember{[]byte("isAbstract\x00"), 0, UA_Byte(unsafe.Offsetof(UA_VariableTypeAttributes{}.isAbstract) - unsafe.Offsetof(UA_VariableTypeAttributes{}.arrayDimensions) - 8), 1, 0}}
var BrowsePathResult_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("statusCode\x00"), 18, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("targets\x00"), 28, UA_Byte(unsafe.Offsetof(UA_BrowsePathResult{}.targetsSize) - unsafe.Offsetof(UA_BrowsePathResult{}.statusCode) - 4), 1, 1}}
var ModifySubscriptionResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("revisedPublishingInterval\x00"), 10, UA_Byte(unsafe.Offsetof(UA_ModifySubscriptionResponse{}.revisedPublishingInterval) - unsafe.Offsetof(UA_ModifySubscriptionResponse{}.responseHeader) - 720), 1, 0}, UA_DataTypeMember{[]byte("revisedLifetimeCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ModifySubscriptionResponse{}.revisedLifetimeCount) - unsafe.Offsetof(UA_ModifySubscriptionResponse{}.revisedPublishingInterval) - 8), 1, 0}, UA_DataTypeMember{[]byte("revisedMaxKeepAliveCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ModifySubscriptionResponse{}.revisedMaxKeepAliveCount) - unsafe.Offsetof(UA_ModifySubscriptionResponse{}.revisedLifetimeCount) - 4), 1, 0}}
var RedundantServerDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("serverId\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("serviceLevel\x00"), 2, UA_Byte(unsafe.Offsetof(UA_RedundantServerDataType{}.serviceLevel) - unsafe.Offsetof(UA_RedundantServerDataType{}.serverId) - 16), 1, 0}, UA_DataTypeMember{[]byte("serverState\x00"), 106, UA_Byte(unsafe.Offsetof(UA_RedundantServerDataType{}.serverState) - unsafe.Offsetof(UA_RedundantServerDataType{}.serviceLevel) - 1), 1, 0}}
var RegisterNodesResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("registeredNodeIds\x00"), 16, UA_Byte(unsafe.Offsetof(UA_RegisterNodesResponse{}.registeredNodeIdsSize) - unsafe.Offsetof(UA_RegisterNodesResponse{}.responseHeader) - 720), 1, 1}}
var CloseSessionRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("deleteSubscriptions\x00"), 0, UA_Byte(unsafe.Offsetof(UA_CloseSessionRequest{}.deleteSubscriptions) - unsafe.Offsetof(UA_CloseSessionRequest{}.requestHeader) - 776), 1, 0}}
var ModifyMonitoredItemsResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 31, UA_Byte(unsafe.Offsetof(UA_ModifyMonitoredItemsResponse{}.resultsSize) - unsafe.Offsetof(UA_ModifyMonitoredItemsResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_ModifyMonitoredItemsResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_ModifyMonitoredItemsResponse{}.results) - 8), 1, 1}}
var ModifySubscriptionRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ModifySubscriptionRequest{}.subscriptionId) - unsafe.Offsetof(UA_ModifySubscriptionRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("requestedPublishingInterval\x00"), 10, UA_Byte(unsafe.Offsetof(UA_ModifySubscriptionRequest{}.requestedPublishingInterval) - unsafe.Offsetof(UA_ModifySubscriptionRequest{}.subscriptionId) - 4), 1, 0}, UA_DataTypeMember{[]byte("requestedLifetimeCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ModifySubscriptionRequest{}.requestedLifetimeCount) - unsafe.Offsetof(UA_ModifySubscriptionRequest{}.requestedPublishingInterval) - 8), 1, 0}, UA_DataTypeMember{[]byte("requestedMaxKeepAliveCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ModifySubscriptionRequest{}.requestedMaxKeepAliveCount) - unsafe.Offsetof(UA_ModifySubscriptionRequest{}.requestedLifetimeCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("maxNotificationsPerPublish\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ModifySubscriptionRequest{}.maxNotificationsPerPublish) - unsafe.Offsetof(UA_ModifySubscriptionRequest{}.requestedMaxKeepAliveCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("priority\x00"), 2, UA_Byte(unsafe.Offsetof(UA_ModifySubscriptionRequest{}.priority) - unsafe.Offsetof(UA_ModifySubscriptionRequest{}.maxNotificationsPerPublish) - 4), 1, 0}}
var ServerDiagnosticsSummaryDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("serverViewCount\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("currentSessionCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.currentSessionCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.serverViewCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("cumulatedSessionCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.cumulatedSessionCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.currentSessionCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("securityRejectedSessionCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.securityRejectedSessionCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.cumulatedSessionCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("rejectedSessionCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.rejectedSessionCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.securityRejectedSessionCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("sessionTimeoutCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.sessionTimeoutCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.rejectedSessionCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("sessionAbortCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.sessionAbortCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.sessionTimeoutCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("currentSubscriptionCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.currentSubscriptionCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.sessionAbortCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("cumulatedSubscriptionCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.cumulatedSubscriptionCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.currentSubscriptionCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("publishingIntervalCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.publishingIntervalCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.cumulatedSubscriptionCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("securityRejectedRequestsCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.securityRejectedRequestsCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.publishingIntervalCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("rejectedRequestsCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.rejectedRequestsCount) - unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.securityRejectedRequestsCount) - 4), 1, 0}}
var UserTokenPolicy_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("policyId\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("tokenType\x00"), 100, UA_Byte(unsafe.Offsetof(UA_UserTokenPolicy{}.tokenType) - unsafe.Offsetof(UA_UserTokenPolicy{}.policyId) - 16), 1, 0}, UA_DataTypeMember{[]byte("issuedTokenType\x00"), 11, UA_Byte(unsafe.Offsetof(UA_UserTokenPolicy{}.issuedTokenType) - unsafe.Offsetof(UA_UserTokenPolicy{}.tokenType) - 4), 1, 0}, UA_DataTypeMember{[]byte("issuerEndpointUrl\x00"), 11, UA_Byte(unsafe.Offsetof(UA_UserTokenPolicy{}.issuerEndpointUrl) - unsafe.Offsetof(UA_UserTokenPolicy{}.issuedTokenType) - 16), 1, 0}, UA_DataTypeMember{[]byte("securityPolicyUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_UserTokenPolicy{}.securityPolicyUri) - unsafe.Offsetof(UA_UserTokenPolicy{}.issuerEndpointUrl) - 16), 1, 0}}
var ReferenceTypeAttributes_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("specifiedAttributes\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("displayName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ReferenceTypeAttributes{}.displayName) - unsafe.Offsetof(UA_ReferenceTypeAttributes{}.specifiedAttributes) - 4), 1, 0}, UA_DataTypeMember{[]byte("description\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ReferenceTypeAttributes{}.description) - unsafe.Offsetof(UA_ReferenceTypeAttributes{}.displayName) - 32), 1, 0}, UA_DataTypeMember{[]byte("writeMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ReferenceTypeAttributes{}.writeMask) - unsafe.Offsetof(UA_ReferenceTypeAttributes{}.description) - 32), 1, 0}, UA_DataTypeMember{[]byte("userWriteMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ReferenceTypeAttributes{}.userWriteMask) - unsafe.Offsetof(UA_ReferenceTypeAttributes{}.writeMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("isAbstract\x00"), 0, UA_Byte(unsafe.Offsetof(UA_ReferenceTypeAttributes{}.isAbstract) - unsafe.Offsetof(UA_ReferenceTypeAttributes{}.userWriteMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("symmetric\x00"), 0, UA_Byte(unsafe.Offsetof(UA_ReferenceTypeAttributes{}.symmetric) - unsafe.Offsetof(UA_ReferenceTypeAttributes{}.isAbstract) - 4), 1, 0}, UA_DataTypeMember{[]byte("inverseName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ReferenceTypeAttributes{}.inverseName) - unsafe.Offsetof(UA_ReferenceTypeAttributes{}.symmetric) - 4), 1, 0}}
var BrowsePath_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("startingNode\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("relativePath\x00"), 90, UA_Byte(unsafe.Offsetof(UA_BrowsePath{}.relativePath) - unsafe.Offsetof(UA_BrowsePath{}.startingNode) - 120), 1, 0}}
var SetMonitoringModeRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SetMonitoringModeRequest{}.subscriptionId) - unsafe.Offsetof(UA_SetMonitoringModeRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("monitoringMode\x00"), 39, UA_Byte(unsafe.Offsetof(UA_SetMonitoringModeRequest{}.monitoringMode) - unsafe.Offsetof(UA_SetMonitoringModeRequest{}.subscriptionId) - 4), 1, 0}, UA_DataTypeMember{[]byte("monitoredItemIds\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SetMonitoringModeRequest{}.monitoredItemIdsSize) - unsafe.Offsetof(UA_SetMonitoringModeRequest{}.monitoringMode) - 4), 1, 1}}
var UnregisterNodesResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}}
var WriteRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("nodesToWrite\x00"), 60, UA_Byte(unsafe.Offsetof(UA_WriteRequest{}.nodesToWriteSize) - unsafe.Offsetof(UA_WriteRequest{}.requestHeader) - 776), 1, 1}}
var ObjectAttributes_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("specifiedAttributes\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("displayName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ObjectAttributes{}.displayName) - unsafe.Offsetof(UA_ObjectAttributes{}.specifiedAttributes) - 4), 1, 0}, UA_DataTypeMember{[]byte("description\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ObjectAttributes{}.description) - unsafe.Offsetof(UA_ObjectAttributes{}.displayName) - 32), 1, 0}, UA_DataTypeMember{[]byte("writeMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ObjectAttributes{}.writeMask) - unsafe.Offsetof(UA_ObjectAttributes{}.description) - 32), 1, 0}, UA_DataTypeMember{[]byte("userWriteMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ObjectAttributes{}.userWriteMask) - unsafe.Offsetof(UA_ObjectAttributes{}.writeMask) - 4), 1, 0}, UA_DataTypeMember{[]byte("eventNotifier\x00"), 2, UA_Byte(unsafe.Offsetof(UA_ObjectAttributes{}.eventNotifier) - unsafe.Offsetof(UA_ObjectAttributes{}.userWriteMask) - 4), 1, 0}}
var BrowseResultMask_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var BrowseDescription_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("nodeId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("browseDirection\x00"), 44, UA_Byte(unsafe.Offsetof(UA_BrowseDescription{}.browseDirection) - unsafe.Offsetof(UA_BrowseDescription{}.nodeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("referenceTypeId\x00"), 16, UA_Byte(unsafe.Offsetof(UA_BrowseDescription{}.referenceTypeId) - unsafe.Offsetof(UA_BrowseDescription{}.browseDirection) - 4), 1, 0}, UA_DataTypeMember{[]byte("includeSubtypes\x00"), 0, UA_Byte(unsafe.Offsetof(UA_BrowseDescription{}.includeSubtypes) - unsafe.Offsetof(UA_BrowseDescription{}.referenceTypeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("nodeClassMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_BrowseDescription{}.nodeClassMask) - unsafe.Offsetof(UA_BrowseDescription{}.includeSubtypes) - 4), 1, 0}, UA_DataTypeMember{[]byte("resultMask\x00"), 6, UA_Byte(unsafe.Offsetof(UA_BrowseDescription{}.resultMask) - unsafe.Offsetof(UA_BrowseDescription{}.nodeClassMask) - 4), 1, 0}}
var SetTriggeringRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SetTriggeringRequest{}.subscriptionId) - unsafe.Offsetof(UA_SetTriggeringRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("triggeringItemId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SetTriggeringRequest{}.triggeringItemId) - unsafe.Offsetof(UA_SetTriggeringRequest{}.subscriptionId) - 4), 1, 0}, UA_DataTypeMember{[]byte("linksToAdd\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SetTriggeringRequest{}.linksToAddSize) - unsafe.Offsetof(UA_SetTriggeringRequest{}.triggeringItemId) - 4), 1, 1}, UA_DataTypeMember{[]byte("linksToRemove\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SetTriggeringRequest{}.linksToRemoveSize) - unsafe.Offsetof(UA_SetTriggeringRequest{}.linksToAdd) - 8), 1, 1}}
var SessionSecurityDiagnosticsDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("sessionId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("clientUserIdOfSession\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.clientUserIdOfSession) - unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.sessionId) - 120), 1, 0}, UA_DataTypeMember{[]byte("clientUserIdHistory\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.clientUserIdHistorySize) - unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.clientUserIdOfSession) - 16), 1, 1}, UA_DataTypeMember{[]byte("authenticationMechanism\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.authenticationMechanism) - unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.clientUserIdHistory) - 8), 1, 0}, UA_DataTypeMember{[]byte("encoding\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.encoding) - unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.authenticationMechanism) - 16), 1, 0}, UA_DataTypeMember{[]byte("transportProtocol\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.transportProtocol) - unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.encoding) - 16), 1, 0}, UA_DataTypeMember{[]byte("securityMode\x00"), 62, UA_Byte(unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.securityMode) - unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.transportProtocol) - 16), 1, 0}, UA_DataTypeMember{[]byte("securityPolicyUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.securityPolicyUri) - unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.securityMode) - 4), 1, 0}, UA_DataTypeMember{[]byte("clientCertificate\x00"), 14, UA_Byte(unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.clientCertificate) - unsafe.Offsetof(UA_SessionSecurityDiagnosticsDataType{}.securityPolicyUri) - 16), 1, 0}}
var RepublishRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_RepublishRequest{}.subscriptionId) - unsafe.Offsetof(UA_RepublishRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("retransmitSequenceNumber\x00"), 6, UA_Byte(unsafe.Offsetof(UA_RepublishRequest{}.retransmitSequenceNumber) - unsafe.Offsetof(UA_RepublishRequest{}.subscriptionId) - 4), 1, 0}}
var GetEndpointsRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("endpointUrl\x00"), 11, UA_Byte(unsafe.Offsetof(UA_GetEndpointsRequest{}.endpointUrl) - unsafe.Offsetof(UA_GetEndpointsRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("localeIds\x00"), 11, UA_Byte(unsafe.Offsetof(UA_GetEndpointsRequest{}.localeIdsSize) - unsafe.Offsetof(UA_GetEndpointsRequest{}.endpointUrl) - 16), 1, 1}, UA_DataTypeMember{[]byte("profileUris\x00"), 11, UA_Byte(unsafe.Offsetof(UA_GetEndpointsRequest{}.profileUrisSize) - unsafe.Offsetof(UA_GetEndpointsRequest{}.localeIds) - 8), 1, 1}}
var PublishRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionAcknowledgements\x00"), 81, UA_Byte(unsafe.Offsetof(UA_PublishRequest{}.subscriptionAcknowledgementsSize) - unsafe.Offsetof(UA_PublishRequest{}.requestHeader) - 776), 1, 1}}
var DeleteSubscriptionsResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 18, UA_Byte(unsafe.Offsetof(UA_DeleteSubscriptionsResponse{}.resultsSize) - unsafe.Offsetof(UA_DeleteSubscriptionsResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_DeleteSubscriptionsResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_DeleteSubscriptionsResponse{}.results) - 8), 1, 1}}
var AddNodesResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 34, UA_Byte(unsafe.Offsetof(UA_AddNodesResponse{}.resultsSize) - unsafe.Offsetof(UA_AddNodesResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_AddNodesResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_AddNodesResponse{}.results) - 8), 1, 1}}
var DataChangeNotification_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("monitoredItems\x00"), 78, UA_Byte(0), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_DataChangeNotification{}.diagnosticInfosSize) - unsafe.Offsetof(UA_DataChangeNotification{}.monitoredItems) - 8), 1, 1}}
var CloseSecureChannelResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}}
var ModifyMonitoredItemsRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ModifyMonitoredItemsRequest{}.subscriptionId) - unsafe.Offsetof(UA_ModifyMonitoredItemsRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("timestampsToReturn\x00"), 56, UA_Byte(unsafe.Offsetof(UA_ModifyMonitoredItemsRequest{}.timestampsToReturn) - unsafe.Offsetof(UA_ModifyMonitoredItemsRequest{}.subscriptionId) - 4), 1, 0}, UA_DataTypeMember{[]byte("itemsToModify\x00"), 95, UA_Byte(unsafe.Offsetof(UA_ModifyMonitoredItemsRequest{}.itemsToModifySize) - unsafe.Offsetof(UA_ModifyMonitoredItemsRequest{}.timestampsToReturn) - 4), 1, 1}}
var SetMonitoringModeResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 18, UA_Byte(unsafe.Offsetof(UA_SetMonitoringModeResponse{}.resultsSize) - unsafe.Offsetof(UA_SetMonitoringModeResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_SetMonitoringModeResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_SetMonitoringModeResponse{}.results) - 8), 1, 1}}
var FindServersRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("endpointUrl\x00"), 11, UA_Byte(unsafe.Offsetof(UA_FindServersRequest{}.endpointUrl) - unsafe.Offsetof(UA_FindServersRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("localeIds\x00"), 11, UA_Byte(unsafe.Offsetof(UA_FindServersRequest{}.localeIdsSize) - unsafe.Offsetof(UA_FindServersRequest{}.endpointUrl) - 16), 1, 1}, UA_DataTypeMember{[]byte("serverUris\x00"), 11, UA_Byte(unsafe.Offsetof(UA_FindServersRequest{}.serverUrisSize) - unsafe.Offsetof(UA_FindServersRequest{}.localeIds) - 8), 1, 1}}
var ReferenceDescription_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("referenceTypeId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("isForward\x00"), 0, UA_Byte(unsafe.Offsetof(UA_ReferenceDescription{}.isForward) - unsafe.Offsetof(UA_ReferenceDescription{}.referenceTypeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("nodeId\x00"), 17, UA_Byte(unsafe.Offsetof(UA_ReferenceDescription{}.nodeId) - unsafe.Offsetof(UA_ReferenceDescription{}.isForward) - 4), 1, 0}, UA_DataTypeMember{[]byte("browseName\x00"), 19, UA_Byte(unsafe.Offsetof(UA_ReferenceDescription{}.browseName) - unsafe.Offsetof(UA_ReferenceDescription{}.nodeId) - 144), 1, 0}, UA_DataTypeMember{[]byte("displayName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ReferenceDescription{}.displayName) - unsafe.Offsetof(UA_ReferenceDescription{}.browseName) - 24), 1, 0}, UA_DataTypeMember{[]byte("nodeClass\x00"), 75, UA_Byte(unsafe.Offsetof(UA_ReferenceDescription{}.nodeClass) - unsafe.Offsetof(UA_ReferenceDescription{}.displayName) - 32), 1, 0}, UA_DataTypeMember{[]byte("typeDefinition\x00"), 17, UA_Byte(unsafe.Offsetof(UA_ReferenceDescription{}.typeDefinition) - unsafe.Offsetof(UA_ReferenceDescription{}.nodeClass) - 4), 1, 0}}
var SetPublishingModeResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 18, UA_Byte(unsafe.Offsetof(UA_SetPublishingModeResponse{}.resultsSize) - unsafe.Offsetof(UA_SetPublishingModeResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_SetPublishingModeResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_SetPublishingModeResponse{}.results) - 8), 1, 1}}
var ContentFilterResult_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("elementResults\x00"), 49, UA_Byte(0), 1, 1}, UA_DataTypeMember{[]byte("elementDiagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_ContentFilterResult{}.elementDiagnosticInfosSize) - unsafe.Offsetof(UA_ContentFilterResult{}.elementResults) - 8), 1, 1}}
var RegisterServerResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}}
var AddReferencesItem_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("sourceNodeId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("referenceTypeId\x00"), 16, UA_Byte(unsafe.Offsetof(UA_AddReferencesItem{}.referenceTypeId) - unsafe.Offsetof(UA_AddReferencesItem{}.sourceNodeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("isForward\x00"), 0, UA_Byte(unsafe.Offsetof(UA_AddReferencesItem{}.isForward) - unsafe.Offsetof(UA_AddReferencesItem{}.referenceTypeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("targetServerUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_AddReferencesItem{}.targetServerUri) - unsafe.Offsetof(UA_AddReferencesItem{}.isForward) - 4), 1, 0}, UA_DataTypeMember{[]byte("targetNodeId\x00"), 17, UA_Byte(unsafe.Offsetof(UA_AddReferencesItem{}.targetNodeId) - unsafe.Offsetof(UA_AddReferencesItem{}.targetServerUri) - 16), 1, 0}, UA_DataTypeMember{[]byte("targetNodeClass\x00"), 75, UA_Byte(unsafe.Offsetof(UA_AddReferencesItem{}.targetNodeClass) - unsafe.Offsetof(UA_AddReferencesItem{}.targetNodeId) - 144), 1, 0}}
var QueryDataDescription_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("relativePath\x00"), 90, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("attributeId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_QueryDataDescription{}.attributeId) - unsafe.Offsetof(UA_QueryDataDescription{}.relativePath) - 16), 1, 0}, UA_DataTypeMember{[]byte("indexRange\x00"), 11, UA_Byte(unsafe.Offsetof(UA_QueryDataDescription{}.indexRange) - unsafe.Offsetof(UA_QueryDataDescription{}.attributeId) - 4), 1, 0}}
var CreateSubscriptionResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_CreateSubscriptionResponse{}.subscriptionId) - unsafe.Offsetof(UA_CreateSubscriptionResponse{}.responseHeader) - 720), 1, 0}, UA_DataTypeMember{[]byte("revisedPublishingInterval\x00"), 10, UA_Byte(unsafe.Offsetof(UA_CreateSubscriptionResponse{}.revisedPublishingInterval) - unsafe.Offsetof(UA_CreateSubscriptionResponse{}.subscriptionId) - 4), 1, 0}, UA_DataTypeMember{[]byte("revisedLifetimeCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_CreateSubscriptionResponse{}.revisedLifetimeCount) - unsafe.Offsetof(UA_CreateSubscriptionResponse{}.revisedPublishingInterval) - 8), 1, 0}, UA_DataTypeMember{[]byte("revisedMaxKeepAliveCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_CreateSubscriptionResponse{}.revisedMaxKeepAliveCount) - unsafe.Offsetof(UA_CreateSubscriptionResponse{}.revisedLifetimeCount) - 4), 1, 0}}
var NetworkGroupDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("serverUri\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("networkPaths\x00"), 110, UA_Byte(unsafe.Offsetof(UA_NetworkGroupDataType{}.networkPathsSize) - unsafe.Offsetof(UA_NetworkGroupDataType{}.serverUri) - 16), 1, 1}}
var DeleteReferencesResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 18, UA_Byte(unsafe.Offsetof(UA_DeleteReferencesResponse{}.resultsSize) - unsafe.Offsetof(UA_DeleteReferencesResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_DeleteReferencesResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_DeleteReferencesResponse{}.results) - 8), 1, 1}}
var CreateMonitoredItemsResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 55, UA_Byte(unsafe.Offsetof(UA_CreateMonitoredItemsResponse{}.resultsSize) - unsafe.Offsetof(UA_CreateMonitoredItemsResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_CreateMonitoredItemsResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_CreateMonitoredItemsResponse{}.results) - 8), 1, 1}}
var CallResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 41, UA_Byte(unsafe.Offsetof(UA_CallResponse{}.resultsSize) - unsafe.Offsetof(UA_CallResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_CallResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_CallResponse{}.results) - 8), 1, 1}}
var DeleteNodesResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 18, UA_Byte(unsafe.Offsetof(UA_DeleteNodesResponse{}.resultsSize) - unsafe.Offsetof(UA_DeleteNodesResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_DeleteNodesResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_DeleteNodesResponse{}.results) - 8), 1, 1}}
var RepublishResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("notificationMessage\x00"), 36, UA_Byte(unsafe.Offsetof(UA_RepublishResponse{}.notificationMessage) - unsafe.Offsetof(UA_RepublishResponse{}.responseHeader) - 720), 1, 0}}
var MonitoredItemCreateRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("itemToMonitor\x00"), 82, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("monitoringMode\x00"), 39, UA_Byte(unsafe.Offsetof(UA_MonitoredItemCreateRequest{}.monitoringMode) - unsafe.Offsetof(UA_MonitoredItemCreateRequest{}.itemToMonitor) - 168), 1, 0}, UA_DataTypeMember{[]byte("requestedParameters\x00"), 63, UA_Byte(unsafe.Offsetof(UA_MonitoredItemCreateRequest{}.requestedParameters) - unsafe.Offsetof(UA_MonitoredItemCreateRequest{}.monitoringMode) - 4), 1, 0}}
var DeleteReferencesRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("referencesToDelete\x00"), 59, UA_Byte(unsafe.Offsetof(UA_DeleteReferencesRequest{}.referencesToDeleteSize) - unsafe.Offsetof(UA_DeleteReferencesRequest{}.requestHeader) - 776), 1, 1}}
var ReadResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 22, UA_Byte(unsafe.Offsetof(UA_ReadResponse{}.resultsSize) - unsafe.Offsetof(UA_ReadResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_ReadResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_ReadResponse{}.results) - 8), 1, 1}}
var AddReferencesRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("referencesToAdd\x00"), 150, UA_Byte(unsafe.Offsetof(UA_AddReferencesRequest{}.referencesToAddSize) - unsafe.Offsetof(UA_AddReferencesRequest{}.requestHeader) - 776), 1, 1}}
var ReadRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("maxAge\x00"), 10, UA_Byte(unsafe.Offsetof(UA_ReadRequest{}.maxAge) - unsafe.Offsetof(UA_ReadRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("timestampsToReturn\x00"), 56, UA_Byte(unsafe.Offsetof(UA_ReadRequest{}.timestampsToReturn) - unsafe.Offsetof(UA_ReadRequest{}.maxAge) - 8), 1, 0}, UA_DataTypeMember{[]byte("nodesToRead\x00"), 82, UA_Byte(unsafe.Offsetof(UA_ReadRequest{}.nodesToReadSize) - unsafe.Offsetof(UA_ReadRequest{}.timestampsToReturn) - 4), 1, 1}}
var OpenSecureChannelRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("clientProtocolVersion\x00"), 6, UA_Byte(unsafe.Offsetof(UA_OpenSecureChannelRequest{}.clientProtocolVersion) - unsafe.Offsetof(UA_OpenSecureChannelRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("requestType\x00"), 71, UA_Byte(unsafe.Offsetof(UA_OpenSecureChannelRequest{}.requestType) - unsafe.Offsetof(UA_OpenSecureChannelRequest{}.clientProtocolVersion) - 4), 1, 0}, UA_DataTypeMember{[]byte("securityMode\x00"), 62, UA_Byte(unsafe.Offsetof(UA_OpenSecureChannelRequest{}.securityMode) - unsafe.Offsetof(UA_OpenSecureChannelRequest{}.requestType) - 4), 1, 0}, UA_DataTypeMember{[]byte("clientNonce\x00"), 14, UA_Byte(unsafe.Offsetof(UA_OpenSecureChannelRequest{}.clientNonce) - unsafe.Offsetof(UA_OpenSecureChannelRequest{}.securityMode) - 4), 1, 0}, UA_DataTypeMember{[]byte("requestedLifetime\x00"), 6, UA_Byte(unsafe.Offsetof(UA_OpenSecureChannelRequest{}.requestedLifetime) - unsafe.Offsetof(UA_OpenSecureChannelRequest{}.clientNonce) - 16), 1, 0}}
var RegisterServer2Response_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("configurationResults\x00"), 18, UA_Byte(unsafe.Offsetof(UA_RegisterServer2Response{}.configurationResultsSize) - unsafe.Offsetof(UA_RegisterServer2Response{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_RegisterServer2Response{}.diagnosticInfosSize) - unsafe.Offsetof(UA_RegisterServer2Response{}.configurationResults) - 8), 1, 1}}
var AddNodesItem_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("parentNodeId\x00"), 17, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("referenceTypeId\x00"), 16, UA_Byte(unsafe.Offsetof(UA_AddNodesItem{}.referenceTypeId) - unsafe.Offsetof(UA_AddNodesItem{}.parentNodeId) - 144), 1, 0}, UA_DataTypeMember{[]byte("requestedNewNodeId\x00"), 17, UA_Byte(unsafe.Offsetof(UA_AddNodesItem{}.requestedNewNodeId) - unsafe.Offsetof(UA_AddNodesItem{}.referenceTypeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("browseName\x00"), 19, UA_Byte(unsafe.Offsetof(UA_AddNodesItem{}.browseName) - unsafe.Offsetof(UA_AddNodesItem{}.requestedNewNodeId) - 144), 1, 0}, UA_DataTypeMember{[]byte("nodeClass\x00"), 75, UA_Byte(unsafe.Offsetof(UA_AddNodesItem{}.nodeClass) - unsafe.Offsetof(UA_AddNodesItem{}.browseName) - 24), 1, 0}, UA_DataTypeMember{[]byte("nodeAttributes\x00"), 21, UA_Byte(unsafe.Offsetof(UA_AddNodesItem{}.nodeAttributes) - unsafe.Offsetof(UA_AddNodesItem{}.nodeClass) - 4), 1, 0}, UA_DataTypeMember{[]byte("typeDefinition\x00"), 17, UA_Byte(unsafe.Offsetof(UA_AddNodesItem{}.typeDefinition) - unsafe.Offsetof(UA_AddNodesItem{}.nodeAttributes) - 616), 1, 0}}
var NodeTypeDescription_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("typeDefinitionNode\x00"), 17, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("includeSubTypes\x00"), 0, UA_Byte(unsafe.Offsetof(UA_NodeTypeDescription{}.includeSubTypes) - unsafe.Offsetof(UA_NodeTypeDescription{}.typeDefinitionNode) - 144), 1, 0}, UA_DataTypeMember{[]byte("dataToReturn\x00"), 151, UA_Byte(unsafe.Offsetof(UA_NodeTypeDescription{}.dataToReturnSize) - unsafe.Offsetof(UA_NodeTypeDescription{}.includeSubTypes) - 4), 1, 1}}
var ServerStatusDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("startTime\x00"), 12, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("currentTime\x00"), 12, UA_Byte(unsafe.Offsetof(UA_ServerStatusDataType{}.currentTime) - unsafe.Offsetof(UA_ServerStatusDataType{}.startTime) - 8), 1, 0}, UA_DataTypeMember{[]byte("state\x00"), 106, UA_Byte(unsafe.Offsetof(UA_ServerStatusDataType{}.state) - unsafe.Offsetof(UA_ServerStatusDataType{}.currentTime) - 8), 1, 0}, UA_DataTypeMember{[]byte("buildInfo\x00"), 74, UA_Byte(unsafe.Offsetof(UA_ServerStatusDataType{}.buildInfo) - unsafe.Offsetof(UA_ServerStatusDataType{}.state) - 4), 1, 0}, UA_DataTypeMember{[]byte("secondsTillShutdown\x00"), 6, UA_Byte(unsafe.Offsetof(UA_ServerStatusDataType{}.secondsTillShutdown) - unsafe.Offsetof(UA_ServerStatusDataType{}.buildInfo) - 88), 1, 0}, UA_DataTypeMember{[]byte("shutdownReason\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ServerStatusDataType{}.shutdownReason) - unsafe.Offsetof(UA_ServerStatusDataType{}.secondsTillShutdown) - 4), 1, 0}}
var AttributeOperand_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("nodeId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("alias\x00"), 11, UA_Byte(unsafe.Offsetof(UA_AttributeOperand{}.alias) - unsafe.Offsetof(UA_AttributeOperand{}.nodeId) - 120), 1, 0}, UA_DataTypeMember{[]byte("browsePath\x00"), 90, UA_Byte(unsafe.Offsetof(UA_AttributeOperand{}.browsePath) - unsafe.Offsetof(UA_AttributeOperand{}.alias) - 16), 1, 0}, UA_DataTypeMember{[]byte("attributeId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_AttributeOperand{}.attributeId) - unsafe.Offsetof(UA_AttributeOperand{}.browsePath) - 16), 1, 0}, UA_DataTypeMember{[]byte("indexRange\x00"), 11, UA_Byte(unsafe.Offsetof(UA_AttributeOperand{}.indexRange) - unsafe.Offsetof(UA_AttributeOperand{}.attributeId) - 4), 1, 0}}
var AddReferencesResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 18, UA_Byte(unsafe.Offsetof(UA_AddReferencesResponse{}.resultsSize) - unsafe.Offsetof(UA_AddReferencesResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_AddReferencesResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_AddReferencesResponse{}.results) - 8), 1, 1}}
var EventFilterResult_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("selectClauseResults\x00"), 18, UA_Byte(0), 1, 1}, UA_DataTypeMember{[]byte("selectClauseDiagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_EventFilterResult{}.selectClauseDiagnosticInfosSize) - unsafe.Offsetof(UA_EventFilterResult{}.selectClauseResults) - 8), 1, 1}, UA_DataTypeMember{[]byte("whereClauseResult\x00"), 148, UA_Byte(unsafe.Offsetof(UA_EventFilterResult{}.whereClauseResult) - unsafe.Offsetof(UA_EventFilterResult{}.selectClauseDiagnosticInfos) - 8), 1, 0}}
var TranslateBrowsePathsToNodeIdsResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 117, UA_Byte(unsafe.Offsetof(UA_TranslateBrowsePathsToNodeIdsResponse{}.resultsSize) - unsafe.Offsetof(UA_TranslateBrowsePathsToNodeIdsResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_TranslateBrowsePathsToNodeIdsResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_TranslateBrowsePathsToNodeIdsResponse{}.results) - 8), 1, 1}}
var DataChangeFilter_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("trigger\x00"), 73, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("deadbandType\x00"), 6, UA_Byte(unsafe.Offsetof(UA_DataChangeFilter{}.deadbandType) - unsafe.Offsetof(UA_DataChangeFilter{}.trigger) - 4), 1, 0}, UA_DataTypeMember{[]byte("deadbandValue\x00"), 10, UA_Byte(unsafe.Offsetof(UA_DataChangeFilter{}.deadbandValue) - unsafe.Offsetof(UA_DataChangeFilter{}.deadbandType) - 4), 1, 0}}
var ContentFilterElement_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("filterOperator\x00"), 111, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("filterOperands\x00"), 21, UA_Byte(unsafe.Offsetof(UA_ContentFilterElement{}.filterOperandsSize) - unsafe.Offsetof(UA_ContentFilterElement{}.filterOperator) - 4), 1, 1}}
var TranslateBrowsePathsToNodeIdsRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("browsePaths\x00"), 127, UA_Byte(unsafe.Offsetof(UA_TranslateBrowsePathsToNodeIdsRequest{}.browsePathsSize) - unsafe.Offsetof(UA_TranslateBrowsePathsToNodeIdsRequest{}.requestHeader) - 776), 1, 1}}
var CloseSessionResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}}
var ApplicationDescription_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("applicationUri\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("productUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_ApplicationDescription{}.productUri) - unsafe.Offsetof(UA_ApplicationDescription{}.applicationUri) - 16), 1, 0}, UA_DataTypeMember{[]byte("applicationName\x00"), 20, UA_Byte(unsafe.Offsetof(UA_ApplicationDescription{}.applicationName) - unsafe.Offsetof(UA_ApplicationDescription{}.productUri) - 16), 1, 0}, UA_DataTypeMember{[]byte("applicationType\x00"), 105, UA_Byte(unsafe.Offsetof(UA_ApplicationDescription{}.applicationType) - unsafe.Offsetof(UA_ApplicationDescription{}.applicationName) - 32), 1, 0}, UA_DataTypeMember{[]byte("gatewayServerUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_ApplicationDescription{}.gatewayServerUri) - unsafe.Offsetof(UA_ApplicationDescription{}.applicationType) - 4), 1, 0}, UA_DataTypeMember{[]byte("discoveryProfileUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_ApplicationDescription{}.discoveryProfileUri) - unsafe.Offsetof(UA_ApplicationDescription{}.gatewayServerUri) - 16), 1, 0}, UA_DataTypeMember{[]byte("discoveryUrls\x00"), 11, UA_Byte(unsafe.Offsetof(UA_ApplicationDescription{}.discoveryUrlsSize) - unsafe.Offsetof(UA_ApplicationDescription{}.discoveryProfileUri) - 16), 1, 1}}
var SessionDiagnosticsDataType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("sessionId\x00"), 16, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("sessionName\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.sessionName) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.sessionId) - 120), 1, 0}, UA_DataTypeMember{[]byte("clientDescription\x00"), 177, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.clientDescription) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.sessionName) - 16), 1, 0}, UA_DataTypeMember{[]byte("serverUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.serverUri) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.clientDescription) - 120), 1, 0}, UA_DataTypeMember{[]byte("endpointUrl\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.endpointUrl) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.serverUri) - 16), 1, 0}, UA_DataTypeMember{[]byte("localeIds\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.localeIdsSize) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.endpointUrl) - 16), 1, 1}, UA_DataTypeMember{[]byte("actualSessionTimeout\x00"), 10, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.actualSessionTimeout) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.localeIds) - 8), 1, 0}, UA_DataTypeMember{[]byte("maxResponseMessageSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.maxResponseMessageSize) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.actualSessionTimeout) - 8), 1, 0}, UA_DataTypeMember{[]byte("clientConnectionTime\x00"), 12, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.clientConnectionTime) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.maxResponseMessageSize) - 4), 1, 0}, UA_DataTypeMember{[]byte("clientLastContactTime\x00"), 12, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.clientLastContactTime) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.clientConnectionTime) - 8), 1, 0}, UA_DataTypeMember{[]byte("currentSubscriptionsCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.currentSubscriptionsCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.clientLastContactTime) - 8), 1, 0}, UA_DataTypeMember{[]byte("currentMonitoredItemsCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.currentMonitoredItemsCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.currentSubscriptionsCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("currentPublishRequestsInQueue\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.currentPublishRequestsInQueue) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.currentMonitoredItemsCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("totalRequestCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.totalRequestCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.currentPublishRequestsInQueue) - 4), 1, 0}, UA_DataTypeMember{[]byte("unauthorizedRequestCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.unauthorizedRequestCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.totalRequestCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("readCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.readCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.unauthorizedRequestCount) - 4), 1, 0}, UA_DataTypeMember{[]byte("historyReadCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.historyReadCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.readCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("writeCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.writeCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.historyReadCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("historyUpdateCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.historyUpdateCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.writeCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("callCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.callCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.historyUpdateCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("createMonitoredItemsCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.createMonitoredItemsCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.callCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("modifyMonitoredItemsCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.modifyMonitoredItemsCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.createMonitoredItemsCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("setMonitoringModeCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.setMonitoringModeCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.modifyMonitoredItemsCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("setTriggeringCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.setTriggeringCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.setMonitoringModeCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("deleteMonitoredItemsCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.deleteMonitoredItemsCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.setTriggeringCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("createSubscriptionCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.createSubscriptionCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.deleteMonitoredItemsCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("modifySubscriptionCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.modifySubscriptionCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.createSubscriptionCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("setPublishingModeCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.setPublishingModeCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.modifySubscriptionCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("publishCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.publishCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.setPublishingModeCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("republishCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.republishCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.publishCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("transferSubscriptionsCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.transferSubscriptionsCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.republishCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("deleteSubscriptionsCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.deleteSubscriptionsCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.transferSubscriptionsCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("addNodesCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.addNodesCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.deleteSubscriptionsCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("addReferencesCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.addReferencesCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.addNodesCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("deleteNodesCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.deleteNodesCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.addReferencesCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("deleteReferencesCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.deleteReferencesCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.deleteNodesCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("browseCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.browseCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.deleteReferencesCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("browseNextCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.browseNextCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.browseCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("translateBrowsePathsToNodeIdsCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.translateBrowsePathsToNodeIdsCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.browseNextCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("queryFirstCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.queryFirstCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.translateBrowsePathsToNodeIdsCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("queryNextCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.queryNextCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.queryFirstCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("registerNodesCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.registerNodesCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.queryNextCount) - 8), 1, 0}, UA_DataTypeMember{[]byte("unregisterNodesCount\x00"), 96, UA_Byte(unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.unregisterNodesCount) - unsafe.Offsetof(UA_SessionDiagnosticsDataType{}.registerNodesCount) - 8), 1, 0}}
var ServiceFault_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}}
var RegisteredServer_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("serverUri\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("productUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_RegisteredServer{}.productUri) - unsafe.Offsetof(UA_RegisteredServer{}.serverUri) - 16), 1, 0}, UA_DataTypeMember{[]byte("serverNames\x00"), 20, UA_Byte(unsafe.Offsetof(UA_RegisteredServer{}.serverNamesSize) - unsafe.Offsetof(UA_RegisteredServer{}.productUri) - 16), 1, 1}, UA_DataTypeMember{[]byte("serverType\x00"), 105, UA_Byte(unsafe.Offsetof(UA_RegisteredServer{}.serverType) - unsafe.Offsetof(UA_RegisteredServer{}.serverNames) - 8), 1, 0}, UA_DataTypeMember{[]byte("gatewayServerUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_RegisteredServer{}.gatewayServerUri) - unsafe.Offsetof(UA_RegisteredServer{}.serverType) - 4), 1, 0}, UA_DataTypeMember{[]byte("discoveryUrls\x00"), 11, UA_Byte(unsafe.Offsetof(UA_RegisteredServer{}.discoveryUrlsSize) - unsafe.Offsetof(UA_RegisteredServer{}.gatewayServerUri) - 16), 1, 1}, UA_DataTypeMember{[]byte("semaphoreFilePath\x00"), 11, UA_Byte(unsafe.Offsetof(UA_RegisteredServer{}.semaphoreFilePath) - unsafe.Offsetof(UA_RegisteredServer{}.discoveryUrls) - 8), 1, 0}, UA_DataTypeMember{[]byte("isOnline\x00"), 0, UA_Byte(unsafe.Offsetof(UA_RegisteredServer{}.isOnline) - unsafe.Offsetof(UA_RegisteredServer{}.semaphoreFilePath) - 16), 1, 0}}
var AggregateFilter_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("startTime\x00"), 12, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("aggregateType\x00"), 16, UA_Byte(unsafe.Offsetof(UA_AggregateFilter{}.aggregateType) - unsafe.Offsetof(UA_AggregateFilter{}.startTime) - 8), 1, 0}, UA_DataTypeMember{[]byte("processingInterval\x00"), 10, UA_Byte(unsafe.Offsetof(UA_AggregateFilter{}.processingInterval) - unsafe.Offsetof(UA_AggregateFilter{}.aggregateType) - 120), 1, 0}, UA_DataTypeMember{[]byte("aggregateConfiguration\x00"), 92, UA_Byte(unsafe.Offsetof(UA_AggregateFilter{}.aggregateConfiguration) - unsafe.Offsetof(UA_AggregateFilter{}.processingInterval) - 8), 1, 0}}
var RegisterServerRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("server\x00"), 180, UA_Byte(unsafe.Offsetof(UA_RegisterServerRequest{}.server) - unsafe.Offsetof(UA_RegisterServerRequest{}.requestHeader) - 776), 1, 0}}
var EndpointDescription_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("endpointUrl\x00"), 11, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("server\x00"), 177, UA_Byte(unsafe.Offsetof(UA_EndpointDescription{}.server) - unsafe.Offsetof(UA_EndpointDescription{}.endpointUrl) - 16), 1, 0}, UA_DataTypeMember{[]byte("serverCertificate\x00"), 14, UA_Byte(unsafe.Offsetof(UA_EndpointDescription{}.serverCertificate) - unsafe.Offsetof(UA_EndpointDescription{}.server) - 120), 1, 0}, UA_DataTypeMember{[]byte("securityMode\x00"), 62, UA_Byte(unsafe.Offsetof(UA_EndpointDescription{}.securityMode) - unsafe.Offsetof(UA_EndpointDescription{}.serverCertificate) - 16), 1, 0}, UA_DataTypeMember{[]byte("securityPolicyUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_EndpointDescription{}.securityPolicyUri) - unsafe.Offsetof(UA_EndpointDescription{}.securityMode) - 4), 1, 0}, UA_DataTypeMember{[]byte("userIdentityTokens\x00"), 125, UA_Byte(unsafe.Offsetof(UA_EndpointDescription{}.userIdentityTokensSize) - unsafe.Offsetof(UA_EndpointDescription{}.securityPolicyUri) - 16), 1, 1}, UA_DataTypeMember{[]byte("transportProfileUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_EndpointDescription{}.transportProfileUri) - unsafe.Offsetof(UA_EndpointDescription{}.userIdentityTokens) - 8), 1, 0}, UA_DataTypeMember{[]byte("securityLevel\x00"), 2, UA_Byte(unsafe.Offsetof(UA_EndpointDescription{}.securityLevel) - unsafe.Offsetof(UA_EndpointDescription{}.transportProfileUri) - 16), 1, 0}}
var CreateMonitoredItemsRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("subscriptionId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_CreateMonitoredItemsRequest{}.subscriptionId) - unsafe.Offsetof(UA_CreateMonitoredItemsRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("timestampsToReturn\x00"), 56, UA_Byte(unsafe.Offsetof(UA_CreateMonitoredItemsRequest{}.timestampsToReturn) - unsafe.Offsetof(UA_CreateMonitoredItemsRequest{}.subscriptionId) - 4), 1, 0}, UA_DataTypeMember{[]byte("itemsToCreate\x00"), 159, UA_Byte(unsafe.Offsetof(UA_CreateMonitoredItemsRequest{}.itemsToCreateSize) - unsafe.Offsetof(UA_CreateMonitoredItemsRequest{}.timestampsToReturn) - 4), 1, 1}}
var ContentFilter_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("elements\x00"), 174, UA_Byte(0), 1, 1}}
var QueryFirstResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("queryDataSets\x00"), 52, UA_Byte(unsafe.Offsetof(UA_QueryFirstResponse{}.queryDataSetsSize) - unsafe.Offsetof(UA_QueryFirstResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("continuationPoint\x00"), 14, UA_Byte(unsafe.Offsetof(UA_QueryFirstResponse{}.continuationPoint) - unsafe.Offsetof(UA_QueryFirstResponse{}.queryDataSets) - 8), 1, 0}, UA_DataTypeMember{[]byte("parsingResults\x00"), 42, UA_Byte(unsafe.Offsetof(UA_QueryFirstResponse{}.parsingResultsSize) - unsafe.Offsetof(UA_QueryFirstResponse{}.continuationPoint) - 16), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_QueryFirstResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_QueryFirstResponse{}.parsingResults) - 8), 1, 1}, UA_DataTypeMember{[]byte("filterResult\x00"), 148, UA_Byte(unsafe.Offsetof(UA_QueryFirstResponse{}.filterResult) - unsafe.Offsetof(UA_QueryFirstResponse{}.diagnosticInfos) - 8), 1, 0}}
var AddNodesRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("nodesToAdd\x00"), 166, UA_Byte(unsafe.Offsetof(UA_AddNodesRequest{}.nodesToAddSize) - unsafe.Offsetof(UA_AddNodesRequest{}.requestHeader) - 776), 1, 1}}
var BrowseRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("view\x00"), 86, UA_Byte(unsafe.Offsetof(UA_BrowseRequest{}.view) - unsafe.Offsetof(UA_BrowseRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("requestedMaxReferencesPerNode\x00"), 6, UA_Byte(unsafe.Offsetof(UA_BrowseRequest{}.requestedMaxReferencesPerNode) - unsafe.Offsetof(UA_BrowseRequest{}.view) - 136), 1, 0}, UA_DataTypeMember{[]byte("nodesToBrowse\x00"), 133, UA_Byte(unsafe.Offsetof(UA_BrowseRequest{}.nodesToBrowseSize) - unsafe.Offsetof(UA_BrowseRequest{}.requestedMaxReferencesPerNode) - 4), 1, 1}}
var BrowseResult_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("statusCode\x00"), 18, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("continuationPoint\x00"), 14, UA_Byte(unsafe.Offsetof(UA_BrowseResult{}.continuationPoint) - unsafe.Offsetof(UA_BrowseResult{}.statusCode) - 4), 1, 0}, UA_DataTypeMember{[]byte("references\x00"), 146, UA_Byte(unsafe.Offsetof(UA_BrowseResult{}.referencesSize) - unsafe.Offsetof(UA_BrowseResult{}.continuationPoint) - 16), 1, 1}}
var RegisterServer2Request_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("server\x00"), 180, UA_Byte(unsafe.Offsetof(UA_RegisterServer2Request{}.server) - unsafe.Offsetof(UA_RegisterServer2Request{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("discoveryConfiguration\x00"), 21, UA_Byte(unsafe.Offsetof(UA_RegisterServer2Request{}.discoveryConfigurationSize) - unsafe.Offsetof(UA_RegisterServer2Request{}.server) - 104), 1, 1}}
var CreateSessionRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("clientDescription\x00"), 177, UA_Byte(unsafe.Offsetof(UA_CreateSessionRequest{}.clientDescription) - unsafe.Offsetof(UA_CreateSessionRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("serverUri\x00"), 11, UA_Byte(unsafe.Offsetof(UA_CreateSessionRequest{}.serverUri) - unsafe.Offsetof(UA_CreateSessionRequest{}.clientDescription) - 120), 1, 0}, UA_DataTypeMember{[]byte("endpointUrl\x00"), 11, UA_Byte(unsafe.Offsetof(UA_CreateSessionRequest{}.endpointUrl) - unsafe.Offsetof(UA_CreateSessionRequest{}.serverUri) - 16), 1, 0}, UA_DataTypeMember{[]byte("sessionName\x00"), 11, UA_Byte(unsafe.Offsetof(UA_CreateSessionRequest{}.sessionName) - unsafe.Offsetof(UA_CreateSessionRequest{}.endpointUrl) - 16), 1, 0}, UA_DataTypeMember{[]byte("clientNonce\x00"), 14, UA_Byte(unsafe.Offsetof(UA_CreateSessionRequest{}.clientNonce) - unsafe.Offsetof(UA_CreateSessionRequest{}.sessionName) - 16), 1, 0}, UA_DataTypeMember{[]byte("clientCertificate\x00"), 14, UA_Byte(unsafe.Offsetof(UA_CreateSessionRequest{}.clientCertificate) - unsafe.Offsetof(UA_CreateSessionRequest{}.clientNonce) - 16), 1, 0}, UA_DataTypeMember{[]byte("requestedSessionTimeout\x00"), 10, UA_Byte(unsafe.Offsetof(UA_CreateSessionRequest{}.requestedSessionTimeout) - unsafe.Offsetof(UA_CreateSessionRequest{}.clientCertificate) - 16), 1, 0}, UA_DataTypeMember{[]byte("maxResponseMessageSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_CreateSessionRequest{}.maxResponseMessageSize) - unsafe.Offsetof(UA_CreateSessionRequest{}.requestedSessionTimeout) - 8), 1, 0}}
var EventFilter_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("selectClauses\x00"), 50, UA_Byte(0), 1, 1}, UA_DataTypeMember{[]byte("whereClause\x00"), 185, UA_Byte(unsafe.Offsetof(UA_EventFilter{}.whereClause) - unsafe.Offsetof(UA_EventFilter{}.selectClauses) - 8), 1, 0}}
var GetEndpointsResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("endpoints\x00"), 183, UA_Byte(unsafe.Offsetof(UA_GetEndpointsResponse{}.endpointsSize) - unsafe.Offsetof(UA_GetEndpointsResponse{}.responseHeader) - 720), 1, 1}}
var FindServersResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("servers\x00"), 177, UA_Byte(unsafe.Offsetof(UA_FindServersResponse{}.serversSize) - unsafe.Offsetof(UA_FindServersResponse{}.responseHeader) - 720), 1, 1}}
var BrowseNextResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 189, UA_Byte(unsafe.Offsetof(UA_BrowseNextResponse{}.resultsSize) - unsafe.Offsetof(UA_BrowseNextResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_BrowseNextResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_BrowseNextResponse{}.results) - 8), 1, 1}}
var BrowseResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("results\x00"), 189, UA_Byte(unsafe.Offsetof(UA_BrowseResponse{}.resultsSize) - unsafe.Offsetof(UA_BrowseResponse{}.responseHeader) - 720), 1, 1}, UA_DataTypeMember{[]byte("diagnosticInfos\x00"), 24, UA_Byte(unsafe.Offsetof(UA_BrowseResponse{}.diagnosticInfosSize) - unsafe.Offsetof(UA_BrowseResponse{}.results) - 8), 1, 1}}
var CreateSessionResponse_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("responseHeader\x00"), 84, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("sessionId\x00"), 16, UA_Byte(unsafe.Offsetof(UA_CreateSessionResponse{}.sessionId) - unsafe.Offsetof(UA_CreateSessionResponse{}.responseHeader) - 720), 1, 0}, UA_DataTypeMember{[]byte("authenticationToken\x00"), 16, UA_Byte(unsafe.Offsetof(UA_CreateSessionResponse{}.authenticationToken) - unsafe.Offsetof(UA_CreateSessionResponse{}.sessionId) - 120), 1, 0}, UA_DataTypeMember{[]byte("revisedSessionTimeout\x00"), 10, UA_Byte(unsafe.Offsetof(UA_CreateSessionResponse{}.revisedSessionTimeout) - unsafe.Offsetof(UA_CreateSessionResponse{}.authenticationToken) - 120), 1, 0}, UA_DataTypeMember{[]byte("serverNonce\x00"), 14, UA_Byte(unsafe.Offsetof(UA_CreateSessionResponse{}.serverNonce) - unsafe.Offsetof(UA_CreateSessionResponse{}.revisedSessionTimeout) - 8), 1, 0}, UA_DataTypeMember{[]byte("serverCertificate\x00"), 14, UA_Byte(unsafe.Offsetof(UA_CreateSessionResponse{}.serverCertificate) - unsafe.Offsetof(UA_CreateSessionResponse{}.serverNonce) - 16), 1, 0}, UA_DataTypeMember{[]byte("serverEndpoints\x00"), 183, UA_Byte(unsafe.Offsetof(UA_CreateSessionResponse{}.serverEndpointsSize) - unsafe.Offsetof(UA_CreateSessionResponse{}.serverCertificate) - 16), 1, 1}, UA_DataTypeMember{[]byte("serverSoftwareCertificates\x00"), 25, UA_Byte(unsafe.Offsetof(UA_CreateSessionResponse{}.serverSoftwareCertificatesSize) - unsafe.Offsetof(UA_CreateSessionResponse{}.serverEndpoints) - 8), 1, 1}, UA_DataTypeMember{[]byte("serverSignature\x00"), 68, UA_Byte(unsafe.Offsetof(UA_CreateSessionResponse{}.serverSignature) - unsafe.Offsetof(UA_CreateSessionResponse{}.serverSoftwareCertificates) - 8), 1, 0}, UA_DataTypeMember{[]byte("maxRequestMessageSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_CreateSessionResponse{}.maxRequestMessageSize) - unsafe.Offsetof(UA_CreateSessionResponse{}.serverSignature) - 32), 1, 0}}
var QueryFirstRequest_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("requestHeader\x00"), 30, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("view\x00"), 86, UA_Byte(unsafe.Offsetof(UA_QueryFirstRequest{}.view) - unsafe.Offsetof(UA_QueryFirstRequest{}.requestHeader) - 776), 1, 0}, UA_DataTypeMember{[]byte("nodeTypes\x00"), 167, UA_Byte(unsafe.Offsetof(UA_QueryFirstRequest{}.nodeTypesSize) - unsafe.Offsetof(UA_QueryFirstRequest{}.view) - 136), 1, 1}, UA_DataTypeMember{[]byte("filter\x00"), 185, UA_Byte(unsafe.Offsetof(UA_QueryFirstRequest{}.filter) - unsafe.Offsetof(UA_QueryFirstRequest{}.nodeTypes) - 8), 1, 0}, UA_DataTypeMember{[]byte("maxDataSetsToReturn\x00"), 6, UA_Byte(unsafe.Offsetof(UA_QueryFirstRequest{}.maxDataSetsToReturn) - unsafe.Offsetof(UA_QueryFirstRequest{}.filter) - 16), 1, 0}, UA_DataTypeMember{[]byte("maxReferencesToReturn\x00"), 6, UA_Byte(unsafe.Offsetof(UA_QueryFirstRequest{}.maxReferencesToReturn) - unsafe.Offsetof(UA_QueryFirstRequest{}.maxDataSetsToReturn) - 4), 1, 0}}
var UA_TYPES []UA_DataType = []UA_DataType{UA_DataType{[]byte("Boolean\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{1}}, UA_UInt16(4), 0, UA_Byte(1), 1, 1, 1, 0, Boolean_members}, UA_DataType{[]byte("SByte\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{2}}, UA_UInt16(1), 1, UA_Byte(1), 1, 1, 1, 0, SByte_members}, UA_DataType{[]byte("Byte\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{3}}, UA_UInt16(1), 2, UA_Byte(1), 1, 1, 1, 0, Byte_members}, UA_DataType{[]byte("Int16\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{4}}, UA_UInt16(2), 3, UA_Byte(1), 1, 1, 1, 0, Int16_members}, UA_DataType{[]byte("UInt16\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{5}}, UA_UInt16(2), 4, UA_Byte(1), 1, 1, 1, 0, UInt16_members}, UA_DataType{[]byte("Int32\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{6}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, Int32_members}, UA_DataType{[]byte("UInt32\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{7}}, UA_UInt16(4), 6, UA_Byte(1), 1, 1, 1, 0, UInt32_members}, UA_DataType{[]byte("Int64\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{8}}, UA_UInt16(8), 7, UA_Byte(1), 1, 1, 1, 0, Int64_members}, UA_DataType{[]byte("UInt64\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{9}}, UA_UInt16(8), 8, UA_Byte(1), 1, 1, 1, 0, UInt64_members}, UA_DataType{[]byte("Float\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{10}}, UA_UInt16(4), 9, UA_Byte(1), 1, 1, 1, 0, Float_members}, UA_DataType{[]byte("Double\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{11}}, UA_UInt16(8), 10, UA_Byte(1), 1, 1, 1, 0, Double_members}, UA_DataType{[]byte("String\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{12}}, UA_UInt16(16), 11, UA_Byte(1), 1, 0, 0, 0, String_members}, UA_DataType{[]byte("DateTime\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{13}}, UA_UInt16(8), 12, UA_Byte(1), 1, 1, 1, 0, DateTime_members}, UA_DataType{[]byte("Guid\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{14}}, UA_UInt16(16), 13, UA_Byte(1), 1, 1, UA_Boolean((1 != 0 && unsafe.Offsetof(UA_Guid{}.data2) == 4 && unsafe.Offsetof(UA_Guid{}.data3) == 2+4 && unsafe.Offsetof(UA_Guid{}.data4) == 2*4)), 0, Guid_members}, UA_DataType{[]byte("ByteString\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{15}}, UA_UInt16(16), 14, UA_Byte(1), 1, 0, 0, 0, ByteString_members}, UA_DataType{[]byte("XmlElement\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{16}}, UA_UInt16(16), 15, UA_Byte(1), 1, 0, 0, 0, XmlElement_members}, UA_DataType{[]byte("NodeId\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{17}}, UA_UInt16(120), 16, UA_Byte(1), 1, 0, 0, 0, NodeId_members}, UA_DataType{[]byte("ExpandedNodeId\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{18}}, UA_UInt16(144), 17, UA_Byte(1), 1, 0, 0, 0, ExpandedNodeId_members}, UA_DataType{[]byte("StatusCode\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{19}}, UA_UInt16(4), 18, UA_Byte(1), 1, 1, 1, 0, StatusCode_members}, UA_DataType{[]byte("QualifiedName\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{20}}, UA_UInt16(24), 19, UA_Byte(2), 1, 0, 0, 0, QualifiedName_members}, UA_DataType{[]byte("LocalizedText\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{21}}, UA_UInt16(32), 20, UA_Byte(1), 1, 0, 0, 0, LocalizedText_members}, UA_DataType{[]byte("ExtensionObject\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{22}}, UA_UInt16(616), 21, UA_Byte(1), 1, 0, 0, 0, ExtensionObject_members}, UA_DataType{[]byte("DataValue\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{23}}, UA_UInt16(96), 22, UA_Byte(1), 1, 0, 0, 0, DataValue_members}, UA_DataType{[]byte("Variant\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{24}}, UA_UInt16(48), 23, UA_Byte(1), 1, 0, 0, 0, Variant_members}, UA_DataType{[]byte("DiagnosticInfo\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{25}}, UA_UInt16(72), 24, UA_Byte(1), 1, 0, 0, 0, DiagnosticInfo_members}, UA_DataType{[]byte("SignedSoftwareCertificate\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{344}}, UA_UInt16(32), 25, UA_Byte(2), 0, 0, 0, 346, SignedSoftwareCertificate_members}, UA_DataType{[]byte("SemanticChangeStructureDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{897}}, UA_UInt16(240), 26, UA_Byte(2), 0, 0, 0, 899, SemanticChangeStructureDataType_members}, UA_DataType{[]byte("StatusChangeNotification\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{818}}, UA_UInt16(80), 27, UA_Byte(2), 0, 0, 0, 820, StatusChangeNotification_members}, UA_DataType{[]byte("BrowsePathTarget\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{546}}, UA_UInt16(152), 28, UA_Byte(2), 0, 0, 0, 548, BrowsePathTarget_members}, UA_DataType{[]byte("ViewAttributes\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{373}}, UA_UInt16(88), 29, UA_Byte(7), 0, 0, 0, 375, ViewAttributes_members}, UA_DataType{[]byte("RequestHeader\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{389}}, UA_UInt16(776), 30, UA_Byte(7), 0, 0, 0, 391, RequestHeader_members}, UA_DataType{[]byte("MonitoredItemModifyResult\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{758}}, UA_UInt16(632), 31, UA_Byte(4), 0, 0, 0, 760, MonitoredItemModifyResult_members}, UA_DataType{[]byte("ElementOperand\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{592}}, UA_UInt16(8), 32, UA_Byte(1), 0, 1, UA_Boolean(1 != 0 && 1 != 0), 594, ElementOperand_members}, UA_DataType{[]byte("CloseSecureChannelRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{450}}, UA_UInt16(776), 33, UA_Byte(1), 0, 0, 0, 452, CloseSecureChannelRequest_members}, UA_DataType{[]byte("AddNodesResult\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{483}}, UA_UInt16(128), 34, UA_Byte(2), 0, 0, 0, 485, AddNodesResult_members}, UA_DataType{[]byte("VariableAttributes\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{355}}, UA_UInt16(280), 35, UA_Byte(13), 0, 0, 0, 357, VariableAttributes_members}, UA_DataType{[]byte("NotificationMessage\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{803}}, UA_UInt16(32), 36, UA_Byte(3), 0, 0, 0, 805, NotificationMessage_members}, UA_DataType{[]byte("FindServersOnNetworkRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{12190}}, UA_UInt16(800), 37, UA_Byte(4), 0, 0, 0, 12208, FindServersOnNetworkRequest_members}, UA_DataType{[]byte("EventFieldList\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{917}}, UA_UInt16(24), 38, UA_Byte(2), 0, 0, 0, 919, EventFieldList_members}, UA_DataType{[]byte("MonitoringMode\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{716}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, MonitoringMode_members}, UA_DataType{[]byte("MdnsDiscoveryConfiguration\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{12891}}, UA_UInt16(32), 40, UA_Byte(2), 0, 0, 0, 12901, MdnsDiscoveryConfiguration_members}, UA_DataType{[]byte("CallMethodResult\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{707}}, UA_UInt16(56), 41, UA_Byte(4), 0, 0, 0, 709, CallMethodResult_members}, UA_DataType{[]byte("ParsingResult\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{610}}, UA_UInt16(40), 42, UA_Byte(3), 0, 0, 0, 612, ParsingResult_members}, UA_DataType{[]byte("RelativePathElement\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{537}}, UA_UInt16(152), 43, UA_Byte(4), 0, 0, 0, 539, RelativePathElement_members}, UA_DataType{[]byte("BrowseDirection\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{510}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, BrowseDirection_members}, UA_DataType{[]byte("CallMethodRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{704}}, UA_UInt16(256), 45, UA_Byte(3), 0, 0, 0, 706, CallMethodRequest_members}, UA_DataType{[]byte("RedundancySupport\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{851}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, RedundancySupport_members}, UA_DataType{[]byte("EventNotificationList\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{914}}, UA_UInt16(16), 47, UA_Byte(1), 0, 0, 0, 916, EventNotificationList_members}, UA_DataType{[]byte("UnregisterNodesRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{564}}, UA_UInt16(792), 48, UA_Byte(2), 0, 0, 0, 566, UnregisterNodesRequest_members}, UA_DataType{[]byte("ContentFilterElementResult\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{604}}, UA_UInt16(40), 49, UA_Byte(3), 0, 0, 0, 606, ContentFilterElementResult_members}, UA_DataType{[]byte("SimpleAttributeOperand\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{601}}, UA_UInt16(160), 50, UA_Byte(4), 0, 0, 0, 603, SimpleAttributeOperand_members}, UA_DataType{[]byte("LiteralOperand\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{595}}, UA_UInt16(48), 51, UA_Byte(1), 0, 0, 0, 597, LiteralOperand_members}, UA_DataType{[]byte("QueryDataSet\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{577}}, UA_UInt16(304), 52, UA_Byte(3), 0, 0, 0, 579, QueryDataSet_members}, UA_DataType{[]byte("AnonymousIdentityToken\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{319}}, UA_UInt16(16), 53, UA_Byte(1), 0, 0, 0, 321, AnonymousIdentityToken_members}, UA_DataType{[]byte("SetPublishingModeRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{797}}, UA_UInt16(800), 54, UA_Byte(3), 0, 0, 0, 799, SetPublishingModeRequest_members}, UA_DataType{[]byte("MonitoredItemCreateResult\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{746}}, UA_UInt16(640), 55, UA_Byte(5), 0, 0, 0, 748, MonitoredItemCreateResult_members}, UA_DataType{[]byte("TimestampsToReturn\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{625}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, TimestampsToReturn_members}, UA_DataType{[]byte("CallRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{710}}, UA_UInt16(792), 57, UA_Byte(2), 0, 0, 0, 712, CallRequest_members}, UA_DataType{[]byte("MethodAttributes\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{358}}, UA_UInt16(88), 58, UA_Byte(7), 0, 0, 0, 360, MethodAttributes_members}, UA_DataType{[]byte("DeleteReferencesItem\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{385}}, UA_UInt16(392), 59, UA_Byte(5), 0, 0, 0, 387, DeleteReferencesItem_members}, UA_DataType{[]byte("WriteValue\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{668}}, UA_UInt16(240), 60, UA_Byte(4), 0, 0, 0, 670, WriteValue_members}, UA_DataType{[]byte("NodeAttributesMask\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{348}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, NodeAttributesMask_members}, UA_DataType{[]byte("MessageSecurityMode\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{302}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, MessageSecurityMode_members}, UA_DataType{[]byte("MonitoringParameters\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{740}}, UA_UInt16(640), 63, UA_Byte(5), 0, 0, 0, 742, MonitoringParameters_members}, UA_DataType{[]byte("ReferenceNode\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{285}}, UA_UInt16(272), 64, UA_Byte(3), 0, 0, 0, 287, ReferenceNode_members}, UA_DataType{[]byte("Argument\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{296}}, UA_UInt16(192), 65, UA_Byte(5), 0, 0, 0, 298, Argument_members}, UA_DataType{[]byte("ChannelSecurityToken\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{441}}, UA_UInt16(24), 66, UA_Byte(4), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_ChannelSecurityToken{}.tokenId) == unsafe.Offsetof(UA_ChannelSecurityToken{}.channelId)+4 && 1 != 0 && unsafe.Offsetof(UA_ChannelSecurityToken{}.createdAt) == unsafe.Offsetof(UA_ChannelSecurityToken{}.tokenId)+4 && 1 != 0 && unsafe.Offsetof(UA_ChannelSecurityToken{}.revisedLifetime) == unsafe.Offsetof(UA_ChannelSecurityToken{}.createdAt)+8), 443, ChannelSecurityToken_members}, UA_DataType{[]byte("UserIdentityToken\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{316}}, UA_UInt16(16), 67, UA_Byte(1), 0, 0, 0, 318, UserIdentityToken_members}, UA_DataType{[]byte("SignatureData\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{456}}, UA_UInt16(32), 68, UA_Byte(2), 0, 0, 0, 458, SignatureData_members}, UA_DataType{[]byte("ObjectTypeAttributes\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{361}}, UA_UInt16(80), 69, UA_Byte(6), 0, 0, 0, 363, ObjectTypeAttributes_members}, UA_DataType{[]byte("DeadbandType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{718}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, DeadbandType_members}, UA_DataType{[]byte("SecurityTokenRequestType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{315}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, SecurityTokenRequestType_members}, UA_DataType{[]byte("NodeAttributes\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{349}}, UA_UInt16(80), 72, UA_Byte(5), 0, 0, 0, 351, NodeAttributes_members}, UA_DataType{[]byte("DataChangeTrigger\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{717}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, DataChangeTrigger_members}, UA_DataType{[]byte("BuildInfo\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{338}}, UA_UInt16(88), 74, UA_Byte(6), 0, 0, 0, 340, BuildInfo_members}, UA_DataType{[]byte("NodeClass\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{257}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, NodeClass_members}, UA_DataType{[]byte("SubscriptionDiagnosticsDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{874}}, UA_UInt16(248), 76, UA_Byte(31), 0, 0, 0, 876, SubscriptionDiagnosticsDataType_members}, UA_DataType{[]byte("FilterOperand\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{589}}, UA_UInt16(8), 77, UA_Byte(0), 0, 1, 1, 591, nil}, UA_DataType{[]byte("MonitoredItemNotification\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{806}}, UA_UInt16(104), 78, UA_Byte(2), 0, 0, 0, 808, MonitoredItemNotification_members}, UA_DataType{[]byte("DeleteNodesItem\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{382}}, UA_UInt16(128), 79, UA_Byte(2), 0, 0, 0, 384, DeleteNodesItem_members}, UA_DataType{[]byte("DeleteSubscriptionsRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{845}}, UA_UInt16(792), 80, UA_Byte(2), 0, 0, 0, 847, DeleteSubscriptionsRequest_members}, UA_DataType{[]byte("SubscriptionAcknowledgement\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{821}}, UA_UInt16(8), 81, UA_Byte(2), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_SubscriptionAcknowledgement{}.sequenceNumber) == unsafe.Offsetof(UA_SubscriptionAcknowledgement{}.subscriptionId)+4), 823, SubscriptionAcknowledgement_members}, UA_DataType{[]byte("ReadValueId\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{626}}, UA_UInt16(168), 82, UA_Byte(4), 0, 0, 0, 628, ReadValueId_members}, UA_DataType{[]byte("DataTypeAttributes\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{370}}, UA_UInt16(80), 83, UA_Byte(6), 0, 0, 0, 372, DataTypeAttributes_members}, UA_DataType{[]byte("ResponseHeader\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{392}}, UA_UInt16(720), 84, UA_Byte(6), 0, 0, 0, 394, ResponseHeader_members}, UA_DataType{[]byte("DeleteMonitoredItemsRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{779}}, UA_UInt16(800), 85, UA_Byte(3), 0, 0, 0, 781, DeleteMonitoredItemsRequest_members}, UA_DataType{[]byte("ViewDescription\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{511}}, UA_UInt16(136), 86, UA_Byte(3), 0, 0, 0, 513, ViewDescription_members}, UA_DataType{[]byte("ServerOnNetwork\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{12189}}, UA_UInt16(56), 87, UA_Byte(4), 0, 0, 0, 12207, ServerOnNetwork_members}, UA_DataType{[]byte("DeleteMonitoredItemsResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{782}}, UA_UInt16(752), 88, UA_Byte(3), 0, 0, 0, 784, DeleteMonitoredItemsResponse_members}, UA_DataType{[]byte("FindServersOnNetworkResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{12191}}, UA_UInt16(744), 89, UA_Byte(3), 0, 0, 0, 12209, FindServersOnNetworkResponse_members}, UA_DataType{[]byte("RelativePath\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{540}}, UA_UInt16(16), 90, UA_Byte(1), 0, 0, 0, 542, RelativePath_members}, UA_DataType{[]byte("RegisterNodesRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{558}}, UA_UInt16(792), 91, UA_Byte(2), 0, 0, 0, 560, RegisterNodesRequest_members}, UA_DataType{[]byte("AggregateConfiguration\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{948}}, UA_UInt16(16), 92, UA_Byte(5), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_AggregateConfiguration{}.treatUncertainAsBad) == unsafe.Offsetof(UA_AggregateConfiguration{}.useServerCapabilitiesDefaults)+4 && 1 != 0 && unsafe.Offsetof(UA_AggregateConfiguration{}.percentDataBad) == unsafe.Offsetof(UA_AggregateConfiguration{}.treatUncertainAsBad)+4 && 1 != 0 && unsafe.Offsetof(UA_AggregateConfiguration{}.percentDataGood) == unsafe.Offsetof(UA_AggregateConfiguration{}.percentDataBad)+1 && 1 != 0 && unsafe.Offsetof(UA_AggregateConfiguration{}.useSlopedExtrapolation) == unsafe.Offsetof(UA_AggregateConfiguration{}.percentDataGood)+1), 950, AggregateConfiguration_members}, UA_DataType{[]byte("DeleteNodesRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{498}}, UA_UInt16(792), 93, UA_Byte(2), 0, 0, 0, 500, DeleteNodesRequest_members}, UA_DataType{[]byte("PublishResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{827}}, UA_UInt16(808), 94, UA_Byte(7), 0, 0, 0, 829, PublishResponse_members}, UA_DataType{[]byte("MonitoredItemModifyRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{755}}, UA_UInt16(648), 95, UA_Byte(2), 0, 0, 0, 757, MonitoredItemModifyRequest_members}, UA_DataType{[]byte("ServiceCounterDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{871}}, UA_UInt16(8), 96, UA_Byte(2), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_ServiceCounterDataType{}.errorCount) == unsafe.Offsetof(UA_ServiceCounterDataType{}.totalCount)+4), 873, ServiceCounterDataType_members}, UA_DataType{[]byte("ModelChangeStructureDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{877}}, UA_UInt16(248), 97, UA_Byte(3), 0, 0, 0, 879, ModelChangeStructureDataType_members}, UA_DataType{[]byte("UserNameIdentityToken\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{322}}, UA_UInt16(64), 98, UA_Byte(4), 0, 0, 0, 324, UserNameIdentityToken_members}, UA_DataType{[]byte("IdType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{256}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, IdType_members}, UA_DataType{[]byte("UserTokenType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{303}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, UserTokenType_members}, UA_DataType{[]byte("SetTriggeringResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{776}}, UA_UInt16(784), 101, UA_Byte(5), 0, 0, 0, 778, SetTriggeringResponse_members}, UA_DataType{[]byte("TimeZoneDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{8912}}, UA_UInt16(8), 102, UA_Byte(2), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_TimeZoneDataType{}.daylightSavingInOffset) == unsafe.Offsetof(UA_TimeZoneDataType{}.offset)+2), 8917, TimeZoneDataType_members}, UA_DataType{[]byte("ActivateSessionRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{465}}, UA_UInt16(1488), 103, UA_Byte(6), 0, 0, 0, 467, ActivateSessionRequest_members}, UA_DataType{[]byte("OpenSecureChannelResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{447}}, UA_UInt16(768), 104, UA_Byte(4), 0, 0, 0, 449, OpenSecureChannelResponse_members}, UA_DataType{[]byte("ApplicationType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{307}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, ApplicationType_members}, UA_DataType{[]byte("ServerState\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{852}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, ServerState_members}, UA_DataType{[]byte("QueryNextResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{622}}, UA_UInt16(752), 107, UA_Byte(3), 0, 0, 0, 624, QueryNextResponse_members}, UA_DataType{[]byte("DiscoveryConfiguration\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{12890}}, UA_UInt16(8), 108, UA_Byte(0), 0, 1, 1, 12900, nil}, UA_DataType{[]byte("ActivateSessionResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{468}}, UA_UInt16(768), 109, UA_Byte(4), 0, 0, 0, 470, ActivateSessionResponse_members}, UA_DataType{[]byte("EndpointUrlListDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{11943}}, UA_UInt16(16), 110, UA_Byte(1), 0, 0, 0, 11957, EndpointUrlListDataType_members}, UA_DataType{[]byte("FilterOperator\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{576}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, FilterOperator_members}, UA_DataType{[]byte("QueryNextRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{619}}, UA_UInt16(800), 112, UA_Byte(3), 0, 0, 0, 621, QueryNextRequest_members}, UA_DataType{[]byte("WriteResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{674}}, UA_UInt16(752), 113, UA_Byte(3), 0, 0, 0, 676, WriteResponse_members}, UA_DataType{[]byte("BrowseNextRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{531}}, UA_UInt16(800), 114, UA_Byte(3), 0, 0, 0, 533, BrowseNextRequest_members}, UA_DataType{[]byte("CreateSubscriptionRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{785}}, UA_UInt16(808), 115, UA_Byte(7), 0, 0, 0, 787, CreateSubscriptionRequest_members}, UA_DataType{[]byte("VariableTypeAttributes\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{364}}, UA_UInt16(272), 116, UA_Byte(10), 0, 0, 0, 366, VariableTypeAttributes_members}, UA_DataType{[]byte("BrowsePathResult\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{549}}, UA_UInt16(24), 117, UA_Byte(2), 0, 0, 0, 551, BrowsePathResult_members}, UA_DataType{[]byte("ModifySubscriptionResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{794}}, UA_UInt16(736), 118, UA_Byte(4), 0, 0, 0, 796, ModifySubscriptionResponse_members}, UA_DataType{[]byte("RedundantServerDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{853}}, UA_UInt16(24), 119, UA_Byte(3), 0, 0, 0, 855, RedundantServerDataType_members}, UA_DataType{[]byte("RegisterNodesResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{561}}, UA_UInt16(736), 120, UA_Byte(2), 0, 0, 0, 563, RegisterNodesResponse_members}, UA_DataType{[]byte("CloseSessionRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{471}}, UA_UInt16(784), 121, UA_Byte(2), 0, 0, 0, 473, CloseSessionRequest_members}, UA_DataType{[]byte("ModifyMonitoredItemsResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{764}}, UA_UInt16(752), 122, UA_Byte(3), 0, 0, 0, 766, ModifyMonitoredItemsResponse_members}, UA_DataType{[]byte("ModifySubscriptionRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{791}}, UA_UInt16(808), 123, UA_Byte(7), 0, 0, 0, 793, ModifySubscriptionRequest_members}, UA_DataType{[]byte("ServerDiagnosticsSummaryDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{859}}, UA_UInt16(48), 124, UA_Byte(12), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.currentSessionCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.serverViewCount)+4 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.cumulatedSessionCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.currentSessionCount)+4 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.securityRejectedSessionCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.cumulatedSessionCount)+4 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.rejectedSessionCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.securityRejectedSessionCount)+4 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.sessionTimeoutCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.rejectedSessionCount)+4 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.sessionAbortCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.sessionTimeoutCount)+4 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.currentSubscriptionCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.sessionAbortCount)+4 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.cumulatedSubscriptionCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.currentSubscriptionCount)+4 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.publishingIntervalCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.cumulatedSubscriptionCount)+4 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.securityRejectedRequestsCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.publishingIntervalCount)+4 && 1 != 0 && unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.rejectedRequestsCount) == unsafe.Offsetof(UA_ServerDiagnosticsSummaryDataType{}.securityRejectedRequestsCount)+4), 861, ServerDiagnosticsSummaryDataType_members}, UA_DataType{[]byte("UserTokenPolicy\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{304}}, UA_UInt16(72), 125, UA_Byte(5), 0, 0, 0, 306, UserTokenPolicy_members}, UA_DataType{[]byte("ReferenceTypeAttributes\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{367}}, UA_UInt16(120), 126, UA_Byte(8), 0, 0, 0, 369, ReferenceTypeAttributes_members}, UA_DataType{[]byte("BrowsePath\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{543}}, UA_UInt16(136), 127, UA_Byte(2), 0, 0, 0, 545, BrowsePath_members}, UA_DataType{[]byte("SetMonitoringModeRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{767}}, UA_UInt16(800), 128, UA_Byte(4), 0, 0, 0, 769, SetMonitoringModeRequest_members}, UA_DataType{[]byte("UnregisterNodesResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{567}}, UA_UInt16(720), 129, UA_Byte(1), 0, 0, 0, 569, UnregisterNodesResponse_members}, UA_DataType{[]byte("WriteRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{671}}, UA_UInt16(792), 130, UA_Byte(2), 0, 0, 0, 673, WriteRequest_members}, UA_DataType{[]byte("ObjectAttributes\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{352}}, UA_UInt16(80), 131, UA_Byte(6), 0, 0, 0, 354, ObjectAttributes_members}, UA_DataType{[]byte("BrowseResultMask\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{517}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, BrowseResultMask_members}, UA_DataType{[]byte("BrowseDescription\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{514}}, UA_UInt16(256), 133, UA_Byte(6), 0, 0, 0, 516, BrowseDescription_members}, UA_DataType{[]byte("SetTriggeringRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{773}}, UA_UInt16(816), 134, UA_Byte(5), 0, 0, 0, 775, SetTriggeringRequest_members}, UA_DataType{[]byte("SessionSecurityDiagnosticsDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{868}}, UA_UInt16(240), 135, UA_Byte(9), 0, 0, 0, 870, SessionSecurityDiagnosticsDataType_members}, UA_DataType{[]byte("RepublishRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{830}}, UA_UInt16(784), 136, UA_Byte(3), 0, 0, 0, 832, RepublishRequest_members}, UA_DataType{[]byte("GetEndpointsRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{426}}, UA_UInt16(824), 137, UA_Byte(4), 0, 0, 0, 428, GetEndpointsRequest_members}, UA_DataType{[]byte("PublishRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{824}}, UA_UInt16(792), 138, UA_Byte(2), 0, 0, 0, 826, PublishRequest_members}, UA_DataType{[]byte("DeleteSubscriptionsResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{848}}, UA_UInt16(752), 139, UA_Byte(3), 0, 0, 0, 850, DeleteSubscriptionsResponse_members}, UA_DataType{[]byte("AddNodesResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{489}}, UA_UInt16(752), 140, UA_Byte(3), 0, 0, 0, 491, AddNodesResponse_members}, UA_DataType{[]byte("DataChangeNotification\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{809}}, UA_UInt16(32), 141, UA_Byte(2), 0, 0, 0, 811, DataChangeNotification_members}, UA_DataType{[]byte("CloseSecureChannelResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{453}}, UA_UInt16(720), 142, UA_Byte(1), 0, 0, 0, 455, CloseSecureChannelResponse_members}, UA_DataType{[]byte("ModifyMonitoredItemsRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{761}}, UA_UInt16(800), 143, UA_Byte(4), 0, 0, 0, 763, ModifyMonitoredItemsRequest_members}, UA_DataType{[]byte("SetMonitoringModeResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{770}}, UA_UInt16(752), 144, UA_Byte(3), 0, 0, 0, 772, SetMonitoringModeResponse_members}, UA_DataType{[]byte("FindServersRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{420}}, UA_UInt16(824), 145, UA_Byte(4), 0, 0, 0, 422, FindServersRequest_members}, UA_DataType{[]byte("ReferenceDescription\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{518}}, UA_UInt16(472), 146, UA_Byte(7), 0, 0, 0, 520, ReferenceDescription_members}, UA_DataType{[]byte("SetPublishingModeResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{800}}, UA_UInt16(752), 147, UA_Byte(3), 0, 0, 0, 802, SetPublishingModeResponse_members}, UA_DataType{[]byte("ContentFilterResult\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{607}}, UA_UInt16(32), 148, UA_Byte(2), 0, 0, 0, 609, ContentFilterResult_members}, UA_DataType{[]byte("RegisterServerResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{438}}, UA_UInt16(720), 149, UA_Byte(1), 0, 0, 0, 440, RegisterServerResponse_members}, UA_DataType{[]byte("AddReferencesItem\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{379}}, UA_UInt16(408), 150, UA_Byte(6), 0, 0, 0, 381, AddReferencesItem_members}, UA_DataType{[]byte("QueryDataDescription\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{570}}, UA_UInt16(40), 151, UA_Byte(3), 0, 0, 0, 572, QueryDataDescription_members}, UA_DataType{[]byte("CreateSubscriptionResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{788}}, UA_UInt16(744), 152, UA_Byte(5), 0, 0, 0, 790, CreateSubscriptionResponse_members}, UA_DataType{[]byte("NetworkGroupDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{11944}}, UA_UInt16(32), 153, UA_Byte(2), 0, 0, 0, 11958, NetworkGroupDataType_members}, UA_DataType{[]byte("DeleteReferencesResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{507}}, UA_UInt16(752), 154, UA_Byte(3), 0, 0, 0, 509, DeleteReferencesResponse_members}, UA_DataType{[]byte("CreateMonitoredItemsResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{752}}, UA_UInt16(752), 155, UA_Byte(3), 0, 0, 0, 754, CreateMonitoredItemsResponse_members}, UA_DataType{[]byte("CallResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{713}}, UA_UInt16(752), 156, UA_Byte(3), 0, 0, 0, 715, CallResponse_members}, UA_DataType{[]byte("DeleteNodesResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{501}}, UA_UInt16(752), 157, UA_Byte(3), 0, 0, 0, 503, DeleteNodesResponse_members}, UA_DataType{[]byte("RepublishResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{833}}, UA_UInt16(752), 158, UA_Byte(2), 0, 0, 0, 835, RepublishResponse_members}, UA_DataType{[]byte("MonitoredItemCreateRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{743}}, UA_UInt16(816), 159, UA_Byte(3), 0, 0, 0, 745, MonitoredItemCreateRequest_members}, UA_DataType{[]byte("DeleteReferencesRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{504}}, UA_UInt16(792), 160, UA_Byte(2), 0, 0, 0, 506, DeleteReferencesRequest_members}, UA_DataType{[]byte("ReadResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{632}}, UA_UInt16(752), 161, UA_Byte(3), 0, 0, 0, 634, ReadResponse_members}, UA_DataType{[]byte("AddReferencesRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{492}}, UA_UInt16(792), 162, UA_Byte(2), 0, 0, 0, 494, AddReferencesRequest_members}, UA_DataType{[]byte("ReadRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{629}}, UA_UInt16(808), 163, UA_Byte(4), 0, 0, 0, 631, ReadRequest_members}, UA_DataType{[]byte("OpenSecureChannelRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{444}}, UA_UInt16(808), 164, UA_Byte(6), 0, 0, 0, 446, OpenSecureChannelRequest_members}, UA_DataType{[]byte("RegisterServer2Response\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{12194}}, UA_UInt16(752), 165, UA_Byte(3), 0, 0, 0, 12212, RegisterServer2Response_members}, UA_DataType{[]byte("AddNodesItem\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{376}}, UA_UInt16(1200), 166, UA_Byte(7), 0, 0, 0, 378, AddNodesItem_members}, UA_DataType{[]byte("NodeTypeDescription\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{573}}, UA_UInt16(168), 167, UA_Byte(3), 0, 0, 0, 575, NodeTypeDescription_members}, UA_DataType{[]byte("ServerStatusDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{862}}, UA_UInt16(144), 168, UA_Byte(6), 0, 0, 0, 864, ServerStatusDataType_members}, UA_DataType{[]byte("AttributeOperand\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{598}}, UA_UInt16(176), 169, UA_Byte(5), 0, 0, 0, 600, AttributeOperand_members}, UA_DataType{[]byte("AddReferencesResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{495}}, UA_UInt16(752), 170, UA_Byte(3), 0, 0, 0, 497, AddReferencesResponse_members}, UA_DataType{[]byte("EventFilterResult\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{734}}, UA_UInt16(64), 171, UA_Byte(3), 0, 0, 0, 736, EventFilterResult_members}, UA_DataType{[]byte("TranslateBrowsePathsToNodeIdsResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{555}}, UA_UInt16(752), 172, UA_Byte(3), 0, 0, 0, 557, TranslateBrowsePathsToNodeIdsResponse_members}, UA_DataType{[]byte("DataChangeFilter\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{722}}, UA_UInt16(16), 173, UA_Byte(3), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_DataChangeFilter{}.deadbandType) == unsafe.Offsetof(UA_DataChangeFilter{}.trigger)+4 && 1 != 0 && unsafe.Offsetof(UA_DataChangeFilter{}.deadbandValue) == unsafe.Offsetof(UA_DataChangeFilter{}.deadbandType)+4), 724, DataChangeFilter_members}, UA_DataType{[]byte("ContentFilterElement\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{583}}, UA_UInt16(24), 174, UA_Byte(2), 0, 0, 0, 585, ContentFilterElement_members}, UA_DataType{[]byte("TranslateBrowsePathsToNodeIdsRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{552}}, UA_UInt16(792), 175, UA_Byte(2), 0, 0, 0, 554, TranslateBrowsePathsToNodeIdsRequest_members}, UA_DataType{[]byte("CloseSessionResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{474}}, UA_UInt16(720), 176, UA_Byte(1), 0, 0, 0, 476, CloseSessionResponse_members}, UA_DataType{[]byte("ApplicationDescription\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{308}}, UA_UInt16(120), 177, UA_Byte(7), 0, 0, 0, 310, ApplicationDescription_members}, UA_DataType{[]byte("SessionDiagnosticsDataType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{865}}, UA_UInt16(584), 178, UA_Byte(43), 0, 0, 0, 867, SessionDiagnosticsDataType_members}, UA_DataType{[]byte("ServiceFault\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{395}}, UA_UInt16(720), 179, UA_Byte(1), 0, 0, 0, 397, ServiceFault_members}, UA_DataType{[]byte("RegisteredServer\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{432}}, UA_UInt16(104), 180, UA_Byte(8), 0, 0, 0, 434, RegisteredServer_members}, UA_DataType{[]byte("AggregateFilter\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{728}}, UA_UInt16(152), 181, UA_Byte(4), 0, 0, 0, 730, AggregateFilter_members}, UA_DataType{[]byte("RegisterServerRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{435}}, UA_UInt16(880), 182, UA_Byte(2), 0, 0, 0, 437, RegisterServerRequest_members}, UA_DataType{[]byte("EndpointDescription\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{312}}, UA_UInt16(208), 183, UA_Byte(8), 0, 0, 0, 314, EndpointDescription_members}, UA_DataType{[]byte("CreateMonitoredItemsRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{749}}, UA_UInt16(800), 184, UA_Byte(4), 0, 0, 0, 751, CreateMonitoredItemsRequest_members}, UA_DataType{[]byte("ContentFilter\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{586}}, UA_UInt16(16), 185, UA_Byte(1), 0, 0, 0, 588, ContentFilter_members}, UA_DataType{[]byte("QueryFirstResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{616}}, UA_UInt16(816), 186, UA_Byte(6), 0, 0, 0, 618, QueryFirstResponse_members}, UA_DataType{[]byte("AddNodesRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{486}}, UA_UInt16(792), 187, UA_Byte(2), 0, 0, 0, 488, AddNodesRequest_members}, UA_DataType{[]byte("BrowseRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{525}}, UA_UInt16(936), 188, UA_Byte(4), 0, 0, 0, 527, BrowseRequest_members}, UA_DataType{[]byte("BrowseResult\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{522}}, UA_UInt16(40), 189, UA_Byte(3), 0, 0, 0, 524, BrowseResult_members}, UA_DataType{[]byte("RegisterServer2Request\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{12193}}, UA_UInt16(896), 190, UA_Byte(3), 0, 0, 0, 12211, RegisterServer2Request_members}, UA_DataType{[]byte("CreateSessionRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{459}}, UA_UInt16(992), 191, UA_Byte(9), 0, 0, 0, 461, CreateSessionRequest_members}, UA_DataType{[]byte("EventFilter\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{725}}, UA_UInt16(32), 192, UA_Byte(2), 0, 0, 0, 727, EventFilter_members}, UA_DataType{[]byte("GetEndpointsResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{429}}, UA_UInt16(736), 193, UA_Byte(2), 0, 0, 0, 431, GetEndpointsResponse_members}, UA_DataType{[]byte("FindServersResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{423}}, UA_UInt16(736), 194, UA_Byte(2), 0, 0, 0, 425, FindServersResponse_members}, UA_DataType{[]byte("BrowseNextResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{534}}, UA_UInt16(752), 195, UA_Byte(3), 0, 0, 0, 536, BrowseNextResponse_members}, UA_DataType{[]byte("BrowseResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{528}}, UA_UInt16(752), 196, UA_Byte(3), 0, 0, 0, 530, BrowseResponse_members}, UA_DataType{[]byte("CreateSessionResponse\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{462}}, UA_UInt16(1072), 197, UA_Byte(10), 0, 0, 0, 464, CreateSessionResponse_members}, UA_DataType{[]byte("QueryFirstRequest\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{613}}, UA_UInt16(952), 198, UA_Byte(6), 0, 0, 0, 615, QueryFirstRequest_members}}
var SecureConversationMessageAbortBody_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("error\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("reason\x00"), 11, UA_Byte(unsafe.Offsetof(UA_SecureConversationMessageAbortBody{}.reason) - unsafe.Offsetof(UA_SecureConversationMessageAbortBody{}.error) - 4), 1, 0}}
var SecureConversationMessageFooter_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("padding\x00"), 2, UA_Byte(0), 1, 1}, UA_DataTypeMember{[]byte("signature\x00"), 2, UA_Byte(unsafe.Offsetof(UA_SecureConversationMessageFooter{}.signature) - unsafe.Offsetof(UA_SecureConversationMessageFooter{}.padding) - 8), 1, 0}}
var TcpHelloMessage_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("protocolVersion\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("receiveBufferSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_TcpHelloMessage{}.receiveBufferSize) - unsafe.Offsetof(UA_TcpHelloMessage{}.protocolVersion) - 4), 1, 0}, UA_DataTypeMember{[]byte("sendBufferSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_TcpHelloMessage{}.sendBufferSize) - unsafe.Offsetof(UA_TcpHelloMessage{}.receiveBufferSize) - 4), 1, 0}, UA_DataTypeMember{[]byte("maxMessageSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_TcpHelloMessage{}.maxMessageSize) - unsafe.Offsetof(UA_TcpHelloMessage{}.sendBufferSize) - 4), 1, 0}, UA_DataTypeMember{[]byte("maxChunkCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_TcpHelloMessage{}.maxChunkCount) - unsafe.Offsetof(UA_TcpHelloMessage{}.maxMessageSize) - 4), 1, 0}, UA_DataTypeMember{[]byte("endpointUrl\x00"), 11, UA_Byte(unsafe.Offsetof(UA_TcpHelloMessage{}.endpointUrl) - unsafe.Offsetof(UA_TcpHelloMessage{}.maxChunkCount) - 4), 1, 0}}
var TcpErrorMessage_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("error\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("reason\x00"), 11, UA_Byte(unsafe.Offsetof(UA_TcpErrorMessage{}.reason) - unsafe.Offsetof(UA_TcpErrorMessage{}.error) - 4), 1, 0}}
var MessageType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var AsymmetricAlgorithmSecurityHeader_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("securityPolicyUri\x00"), 14, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("senderCertificate\x00"), 14, UA_Byte(unsafe.Offsetof(UA_AsymmetricAlgorithmSecurityHeader{}.senderCertificate) - unsafe.Offsetof(UA_AsymmetricAlgorithmSecurityHeader{}.securityPolicyUri) - 16), 1, 0}, UA_DataTypeMember{[]byte("receiverCertificateThumbprint\x00"), 14, UA_Byte(unsafe.Offsetof(UA_AsymmetricAlgorithmSecurityHeader{}.receiverCertificateThumbprint) - unsafe.Offsetof(UA_AsymmetricAlgorithmSecurityHeader{}.senderCertificate) - 16), 1, 0}}
var TcpAcknowledgeMessage_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("protocolVersion\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("receiveBufferSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.receiveBufferSize) - unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.protocolVersion) - 4), 1, 0}, UA_DataTypeMember{[]byte("sendBufferSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.sendBufferSize) - unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.receiveBufferSize) - 4), 1, 0}, UA_DataTypeMember{[]byte("maxMessageSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.maxMessageSize) - unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.sendBufferSize) - 4), 1, 0}, UA_DataTypeMember{[]byte("maxChunkCount\x00"), 6, UA_Byte(unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.maxChunkCount) - unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.maxMessageSize) - 4), 1, 0}}
var SequenceHeader_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("sequenceNumber\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("requestId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SequenceHeader{}.requestId) - unsafe.Offsetof(UA_SequenceHeader{}.sequenceNumber) - 4), 1, 0}}
var TcpMessageHeader_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("messageTypeAndChunkType\x00"), 6, UA_Byte(0), 1, 0}, UA_DataTypeMember{[]byte("messageSize\x00"), 6, UA_Byte(unsafe.Offsetof(UA_TcpMessageHeader{}.messageSize) - unsafe.Offsetof(UA_TcpMessageHeader{}.messageTypeAndChunkType) - 4), 1, 0}}
var ChunkType_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("\x00"), 5, UA_Byte(0), 1, 0}}
var SymmetricAlgorithmSecurityHeader_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("tokenId\x00"), 6, UA_Byte(0), 1, 0}}
var SecureConversationMessageHeader_members []UA_DataTypeMember = []UA_DataTypeMember{UA_DataTypeMember{[]byte("messageHeader\x00"), 8, UA_Byte(0), 0, 0}, UA_DataTypeMember{[]byte("secureChannelId\x00"), 6, UA_Byte(unsafe.Offsetof(UA_SecureConversationMessageHeader{}.secureChannelId) - unsafe.Offsetof(UA_SecureConversationMessageHeader{}.messageHeader) - 8), 1, 0}}
var UA_TRANSPORT []UA_DataType = []UA_DataType{UA_DataType{[]byte("SecureConversationMessageAbortBody\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(24), 0, UA_Byte(2), 0, 0, 0, 0, SecureConversationMessageAbortBody_members}, UA_DataType{[]byte("SecureConversationMessageFooter\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(24), 1, UA_Byte(2), 0, 0, 0, 0, SecureConversationMessageFooter_members}, UA_DataType{[]byte("TcpHelloMessage\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(40), 2, UA_Byte(6), 0, 0, 0, 0, TcpHelloMessage_members}, UA_DataType{[]byte("TcpErrorMessage\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(24), 3, UA_Byte(2), 0, 0, 0, 0, TcpErrorMessage_members}, UA_DataType{[]byte("MessageType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, MessageType_members}, UA_DataType{[]byte("AsymmetricAlgorithmSecurityHeader\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(48), 5, UA_Byte(3), 0, 0, 0, 0, AsymmetricAlgorithmSecurityHeader_members}, UA_DataType{[]byte("TcpAcknowledgeMessage\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(24), 6, UA_Byte(5), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.receiveBufferSize) == unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.protocolVersion)+4 && 1 != 0 && unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.sendBufferSize) == unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.receiveBufferSize)+4 && 1 != 0 && unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.maxMessageSize) == unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.sendBufferSize)+4 && 1 != 0 && unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.maxChunkCount) == unsafe.Offsetof(UA_TcpAcknowledgeMessage{}.maxMessageSize)+4), 0, TcpAcknowledgeMessage_members}, UA_DataType{[]byte("SequenceHeader\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(8), 7, UA_Byte(2), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_SequenceHeader{}.requestId) == unsafe.Offsetof(UA_SequenceHeader{}.sequenceNumber)+4), 0, SequenceHeader_members}, UA_DataType{[]byte("TcpMessageHeader\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(8), 8, UA_Byte(2), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_TcpMessageHeader{}.messageSize) == unsafe.Offsetof(UA_TcpMessageHeader{}.messageTypeAndChunkType)+4), 0, TcpMessageHeader_members}, UA_DataType{[]byte("ChunkType\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(4), 5, UA_Byte(1), 1, 1, 1, 0, ChunkType_members}, UA_DataType{[]byte("SymmetricAlgorithmSecurityHeader\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(8), 10, UA_Byte(1), 0, 1, UA_Boolean(1 != 0 && 1 != 0), 0, SymmetricAlgorithmSecurityHeader_members}, UA_DataType{[]byte("SecureConversationMessageHeader\x00"), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{0}}, UA_UInt16(16), 11, UA_Byte(2), 0, 1, UA_Boolean(1 != 0 && 1 != 0 && 1 != 0 && 1 != 0 && unsafe.Offsetof(UA_TcpMessageHeader{}.messageSize) == unsafe.Offsetof(UA_TcpMessageHeader{}.messageTypeAndChunkType)+4 && 1 != 0 && unsafe.Offsetof(UA_SecureConversationMessageHeader{}.secureChannelId) == unsafe.Offsetof(UA_SecureConversationMessageHeader{}.messageHeader)+8), 0, SecureConversationMessageHeader_members}}
var statusCodeExplanation_default UA_StatusCodeDescription = UA_StatusCodeDescription{4294967295, []byte("\x00"), []byte("\x00")}

type UA_StatusCodeName struct {
	code UA_StatusCode
	name []byte
}

var statusCodeDescriptionsSize uint = 229
var statusCodeDescriptions []UA_StatusCodeName = []UA_StatusCodeName{UA_StatusCodeName{0, []byte("Good\x00")}, UA_StatusCodeName{2147549184, []byte("BadUnexpectedError\x00")}, UA_StatusCodeName{2147614720, []byte("BadInternalError\x00")}, UA_StatusCodeName{2147680256, []byte("BadOutOfMemory\x00")}, UA_StatusCodeName{2147745792, []byte("BadResourceUnavailable\x00")}, UA_StatusCodeName{2147811328, []byte("BadCommunicationError\x00")}, UA_StatusCodeName{2147876864, []byte("BadEncodingError\x00")}, UA_StatusCodeName{2147942400, []byte("BadDecodingError\x00")}, UA_StatusCodeName{2148007936, []byte("BadEncodingLimitsExceeded\x00")}, UA_StatusCodeName{2159542272, []byte("BadRequestTooLarge\x00")}, UA_StatusCodeName{2159607808, []byte("BadResponseTooLarge\x00")}, UA_StatusCodeName{2148073472, []byte("BadUnknownResponse\x00")}, UA_StatusCodeName{2148139008, []byte("BadTimeout\x00")}, UA_StatusCodeName{2148204544, []byte("BadServiceUnsupported\x00")}, UA_StatusCodeName{2148270080, []byte("BadShutdown\x00")}, UA_StatusCodeName{2148335616, []byte("BadServerNotConnected\x00")}, UA_StatusCodeName{2148401152, []byte("BadServerHalted\x00")}, UA_StatusCodeName{2148466688, []byte("BadNothingToDo\x00")}, UA_StatusCodeName{2148532224, []byte("BadTooManyOperations\x00")}, UA_StatusCodeName{2161836032, []byte("BadTooManyMonitoredItems\x00")}, UA_StatusCodeName{2148597760, []byte("BadDataTypeIdUnknown\x00")}, UA_StatusCodeName{2148663296, []byte("BadCertificateInvalid\x00")}, UA_StatusCodeName{2148728832, []byte("BadSecurityChecksFailed\x00")}, UA_StatusCodeName{2148794368, []byte("BadCertificateTimeInvalid\x00")}, UA_StatusCodeName{2148859904, []byte("BadCertificateIssuerTimeInvalid\x00")}, UA_StatusCodeName{2148925440, []byte("BadCertificateHostNameInvalid\x00")}, UA_StatusCodeName{2148990976, []byte("BadCertificateUriInvalid\x00")}, UA_StatusCodeName{2149056512, []byte("BadCertificateUseNotAllowed\x00")}, UA_StatusCodeName{2149122048, []byte("BadCertificateIssuerUseNotAllowed\x00")}, UA_StatusCodeName{2149187584, []byte("BadCertificateUntrusted\x00")}, UA_StatusCodeName{2149253120, []byte("BadCertificateRevocationUnknown\x00")}, UA_StatusCodeName{2149318656, []byte("BadCertificateIssuerRevocationUnknown\x00")}, UA_StatusCodeName{2149384192, []byte("BadCertificateRevoked\x00")}, UA_StatusCodeName{2149449728, []byte("BadCertificateIssuerRevoked\x00")}, UA_StatusCodeName{2165112832, []byte("BadCertificateChainIncomplete\x00")}, UA_StatusCodeName{2149515264, []byte("BadUserAccessDenied\x00")}, UA_StatusCodeName{2149580800, []byte("BadIdentityTokenInvalid\x00")}, UA_StatusCodeName{2149646336, []byte("BadIdentityTokenRejected\x00")}, UA_StatusCodeName{2149711872, []byte("BadSecureChannelIdInvalid\x00")}, UA_StatusCodeName{2149777408, []byte("BadInvalidTimestamp\x00")}, UA_StatusCodeName{2149842944, []byte("BadNonceInvalid\x00")}, UA_StatusCodeName{2149908480, []byte("BadSessionIdInvalid\x00")}, UA_StatusCodeName{2149974016, []byte("BadSessionClosed\x00")}, UA_StatusCodeName{2150039552, []byte("BadSessionNotActivated\x00")}, UA_StatusCodeName{2150105088, []byte("BadSubscriptionIdInvalid\x00")}, UA_StatusCodeName{2150236160, []byte("BadRequestHeaderInvalid\x00")}, UA_StatusCodeName{2150301696, []byte("BadTimestampsToReturnInvalid\x00")}, UA_StatusCodeName{2150367232, []byte("BadRequestCancelledByClient\x00")}, UA_StatusCodeName{2162491392, []byte("BadTooManyArguments\x00")}, UA_StatusCodeName{2949120, []byte("GoodSubscriptionTransferred\x00")}, UA_StatusCodeName{3014656, []byte("GoodCompletesAsynchronously\x00")}, UA_StatusCodeName{3080192, []byte("GoodOverload\x00")}, UA_StatusCodeName{3145728, []byte("GoodClamped\x00")}, UA_StatusCodeName{2150694912, []byte("BadNoCommunication\x00")}, UA_StatusCodeName{2150760448, []byte("BadWaitingForInitialData\x00")}, UA_StatusCodeName{2150825984, []byte("BadNodeIdInvalid\x00")}, UA_StatusCodeName{2150891520, []byte("BadNodeIdUnknown\x00")}, UA_StatusCodeName{2150957056, []byte("BadAttributeIdInvalid\x00")}, UA_StatusCodeName{2151022592, []byte("BadIndexRangeInvalid\x00")}, UA_StatusCodeName{2151088128, []byte("BadIndexRangeNoData\x00")}, UA_StatusCodeName{2151153664, []byte("BadDataEncodingInvalid\x00")}, UA_StatusCodeName{2151219200, []byte("BadDataEncodingUnsupported\x00")}, UA_StatusCodeName{2151284736, []byte("BadNotReadable\x00")}, UA_StatusCodeName{2151350272, []byte("BadNotWritable\x00")}, UA_StatusCodeName{2151415808, []byte("BadOutOfRange\x00")}, UA_StatusCodeName{2151481344, []byte("BadNotSupported\x00")}, UA_StatusCodeName{2151546880, []byte("BadNotFound\x00")}, UA_StatusCodeName{2151612416, []byte("BadObjectDeleted\x00")}, UA_StatusCodeName{2151677952, []byte("BadNotImplemented\x00")}, UA_StatusCodeName{2151743488, []byte("BadMonitoringModeInvalid\x00")}, UA_StatusCodeName{2151809024, []byte("BadMonitoredItemIdInvalid\x00")}, UA_StatusCodeName{2151874560, []byte("BadMonitoredItemFilterInvalid\x00")}, UA_StatusCodeName{2151940096, []byte("BadMonitoredItemFilterUnsupported\x00")}, UA_StatusCodeName{2152005632, []byte("BadFilterNotAllowed\x00")}, UA_StatusCodeName{2152071168, []byte("BadStructureMissing\x00")}, UA_StatusCodeName{2152136704, []byte("BadEventFilterInvalid\x00")}, UA_StatusCodeName{2152202240, []byte("BadContentFilterInvalid\x00")}, UA_StatusCodeName{2160132096, []byte("BadFilterOperatorInvalid\x00")}, UA_StatusCodeName{2160197632, []byte("BadFilterOperatorUnsupported\x00")}, UA_StatusCodeName{2160263168, []byte("BadFilterOperandCountMismatch\x00")}, UA_StatusCodeName{2152267776, []byte("BadFilterOperandInvalid\x00")}, UA_StatusCodeName{2160328704, []byte("BadFilterElementInvalid\x00")}, UA_StatusCodeName{2160394240, []byte("BadFilterLiteralInvalid\x00")}, UA_StatusCodeName{2152333312, []byte("BadContinuationPointInvalid\x00")}, UA_StatusCodeName{2152398848, []byte("BadNoContinuationPoints\x00")}, UA_StatusCodeName{2152464384, []byte("BadReferenceTypeIdInvalid\x00")}, UA_StatusCodeName{2152529920, []byte("BadBrowseDirectionInvalid\x00")}, UA_StatusCodeName{2152595456, []byte("BadNodeNotInView\x00")}, UA_StatusCodeName{2152660992, []byte("BadServerUriInvalid\x00")}, UA_StatusCodeName{2152726528, []byte("BadServerNameMissing\x00")}, UA_StatusCodeName{2152792064, []byte("BadDiscoveryUrlMissing\x00")}, UA_StatusCodeName{2152857600, []byte("BadSempahoreFileMissing\x00")}, UA_StatusCodeName{2152923136, []byte("BadRequestTypeInvalid\x00")}, UA_StatusCodeName{2152988672, []byte("BadSecurityModeRejected\x00")}, UA_StatusCodeName{2153054208, []byte("BadSecurityPolicyRejected\x00")}, UA_StatusCodeName{2153119744, []byte("BadTooManySessions\x00")}, UA_StatusCodeName{2153185280, []byte("BadUserSignatureInvalid\x00")}, UA_StatusCodeName{2153250816, []byte("BadApplicationSignatureInvalid\x00")}, UA_StatusCodeName{2153316352, []byte("BadNoValidCertificates\x00")}, UA_StatusCodeName{2160459776, []byte("BadIdentityChangeNotSupported\x00")}, UA_StatusCodeName{2153381888, []byte("BadRequestCancelledByRequest\x00")}, UA_StatusCodeName{2153447424, []byte("BadParentNodeIdInvalid\x00")}, UA_StatusCodeName{2153512960, []byte("BadReferenceNotAllowed\x00")}, UA_StatusCodeName{2153578496, []byte("BadNodeIdRejected\x00")}, UA_StatusCodeName{2153644032, []byte("BadNodeIdExists\x00")}, UA_StatusCodeName{2153709568, []byte("BadNodeClassInvalid\x00")}, UA_StatusCodeName{2153775104, []byte("BadBrowseNameInvalid\x00")}, UA_StatusCodeName{2153840640, []byte("BadBrowseNameDuplicated\x00")}, UA_StatusCodeName{2153906176, []byte("BadNodeAttributesInvalid\x00")}, UA_StatusCodeName{2153971712, []byte("BadTypeDefinitionInvalid\x00")}, UA_StatusCodeName{2154037248, []byte("BadSourceNodeIdInvalid\x00")}, UA_StatusCodeName{2154102784, []byte("BadTargetNodeIdInvalid\x00")}, UA_StatusCodeName{2154168320, []byte("BadDuplicateReferenceNotAllowed\x00")}, UA_StatusCodeName{2154233856, []byte("BadInvalidSelfReference\x00")}, UA_StatusCodeName{2154299392, []byte("BadReferenceLocalOnly\x00")}, UA_StatusCodeName{2154364928, []byte("BadNoDeleteRights\x00")}, UA_StatusCodeName{1086062592, []byte("UncertainReferenceNotDeleted\x00")}, UA_StatusCodeName{2154430464, []byte("BadServerIndexInvalid\x00")}, UA_StatusCodeName{2154496000, []byte("BadViewIdUnknown\x00")}, UA_StatusCodeName{2160656384, []byte("BadViewTimestampInvalid\x00")}, UA_StatusCodeName{2160721920, []byte("BadViewParameterMismatch\x00")}, UA_StatusCodeName{2160787456, []byte("BadViewVersionInvalid\x00")}, UA_StatusCodeName{1086324736, []byte("UncertainNotAllNodesAvailable\x00")}, UA_StatusCodeName{12189696, []byte("GoodResultsMayBeIncomplete\x00")}, UA_StatusCodeName{2160590848, []byte("BadNotTypeDefinition\x00")}, UA_StatusCodeName{1080819712, []byte("UncertainReferenceOutOfServer\x00")}, UA_StatusCodeName{2154627072, []byte("BadTooManyMatches\x00")}, UA_StatusCodeName{2154692608, []byte("BadQueryTooComplex\x00")}, UA_StatusCodeName{2154758144, []byte("BadNoMatch\x00")}, UA_StatusCodeName{2154823680, []byte("BadMaxAgeInvalid\x00")}, UA_StatusCodeName{2162556928, []byte("BadSecurityModeInsufficient\x00")}, UA_StatusCodeName{2154889216, []byte("BadHistoryOperationInvalid\x00")}, UA_StatusCodeName{2154954752, []byte("BadHistoryOperationUnsupported\x00")}, UA_StatusCodeName{2159869952, []byte("BadInvalidTimestampArgument\x00")}, UA_StatusCodeName{2155020288, []byte("BadWriteNotSupported\x00")}, UA_StatusCodeName{2155085824, []byte("BadTypeMismatch\x00")}, UA_StatusCodeName{2155151360, []byte("BadMethodInvalid\x00")}, UA_StatusCodeName{2155216896, []byte("BadArgumentsMissing\x00")}, UA_StatusCodeName{2155282432, []byte("BadTooManySubscriptions\x00")}, UA_StatusCodeName{2155347968, []byte("BadTooManyPublishRequests\x00")}, UA_StatusCodeName{2155413504, []byte("BadNoSubscription\x00")}, UA_StatusCodeName{2155479040, []byte("BadSequenceNumberUnknown\x00")}, UA_StatusCodeName{2155544576, []byte("BadMessageNotAvailable\x00")}, UA_StatusCodeName{2155610112, []byte("BadInsufficientClientProfile\x00")}, UA_StatusCodeName{2160001024, []byte("BadStateNotActive\x00")}, UA_StatusCodeName{2155675648, []byte("BadTcpServerTooBusy\x00")}, UA_StatusCodeName{2155741184, []byte("BadTcpMessageTypeInvalid\x00")}, UA_StatusCodeName{2155806720, []byte("BadTcpSecureChannelUnknown\x00")}, UA_StatusCodeName{2155872256, []byte("BadTcpMessageTooLarge\x00")}, UA_StatusCodeName{2155937792, []byte("BadTcpNotEnoughResources\x00")}, UA_StatusCodeName{2156003328, []byte("BadTcpInternalError\x00")}, UA_StatusCodeName{2156068864, []byte("BadTcpEndpointUrlInvalid\x00")}, UA_StatusCodeName{2156134400, []byte("BadRequestInterrupted\x00")}, UA_StatusCodeName{2156199936, []byte("BadRequestTimeout\x00")}, UA_StatusCodeName{2156265472, []byte("BadSecureChannelClosed\x00")}, UA_StatusCodeName{2156331008, []byte("BadSecureChannelTokenUnknown\x00")}, UA_StatusCodeName{2156396544, []byte("BadSequenceNumberInvalid\x00")}, UA_StatusCodeName{2159935488, []byte("BadProtocolVersionUnsupported\x00")}, UA_StatusCodeName{2156462080, []byte("BadConfigurationError\x00")}, UA_StatusCodeName{2156527616, []byte("BadNotConnected\x00")}, UA_StatusCodeName{2156593152, []byte("BadDeviceFailure\x00")}, UA_StatusCodeName{2156658688, []byte("BadSensorFailure\x00")}, UA_StatusCodeName{2156724224, []byte("BadOutOfService\x00")}, UA_StatusCodeName{2156789760, []byte("BadDeadbandFilterInvalid\x00")}, UA_StatusCodeName{1083113472, []byte("UncertainNoCommunicationLastUsableValue\x00")}, UA_StatusCodeName{1083179008, []byte("UncertainLastUsableValue\x00")}, UA_StatusCodeName{1083244544, []byte("UncertainSubstituteValue\x00")}, UA_StatusCodeName{1083310080, []byte("UncertainInitialValue\x00")}, UA_StatusCodeName{1083375616, []byte("UncertainSensorNotAccurate\x00")}, UA_StatusCodeName{1083441152, []byte("UncertainEngineeringUnitsExceeded\x00")}, UA_StatusCodeName{1083506688, []byte("UncertainSubNormal\x00")}, UA_StatusCodeName{9830400, []byte("GoodLocalOverride\x00")}, UA_StatusCodeName{2157379584, []byte("BadRefreshInProgress\x00")}, UA_StatusCodeName{2157445120, []byte("BadConditionAlreadyDisabled\x00")}, UA_StatusCodeName{2160852992, []byte("BadConditionAlreadyEnabled\x00")}, UA_StatusCodeName{2157510656, []byte("BadConditionDisabled\x00")}, UA_StatusCodeName{2157576192, []byte("BadEventIdUnknown\x00")}, UA_StatusCodeName{2159738880, []byte("BadEventNotAcknowledgeable\x00")}, UA_StatusCodeName{2160918528, []byte("BadDialogNotActive\x00")}, UA_StatusCodeName{2160984064, []byte("BadDialogResponseInvalid\x00")}, UA_StatusCodeName{2161049600, []byte("BadConditionBranchAlreadyAcked\x00")}, UA_StatusCodeName{2161115136, []byte("BadConditionBranchAlreadyConfirmed\x00")}, UA_StatusCodeName{2161180672, []byte("BadConditionAlreadyShelved\x00")}, UA_StatusCodeName{2161246208, []byte("BadConditionNotShelved\x00")}, UA_StatusCodeName{2161311744, []byte("BadShelvingTimeOutOfRange\x00")}, UA_StatusCodeName{2157641728, []byte("BadNoData\x00")}, UA_StatusCodeName{2161573888, []byte("BadBoundNotFound\x00")}, UA_StatusCodeName{2161639424, []byte("BadBoundNotSupported\x00")}, UA_StatusCodeName{2157772800, []byte("BadDataLost\x00")}, UA_StatusCodeName{2157838336, []byte("BadDataUnavailable\x00")}, UA_StatusCodeName{2157903872, []byte("BadEntryExists\x00")}, UA_StatusCodeName{2157969408, []byte("BadNoEntryExists\x00")}, UA_StatusCodeName{2158034944, []byte("BadTimestampNotSupported\x00")}, UA_StatusCodeName{10616832, []byte("GoodEntryInserted\x00")}, UA_StatusCodeName{10682368, []byte("GoodEntryReplaced\x00")}, UA_StatusCodeName{1084489728, []byte("UncertainDataSubNormal\x00")}, UA_StatusCodeName{10813440, []byte("GoodNoData\x00")}, UA_StatusCodeName{10878976, []byte("GoodMoreData\x00")}, UA_StatusCodeName{2161377280, []byte("BadAggregateListMismatch\x00")}, UA_StatusCodeName{2161442816, []byte("BadAggregateNotSupported\x00")}, UA_StatusCodeName{2161508352, []byte("BadAggregateInvalidInputs\x00")}, UA_StatusCodeName{2161770496, []byte("BadAggregateConfigurationRejected\x00")}, UA_StatusCodeName{14221312, []byte("GoodDataIgnored\x00")}, UA_StatusCodeName{2162425856, []byte("BadRequestNotAllowed\x00")}, UA_StatusCodeName{14417920, []byte("GoodEdited\x00")}, UA_StatusCodeName{14483456, []byte("GoodPostActionFailed\x00")}, UA_StatusCodeName{1088290816, []byte("UncertainDominantValueChanged\x00")}, UA_StatusCodeName{14680064, []byte("GoodDependentValueChanged\x00")}, UA_StatusCodeName{2162229248, []byte("BadDominantValueChanged\x00")}, UA_StatusCodeName{1088552960, []byte("UncertainDependentValueChanged\x00")}, UA_StatusCodeName{2162360320, []byte("BadDependentValueChanged\x00")}, UA_StatusCodeName{10944512, []byte("GoodCommunicationEvent\x00")}, UA_StatusCodeName{11010048, []byte("GoodShutdownEvent\x00")}, UA_StatusCodeName{11075584, []byte("GoodCallAgain\x00")}, UA_StatusCodeName{11141120, []byte("GoodNonCriticalTimeout\x00")}, UA_StatusCodeName{2158690304, []byte("BadInvalidArgument\x00")}, UA_StatusCodeName{2158755840, []byte("BadConnectionRejected\x00")}, UA_StatusCodeName{2158821376, []byte("BadDisconnect\x00")}, UA_StatusCodeName{2158886912, []byte("BadConnectionClosed\x00")}, UA_StatusCodeName{2158952448, []byte("BadInvalidState\x00")}, UA_StatusCodeName{2159017984, []byte("BadEndOfStream\x00")}, UA_StatusCodeName{2159083520, []byte("BadNoDataAvailable\x00")}, UA_StatusCodeName{2159149056, []byte("BadWaitingForResponse\x00")}, UA_StatusCodeName{2159214592, []byte("BadOperationAbandoned\x00")}, UA_StatusCodeName{2159280128, []byte("BadExpectedStreamToBlock\x00")}, UA_StatusCodeName{2159345664, []byte("BadWouldBlock\x00")}, UA_StatusCodeName{2159411200, []byte("BadSyntaxError\x00")}, UA_StatusCodeName{2159476736, []byte("BadMaxConnectionsReached\x00")}, UA_StatusCodeName{4294967295, []byte("Unknown StatusCode\x00")}}
// UA_StatusCode_name - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17147
// amalgamated original file "/home/travis/build/open62541/open62541/build/src_generated/ua_types_generated.c"
// Generated from Opc.Ua.Types.bsd with script /home/travis/build/open62541/open62541/tools/generate_datatypes.py
// * on host travis-job-58e35654-0d0b-419b-8d10-2d50a5ceef65 by user travis at 2018-06-12 07:23:58
// Boolean
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SByte
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// Byte
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// Int16
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// UInt16
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// Int32
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// UInt32
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// Int64
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// UInt64
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// Float
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// Double
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// String
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DateTime
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// Guid
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ByteString
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// XmlElement
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// NodeId
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ExpandedNodeId
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// StatusCode
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// QualifiedName
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// LocalizedText
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ExtensionObject
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DataValue
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// Variant
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DiagnosticInfo
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SignedSoftwareCertificate
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SemanticChangeStructureDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// StatusChangeNotification
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowsePathTarget
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ViewAttributes
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RequestHeader
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// MonitoredItemModifyResult
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ElementOperand
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CloseSecureChannelRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AddNodesResult
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// VariableAttributes
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// NotificationMessage
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// FindServersOnNetworkRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// EventFieldList
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// MonitoringMode
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// MdnsDiscoveryConfiguration
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CallMethodResult
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ParsingResult
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RelativePathElement
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowseDirection
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CallMethodRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RedundancySupport
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// EventNotificationList
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// UnregisterNodesRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ContentFilterElementResult
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SimpleAttributeOperand
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// LiteralOperand
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// QueryDataSet
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AnonymousIdentityToken
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SetPublishingModeRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// MonitoredItemCreateResult
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// TimestampsToReturn
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CallRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// MethodAttributes
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeleteReferencesItem
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// WriteValue
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// NodeAttributesMask
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// MessageSecurityMode
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// MonitoringParameters
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ReferenceNode
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// Argument
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ChannelSecurityToken
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// UserIdentityToken
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SignatureData
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ObjectTypeAttributes
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeadbandType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SecurityTokenRequestType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// NodeAttributes
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DataChangeTrigger
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BuildInfo
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// NodeClass
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SubscriptionDiagnosticsDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// FilterOperand
// MonitoredItemNotification
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeleteNodesItem
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeleteSubscriptionsRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SubscriptionAcknowledgement
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ReadValueId
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DataTypeAttributes
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ResponseHeader
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeleteMonitoredItemsRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ViewDescription
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ServerOnNetwork
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeleteMonitoredItemsResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// FindServersOnNetworkResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RelativePath
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RegisterNodesRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AggregateConfiguration
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeleteNodesRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// PublishResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// MonitoredItemModifyRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ServiceCounterDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ModelChangeStructureDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// UserNameIdentityToken
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// IdType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// UserTokenType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SetTriggeringResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// TimeZoneDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ActivateSessionRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// OpenSecureChannelResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ApplicationType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ServerState
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// QueryNextResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DiscoveryConfiguration
// ActivateSessionResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// EndpointUrlListDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// FilterOperator
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// QueryNextRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// WriteResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowseNextRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CreateSubscriptionRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// VariableTypeAttributes
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowsePathResult
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ModifySubscriptionResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RedundantServerDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RegisterNodesResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CloseSessionRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ModifyMonitoredItemsResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ModifySubscriptionRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ServerDiagnosticsSummaryDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// UserTokenPolicy
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ReferenceTypeAttributes
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowsePath
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SetMonitoringModeRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// UnregisterNodesResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// WriteRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ObjectAttributes
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowseResultMask
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowseDescription
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SetTriggeringRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SessionSecurityDiagnosticsDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RepublishRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// GetEndpointsRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// PublishRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeleteSubscriptionsResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AddNodesResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DataChangeNotification
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CloseSecureChannelResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ModifyMonitoredItemsRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SetMonitoringModeResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// FindServersRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ReferenceDescription
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SetPublishingModeResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ContentFilterResult
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RegisterServerResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AddReferencesItem
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// QueryDataDescription
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CreateSubscriptionResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// NetworkGroupDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeleteReferencesResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CreateMonitoredItemsResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CallResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeleteNodesResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RepublishResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// MonitoredItemCreateRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DeleteReferencesRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ReadResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AddReferencesRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ReadRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// OpenSecureChannelRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RegisterServer2Response
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AddNodesItem
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// NodeTypeDescription
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ServerStatusDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AttributeOperand
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AddReferencesResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// EventFilterResult
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// TranslateBrowsePathsToNodeIdsResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// DataChangeFilter
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ContentFilterElement
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// TranslateBrowsePathsToNodeIdsRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CloseSessionResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ApplicationDescription
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SessionDiagnosticsDataType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ServiceFault
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RegisteredServer
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AggregateFilter
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RegisterServerRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// EndpointDescription
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CreateMonitoredItemsRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ContentFilter
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// QueryFirstResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AddNodesRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowseRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowseResult
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// RegisterServer2Request
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CreateSessionRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// EventFilter
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// GetEndpointsResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// FindServersResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowseNextResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// BrowseResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// CreateSessionResponse
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// QueryFirstRequest
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// Boolean
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SByte
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// Byte
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// Int16
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// UInt16
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// Int32
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// UInt32
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// Int64
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// UInt64
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// Float
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// Double
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// String
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DateTime
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// Guid
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ByteString
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// XmlElement
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// NodeId
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ExpandedNodeId
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// StatusCode
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// QualifiedName
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// LocalizedText
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ExtensionObject
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DataValue
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// Variant
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DiagnosticInfo
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SignedSoftwareCertificate
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SemanticChangeStructureDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// StatusChangeNotification
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowsePathTarget
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ViewAttributes
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RequestHeader
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MonitoredItemModifyResult
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ElementOperand
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CloseSecureChannelRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AddNodesResult
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// VariableAttributes
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// NotificationMessage
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// FindServersOnNetworkRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// EventFieldList
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MonitoringMode
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MdnsDiscoveryConfiguration
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CallMethodResult
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ParsingResult
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RelativePathElement
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowseDirection
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CallMethodRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RedundancySupport
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// EventNotificationList
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// UnregisterNodesRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ContentFilterElementResult
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SimpleAttributeOperand
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// LiteralOperand
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// QueryDataSet
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AnonymousIdentityToken
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SetPublishingModeRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MonitoredItemCreateResult
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// TimestampsToReturn
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CallRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MethodAttributes
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeleteReferencesItem
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// WriteValue
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// NodeAttributesMask
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MessageSecurityMode
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MonitoringParameters
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ReferenceNode
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// Argument
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ChannelSecurityToken
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// UserIdentityToken
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SignatureData
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ObjectTypeAttributes
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeadbandType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SecurityTokenRequestType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// NodeAttributes
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DataChangeTrigger
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BuildInfo
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// NodeClass
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SubscriptionDiagnosticsDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// FilterOperand
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MonitoredItemNotification
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeleteNodesItem
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeleteSubscriptionsRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SubscriptionAcknowledgement
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ReadValueId
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DataTypeAttributes
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ResponseHeader
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeleteMonitoredItemsRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ViewDescription
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ServerOnNetwork
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeleteMonitoredItemsResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// FindServersOnNetworkResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RelativePath
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RegisterNodesRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AggregateConfiguration
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeleteNodesRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// PublishResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MonitoredItemModifyRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ServiceCounterDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ModelChangeStructureDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// UserNameIdentityToken
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// IdType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// UserTokenType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SetTriggeringResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// TimeZoneDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ActivateSessionRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// OpenSecureChannelResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ApplicationType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ServerState
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// QueryNextResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DiscoveryConfiguration
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ActivateSessionResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// EndpointUrlListDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// FilterOperator
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// QueryNextRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// WriteResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowseNextRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CreateSubscriptionRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// VariableTypeAttributes
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowsePathResult
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ModifySubscriptionResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RedundantServerDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RegisterNodesResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CloseSessionRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ModifyMonitoredItemsResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ModifySubscriptionRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ServerDiagnosticsSummaryDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// UserTokenPolicy
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ReferenceTypeAttributes
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowsePath
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SetMonitoringModeRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// UnregisterNodesResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// WriteRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ObjectAttributes
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowseResultMask
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowseDescription
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SetTriggeringRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SessionSecurityDiagnosticsDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RepublishRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// GetEndpointsRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// PublishRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeleteSubscriptionsResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AddNodesResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DataChangeNotification
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CloseSecureChannelResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ModifyMonitoredItemsRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SetMonitoringModeResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// FindServersRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ReferenceDescription
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SetPublishingModeResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ContentFilterResult
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RegisterServerResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AddReferencesItem
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// QueryDataDescription
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CreateSubscriptionResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// NetworkGroupDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeleteReferencesResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CreateMonitoredItemsResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CallResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeleteNodesResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RepublishResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MonitoredItemCreateRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DeleteReferencesRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ReadResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AddReferencesRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ReadRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// OpenSecureChannelRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RegisterServer2Response
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AddNodesItem
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// NodeTypeDescription
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ServerStatusDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AttributeOperand
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AddReferencesResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// EventFilterResult
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// TranslateBrowsePathsToNodeIdsResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// DataChangeFilter
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ContentFilterElement
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// TranslateBrowsePathsToNodeIdsRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CloseSessionResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ApplicationDescription
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SessionDiagnosticsDataType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ServiceFault
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RegisteredServer
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AggregateFilter
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RegisterServerRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// EndpointDescription
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CreateMonitoredItemsRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ContentFilter
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// QueryFirstResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AddNodesRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowseRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowseResult
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// RegisterServer2Request
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CreateSessionRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// EventFilter
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// GetEndpointsResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// FindServersResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowseNextResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// BrowseResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// CreateSessionResponse
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// QueryFirstRequest
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// amalgamated original file "/home/travis/build/open62541/open62541/build/src_generated/ua_transport_generated.c"
// Generated from Opc.Ua.Types.bsd, Custom.Opc.Ua.Transport.bsd with script /home/travis/build/open62541/open62541/tools/generate_datatypes.py
// * on host travis-job-58e35654-0d0b-419b-8d10-2d50a5ceef65 by user travis at 2018-06-12 07:23:58
// SecureConversationMessageAbortBody
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SecureConversationMessageFooter
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// TcpHelloMessage
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// TcpErrorMessage
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// MessageType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// AsymmetricAlgorithmSecurityHeader
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// TcpAcknowledgeMessage
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SequenceHeader
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// TcpMessageHeader
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// ChunkType
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SymmetricAlgorithmSecurityHeader
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SecureConversationMessageHeader
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// .memberName
// .memberTypeIndex
// .padding
// .namespaceZero
// .isArray
// SecureConversationMessageAbortBody
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SecureConversationMessageFooter
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// TcpHelloMessage
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// TcpErrorMessage
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// MessageType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// AsymmetricAlgorithmSecurityHeader
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// TcpAcknowledgeMessage
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SequenceHeader
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// TcpMessageHeader
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// ChunkType
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SymmetricAlgorithmSecurityHeader
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// SecureConversationMessageHeader
// .typeName
// .typeId
// .memSize
// .typeIndex
// .membersSize
// .builtin
// .pointerFree
// .overlayable
// .binaryEncodingId
// .members
// amalgamated original file "/home/travis/build/open62541/open62541/build/src_generated/ua_statuscode_descriptions.c"
//
// * Autogenerated -- do not modify
// * Generated from /home/travis/build/open62541/open62541/tools/schema/Opc.Ua.StatusCodes.csv with script /home/travis/build/open62541/open62541/tools/generate_statuscode_descriptions.py
//
// Definition for the deprecated StatusCode description API
func UA_StatusCode_name(code UA_StatusCode) []byte {
	{
		var i uint
		for ; i < statusCodeDescriptionsSize; i++ {
			if UA_StatusCode(statusCodeDescriptions[i].code) == code {
				return statusCodeDescriptions[i].name
			}
		}
	}
	return statusCodeDescriptions[statusCodeDescriptionsSize-uint((1))].name
}
// UA_readNumber - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17169
// amalgamated original file "/home/travis/build/open62541/open62541/src/ua_util.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014, 2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014 (c) Florian Palm
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
func UA_readNumber(buf []u8, buflen uint, number []u32) uint {
	var n u32
	var progress uint
	for progress < buflen {
		var c u8 = buf[progress]
		if int(uint8((__uint8_t((uint8_t((UA_Byte((c))))))))) < int('0') || int(uint8((__uint8_t((uint8_t((UA_Byte((c))))))))) > int('9') {
			// read numbers until the end or a non-number character appears
			break
		}
		n = n*u32((UA_UInt32((uint32_t((uint32((10))))))))+u32((int(uint8((__uint8_t((uint8_t((UA_Byte((c)))))))))-int('0')))
		progress ++
	}
	number[0] = n
	return uint(progress)
}
// UA_parseEndpointUrl - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17187
func UA_parseEndpointUrl(endpointUrl []UA_String, outHostname []UA_String, outPort []UA_UInt16, outPath []UA_String) UA_StatusCode {
	if uint(endpointUrl[0].length) < uint((11)) || strncmp(endpointUrl[0].data, []byte("opc.tcp://\x00"), 10) != 0 {
		// Url must begin with "opc.tcp://"
		//", 10) != 0)
		return UA_StatusCode((uint32_t((uint32((uint32(2156068864)))))))
	}
	var curr uint = 10
	if int(uint8((__uint8_t((uint8_t((endpointUrl[0].data[curr]))))))) == int('[') {
		for ; curr < uint(endpointUrl[0].length); curr++ {
			if int(uint8((__uint8_t((uint8_t((endpointUrl[0].data[curr]))))))) == int(']') {
				// Where does the hostname end?
				// IPv6: opc.tcp://[2001:0db8:85a3::8a2e:0370:7334]:1234/path
				break
			}
		}
		if curr == uint(endpointUrl[0].length) {
			return UA_StatusCode((uint32_t((uint32((uint32(2156068864)))))))
		}
		curr ++
	} else {
		for ; curr < uint(endpointUrl[0].length); curr++ {
			if int(uint8((__uint8_t((uint8_t((endpointUrl[0].data[curr]))))))) == int(':') || int(uint8((__uint8_t((uint8_t((endpointUrl[0].data[curr]))))))) == int('/') {
				// IPv4 or hostname: opc.tcp://something.something:1234/path
				break
			}
		}
	}
	// Set the hostname
	outHostname[0].data = (*[100000000]UA_Byte)(unsafe.Pointer(&endpointUrl[0].data[10]))[:]
	outHostname[0].length = curr-uint((10))
	if curr == uint(endpointUrl[0].length) {
		return 0
	}
	if int(uint8((__uint8_t((uint8_t((endpointUrl[0].data[curr]))))))) == int(':') {
		if func() uint {
			curr ++
			return curr
		}() == uint(endpointUrl[0].length) {
			// Set the port
			return UA_StatusCode((uint32_t((uint32((uint32(2156068864)))))))
		}
		var largeNum u32
		var progress uint = UA_readNumber((*[100000000]UA_Byte)(unsafe.Pointer(&endpointUrl[0].data[curr]))[:], uint(endpointUrl[0].length)-curr, (*[100000000]u32)(unsafe.Pointer(&largeNum))[:])
		if progress == uint((0)) || largeNum > u32((UA_UInt32((uint32_t((uint32((65535)))))))) {
			return UA_StatusCode((uint32_t((uint32((uint32(2156068864)))))))
		}
		// Test if the end of a valid port was reached
		curr += progress
		if curr == uint(endpointUrl[0].length) || int(uint8((__uint8_t((uint8_t((endpointUrl[0].data[curr]))))))) == int('/') {
			outPort[0] = u16(u32(largeNum))
		}
		if curr == uint(endpointUrl[0].length) {
			return 0
		}
	}
	if int(uint8((__uint8_t((uint8_t((endpointUrl[0].data[curr]))))))) != int('/') {
		// Set the path
		return UA_StatusCode((uint32_t((uint32((uint32(2156068864)))))))
	}
	if func() uint {
		curr ++
		return curr
	}() == uint(endpointUrl[0].length) {
		return 0
	}
	outPath[0].data = (*[100000000]UA_Byte)(unsafe.Pointer(&endpointUrl[0].data[curr]))[:]
	outPath[0].length = uint(endpointUrl[0].length)-curr
	if int(uint8((__uint8_t((uint8_t((endpointUrl[0].data[uint(endpointUrl[0].length)-uint((1))]))))))) == int('/') {
		// Remove trailing slash from the path
		outPath[0].length --
	}
	return 0
}

type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_17280_5_ struct {
	sle_next []UA_TimerCallbackEntry
}
type UA_TimerCallbackEntry struct {
	next     __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_17280_5_
	nextTime UA_DateTime
	interval UA_UInt64
	id       UA_UInt64
	callback UA_TimerCallback
	data     interface{}
}
// UA_Timer_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17290
// amalgamated original file "/home/travis/build/open62541/open62541/src/ua_timer.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
// Only one thread operates on the repeated jobs. This is usually the "main"
// * thread with the event loop. All other threads introduce changes via a
// * multi-producer single-consumer (MPSC) queue. The queue is based on a design
// * by Dmitry Vyukov.
// * http://www.1024cores.net/home/lock-free-algorithms/queues/intrusive-mpsc-node-based-queue
// *
// * The RepeatedCallback structure is used both in the sorted list of callbacks
// * and in the MPSC changes queue. For the changes queue, we differentiate
// * between three cases encoded in the callback pointer.
// *
// * callback > 0x01: add the new repeated callback to the sorted list
// * callback == 0x00: remove the callback with the same id
// * callback == 0x01: change the interval of the existing callback
// Next element in the list
// The next time when the callbacks
//                                              * are to be executed
// Interval in 100ns resolution
// Id of the repeated callback
func UA_Timer_init(t []UA_Timer) {
	{
		((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first = nil
	}
	t[0].changes_head = (*[100000000][]UA_TimerCallbackEntry)(unsafe.Pointer(&t[0].changes_stub))[:]
	t[0].changes_tail = (*[100000000][]UA_TimerCallbackEntry)(unsafe.Pointer(&t[0].changes_stub))[:]
	t[0].changes_stub = nil
	t[0].idCounter = 0
}
// enqueueChange - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17299
func enqueueChange(t []UA_Timer, tc []UA_TimerCallbackEntry) {
	tc[0].next.sle_next = nil
	var prev []UA_TimerCallbackEntry = UA_atomic_xchg((*[100000000][]UA_TimerCallbackEntry)(unsafe.Pointer(&t[0].changes_head))[:], tc).([]UA_TimerCallbackEntry)
	// Nothing can be dequeued while the producer is blocked here
	// Once this change is visible in the consumer,
	//                               * the node is dequeued in the following
	//                               * iteration
	prev[0].next.sle_next = tc
}
// dequeueChange - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17310
func dequeueChange(t []UA_Timer) []UA_TimerCallbackEntry {
	var tail []UA_TimerCallbackEntry = t[0].changes_tail
	var next []UA_TimerCallbackEntry = tail[0].next.sle_next
	if tail == (*[100000000][]UA_TimerCallbackEntry)(unsafe.Pointer(&t[0].changes_stub))[:] {
		if next == nil {
			return nil
		}
		t[0].changes_tail = next
		tail = next
		next = next[0].next.sle_next
	}
	if next != nil {
		t[0].changes_tail = next
		return tail
	}
	var head []UA_TimerCallbackEntry = t[0].changes_head
	if tail != head {
		return nil
	}
	enqueueChange(t, (*[100000000][]UA_TimerCallbackEntry)(unsafe.Pointer(&t[0].changes_stub))[:])
	next = tail[0].next.sle_next
	if next != nil {
		t[0].changes_tail = next
		return tail
	}
	return nil
}
// UA_Timer_addRepeatedCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17340
// Adding repeated callbacks: Add an entry with the "nextTime" timestamp in the
// * future. This will be picked up in the next iteration and inserted at the
// * correct place. So that the next execution takes place ät "nextTime".
func UA_Timer_addRepeatedCallback(t []UA_Timer, callback UA_TimerCallback, data interface{}, interval UA_UInt32, callbackId []UA_UInt64) UA_StatusCode {
	if func(interface{} , interface_{})()((noarch.NotUA_TimerCallback(UA_TimerCallback(callback)))) != nil {
		// A callback method needs to be present
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if interval < UA_UInt32((uint32_t((uint32((5)))))) {
		// The interval needs to be at least 5ms
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var tc []UA_TimerCallbackEntry = make([]UA_TimerCallbackEntry, 56/56)
	if tc == nil {
		// Allocate the repeated callback structure
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	// Set the repeated callback
	tc[0].interval = UA_UInt64((uint64_t((uint64((uint32(uint64(uint32((uint64((uint64_t((UA_UInt64(UA_UInt32(interval))))))))) * uint64(10*1000))))))))
	tc[0].id = func() UA_UInt64 {
		tempVar := &t[0].idCounter
		*tempVar ++
		return *tempVar
	}()
	tc[0].callback = callback
	tc[0].data = data
	tc[0].nextTime = UA_DateTime_nowMonotonic()+UA_DateTime(UA_UInt64(tc[0].interval))
	if callbackId != nil {
		// Set the output identifier
		callbackId[0] = UA_UInt64(tc[0].id)
	}
	// Enqueue the changes in the MPSC queue
	enqueueChange(t, tc)
	return 0
}
// addTimerCallbackEntry - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17374
func addTimerCallbackEntry(t []UA_Timer, tc []UA_TimerCallbackEntry) {
	var tmpTc []UA_TimerCallbackEntry
	var afterTc []UA_TimerCallbackEntry
	{
		// Find the last entry before this callback
		for tmpTc = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first; tmpTc != nil; tmpTc = (tmpTc)[0].next.sle_next {
			if UA_DateTime(tmpTc[0].nextTime) >= UA_DateTime(tc[0].nextTime) {
				break
			}
			afterTc = tmpTc
			if UA_UInt64(tmpTc[0].interval) == UA_UInt64(tc[0].interval) && int64(int32((__int64_t((int64_t((UA_DateTime(tmpTc[0].nextTime)))))))) > int64(int32((__int64_t((int64_t((UA_DateTime(tc[0].nextTime))))))))-int64(10*1000*1000) {
				// The goal is to have many repeated callbacks with the same repetition
				//         * interval in a "block" in order to reduce linear search for re-entry
				//         * to the sorted list after processing. Allow the first execution to lie
				//         * between "nextTime - 1s" and "nextTime" if this adjustment groups
				//         * callbacks with the same repetition interval.
				tc[0].nextTime = UA_DateTime(tmpTc[0].nextTime)
			}
		}
	}
	if afterTc != nil {
		for {
			// Add the repeated callback
			(tc)[0].next.sle_next = (afterTc)[0].next.sle_next
			(afterTc)[0].next.sle_next = tc
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
	} else {
		for {
			(tc)[0].next.sle_next = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first
			((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first = tc
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
	}
}
// UA_Timer_changeRepeatedCallbackInterval - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17400
func UA_Timer_changeRepeatedCallbackInterval(t []UA_Timer, callbackId UA_UInt64, interval UA_UInt32) UA_StatusCode {
	if interval < UA_UInt32((uint32_t((uint32((5)))))) {
		// The interval needs to be at least 5ms
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var tc []UA_TimerCallbackEntry = make([]UA_TimerCallbackEntry, 56/56)
	if tc == nil {
		// Allocate the repeated callback structure
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	// Set the repeated callback
	tc[0].interval = UA_UInt64((uint64_t((uint64((uint32(uint64(uint32((uint64((uint64_t((UA_UInt64(UA_UInt32(interval))))))))) * uint64(10*1000))))))))
	tc[0].id = callbackId
	tc[0].nextTime = UA_DateTime_nowMonotonic()+UA_DateTime(UA_UInt64(tc[0].interval))
	tc[0].callback = UA_TimerCallback(1)
	// Enqueue the changes in the MPSC queue
	enqueueChange(t, tc)
	return 0
}
// changeTimerCallbackEntryInterval - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17424
func changeTimerCallbackEntryInterval(t []UA_Timer, callbackId UA_UInt64, interval UA_UInt64, nextTime UA_DateTime) {
	var tc []UA_TimerCallbackEntry
	var prev []UA_TimerCallbackEntry
	{
		// Remove from the sorted list
		for tc = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first; tc != nil; tc = (tc)[0].next.sle_next {
			if callbackId == UA_UInt64(tc[0].id) {
				if prev != nil {
					for {
						(prev)[0].next.sle_next = (prev)[0].next.sle_next[0].next.sle_next
						if noarch.NotInt((0)) != 0 {
							break
						}
					}
				} else {
					for {
						((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first[0].next.sle_next
						if noarch.NotInt((0)) != 0 {
							break
						}
					}
				}
				break
			}
			prev = tc
		}
	}
	if tc == nil {
		return
	}
	// Adjust settings
	tc[0].interval = interval
	tc[0].nextTime = nextTime
	// Reinsert at the new position
	addTimerCallbackEntry(t, tc)
}
// UA_Timer_removeRepeatedCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17453
// Removing a repeated callback: Add an entry with the "nextTime" timestamp set
// * to UA_INT64_MAX. The next iteration picks this up and removes the repated
// * callback from the linked list.
func UA_Timer_removeRepeatedCallback(t []UA_Timer, callbackId UA_UInt64) UA_StatusCode {
	var tc []UA_TimerCallbackEntry = make([]UA_TimerCallbackEntry, 56/56)
	if tc == nil {
		// Allocate the repeated callback structure
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	// Set the repeated callback with the sentinel nextTime
	tc[0].id = callbackId
	tc[0].callback = nil
	// Enqueue the changes in the MPSC queue
	enqueueChange(t, tc)
	return 0
}
// removeRepeatedCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17470
func removeRepeatedCallback(t []UA_Timer, callbackId UA_UInt64) {
	var tc []UA_TimerCallbackEntry
	var prev []UA_TimerCallbackEntry
	for tc = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first; tc != nil; tc = (tc)[0].next.sle_next {
		if callbackId == UA_UInt64(tc[0].id) {
			if prev != nil {
				for {
					(prev)[0].next.sle_next = (prev)[0].next.sle_next[0].next.sle_next
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
			} else {
				for {
					((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first[0].next.sle_next
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
			}
			_ = tc
			break
		}
		prev = tc
	}
}
// processChanges - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17487
// Process the changes that were added to the MPSC queue (by other threads)
func processChanges(t []UA_Timer) {
	var change []UA_TimerCallbackEntry
	for (func() []UA_TimerCallbackEntry {
		change = dequeueChange(t)
		return change
	}()) != nil {
		switch uintptr_t(UA_TimerCallback(change[0].callback)) {
		case 0:
			removeRepeatedCallback(t, UA_UInt64(change[0].id))
			_ = change
		case 1:
			changeTimerCallbackEntryInterval(t, UA_UInt64(change[0].id), UA_UInt64(change[0].interval), UA_DateTime(change[0].nextTime))
			_ = change
		default:
			{
				addTimerCallbackEntry(t, change)
			}
		}
	}
}
// UA_Timer_process - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17507
func UA_Timer_process(t []UA_Timer, nowMonotonic UA_DateTime, dispatchCallback UA_TimerDispatchCallback, application interface{}) UA_DateTime {
	// Insert and remove callbacks
	processChanges(t)
	var firstAfter []UA_TimerCallbackEntry
	var lastNow []UA_TimerCallbackEntry
	{
		// Find the last callback to be executed now
		for firstAfter = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first; firstAfter != nil; firstAfter = (firstAfter)[0].next.sle_next {
			if UA_DateTime(firstAfter[0].nextTime) > nowMonotonic {
				break
			}
			lastNow = firstAfter
		}
	}
	if lastNow == nil {
		if firstAfter != nil {
			// Nothing to do
			return UA_DateTime(firstAfter[0].nextTime)
		}
		return UA_DateTime((int64_t(9223372036854775807)))
	}
	var executedNowList UA_TimerCallbackList
	// Put the callbacks that are executed now in a separate list
	executedNowList.slh_first = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first
	lastNow[0].next.sle_next = nil
	var tmp_first UA_TimerCallbackEntry
	// Fake entry to represent the first element in the newly-sorted list
	// never matches for last_dispatched
	tmp_first.nextTime = nowMonotonic-UA_DateTime((int64_t((__int64_t((1))))))
	tmp_first.next.sle_next = firstAfter
	var last_dispatched []UA_TimerCallbackEntry = (*[100000000]UA_TimerCallbackEntry)(unsafe.Pointer(&tmp_first))[:]
	var tc []UA_TimerCallbackEntry
	for (func() []UA_TimerCallbackEntry {
		tc = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&executedNowList))[:])[0].slh_first
		return tc
	}()) != nil {
		for {
			// Iterate over the list of callbacks to process now
			// Remove from the list
			((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&executedNowList))[:])[0].slh_first = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&executedNowList))[:])[0].slh_first[0].next.sle_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		// Dispatch/process callback
		dispatchCallback(application, UA_TimerCallback(tc[0].callback), tc[0].data)
		// Set the time for the next execution. Prevent an infinite loop by
		//         * forcing the next processing into the next iteration.
		tc[0].nextTime += UA_DateTime((int64_t((__int64_t((int32((__int64_t((int64_t((UA_Int64(UA_UInt64(tc[0].interval))))))))))))))
		if UA_DateTime(tc[0].nextTime) < nowMonotonic {
			tc[0].nextTime = nowMonotonic+UA_DateTime((int64_t((__int64_t((1))))))
		}
		var prev_tc []UA_TimerCallbackEntry
		if UA_DateTime(last_dispatched[0].nextTime) == UA_DateTime(tc[0].nextTime) {
			// Find the new position for tc to keep the list sorted
			// We try to "batch" repeatedCallbacks with the same interval. This
			//             * saves a linear search when the last dispatched entry has the same
			//             * nextTime timestamp as this entry.
			prev_tc = last_dispatched
		} else {
			if UA_DateTime(last_dispatched[0].nextTime) < UA_DateTime(tc[0].nextTime) {
				// Find the position for the next execution by a linear search
				//             * starting at last_dispatched or the first element
				prev_tc = last_dispatched
			} else {
				prev_tc = (*[100000000]UA_TimerCallbackEntry)(unsafe.Pointer(&tmp_first))[:]
			}
			for 1 != 0 {
				var n []UA_TimerCallbackEntry = (prev_tc)[0].next.sle_next
				if n == nil || UA_DateTime(n[0].nextTime) >= UA_DateTime(tc[0].nextTime) {
					break
				}
				prev_tc = n
			}
			// Update last_dispatched
			last_dispatched = tc
		}
		for {
			// Add entry to the new position in the sorted list
			(tc)[0].next.sle_next = (prev_tc)[0].next.sle_next
			(prev_tc)[0].next.sle_next = tc
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
	}
	// Set the entry-point for the newly sorted list
	t[0].repeatedCallbacks.slh_first = tmp_first.next.sle_next
	// Re-repeat processAddRemoved since one of the callbacks might have removed
	//     * or added a callback. So we return a correct timeout.
	processChanges(t)
	// Return timestamp of next repetition
	tc = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first
	if tc == nil {
		// Main-loop has a max timeout / will continue earlier
		return UA_DateTime((int64_t(9223372036854775807)))
	}
	return UA_DateTime(tc[0].nextTime)
}
// UA_Timer_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17600
func UA_Timer_deleteMembers(t []UA_Timer) {
	// Process changes to empty the MPSC queue
	processChanges(t)
	var current []UA_TimerCallbackEntry
	for (func() []UA_TimerCallbackEntry {
		current = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first
		return current
	}()) != nil {
		for {
			// Remove repeated callbacks
			((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first = ((*[100000000]UA_TimerCallbackList)(unsafe.Pointer(&t[0].repeatedCallbacks))[:])[0].slh_first[0].next.sle_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		_ = current
	}
}
// UA_Connection_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17628
// amalgamated original file "/home/travis/build/open62541/open62541/src/ua_connection.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014, 2016-2017 (c) Florian Palm
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2016-2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Mark Giraud, Fraunhofer IOSB
//
func UA_Connection_deleteMembers(connection []UA_Connection) {
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&connection[0].incompleteMessage))[:])
}
// hideErrors - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17634
// Hides somme errors before sending them to a client according to the
// * standard.
func hideErrors(error []UA_TcpErrorMessage) {
	switch UA_UInt32(error[0].error) {
	case 2149187584:
		error[0].error = UA_UInt32((uint32_t((uint32((uint32(2148728832)))))))
		error[0].reason = UA_STRING_NULL
	default:
		{
			// TODO: Check if these are all cases that need to be covered.
			break
		}
	}
}
// UA_Connection_sendError - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17647
func UA_Connection_sendError(connection []UA_Connection, error []UA_TcpErrorMessage) {
	hideErrors(error)
	var header UA_TcpMessageHeader
	header.messageTypeAndChunkType = UA_UInt32((uint32_t((uint32((uint32(UA_MESSAGETYPE_ERR + UA_CHUNKTYPE_FINAL)))))))
	// Header + ErrorMessage (error + reasonLength_field + length)
	header.messageSize = UA_UInt32((uint32_t((uint32((8 + (uint32(4+4) + uint32((uint32((uint32_t((UA_UInt32(uint(error[0].reason.length)))))))))))))))
	var msg UA_ByteString = UA_BYTESTRING_NULL
	var retval UA_StatusCode = connection.getSendBuffer(connection, uint(UA_UInt32(header.messageSize)), (*[100000000]UA_ByteString)(unsafe.Pointer(&msg))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Get the send buffer from the network layer
		return
	}
	var bufPos []UA_Byte = msg.data
	var bufEnd []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&msg.data[uint(msg.length)]))[:]
	// Encode and send the response
	UA_TcpMessageHeader_encodeBinary((*[100000000]UA_TcpMessageHeader)(unsafe.Pointer(&header))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufPos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufEnd))[:])
	UA_TcpErrorMessage_encodeBinary(error, (*[100000000][]UA_Byte)(unsafe.Pointer(&bufPos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufEnd))[:])
	msg.length = uint((uint32((uint32((uint32_t((UA_UInt32(header.messageSize)))))))))
	connection.send(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&msg))[:])
}
// prependIncompleteChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17671
func prependIncompleteChunk(connection []UA_Connection, message []UA_ByteString) UA_StatusCode {
	var length uint = uint(connection[0].incompleteMessage.length) + uint(message[0].length)
	var data []UA_Byte = make([]UA_Byte, uint(length)/1)
	if data == nil {
		// Allocate the new message buffer
		UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&connection[0].incompleteMessage))[:])
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	// Copy / release the current message buffer
	memcpy((*[100000000]UA_Byte)(unsafe.Pointer(&data[uint(connection[0].incompleteMessage.length)]))[:], message[0].data, uint32((uint(message[0].length))))
	message[0].length = length
	message[0].data = data
	connection[0].incompleteMessage = UA_BYTESTRING_NULL
	return 0
}
// bufferIncompleteChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17689
func bufferIncompleteChunk(connection []UA_Connection, pos []UA_Byte, end []UA_Byte) UA_StatusCode {
	var length uint = uint((uint32((uintptr_t(end) - uintptr_t(pos)))))
	var retval UA_StatusCode = UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&connection[0].incompleteMessage))[:], uint(length))
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	memcpy(connection[0].incompleteMessage.data, pos, uint32((uint(length))))
	return 0
}
// processChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17699
func processChunk(connection []UA_Connection, application interface{}, processCallback UA_Connection_processChunk, posp [][]UA_Byte, end []UA_Byte, done []UA_Boolean) UA_StatusCode {
	var pos []UA_Byte = posp[0]
	var length uint = uint((uint32((uintptr_t(end) - uintptr_t(pos)))))
	if length < uint((8)) {
		// At least 8 byte needed for the header. Wait for the next chunk.
		bufferIncompleteChunk(connection, pos, end)
		done[0] = 1
		return 0
	}
	var msgtype int = int((uint32((uint32((uint32_t((UA_UInt32(UA_Byte(pos[0])) + UA_UInt32(UA_Byte(pos[1]))<<uint64(8) + UA_UInt32(UA_Byte(pos[2]))<<uint64(16)))))))))
	if uint32(msgtype) != uint32(UA_MESSAGETYPE_MSG) && uint32(msgtype) != uint32(UA_MESSAGETYPE_ERR) && uint32(msgtype) != uint32(UA_MESSAGETYPE_OPN) && uint32(msgtype) != uint32(UA_MESSAGETYPE_HEL) && uint32(msgtype) != uint32(UA_MESSAGETYPE_ACK) && uint32(msgtype) != uint32(UA_MESSAGETYPE_CLO) {
		// Check the message type
		// The message type is not recognized
		return UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
	}
	var isFinal UA_Byte = pos[3]
	if int(uint8((__uint8_t((uint8_t((isFinal))))))) != int('C') && int(uint8((__uint8_t((uint8_t((isFinal))))))) != int('F') && int(uint8((__uint8_t((uint8_t((isFinal))))))) != int('A') {
		// The message type is not recognized
		return UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
	}
	var chunk_length UA_UInt32
	var temp UA_ByteString = UA_ByteString{8, nil}
	var temp_offset uint = 4
	// At least 8 byte left
	// Decoding the UInt32 cannot fail
	UA_UInt32_decodeBinary((*[100000000]UA_ByteString)(unsafe.Pointer(&temp))[:], (*[100000000]uint)(unsafe.Pointer(&temp_offset))[:], (*[100000000]UA_UInt32)(unsafe.Pointer(&chunk_length))[:])
	if chunk_length < UA_UInt32((uint32_t((uint32((16)))))) || chunk_length > UA_UInt32(connection[0].localConf.recvBufferSize) {
		// The message size is not allowed
		return UA_StatusCode((uint32_t((uint32((uint32(2155872256)))))))
	}
	if uint32((uint32((uint32_t((chunk_length)))))) > uint32((length)) {
		// Wait for the next packet to process the complete chunk
		bufferIncompleteChunk(connection, pos, end)
		done[0] = 1
		return 0
	}
	// Process the chunk; forward the position pointer
	temp.length = uint((uint32((uint32((uint32_t((chunk_length))))))))
	posp = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&posp[0][0])) + (uintptr)(int(uint32((uint32((uint32_t((chunk_length))))))))*unsafe.Sizeof(posp[0][0]))))[:]
	done[0] = 0
	return processCallback(application, connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&temp))[:])
}
// UA_Connection_processChunks - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17753
func UA_Connection_processChunks(connection []UA_Connection, application interface{}, processCallback UA_Connection_processChunk, packet []UA_ByteString) UA_StatusCode {
	var realloced UA_Boolean
	var message UA_ByteString = packet[0]
	var retval UA_StatusCode
	if uint(connection[0].incompleteMessage.length) > uint((0)) {
		// If we have stored an incomplete chunk, prefix to the received message.
		//     * After this block, connection->incompleteMessage is always empty. The
		//     * message and the buffer is released if allocating the memory fails.
		retval = prependIncompleteChunk(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&message))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		realloced = 1
	}
	var pos []UA_Byte = message.data
	var end []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&message.data[uint(message.length)]))[:]
	var done UA_Boolean = 1
	for {
		// Loop over the received chunks. pos is increased with each chunk.
		retval = processChunk(connection, application, UA_Connection_processChunk(processCallback), (*[100000000][]UA_Byte)(unsafe.Pointer(&pos))[:], end, (*[100000000]UA_Boolean)(unsafe.Pointer(&done))[:])
		if !(int((int((noarch.NotUA_Boolean(UA_Boolean(done)))))) != 0 && retval == UA_StatusCode((uint32_t((uint32((0))))))) {
			break
		}
	}
	if int((int((UA_Boolean(realloced))))) != 0 {
		UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&message))[:])
	}
	return UA_StatusCode(retval)
}

type completeChunkTrampolineData struct {
	called          UA_Boolean
	application     interface{}
	processCallback UA_Connection_processChunk
}
// completeChunkTrampoline - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17792
// In order to know whether a chunk was processed, we insert an indirection into
// * the callback.
func completeChunkTrampoline(application interface{}, connection []UA_Connection, chunk []UA_ByteString) UA_StatusCode {
	var data []completeChunkTrampolineData = application.([]completeChunkTrampolineData)
	data[0].called = 1
	return data.processCallback(data[0].application, connection, chunk)
}
// UA_Connection_receiveChunksBlocking - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17801
func UA_Connection_receiveChunksBlocking(connection []UA_Connection, application interface{}, processCallback UA_Connection_processChunk, timeout UA_UInt32) UA_StatusCode {
	var now UA_DateTime = UA_DateTime_nowMonotonic()
	var maxDate UA_DateTime = UA_DateTime((int64_t((__int64_t((int32(int64(int32((__int64_t((int64_t((now))))))) + int64(uint32((uint32((uint32_t((timeout)))))))*int64(10*1000))))))))
	var data completeChunkTrampolineData
	data.called = 0
	data.application = application
	data.processCallback = processCallback
	var retval UA_StatusCode
	for 1 != 0 {
		var packet UA_ByteString = UA_BYTESTRING_NULL
		// Listen for messages to arrive
		retval = connection.recv(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&packet))[:], UA_UInt32(timeout))
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			break
		}
		// Try to process one complete chunk
		retval = UA_Connection_processChunks(connection, (*[100000000]completeChunkTrampolineData)(unsafe.Pointer(&data))[:], completeChunkTrampoline, (*[100000000]UA_ByteString)(unsafe.Pointer(&packet))[:])
		connection.releaseRecvBuffer(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&packet))[:])
		if int((int((UA_Boolean(data.called))))) != 0 {
			break
		}
		// We received a message. But the chunk is incomplete. Compute the
		//         * remaining timeout.
		now = UA_DateTime_nowMonotonic()
		if now >= maxDate {
			// >= avoid timeout to be set to 0
			return 11141120
		}
		// round always to upper value to avoid timeout to be set to 0
		//         * if(maxDate - now) < (UA_DATETIME_MSEC/2)
		timeout = UA_UInt32(((int64(int32((__int64_t((int64_t((maxDate - now))))))) + int64(10*1000-int(1))) / int64(10*1000)))
	}
	return UA_StatusCode(retval)
}
// UA_Connection_detachSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17843
func UA_Connection_detachSecureChannel(connection []UA_Connection) {
	var channel []UA_SecureChannel = connection[0].channel
	if channel != nil {
		// only replace when the channel points to this connection
		UA_atomic_cmpxchg((*[100000000][]UA_Connection)(unsafe.Pointer(&channel[0].connection))[:], connection, nil)
	}
	UA_atomic_xchg((*[100000000][]UA_SecureChannel)(unsafe.Pointer(&connection[0].channel))[:], nil)
}
// UA_Connection_attachSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17852
// TODO: Return an error code
func UA_Connection_attachSecureChannel(connection []UA_Connection, channel []UA_SecureChannel) {
	if UA_atomic_cmpxchg((*[100000000][]UA_Connection)(unsafe.Pointer(&channel[0].connection))[:], nil, connection) == nil {
		UA_atomic_xchg((*[100000000][]UA_SecureChannel)(unsafe.Pointer(&connection[0].channel))[:], channel)
	}
}

var UA_SECURITY_POLICY_NONE_URI UA_ByteString = UA_ByteString{47, []byte("http://opcfoundation.org/UA/SecurityPolicy#None\x00")}
// UA_SecureChannel_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17892
// amalgamated original file "/home/travis/build/open62541/open62541/src/ua_securechannel.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2018 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014, 2016-2017 (c) Florian Palm
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2016 (c) TorbenD
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017-2018 (c) Mark Giraud, Fraunhofer IOSB
//
//opcfoundation.org/UA/SecurityPolicy#None"};
func UA_SecureChannel_init(channel []UA_SecureChannel, securityPolicy []UA_SecurityPolicy, remoteCertificate []UA_ByteString) UA_StatusCode {
	if channel == nil || securityPolicy == nil || remoteCertificate == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	// Linked lists are also initialized by zeroing out
	noarch.Memset(channel, byte(0), 192)
	channel[0].state = UA_SECURECHANNELSTATE_FRESH
	channel[0].securityPolicy = securityPolicy
	var retval UA_StatusCode
	if channel[0].securityPolicy[0].certificateVerification != nil {
		retval = channel.securityPolicy.certificateVerification.verifyCertificate(channel[0].securityPolicy[0].certificateVerification[0].context, remoteCertificate)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
	} else {
		UA_LOG_WARNING(UA_Logger(channel[0].securityPolicy[0].logger), UA_LOGCATEGORY_SECURITYPOLICY, []byte("No PKI plugin set. Accepting all certificates\x00"))
	}
	retval = securityPolicy.channelModule.newContext(securityPolicy, remoteCertificate, (*[100000000]interface{})(unsafe.Pointer(&channel[0].channelContext))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	retval = UA_ByteString_copy(remoteCertificate, (*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].remoteCertificate))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	var remoteCertificateThumbprint UA_ByteString = UA_ByteString{20, channel[0].remoteCertificateThumbprint[:]}
	retval = securityPolicy.asymmetricModule.makeCertificateThumbprint(securityPolicy, (*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].remoteCertificate))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&remoteCertificateThumbprint))[:])
	return UA_StatusCode(retval)
}
// UA_SecureChannel_deleteMembersCleanup - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17933
func UA_SecureChannel_deleteMembersCleanup(channel []UA_SecureChannel) {
	// Delete members
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].remoteCertificate))[:])
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].localNonce))[:])
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].remoteNonce))[:])
	UA_ChannelSecurityToken_deleteMembers((*[100000000]UA_ChannelSecurityToken)(unsafe.Pointer(&channel[0].securityToken))[:])
	UA_ChannelSecurityToken_deleteMembers((*[100000000]UA_ChannelSecurityToken)(unsafe.Pointer(&channel[0].nextSecurityToken))[:])
	if channel[0].securityPolicy != nil {
		// Delete the channel context for the security policy
		channel.securityPolicy.channelModule.deleteContext(channel[0].channelContext)
	}
	if channel[0].connection != nil {
		if uint32(channel[0].connection[0].state) != uint32(UA_CONNECTION_CLOSED) {
			// Detach from the connection and close the connection
			channel.connection.close(channel[0].connection)
		}
		UA_Connection_detachSecureChannel(channel[0].connection)
	}
	var sh []UA_SessionHeader
	var temp []UA_SessionHeader
	{
		// Remove session pointers (not the sessions) and NULL the pointers back to
		//     * the SecureChannel in the Session
		for sh = ((*[100000000]session_pointerlist)(unsafe.Pointer(&channel[0].sessions))[:])[0].lh_first; sh != nil && func() int {
			temp = (sh)[0].pointers.le_next
			tempVar := &1
			return *tempVar
		}() != 0; sh = temp {
			sh[0].channel = nil
			for {
				if (sh)[0].pointers.le_next != nil {
					(sh)[0].pointers.le_next[0].pointers.le_prev = (sh)[0].pointers.le_prev
				}
				(sh)[0].pointers.le_prev[0] = (sh)[0].pointers.le_next
				if noarch.NotInt((0)) != 0 {
					break
				}
			}
		}
	}
	var me []MessageEntry
	var temp_me []MessageEntry
	{
		// Remove the buffered chunks
		for me = ((*[100000000]chunk_pointerlist)(unsafe.Pointer(&channel[0].chunks))[:])[0].lh_first; me != nil && func() int {
			temp_me = (me)[0].pointers.le_next
			tempVar := &1
			return *tempVar
		}() != 0; me = temp_me {
			var cp []ChunkPayload
			var temp_cp []ChunkPayload
			for cp = ((*[100000000]chunkpayload_pointerlist)(unsafe.Pointer(&me[0].chunkPayload))[:])[0].sqh_first; cp != nil && func() int {
				temp_cp = (cp)[0].pointers.sqe_next
				tempVar := &1
				return *tempVar
			}() != 0; cp = temp_cp {
				UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&cp[0].bytes))[:])
				_ = cp
			}
			for {
				if (me)[0].pointers.le_next != nil {
					(me)[0].pointers.le_next[0].pointers.le_prev = (me)[0].pointers.le_prev
				}
				(me)[0].pointers.le_prev[0] = (me)[0].pointers.le_next
				if noarch.NotInt((0)) != 0 {
					break
				}
			}
			_ = me
		}
	}
}
// UA_SecureChannel_generateLocalNonce - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17974
func UA_SecureChannel_generateLocalNonce(channel []UA_SecureChannel) UA_StatusCode {
	if channel[0].securityPolicy == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var nonceLength uint = uint(channel[0].securityPolicy[0].symmetricModule.secureChannelNonceLength)
	if uint(channel[0].localNonce.length) != nonceLength {
		// Is the length of the previous nonce correct?
		UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].localNonce))[:])
		var retval UA_StatusCode = UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].localNonce))[:], uint(nonceLength))
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
	}
	return channel.securityPolicy.symmetricModule.generateNonce(channel[0].securityPolicy, (*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].localNonce))[:])
}
// UA_SecureChannel_generateLocalKeys - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:17992
func UA_SecureChannel_generateLocalKeys(channel []UA_SecureChannel, securityPolicy []UA_SecurityPolicy) UA_StatusCode {
	var channelModule []UA_SecurityPolicyChannelModule = (*[100000000]UA_SecurityPolicyChannelModule)(unsafe.Pointer(&securityPolicy[0].channelModule))[:]
	var symmetricModule []UA_SecurityPolicySymmetricModule = (*[100000000]UA_SecurityPolicySymmetricModule)(unsafe.Pointer(&securityPolicy[0].symmetricModule))[:]
	var cryptoModule []UA_SecurityPolicyCryptoModule = (*[100000000]UA_SecurityPolicyCryptoModule)(unsafe.Pointer(&securityPolicy[0].symmetricModule.cryptoModule))[:]
	var encryptionKeyLength uint = cryptoModule.encryptionAlgorithm.getLocalKeyLength(securityPolicy, channel[0].channelContext)
	var encryptionBlockSize uint = cryptoModule.encryptionAlgorithm.getLocalBlockSize(securityPolicy, channel[0].channelContext)
	var signingKeyLength uint = cryptoModule.signatureAlgorithm.getLocalKeyLength(securityPolicy, channel[0].channelContext)
	var bufSize uint = encryptionBlockSize + signingKeyLength + encryptionKeyLength
	var bufBytes []UA_Byte
	var buffer UA_ByteString = UA_ByteString{uint(bufSize), bufBytes}
	var retval UA_StatusCode = symmetricModule.generateKey(securityPolicy, (*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].remoteNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].localNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&buffer))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Symmetric key length
		// Local keys
		return UA_StatusCode(retval)
	}
	var localSigningKey UA_ByteString = UA_ByteString{uint(signingKeyLength), buffer.data}
	var localEncryptingKey UA_ByteString = UA_ByteString{uint(encryptionKeyLength), (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buffer.data[0])) + (uintptr)(int(uint32((signingKeyLength))))*unsafe.Sizeof(buffer.data[0]))))[:]}
	var localIv UA_ByteString = UA_ByteString{uint(encryptionBlockSize), (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&(*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buffer.data[0])) + (uintptr)(int(uint32((signingKeyLength))))*unsafe.Sizeof(buffer.data[0]))))[:][0])) + (uintptr)(int(uint32((encryptionKeyLength))))*unsafe.Sizeof((*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buffer.data[0])) + (uintptr)(int(uint32((signingKeyLength))))*unsafe.Sizeof(buffer.data[0]))))[:][0]))))[:]}
	retval = channelModule.setLocalSymSigningKey(channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&localSigningKey))[:])
	retval |= channelModule.setLocalSymEncryptingKey(channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&localEncryptingKey))[:])
	retval |= channelModule.setLocalSymIv(channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&localIv))[:])
	return UA_StatusCode(retval)
}
// UA_SecureChannel_generateRemoteKeys - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18026
func UA_SecureChannel_generateRemoteKeys(channel []UA_SecureChannel, securityPolicy []UA_SecurityPolicy) UA_StatusCode {
	var channelModule []UA_SecurityPolicyChannelModule = (*[100000000]UA_SecurityPolicyChannelModule)(unsafe.Pointer(&securityPolicy[0].channelModule))[:]
	var symmetricModule []UA_SecurityPolicySymmetricModule = (*[100000000]UA_SecurityPolicySymmetricModule)(unsafe.Pointer(&securityPolicy[0].symmetricModule))[:]
	var cryptoModule []UA_SecurityPolicyCryptoModule = (*[100000000]UA_SecurityPolicyCryptoModule)(unsafe.Pointer(&securityPolicy[0].symmetricModule.cryptoModule))[:]
	var encryptionKeyLength uint = cryptoModule.encryptionAlgorithm.getRemoteKeyLength(securityPolicy, channel[0].channelContext)
	var encryptionBlockSize uint = cryptoModule.encryptionAlgorithm.getRemoteBlockSize(securityPolicy, channel[0].channelContext)
	var signingKeyLength uint = cryptoModule.signatureAlgorithm.getRemoteKeyLength(securityPolicy, channel[0].channelContext)
	var bufSize uint = encryptionBlockSize + signingKeyLength + encryptionKeyLength
	var bufBytes []UA_Byte
	var buffer UA_ByteString = UA_ByteString{uint(bufSize), bufBytes}
	var retval UA_StatusCode = symmetricModule.generateKey(securityPolicy, (*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].localNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].remoteNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&buffer))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Symmetric key length
		// Remote keys
		return UA_StatusCode(retval)
	}
	var remoteSigningKey UA_ByteString = UA_ByteString{uint(signingKeyLength), buffer.data}
	var remoteEncryptingKey UA_ByteString = UA_ByteString{uint(encryptionKeyLength), (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buffer.data[0])) + (uintptr)(int(uint32((signingKeyLength))))*unsafe.Sizeof(buffer.data[0]))))[:]}
	var remoteIv UA_ByteString = UA_ByteString{uint(encryptionBlockSize), (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&(*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buffer.data[0])) + (uintptr)(int(uint32((signingKeyLength))))*unsafe.Sizeof(buffer.data[0]))))[:][0])) + (uintptr)(int(uint32((encryptionKeyLength))))*unsafe.Sizeof((*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buffer.data[0])) + (uintptr)(int(uint32((signingKeyLength))))*unsafe.Sizeof(buffer.data[0]))))[:][0]))))[:]}
	retval = channelModule.setRemoteSymSigningKey(channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&remoteSigningKey))[:])
	retval |= channelModule.setRemoteSymEncryptingKey(channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&remoteEncryptingKey))[:])
	retval |= channelModule.setRemoteSymIv(channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&remoteIv))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	return UA_StatusCode(retval)
}
// UA_SecureChannel_generateNewKeys - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18063
func UA_SecureChannel_generateNewKeys(channel []UA_SecureChannel) UA_StatusCode {
	var retval UA_StatusCode = UA_SecureChannel_generateLocalKeys(channel, channel[0].securityPolicy)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	retval = UA_SecureChannel_generateRemoteKeys(channel, channel[0].securityPolicy)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	return UA_StatusCode(retval)
}
// UA_SecureChannel_getSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18076
func UA_SecureChannel_getSession(channel []UA_SecureChannel, authenticationToken []UA_NodeId) []UA_SessionHeader {
	var sh []UA_SessionHeader
	for sh = ((*[100000000]session_pointerlist)(unsafe.Pointer(&channel[0].sessions))[:])[0].lh_first; sh != nil; sh = (sh)[0].pointers.le_next {
		if int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&sh[0].authenticationToken))[:], authenticationToken))))) != 0 {
			break
		}
	}
	return sh
}
// UA_SecureChannel_revolveTokens - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18087
func UA_SecureChannel_revolveTokens(channel []UA_SecureChannel) UA_StatusCode {
	if UA_UInt32(channel[0].nextSecurityToken.tokenId) == UA_UInt32((uint32_t((uint32((0)))))) {
		// no security token issued
		return UA_StatusCode((uint32_t((uint32((uint32(2156331008)))))))
	}
	//FIXME: not thread-safe
	memcpy((*[100000000]UA_ChannelSecurityToken)(unsafe.Pointer(&channel[0].securityToken))[:], (*[100000000]UA_ChannelSecurityToken)(unsafe.Pointer(&channel[0].nextSecurityToken))[:], 24)
	UA_ChannelSecurityToken_init((*[100000000]UA_ChannelSecurityToken)(unsafe.Pointer(&channel[0].nextSecurityToken))[:])
	return UA_SecureChannel_generateNewKeys(channel)
}
// calculatePaddingAsym - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18102
//
// Send Asymmetric Message
//
func calculatePaddingAsym(securityPolicy []UA_SecurityPolicy, channelContext interface{}, bytesToWrite uint, paddingSize []UA_Byte, extraPaddingSize []UA_Byte) UA_UInt16 {
	var plainTextBlockSize uint = securityPolicy.asymmetricModule.cryptoModule.encryptionAlgorithm.getRemotePlainTextBlockSize(securityPolicy, channelContext)
	var signatureSize uint = securityPolicy.asymmetricModule.cryptoModule.signatureAlgorithm.getLocalSignatureSize(securityPolicy, channelContext)
	var paddingBytes uint = 1
	if securityPolicy.asymmetricModule.cryptoModule.encryptionAlgorithm.getRemoteKeyLength(securityPolicy, channelContext) > uint((2048)) {
		paddingBytes ++
	}
	var padding uint = plainTextBlockSize - (bytesToWrite+signatureSize+paddingBytes)%plainTextBlockSize
	paddingSize[0] = UA_Byte((uint32((padding & uint((255))))))
	extraPaddingSize[0] = UA_Byte((padding >> uint64(8)))
	return UA_UInt16(uint(padding))
}
// calculateAsymAlgSecurityHeaderLength - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18120
func calculateAsymAlgSecurityHeaderLength(channel []UA_SecureChannel) uint {
	var asymHeaderLength uint = uint((12 + uint32((uint(channel[0].securityPolicy[0].policyUri.length)))))
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		// OPN is always encrypted even if mode sign only
		// Thumbprints are always 20 byte long
		asymHeaderLength += uint((20))
		asymHeaderLength += uint(channel[0].securityPolicy[0].localCertificate.length)
	}
	return uint(asymHeaderLength)
}
// hideBytesAsym - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18133
func hideBytesAsym(channel []UA_SecureChannel, buf_start [][]UA_Byte, buf_end [][]UA_Byte) {
	var securityPolicy []UA_SecurityPolicy = channel[0].securityPolicy
	buf_start = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buf_start[0][0])) + (uintptr)(12+8)*unsafe.Sizeof(buf_start[0][0]))))[:]
	// Add the SecurityHeaderLength
	buf_start = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buf_start[0][0])) + (uintptr)(int(uint32((calculateAsymAlgSecurityHeaderLength(channel)))))*unsafe.Sizeof(buf_start[0][0]))))[:]
	var potentialEncryptionMaxSize uint = uint((uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&buf_end[0]))))) - uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&buf_start[0]))))))) + uint((8))
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		// Hide bytes for signature and padding
		buf_end = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buf_end[0][0])) - (uintptr)(int(uint32((securityPolicy.asymmetricModule.cryptoModule.signatureAlgorithm.getLocalSignatureSize(securityPolicy, channel[0].channelContext)))))*unsafe.Sizeof(buf_end[0][0]))))[:]
		// padding byte and extraPadding byte
		buf_end = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buf_end[0][0])) - (uintptr)(2)*unsafe.Sizeof(buf_end[0][0]))))[:]
		// Add some overhead length due to RSA implementations adding a signature themselves
		buf_end = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buf_end[0][0])) - (uintptr)(int(uint32((UA_SecurityPolicy_getRemoteAsymEncryptionBufferLengthOverhead(securityPolicy, channel[0].channelContext, uint(potentialEncryptionMaxSize))))))*unsafe.Sizeof(buf_end[0][0]))))[:]
	}
}
// UA_SecureChannel_sendAsymmetricOPNMessage - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18157
// Sends an OPN message using asymmetric encryption if defined
func UA_SecureChannel_sendAsymmetricOPNMessage(channel []UA_SecureChannel, requestId UA_UInt32, content interface{}, contentType []UA_DataType) UA_StatusCode {
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_INVALID) {
		return UA_StatusCode((uint32_t((uint32((uint32(2152988672)))))))
	}
	var securityPolicy []UA_SecurityPolicy = channel[0].securityPolicy
	var connection []UA_Connection = channel[0].connection
	if connection == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var buf UA_ByteString = UA_BYTESTRING_NULL
	var retval UA_StatusCode = connection.getSendBuffer(connection, uint(UA_UInt32(connection[0].localConf.sendBufferSize)), (*[100000000]UA_ByteString)(unsafe.Pointer(&buf))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Allocate the message buffer
		return UA_StatusCode(retval)
	}
	var buf_pos []UA_Byte = buf.data
	var buf_end []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&buf.data[uint(buf.length)]))[:]
	// Restrict buffer to the available space for the payload
	hideBytesAsym(channel, (*[100000000][]UA_Byte)(unsafe.Pointer(&buf_pos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&buf_end))[:])
	var typeId UA_NodeId = UA_NODEID_NUMERIC(0, UA_UInt32(UA_UInt16(contentType[0].binaryEncodingId)))
	// Encode the message type and content
	retval = UA_encodeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&typeId))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&buf_pos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&buf_end))[:], nil, nil)
	retval |= UA_encodeBinary(content, contentType, (*[100000000][]UA_Byte)(unsafe.Pointer(&buf_pos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&buf_end))[:], nil, nil)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		connection.releaseSendBuffer(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&buf))[:])
		return UA_StatusCode(retval)
	}
	var securityHeaderLength uint = calculateAsymAlgSecurityHeaderLength(channel)
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		var buf_body_start []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&buf.data[uint32(12+8)+uint32((securityHeaderLength))]))[:]
		var bytesToWrite uint = uint((uint32((uintptr_t(buf_pos) - uintptr_t(buf_body_start) + uintptr_t((8))))))
		var paddingSize UA_Byte
		var extraPaddingSize UA_Byte
		var totalPaddingSize UA_UInt16 = calculatePaddingAsym(securityPolicy, channel[0].channelContext, uint(bytesToWrite), (*[100000000]UA_Byte)(unsafe.Pointer(&paddingSize))[:], (*[100000000]UA_Byte)(unsafe.Pointer(&extraPaddingSize))[:])
		{
			var i UA_UInt16
			for ; int(uint16((uint16((uint16_t((i))))))) <= int(uint16((uint16((uint16_t((totalPaddingSize))))))); i++ {
				// Compute the length of the asym header
				// Pad the message. Also if securitymode is only sign, since we are using
				//     * asymmetric communication to exchange keys and thus need to encrypt.
				// This is <= because the paddingSize byte also has to be written.
				buf_pos[0] = paddingSize
				buf_pos = buf_pos[1:]
			}
		}
		if securityPolicy.asymmetricModule.cryptoModule.encryptionAlgorithm.getRemoteKeyLength(securityPolicy, channel[0].channelContext) > uint((2048)) {
			buf_pos[0] = extraPaddingSize
			buf_pos = buf_pos[1:]
		}
	}
	var pre_sig_length uint = uint((uint32((uintptr_t(buf_pos) - uintptr_t(buf.data)))))
	var total_length uint = pre_sig_length
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		// The total message length
		total_length += securityPolicy.asymmetricModule.cryptoModule.signatureAlgorithm.getLocalSignatureSize(securityPolicy, channel[0].channelContext)
	}
	var header_pos []UA_Byte = buf.data
	var dataToEncryptLength uint = total_length - uint((12 + uint32((securityHeaderLength))))
	var respHeader UA_SecureConversationMessageHeader
	// Encode the headers at the beginning of the message
	respHeader.messageHeader.messageTypeAndChunkType = UA_UInt32((uint32_t((uint32((uint32(UA_MESSAGETYPE_OPN + UA_CHUNKTYPE_FINAL)))))))
	respHeader.messageHeader.messageSize = UA_UInt32((uint32((total_length + UA_SecurityPolicy_getRemoteAsymEncryptionBufferLengthOverhead(securityPolicy, channel[0].channelContext, uint(dataToEncryptLength))))))
	respHeader.secureChannelId = UA_UInt32(channel[0].securityToken.channelId)
	retval = UA_encodeBinary((*[100000000]UA_SecureConversationMessageHeader)(unsafe.Pointer(&respHeader))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[11]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&header_pos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&buf_end))[:], nil, nil)
	var asymHeader UA_AsymmetricAlgorithmSecurityHeader
	UA_AsymmetricAlgorithmSecurityHeader_init((*[100000000]UA_AsymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&asymHeader))[:])
	asymHeader.securityPolicyUri = UA_ByteString(channel[0].securityPolicy[0].policyUri)
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		asymHeader.senderCertificate = UA_ByteString(channel[0].securityPolicy[0].localCertificate)
		asymHeader.receiverCertificateThumbprint.length = 20
		asymHeader.receiverCertificateThumbprint.data = channel[0].remoteCertificateThumbprint[:]
	}
	retval |= UA_encodeBinary((*[100000000]UA_AsymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&asymHeader))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[5]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&header_pos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&buf_end))[:], nil, nil)
	var seqHeader UA_SequenceHeader
	seqHeader.requestId = requestId
	seqHeader.sequenceNumber = UA_UInt32((UA_atomic_addUInt32((*[100000000]UA_UInt32)(unsafe.Pointer(&channel[0].sendSequenceNumber))[:], 1)))
	retval |= UA_encodeBinary((*[100000000]UA_SequenceHeader)(unsafe.Pointer(&seqHeader))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[7]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&header_pos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&buf_end))[:], nil, nil)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Did encoding the header succeed?
		connection.releaseSendBuffer(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&buf))[:])
		return UA_StatusCode(retval)
	}
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		var dataToSign UA_ByteString = UA_ByteString{uint(pre_sig_length), buf.data}
		var sigsize uint = securityPolicy.asymmetricModule.cryptoModule.signatureAlgorithm.getLocalSignatureSize(securityPolicy, channel[0].channelContext)
		var signature UA_ByteString = UA_ByteString{uint(sigsize), (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buf.data[0])) + (uintptr)(int(uint32((pre_sig_length))))*unsafe.Sizeof(buf.data[0]))))[:]}
		// Sign message
		retval = securityPolicy.asymmetricModule.cryptoModule.signatureAlgorithm.sign(securityPolicy, channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&dataToSign))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&signature))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			connection.releaseSendBuffer(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&buf))[:])
			return UA_StatusCode(retval)
		}
		var unencrypted_length uint = uint((12 + uint32((securityHeaderLength))))
		var dataToEncrypt UA_ByteString = UA_ByteString{total_length - unencrypted_length, (*[100000000]UA_Byte)(unsafe.Pointer(&buf.data[unencrypted_length]))[:]}
		// Specification part 6, 6.7.4: The OpenSecureChannel Messages are
		//         * signed and encrypted if the SecurityMode is not None (even if the
		//         * SecurityMode is SignOnly).
		retval = securityPolicy.asymmetricModule.cryptoModule.encryptionAlgorithm.encrypt(securityPolicy, channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&dataToEncrypt))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			connection.releaseSendBuffer(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&buf))[:])
			return UA_StatusCode(retval)
		}
	}
	// Send the message, the buffer is freed in the network layer
	buf.length = uint((uint32((uint32((uint32_t((UA_UInt32(respHeader.messageHeader.messageSize)))))))))
	retval = connection.send(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&buf))[:])
	return UA_StatusCode(retval)
}
// calculatePaddingSym - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18307
//
// Send Symmetric Message
//
func calculatePaddingSym(securityPolicy []UA_SecurityPolicy, channelContext interface{}, bytesToWrite uint, paddingSize []UA_Byte, extraPaddingSize []UA_Byte) UA_UInt16 {
	var encryptionBlockSize uint = securityPolicy.symmetricModule.cryptoModule.encryptionAlgorithm.getLocalBlockSize(securityPolicy, channelContext)
	var signatureSize uint = securityPolicy.symmetricModule.cryptoModule.signatureAlgorithm.getLocalSignatureSize(securityPolicy, channelContext)
	var padding UA_UInt16 = UA_UInt16((uint32((encryptionBlockSize - (bytesToWrite+signatureSize+uint((1)))%encryptionBlockSize))))
	paddingSize[0] = UA_Byte(UA_UInt16(padding))
	extraPaddingSize[0] = UA_Byte((int(uint16((uint16((uint16_t((padding))))))) >> uint64(8)))
	return UA_UInt16(padding)
}
// setBufPos - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18322
func setBufPos(mc []UA_MessageContext) {
	var channel []UA_SecureChannel = mc[0].channel
	var securityPolicy []UA_SecurityPolicy = channel[0].securityPolicy
	// Forward the data pointer so that the payload is encoded after the
	//     * message header
	mc[0].buf_pos = (*[100000000]UA_Byte)(unsafe.Pointer(&mc[0].messageBuffer.data[24]))[:]
	mc[0].buf_end = (*[100000000]UA_Byte)(unsafe.Pointer(&mc[0].messageBuffer.data[uint(mc[0].messageBuffer.length)]))[:]
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		mc.buf_end = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&mc[0].buf_end[0])) - (uintptr)(int(uint32((securityPolicy.symmetricModule.cryptoModule.signatureAlgorithm.getLocalSignatureSize(securityPolicy, channel[0].channelContext)))))*unsafe.Sizeof(mc[0].buf_end[0]))))[:]
	}
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		// Hide a byte needed for padding
		mc.buf_end = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&mc[0].buf_end[0])) - (uintptr)(2)*unsafe.Sizeof(mc[0].buf_end[0]))))[:]
	}
}
// sendSymmetricChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18342
func sendSymmetricChunk(mc []UA_MessageContext) UA_StatusCode {
	var res UA_StatusCode
	var channel []UA_SecureChannel = mc[0].channel
	var securityPolicy []UA_SecurityPolicy = channel[0].securityPolicy
	var connection []UA_Connection = channel[0].connection
	if connection == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var buf_body_start []UA_Byte = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&mc[0].messageBuffer.data[0])) + (uintptr)(24)*unsafe.Sizeof(mc[0].messageBuffer.data[0]))))[:]
	var buf_body_end []UA_Byte = mc[0].buf_pos
	var bodyLength uint = uint((uint32((uintptr_t(buf_body_end) - uintptr_t(buf_body_start)))))
	// Will this chunk surpass the capacity of the SecureChannel for the message?
	mc[0].messageSizeSoFar += bodyLength
	mc[0].chunksSoFar ++
	if uint(mc[0].messageSizeSoFar) > uint((uint32((uint32((uint32_t((UA_UInt32(connection[0].remoteConf.maxMessageSize))))))))) && UA_UInt32(connection[0].remoteConf.maxMessageSize) != UA_UInt32((uint32_t((uint32((0)))))) {
		res = UA_StatusCode((uint32_t((uint32((uint32(2159607808)))))))
	}
	if uint32(uint16((uint16((uint16_t((UA_UInt16(mc[0].chunksSoFar)))))))) > uint32((uint32((uint32_t((UA_UInt32(connection[0].remoteConf.maxChunkCount))))))) && UA_UInt32(connection[0].remoteConf.maxChunkCount) != UA_UInt32((uint32_t((uint32((0)))))) {
		res = UA_StatusCode((uint32_t((uint32((uint32(2159607808)))))))
	}
	if res != UA_StatusCode((uint32_t((uint32((0)))))) {
		connection.releaseSendBuffer(channel[0].connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&mc[0].messageBuffer))[:])
		return UA_StatusCode(res)
	}
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		var bytesToWrite uint = bodyLength + uint((8))
		var paddingSize UA_Byte
		var extraPaddingSize UA_Byte
		var totalPaddingSize UA_UInt16 = calculatePaddingSym(securityPolicy, channel[0].channelContext, uint(bytesToWrite), (*[100000000]UA_Byte)(unsafe.Pointer(&paddingSize))[:], (*[100000000]UA_Byte)(unsafe.Pointer(&extraPaddingSize))[:])
		{
			var i UA_UInt16
			for ; int(uint16((uint16((uint16_t((i))))))) <= int(uint16((uint16((uint16_t((totalPaddingSize))))))); i++ {
				// Pad the message. The bytes for the padding and signature were removed
				//     * from buf_end before encoding the payload. So we don't check here.
				// This is <= because the paddingSize byte also has to be written.
				mc[0].buf_pos[0] = paddingSize
				mc.buf_pos = mc[0].buf_pos[1:]
			}
		}
		if int(uint8((__uint8_t((uint8_t((extraPaddingSize))))))) > 0 {
			mc[0].buf_pos[0] = extraPaddingSize
			mc.buf_pos = mc[0].buf_pos[1:]
		}
	}
	var pre_sig_length uint = uint((uint32((uintptr_t((mc[0].buf_pos)) - uintptr_t(mc[0].messageBuffer.data)))))
	var total_length uint = pre_sig_length
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		// The total message length
		total_length += securityPolicy.symmetricModule.cryptoModule.signatureAlgorithm.getLocalSignatureSize(securityPolicy, channel[0].channelContext)
	}
	// For giving the buffer to the network layer
	mc[0].messageBuffer.length = total_length
	var header_pos []UA_Byte = mc[0].messageBuffer.data
	var respHeader UA_SecureConversationMessageHeader
	// Encode the chunk headers at the beginning of the buffer
	respHeader.secureChannelId = UA_UInt32(channel[0].securityToken.channelId)
	respHeader.messageHeader.messageTypeAndChunkType = UA_UInt32(mc[0].messageType)
	respHeader.messageHeader.messageSize = UA_UInt32(uint(total_length))
	if int((int((UA_Boolean(mc[0].final))))) != 0 {
		respHeader.messageHeader.messageTypeAndChunkType += UA_UInt32((uint32_t((uint32((uint32(UA_CHUNKTYPE_FINAL)))))))
	} else {
		respHeader.messageHeader.messageTypeAndChunkType += UA_UInt32((uint32_t((uint32((uint32(UA_CHUNKTYPE_INTERMEDIATE)))))))
	}
	res = UA_encodeBinary((*[100000000]UA_SecureConversationMessageHeader)(unsafe.Pointer(&respHeader))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[11]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&header_pos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&mc[0].buf_end))[:], nil, nil)
	var symSecHeader UA_SymmetricAlgorithmSecurityHeader
	symSecHeader.tokenId = UA_UInt32(channel[0].securityToken.tokenId)
	res |= UA_encodeBinary((*[100000000]UA_UInt32)(unsafe.Pointer(&symSecHeader.tokenId))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[10]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&header_pos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&mc[0].buf_end))[:], nil, nil)
	var seqHeader UA_SequenceHeader
	seqHeader.requestId = UA_UInt32(mc[0].requestId)
	seqHeader.sequenceNumber = UA_UInt32((UA_atomic_addUInt32((*[100000000]UA_UInt32)(unsafe.Pointer(&channel[0].sendSequenceNumber))[:], 1)))
	res |= UA_encodeBinary((*[100000000]UA_SequenceHeader)(unsafe.Pointer(&seqHeader))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TRANSPORT[7]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&header_pos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&mc[0].buf_end))[:], nil, nil)
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		var dataToSign UA_ByteString = UA_ByteString(mc[0].messageBuffer)
		// Sign message
		dataToSign.length = pre_sig_length
		var signature UA_ByteString
		signature.length = securityPolicy.symmetricModule.cryptoModule.signatureAlgorithm.getLocalSignatureSize(securityPolicy, channel[0].channelContext)
		signature.data = mc[0].buf_pos
		res |= securityPolicy.symmetricModule.cryptoModule.signatureAlgorithm.sign(securityPolicy, channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&dataToSign))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&signature))[:])
	}
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		var dataToEncrypt UA_ByteString
		// Encrypt message
		dataToEncrypt.data = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&mc[0].messageBuffer.data[0])) + (uintptr)(12+4)*unsafe.Sizeof(mc[0].messageBuffer.data[0]))))[:]
		dataToEncrypt.length = total_length-uint((uint32(12+4)))
		res |= securityPolicy.symmetricModule.cryptoModule.encryptionAlgorithm.encrypt(securityPolicy, channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&dataToEncrypt))[:])
	}
	if res != UA_StatusCode((uint32_t((uint32((0)))))) {
		connection.releaseSendBuffer(channel[0].connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&mc[0].messageBuffer))[:])
		return UA_StatusCode(res)
	}
	// Send the chunk, the buffer is freed in the network layer
	return connection.send(channel[0].connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&mc[0].messageBuffer))[:])
}
// sendSymmetricEncodingCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18456
// Callback from the encoding layer. Send the chunk and replace the buffer.
func sendSymmetricEncodingCallback(data interface{}, buf_pos [][]UA_Byte, buf_end [][]UA_Byte) UA_StatusCode {
	var mc []UA_MessageContext = data.([]UA_MessageContext)
	// Set buf values from encoding in the messagecontext
	mc[0].buf_pos = buf_pos[0]
	mc[0].buf_end = buf_end[0]
	var retval UA_StatusCode = sendSymmetricChunk(mc)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Send out
		return UA_StatusCode(retval)
	}
	var connection []UA_Connection = mc[0].channel[0].connection
	// Set a new buffer for the next chunk
	retval = connection.getSendBuffer(connection, uint(UA_UInt32(connection[0].localConf.sendBufferSize)), (*[100000000]UA_ByteString)(unsafe.Pointer(&mc[0].messageBuffer))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	// Hide bytes for header, padding and signature
	setBufPos(mc)
	buf_pos[0] = mc[0].buf_pos
	buf_end[0] = mc[0].buf_end
	return 0
}
// UA_MessageContext_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18482
func UA_MessageContext_begin(mc []UA_MessageContext, channel []UA_SecureChannel, requestId UA_UInt32, messageType int) UA_StatusCode {
	var connection []UA_Connection = channel[0].connection
	if connection == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if uint32(messageType) != uint32(UA_MESSAGETYPE_MSG) && uint32(messageType) != uint32(UA_MESSAGETYPE_CLO) {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	// Create the chunking info structure
	mc[0].channel = channel
	mc[0].requestId = requestId
	mc[0].chunksSoFar = 0
	mc[0].messageSizeSoFar = 0
	mc[0].final = 0
	mc[0].messageBuffer = UA_BYTESTRING_NULL
	mc[0].messageType = UA_UInt32((uint32_t((uint32((uint32(messageType)))))))
	if UA_UInt32(connection[0].localConf.sendBufferSize) <= 24 {
		// Minimum required size
		return UA_StatusCode((uint32_t((uint32((uint32(2159607808)))))))
	}
	var retval UA_StatusCode = connection.getSendBuffer(connection, uint(UA_UInt32(connection[0].localConf.sendBufferSize)), (*[100000000]UA_ByteString)(unsafe.Pointer(&mc[0].messageBuffer))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Allocate the message buffer
		return UA_StatusCode(retval)
	}
	// Hide bytes for header, padding and signature
	setBufPos(mc)
	return 0
}
// UA_MessageContext_encode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18517
func UA_MessageContext_encode(mc []UA_MessageContext, content interface{}, contentType []UA_DataType) UA_StatusCode {
	var retval UA_StatusCode = UA_encodeBinary(content, contentType, (*[100000000][]UA_Byte)(unsafe.Pointer(&mc[0].buf_pos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&mc[0].buf_end))[:], sendSymmetricEncodingCallback, mc)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		if uint(mc[0].messageBuffer.length) > uint((0)) {
			var connection []UA_Connection = mc[0].channel[0].connection
			// TODO: Send the abort message
			connection.releaseSendBuffer(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&mc[0].messageBuffer))[:])
		}
	}
	return UA_StatusCode(retval)
}
// UA_MessageContext_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18532
func UA_MessageContext_finish(mc []UA_MessageContext) UA_StatusCode {
	mc[0].final = 1
	return sendSymmetricChunk(mc)
}
// UA_MessageContext_abort - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18538
func UA_MessageContext_abort(mc []UA_MessageContext) {
	var connection []UA_Connection = mc[0].channel[0].connection
	connection.releaseSendBuffer(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&mc[0].messageBuffer))[:])
}
// UA_SecureChannel_sendSymmetricMessage - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18544
func UA_SecureChannel_sendSymmetricMessage(channel []UA_SecureChannel, requestId UA_UInt32, messageType int, payload interface{}, payloadType []UA_DataType) UA_StatusCode {
	if channel == nil || payload == nil || payloadType == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if channel[0].connection != nil {
		if uint32(channel[0].connection[0].state) == uint32(UA_CONNECTION_CLOSED) {
			return UA_StatusCode((uint32_t((uint32((uint32(2158886912)))))))
		}
	}
	var mc UA_MessageContext
	var retval UA_StatusCode = UA_MessageContext_begin((*[100000000]UA_MessageContext)(unsafe.Pointer(&mc))[:], channel, UA_UInt32(requestId), messageType)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	var typeId UA_NodeId = UA_NODEID_NUMERIC(0, UA_UInt32(UA_UInt16(payloadType[0].binaryEncodingId)))
	// Assert's required for clang-analyzer
	retval = UA_MessageContext_encode((*[100000000]UA_MessageContext)(unsafe.Pointer(&mc))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&typeId))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	retval = UA_MessageContext_encode((*[100000000]UA_MessageContext)(unsafe.Pointer(&mc))[:], payload, payloadType)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	return UA_MessageContext_finish((*[100000000]UA_MessageContext)(unsafe.Pointer(&mc))[:])
}
// UA_SecureChannel_removeChunks - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18581
//
// Assemble Complete Message
//
func UA_SecureChannel_removeChunks(channel []UA_SecureChannel, requestId UA_UInt32) {
	var me []MessageEntry
	for me = ((*[100000000]chunk_pointerlist)(unsafe.Pointer(&channel[0].chunks))[:])[0].lh_first; me != nil; me = (me)[0].pointers.le_next {
		if UA_UInt32(me[0].requestId) == requestId {
			var cp []ChunkPayload
			var temp_cp []ChunkPayload
			for cp = ((*[100000000]chunkpayload_pointerlist)(unsafe.Pointer(&me[0].chunkPayload))[:])[0].sqh_first; cp != nil && func() int {
				temp_cp = (cp)[0].pointers.sqe_next
				tempVar := &1
				return *tempVar
			}() != 0; cp = temp_cp {
				UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&cp[0].bytes))[:])
				_ = cp
			}
			for {
				if (me)[0].pointers.le_next != nil {
					(me)[0].pointers.le_next[0].pointers.le_prev = (me)[0].pointers.le_prev
				}
				(me)[0].pointers.le_prev[0] = (me)[0].pointers.le_next
				if noarch.NotInt((0)) != 0 {
					break
				}
			}
			_ = me
			return
		}
	}
}
// appendChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18598
func appendChunk(messageEntry []MessageEntry, chunkBody []UA_ByteString) UA_StatusCode {
	var cp []ChunkPayload = make([]ChunkPayload, 32/32)
	var retval UA_StatusCode = UA_ByteString_copy(chunkBody, (*[100000000]UA_ByteString)(unsafe.Pointer(&cp[0].bytes))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	for {
		(cp)[0].pointers.sqe_next = nil
		// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18606 :cannot determine type for RHS 'sqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `sqh_last`
		(*[100000000]chunkpayload_pointerlist)(unsafe.Pointer(&messageEntry[0].chunkPayload))[:].sqh_last[0] = cp
		((*[100000000]chunkpayload_pointerlist)(unsafe.Pointer(&messageEntry[0].chunkPayload))[:])[0].sqh_last = (*[100000000][]ChunkPayload)(unsafe.Pointer(&(cp)[0].pointers.sqe_next))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	messageEntry[0].chunkPayloadSize += uint(chunkBody[0].length)
	return 0
}
// UA_SecureChannel_appendChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18611
func UA_SecureChannel_appendChunk(channel []UA_SecureChannel, requestId UA_UInt32, chunkBody []UA_ByteString) UA_StatusCode {
	var me []MessageEntry
	for me = ((*[100000000]chunk_pointerlist)(unsafe.Pointer(&channel[0].chunks))[:])[0].lh_first; me != nil; me = (me)[0].pointers.le_next {
		if UA_UInt32(me[0].requestId) == requestId {
			break
		}
	}
	if me == nil {
		// No chunkentry on the channel, create one
		me = make([]MessageEntry, 80*1/80)
		if me == nil {
			return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		}
		noarch.Memset(me, byte(0), 80)
		me[0].requestId = requestId
		for {
			((*[100000000]chunkpayload_pointerlist)(unsafe.Pointer(&me[0].chunkPayload))[:])[0].sqh_first = nil
			((*[100000000]chunkpayload_pointerlist)(unsafe.Pointer(&me[0].chunkPayload))[:])[0].sqh_last = (*[100000000][]ChunkPayload)(unsafe.Pointer(&((*[100000000]chunkpayload_pointerlist)(unsafe.Pointer(&me[0].chunkPayload))[:])[0].sqh_first))[:]
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		for {
			if ((me)[0].pointers.le_next = ((*[100000000]chunk_pointerlist)(unsafe.Pointer(&channel[0].chunks))[:])[0].lh_first) != nil {
				((*[100000000]chunk_pointerlist)(unsafe.Pointer(&channel[0].chunks))[:])[0].lh_first[0].pointers.le_prev = (*[100000000][]MessageEntry)(unsafe.Pointer(&(me)[0].pointers.le_next))[:]
			}
			((*[100000000]chunk_pointerlist)(unsafe.Pointer(&channel[0].chunks))[:])[0].lh_first = me
			(me)[0].pointers.le_prev = (*[100000000][]MessageEntry)(unsafe.Pointer(&((*[100000000]chunk_pointerlist)(unsafe.Pointer(&channel[0].chunks))[:])[0].lh_first))[:]
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
	}
	return appendChunk(me, chunkBody)
}
// UA_SecureChannel_finalizeChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18634
func UA_SecureChannel_finalizeChunk(channel []UA_SecureChannel, requestId UA_UInt32, chunkBody []UA_ByteString, messageType int, callback UA_ProcessMessageCallback, application interface{}) UA_StatusCode {
	var messageEntry []MessageEntry
	for messageEntry = ((*[100000000]chunk_pointerlist)(unsafe.Pointer(&channel[0].chunks))[:])[0].lh_first; messageEntry != nil; messageEntry = (messageEntry)[0].pointers.le_next {
		if UA_UInt32(messageEntry[0].requestId) == requestId {
			break
		}
	}
	var bytes UA_ByteString
	if messageEntry == nil {
		bytes = chunkBody[0]
	} else {
		var retval UA_StatusCode = appendChunk(messageEntry, chunkBody)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		UA_ByteString_init((*[100000000]UA_ByteString)(unsafe.Pointer(&bytes))[:])
		bytes.data = make([]UA_Byte, uint(messageEntry[0].chunkPayloadSize)*uint((1))/1)
		if bytes.data == nil {
			return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		}
		var cp []ChunkPayload
		var temp_cp []ChunkPayload
		var curPos uint
		for cp = ((*[100000000]chunkpayload_pointerlist)(unsafe.Pointer(&messageEntry[0].chunkPayload))[:])[0].sqh_first; cp != nil && func() int {
			temp_cp = (cp)[0].pointers.sqe_next
			tempVar := &1
			return *tempVar
		}() != 0; cp = temp_cp {
			memcpy((*[100000000]UA_Byte)(unsafe.Pointer(&bytes.data[curPos]))[:], cp[0].bytes.data, uint32((uint(cp[0].bytes.length))))
			curPos += uint(cp[0].bytes.length)
			UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&cp[0].bytes))[:])
			_ = cp
		}
		bytes.length = uint(messageEntry[0].chunkPayloadSize)
		for {
			if (messageEntry)[0].pointers.le_next != nil {
				(messageEntry)[0].pointers.le_next[0].pointers.le_prev = (messageEntry)[0].pointers.le_prev
			}
			(messageEntry)[0].pointers.le_prev[0] = (messageEntry)[0].pointers.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		_ = messageEntry
	}
	var retval UA_StatusCode = callback(application, channel, messageType, UA_UInt32(requestId), (*[100000000]UA_ByteString)(unsafe.Pointer(&bytes))[:])
	if messageEntry != nil {
		UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&bytes))[:])
	}
	return UA_StatusCode(retval)
}
// decryptChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18683
//
// Process a received Chunk
//
func decryptChunk(channel []UA_SecureChannel, cryptoModule []UA_SecurityPolicyCryptoModule, chunk []UA_ByteString, offset uint, requestId []UA_UInt32, sequenceNumber []UA_UInt32, payload []UA_ByteString, messageType int) UA_StatusCode {
	var retval UA_StatusCode
	var securityPolicy []UA_SecurityPolicy = channel[0].securityPolicy
	var chunkSizeAfterDecryption uint = uint(chunk[0].length)
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) || uint32(messageType) == uint32(UA_MESSAGETYPE_OPN) {
		var cipherText UA_ByteString = UA_ByteString{uint(chunk[0].length) - offset, (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&chunk[0].data[0])) + (uintptr)(int(uint32((offset))))*unsafe.Sizeof(chunk[0].data[0]))))[:]}
		var sizeBeforeDecryption uint = uint(cipherText.length)
		// Decrypt the chunk. Always decrypt opn messages if mode not none
		retval = cryptoModule.encryptionAlgorithm.decrypt(securityPolicy, channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&cipherText))[:])
		chunkSizeAfterDecryption -= sizeBeforeDecryption-uint(cipherText.length)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
	}
	var sigsize uint
	var paddingSize uint
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) || uint32(messageType) == uint32(UA_MESSAGETYPE_OPN) {
		// Verify the chunk signature
		// Compute the padding size
		sigsize = cryptoModule.signatureAlgorithm.getRemoteSignatureSize(securityPolicy, channel[0].channelContext)
		if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) || uint32(messageType) == uint32(UA_MESSAGETYPE_OPN) && uint32(channel[0].securityMode) > uint32(UA_MESSAGESECURITYMODE_NONE) {
			paddingSize = uint(UA_Byte(chunk[0].data[chunkSizeAfterDecryption-sigsize-uint((1))]))
			var keyLength uint = cryptoModule.encryptionAlgorithm.getRemoteKeyLength(securityPolicy, channel[0].channelContext)
			if keyLength > uint((2048)) {
				// Extra padding size
				paddingSize <<= uint64(uint32((uint((uint32(8))))))
				paddingSize += uint((uint32(uint8((__uint8_t((uint8_t((chunk[0].data[chunkSizeAfterDecryption-sigsize-uint((2))])))))))))
				// see comment below but for extraPaddingSize
				paddingSize += uint((1))
			}
			// we need to add one to the padding size since the paddingSize byte itself need to be removed as well.
			// TODO: write unit test for correct padding calculation
			paddingSize += uint((1))
		}
		if offset+paddingSize+sigsize >= chunkSizeAfterDecryption {
			return UA_StatusCode((uint32_t((uint32((uint32(2148728832)))))))
		}
		var chunkDataToVerify UA_ByteString = UA_ByteString{chunkSizeAfterDecryption - sigsize, chunk[0].data}
		var signature UA_ByteString = UA_ByteString{uint(sigsize), (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&(*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&chunk[0].data[0])) + (uintptr)(int(uint32((chunkSizeAfterDecryption))))*unsafe.Sizeof(chunk[0].data[0]))))[:][0])) - (uintptr)(int(uint32((sigsize))))*unsafe.Sizeof((*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&chunk[0].data[0])) + (uintptr)(int(uint32((chunkSizeAfterDecryption))))*unsafe.Sizeof(chunk[0].data[0]))))[:][0]))))[:]}
		// Verify the signature
		retval = cryptoModule.signatureAlgorithm.verify(securityPolicy, channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&chunkDataToVerify))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&signature))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
	}
	var sequenceHeader UA_SequenceHeader
	// Decode the sequence header
	retval = UA_SequenceHeader_decodeBinary(chunk, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_SequenceHeader)(unsafe.Pointer(&sequenceHeader))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	if offset+paddingSize+sigsize >= uint(chunk[0].length) {
		return UA_StatusCode((uint32_t((uint32((uint32(2148728832)))))))
	}
	requestId[0] = UA_UInt32(sequenceHeader.requestId)
	sequenceNumber[0] = UA_UInt32(sequenceHeader.sequenceNumber)
	payload[0].data = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&chunk[0].data[0])) + (uintptr)(int(uint32((offset))))*unsafe.Sizeof(chunk[0].data[0]))))[:]
	payload[0].length = chunkSizeAfterDecryption-offset-sigsize-paddingSize
	return 0
}

type UA_SequenceNumberCallback func([]UA_SecureChannel , UA_UInt32)(UA_StatusCode)
// processSequenceNumberAsym - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18763
func processSequenceNumberAsym(channel []UA_SecureChannel, sequenceNumber UA_UInt32) UA_StatusCode {
	channel[0].receiveSequenceNumber = sequenceNumber
	return 0
}
// processSequenceNumberSym - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18770
func processSequenceNumberSym(channel []UA_SecureChannel, sequenceNumber UA_UInt32) UA_StatusCode {
	if sequenceNumber != UA_UInt32(channel[0].receiveSequenceNumber)+UA_UInt32((uint32_t((uint32((1)))))) {
		if int32(uint32((uint32((uint32_t((UA_UInt32(channel[0].receiveSequenceNumber) + UA_UInt32((uint32_t((uint32((1))))))))))))) > int32(4294966271) && sequenceNumber < UA_UInt32((uint32_t((uint32((1024)))))) {
			// Failure mode hook for unit tests
			// Does the sequence number match?
			// FIXME: Remove magic numbers :(
			// Roll over
			channel[0].receiveSequenceNumber = sequenceNumber-UA_UInt32((uint32_t((uint32((1))))))
		} else {
			return UA_StatusCode((uint32_t((uint32((uint32(2148728832)))))))
		}
	}
	channel[0].receiveSequenceNumber ++
	return 0
}
// checkAsymHeader - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18790
func checkAsymHeader(channel []UA_SecureChannel, asymHeader []UA_AsymmetricAlgorithmSecurityHeader) UA_StatusCode {
	var retval UA_StatusCode
	var securityPolicy []UA_SecurityPolicy = channel[0].securityPolicy
	if int((int((noarch.NotUA_Boolean(UA_ByteString_equal((*[100000000]UA_ByteString)(unsafe.Pointer(&securityPolicy[0].policyUri))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&asymHeader[0].securityPolicyUri))[:])))))) != 0 {
		return UA_StatusCode((uint32_t((uint32((uint32(2153054208)))))))
	}
	// TODO: Verify certificate using certificate plugin. This will come with a new PR
	// Something like this
	//    retval = certificateManager->verify(certificateStore??, &asymHeader->senderCertificate);
	//    if(retval != UA_STATUSCODE_GOOD)
	//    return retval;
	//
	retval = securityPolicy.asymmetricModule.compareCertificateThumbprint(securityPolicy, (*[100000000]UA_ByteString)(unsafe.Pointer(&asymHeader[0].receiverCertificateThumbprint))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	return 0
}
// checkSymHeader - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18815
func checkSymHeader(channel []UA_SecureChannel, tokenId UA_UInt32) UA_StatusCode {
	if tokenId != UA_UInt32(channel[0].securityToken.tokenId) {
		if tokenId != UA_UInt32(channel[0].nextSecurityToken.tokenId) {
			return UA_StatusCode((uint32_t((uint32((uint32(2156331008)))))))
		}
		return UA_SecureChannel_revolveTokens(channel)
	}
	return 0
}
// UA_SecureChannel_processChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18827
func UA_SecureChannel_processChunk(channel []UA_SecureChannel, chunk []UA_ByteString, callback UA_ProcessMessageCallback, application interface{}) UA_StatusCode {
	var offset uint
	var messageHeader UA_SecureConversationMessageHeader
	var retval UA_StatusCode = UA_SecureConversationMessageHeader_decodeBinary(chunk, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_SecureConversationMessageHeader)(unsafe.Pointer(&messageHeader))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Decode message header
		return UA_StatusCode(retval)
	}
	if UA_UInt32(messageHeader.secureChannelId) != UA_UInt32(channel[0].securityToken.channelId) && uint32(channel[0].state) != uint32(UA_SECURECHANNELSTATE_FRESH) {
		// The wrong ChannelId. Non-opened channels have the id zero.
		return UA_StatusCode((uint32_t((uint32((uint32(2149711872)))))))
	}
	var messageType int = int((uint32((uint32((uint32_t((UA_UInt32(messageHeader.messageHeader.messageTypeAndChunkType) & UA_UInt32((uint32_t((uint32((16777215))))))))))))))
	var chunkType int = int((uint32((uint32((uint32_t((UA_UInt32(messageHeader.messageHeader.messageTypeAndChunkType) & UA_UInt32((uint32_t((uint32((uint32(4278190080)))))))))))))))
	var requestId UA_UInt32
	var sequenceNumber UA_UInt32
	var chunkPayload UA_ByteString
	var cryptoModule []UA_SecurityPolicyCryptoModule
	var sequenceNumberCallback UA_SequenceNumberCallback
	switch uint32(messageType) {
	case uint32(UA_MESSAGETYPE_ERR):
		{
			if uint32(chunkType) != uint32(UA_CHUNKTYPE_FINAL) {
				// ERR message (not encrypted)
				return UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
			}
			chunkPayload.length = uint(chunk[0].length)-offset
			chunkPayload.data = (*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&chunk[0].data[0])) + (uintptr)(int(uint32((offset))))*unsafe.Sizeof(chunk[0].data[0]))))[:]
			return callback(application, channel, messageType, UA_UInt32(requestId), (*[100000000]UA_ByteString)(unsafe.Pointer(&chunkPayload))[:])
		}
	case uint32(UA_MESSAGETYPE_MSG):
		fallthrough
	case uint32(UA_MESSAGETYPE_CLO):
		var symmetricSecurityHeader UA_SymmetricAlgorithmSecurityHeader
		// Decode and check the symmetric security header (tokenId)
		UA_SymmetricAlgorithmSecurityHeader_init((*[100000000]UA_SymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&symmetricSecurityHeader))[:])
		retval = UA_SymmetricAlgorithmSecurityHeader_decodeBinary(chunk, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_SymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&symmetricSecurityHeader))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		retval = checkSymHeader(channel, UA_UInt32(symmetricSecurityHeader.tokenId))
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		cryptoModule = (*[100000000]UA_SecurityPolicyCryptoModule)(unsafe.Pointer(&channel[0].securityPolicy[0].symmetricModule.cryptoModule))[:]
		sequenceNumberCallback = processSequenceNumberSym
	case uint32(UA_MESSAGETYPE_OPN):
		if uint32(chunkType) != uint32(UA_CHUNKTYPE_FINAL) {
			// Chunking not allowed for OPN
			return UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
		}
		var asymHeader UA_AsymmetricAlgorithmSecurityHeader
		// Decode the asymmetric algorithm security header and call the callback
		//         * to perform checks.
		UA_AsymmetricAlgorithmSecurityHeader_init((*[100000000]UA_AsymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&asymHeader))[:])
		offset = 12
		retval = UA_AsymmetricAlgorithmSecurityHeader_decodeBinary(chunk, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_AsymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&asymHeader))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		retval = checkAsymHeader(channel, (*[100000000]UA_AsymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&asymHeader))[:])
		UA_AsymmetricAlgorithmSecurityHeader_deleteMembers((*[100000000]UA_AsymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&asymHeader))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		cryptoModule = (*[100000000]UA_SecurityPolicyCryptoModule)(unsafe.Pointer(&channel[0].securityPolicy[0].asymmetricModule.cryptoModule))[:]
		sequenceNumberCallback = processSequenceNumberAsym
	default:
		{
			return UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
		}
	}
	// Decrypt message
	retval = decryptChunk(channel, cryptoModule, chunk, uint(offset), (*[100000000]UA_UInt32)(unsafe.Pointer(&requestId))[:], (*[100000000]UA_UInt32)(unsafe.Pointer(&sequenceNumber))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&chunkPayload))[:], messageType)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	if sequenceNumberCallback == nil {
		// Check the sequence number
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	retval = sequenceNumberCallback(channel, UA_UInt32(sequenceNumber))
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Skip sequence number checking for fuzzer to improve coverage
		return UA_StatusCode(retval)
	}
	if uint32(chunkType) == uint32(UA_CHUNKTYPE_FINAL) {
		// Process the payload
		retval = UA_SecureChannel_finalizeChunk(channel, UA_UInt32(requestId), (*[100000000]UA_ByteString)(unsafe.Pointer(&chunkPayload))[:], messageType, callback, application)
	} else if uint32(chunkType) == uint32(UA_CHUNKTYPE_INTERMEDIATE) {
		retval = UA_SecureChannel_appendChunk(channel, UA_UInt32(requestId), (*[100000000]UA_ByteString)(unsafe.Pointer(&chunkPayload))[:])
	} else if uint32(chunkType) == uint32(UA_CHUNKTYPE_ABORT) {
		UA_SecureChannel_removeChunks(channel, UA_UInt32(requestId))
	} else {
		retval = UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
	}
	return UA_StatusCode(retval)
}
// UA_SecurityPolicy_getRemoteAsymEncryptionBufferLengthOverhead - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:18953
// Functionality used by both the SecureChannel and the SecurityPolicy
func UA_SecurityPolicy_getRemoteAsymEncryptionBufferLengthOverhead(securityPolicy []UA_SecurityPolicy, channelContext interface{}, maxEncryptionLength uint) uint {
	if maxEncryptionLength == uint((0)) {
		return 0
	}
	var plainTextBlockSize uint = securityPolicy.asymmetricModule.cryptoModule.encryptionAlgorithm.getRemotePlainTextBlockSize(securityPolicy, channelContext)
	var encryptedBlockSize uint = securityPolicy.asymmetricModule.cryptoModule.encryptionAlgorithm.getRemoteBlockSize(securityPolicy, channelContext)
	if plainTextBlockSize == uint((0)) {
		return 0
	}
	var maxNumberOfBlocks uint = maxEncryptionLength / plainTextBlockSize
	return maxNumberOfBlocks * (encryptedBlockSize - plainTextBlockSize)
}

var adminSession UA_Session = UA_Session{UA_SessionHeader{__struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_3769_5_{nil, nil}, UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{1}}, nil}, UA_ApplicationDescription{UA_String{0, nil}, UA_String{0, nil}, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, UA_APPLICATIONTYPE_CLIENT, UA_String{0, nil}, UA_String{0, nil}, 0, nil}, UA_String{22 - 1, []byte("Administrator Session\x00")}, 0, (nil), UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{1}}, UA_UInt32(4294967295), UA_UInt32(4294967295), UA_Double(int64_t(9223372036854775807)), int64_t(9223372036854775807), UA_ByteString{0, nil}, 5, ContinuationPointList{nil}, 0, 0, UA_ListOfUASubscriptions{nil}, UA_ListOfQueuedPublishResponses{nil, nil}, 0, 0}
// UA_Session_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19016
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_session.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2018 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2018 (c) Thomas Stalder, Blue Time Concept SA
//
// .pointers
// .authenticationToken
// .channel
// .clientDescription
// .sessionName
// .activated
// .sessionHandle
// .sessionId
// .maxRequestMessageSize
// .maxResponseMessageSize
// .timeout
// .validTill
// .availableContinuationPoints
// .continuationPoints
// .lastSubscriptionId
// .lastSeenSubscriptionId
// .serverSubscriptions
// .responseQueue
// numSubscriptions
// numPublishReq
func UA_Session_init(session []UA_Session) {
	noarch.Memset(session, byte(0), 552)
	session[0].availableContinuationPoints = 5
	for {
		((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_first = nil
		((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_last = (*[100000000][]UA_PublishResponseEntry)(unsafe.Pointer(&((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
}
// UA_Session_deleteMembersCleanup - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19024
func UA_Session_deleteMembersCleanup(session []UA_Session, server []UA_Server) {
	UA_Session_detachFromSecureChannel(session)
	UA_ApplicationDescription_deleteMembers((*[100000000]UA_ApplicationDescription)(unsafe.Pointer(&session[0].clientDescription))[:])
	UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].header.authenticationToken))[:])
	UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:])
	UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&session[0].sessionName))[:])
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&session[0].serverNonce))[:])
	var cp []ContinuationPointEntry
	var temp []ContinuationPointEntry
	for cp = ((*[100000000]ContinuationPointList)(unsafe.Pointer(&session[0].continuationPoints))[:])[0].lh_first; cp != nil && func() int {
		temp = (cp)[0].pointers.le_next
		tempVar := &1
		return *tempVar
	}() != 0; cp = temp {
		for {
			if (cp)[0].pointers.le_next != nil {
				(cp)[0].pointers.le_next[0].pointers.le_prev = (cp)[0].pointers.le_prev
			}
			(cp)[0].pointers.le_prev[0] = (cp)[0].pointers.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&cp[0].identifier))[:])
		UA_BrowseDescription_deleteMembers((*[100000000]UA_BrowseDescription)(unsafe.Pointer(&cp[0].browseDescription))[:])
		_ = cp
	}
	var sub []UA_Subscription
	var tempsub []UA_Subscription
	for sub = ((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first; sub != nil && func() int {
		tempsub = (sub)[0].listEntry.le_next
		tempVar := &1
		return *tempVar
	}() != 0; sub = tempsub {
		UA_Session_deleteSubscription(server, session, UA_UInt32(sub[0].subscriptionId))
	}
	var entry []UA_PublishResponseEntry
	for (func() []UA_PublishResponseEntry {
		entry = UA_Session_dequeuePublishReq(session)
		return entry
	}()) != nil {
		UA_PublishResponse_deleteMembers((*[100000000]UA_PublishResponse)(unsafe.Pointer(&entry[0].response))[:])
		_ = entry
	}
}
// UA_Session_attachToSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19053
func UA_Session_attachToSecureChannel(session []UA_Session, channel []UA_SecureChannel) {
	for {
		if (((*[100000000]UA_SessionHeader)(unsafe.Pointer(&session[0].header))[:])[0].pointers.le_next = ((*[100000000]session_pointerlist)(unsafe.Pointer(&channel[0].sessions))[:])[0].lh_first) != nil {
			((*[100000000]session_pointerlist)(unsafe.Pointer(&channel[0].sessions))[:])[0].lh_first[0].pointers.le_prev = (*[100000000][]UA_SessionHeader)(unsafe.Pointer(&((*[100000000]UA_SessionHeader)(unsafe.Pointer(&session[0].header))[:])[0].pointers.le_next))[:]
		}
		((*[100000000]session_pointerlist)(unsafe.Pointer(&channel[0].sessions))[:])[0].lh_first = (*[100000000]UA_SessionHeader)(unsafe.Pointer(&session[0].header))[:]
		((*[100000000]UA_SessionHeader)(unsafe.Pointer(&session[0].header))[:])[0].pointers.le_prev = (*[100000000][]UA_SessionHeader)(unsafe.Pointer(&((*[100000000]session_pointerlist)(unsafe.Pointer(&channel[0].sessions))[:])[0].lh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	session[0].header.channel = channel
}
// UA_Session_detachFromSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19058
func UA_Session_detachFromSecureChannel(session []UA_Session) {
	if session[0].header.channel == nil {
		return
	}
	session[0].header.channel = nil
	for {
		if ((*[100000000]UA_SessionHeader)(unsafe.Pointer(&session[0].header))[:])[0].pointers.le_next != nil {
			((*[100000000]UA_SessionHeader)(unsafe.Pointer(&session[0].header))[:])[0].pointers.le_next[0].pointers.le_prev = ((*[100000000]UA_SessionHeader)(unsafe.Pointer(&session[0].header))[:])[0].pointers.le_prev
		}
		((*[100000000]UA_SessionHeader)(unsafe.Pointer(&session[0].header))[:])[0].pointers.le_prev[0] = ((*[100000000]UA_SessionHeader)(unsafe.Pointer(&session[0].header))[:])[0].pointers.le_next
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
}
// UA_Session_generateNonce - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19065
func UA_Session_generateNonce(session []UA_Session) UA_StatusCode {
	var channel []UA_SecureChannel = session[0].header.channel
	if channel == nil || channel[0].securityPolicy == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if uint(session[0].serverNonce.length) != uint((32)) {
		// Is the length of the previous nonce correct?
		UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&session[0].serverNonce))[:])
		var retval UA_StatusCode = UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&session[0].serverNonce))[:], 32)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
	}
	return channel.securityPolicy.symmetricModule.generateNonce(channel[0].securityPolicy, (*[100000000]UA_ByteString)(unsafe.Pointer(&session[0].serverNonce))[:])
}
// UA_Session_updateLifetime - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19084
func UA_Session_updateLifetime(session []UA_Session) {
	session[0].validTill = UA_DateTime_nowMonotonic()+UA_DateTime((float64((UA_Double(session[0].timeout) * UA_Double((float64(10 * 1000)))))))
}
// UA_Session_addSubscription - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19091
func UA_Session_addSubscription(session []UA_Session, newSubscription []UA_Subscription) {
	newSubscription[0].subscriptionId = func() UA_UInt32 {
		tempVar := &session[0].lastSubscriptionId
		*tempVar ++
		return *tempVar
	}()
	for {
		if ((newSubscription)[0].listEntry.le_next = ((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first) != nil {
			((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first[0].listEntry.le_prev = (*[100000000][]UA_Subscription)(unsafe.Pointer(&(newSubscription)[0].listEntry.le_next))[:]
		}
		((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first = newSubscription
		(newSubscription)[0].listEntry.le_prev = (*[100000000][]UA_Subscription)(unsafe.Pointer(&((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	session[0].numSubscriptions ++
}
// UA_Session_deleteSubscription - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19098
func UA_Session_deleteSubscription(server []UA_Server, session []UA_Session, subscriptionId UA_UInt32) UA_StatusCode {
	var sub []UA_Subscription = UA_Session_getSubscriptionById(session, UA_UInt32(subscriptionId))
	if sub == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
	}
	UA_Subscription_deleteMembers(server, sub)
	var retval UA_StatusCode = UA_Server_delayedFree(server, sub)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Add a delayed callback to remove the subscription when the currently
		//     * scheduled jobs have completed
		UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Could not remove subscription with error code %s%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
		// Try again next time
		return UA_StatusCode(retval)
	}
	for {
		if (sub)[0].listEntry.le_next != nil {
			// Remove from the session
			(sub)[0].listEntry.le_next[0].listEntry.le_prev = (sub)[0].listEntry.le_prev
		}
		(sub)[0].listEntry.le_prev[0] = (sub)[0].listEntry.le_next
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	session[0].numSubscriptions --
	return 0
}
// UA_Session_getSubscriptionById - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19124
func UA_Session_getSubscriptionById(session []UA_Session, subscriptionId UA_UInt32) []UA_Subscription {
	var sub []UA_Subscription
	for sub = ((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first; sub != nil; sub = (sub)[0].listEntry.le_next {
		if UA_UInt32(sub[0].subscriptionId) == subscriptionId {
			break
		}
	}
	return sub
}
// UA_Session_dequeuePublishReq - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19134
func UA_Session_dequeuePublishReq(session []UA_Session) []UA_PublishResponseEntry {
	var entry []UA_PublishResponseEntry = ((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_first
	if entry != nil {
		for {
			if (((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_first = ((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_first[0].listEntry.sqe_next) == nil {
				((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_last = (*[100000000][]UA_PublishResponseEntry)(unsafe.Pointer(&((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_first))[:]
			}
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		session[0].numPublishReq --
	}
	return entry
}
// UA_Session_queuePublishReq - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19144
func UA_Session_queuePublishReq(session []UA_Session, entry []UA_PublishResponseEntry, head UA_Boolean) {
	if int((int((noarch.NotUA_Boolean(UA_Boolean(head)))))) != 0 {
		for {
			(entry)[0].listEntry.sqe_next = nil
			// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19147 :cannot determine type for RHS 'sqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `sqh_last`
			(*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:].sqh_last[0] = entry
			((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_last = (*[100000000][]UA_PublishResponseEntry)(unsafe.Pointer(&(entry)[0].listEntry.sqe_next))[:]
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
	} else {
		for {
			if ((entry)[0].listEntry.sqe_next = ((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_first) == nil {
				((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_last = (*[100000000][]UA_PublishResponseEntry)(unsafe.Pointer(&(entry)[0].listEntry.sqe_next))[:]
			}
			((*[100000000]UA_ListOfQueuedPublishResponses)(unsafe.Pointer(&session[0].responseQueue))[:])[0].sqh_first = entry
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
	}
	session[0].numPublishReq ++
}
// UA_Node_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19174
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_nodes.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2015-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015 (c) Chris Iatrou
// *    Copyright 2015, 2017 (c) Florian Palm
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2016-2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Julian Grothoff
//
// There is no UA_Node_new() method here. Creating nodes is part of the
// * NodeStore layer
func UA_Node_deleteMembers(node []UA_Node) {
	// Delete standard content
	UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:])
	UA_QualifiedName_deleteMembers((*[100000000]UA_QualifiedName)(unsafe.Pointer(&node[0].browseName))[:])
	UA_LocalizedText_deleteMembers((*[100000000]UA_LocalizedText)(unsafe.Pointer(&node[0].displayName))[:])
	UA_LocalizedText_deleteMembers((*[100000000]UA_LocalizedText)(unsafe.Pointer(&node[0].description))[:])
	// Delete references
	UA_Node_deleteReferences(node)
	switch uint32(node[0].nodeClass) {
	case uint32(UA_NODECLASS_OBJECT):
		// Delete unique content of the nodeclass
	case uint32(UA_NODECLASS_METHOD):
	case uint32(UA_NODECLASS_OBJECTTYPE):
	case uint32(UA_NODECLASS_VARIABLE):
		fallthrough
	case uint32(UA_NODECLASS_VARIABLETYPE):
		var p []UA_VariableNode = node
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&p[0].dataType))[:])
		UA_Array_delete(p[0].arrayDimensions, uint(p[0].arrayDimensionsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
		p[0].arrayDimensions = nil
		p[0].arrayDimensionsSize = 0
		if uint32(p[0].valueSource) == uint32(UA_VALUESOURCE_DATA) {
			UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&(*p[0].value.data()).value))[:])
		}
	case uint32(UA_NODECLASS_REFERENCETYPE):
		var p []UA_ReferenceTypeNode = node
		UA_LocalizedText_deleteMembers((*[100000000]UA_LocalizedText)(unsafe.Pointer(&p[0].inverseName))[:])
	case uint32(UA_NODECLASS_DATATYPE):
	case uint32(UA_NODECLASS_VIEW):
	default:
		{
			break
		}
	}
}
// UA_ObjectNode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19218
func UA_ObjectNode_copy(src []UA_ObjectNode, dst []UA_ObjectNode) UA_StatusCode {
	dst[0].eventNotifier = UA_Byte(src[0].eventNotifier)
	return 0
}
// UA_CommonVariableNode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19224
func UA_CommonVariableNode_copy(src []UA_VariableNode, dst []UA_VariableNode) UA_StatusCode {
	var retval UA_StatusCode = UA_Array_copy(src[0].arrayDimensions, uint(src[0].arrayDimensionsSize), (*[100000000][]UA_UInt32)(unsafe.Pointer(&dst[0].arrayDimensions))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	dst[0].arrayDimensionsSize = uint(src[0].arrayDimensionsSize)
	retval = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&src[0].dataType))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&dst[0].dataType))[:])
	dst[0].valueRank = UA_Int32(src[0].valueRank)
	dst[0].valueSource = src[0].valueSource
	if uint32(src[0].valueSource) == uint32(UA_VALUESOURCE_DATA) {
		retval |= UA_DataValue_copy((*[100000000]UA_DataValue)(unsafe.Pointer(&(*src[0].value.data()).value))[:], (*[100000000]UA_DataValue)(unsafe.Pointer(&(*dst[0].value.data()).value))[:])
		(*dst[0].value.data()).callback = (*src[0].value.data()).callback
	} else {
		(*dst[0].value.dataSource()) = (*src[0].value.dataSource())
	}
	return UA_StatusCode(retval)
}
// UA_VariableNode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19245
func UA_VariableNode_copy(src []UA_VariableNode, dst []UA_VariableNode) UA_StatusCode {
	var retval UA_StatusCode = UA_CommonVariableNode_copy(src, dst)
	dst[0].accessLevel = UA_Byte(src[0].accessLevel)
	dst[0].minimumSamplingInterval = UA_Double(src[0].minimumSamplingInterval)
	dst[0].historizing = UA_Boolean(src[0].historizing)
	return UA_StatusCode(retval)
}
// UA_VariableTypeNode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19254
func UA_VariableTypeNode_copy(src []UA_VariableTypeNode, dst []UA_VariableTypeNode) UA_StatusCode {
	var retval UA_StatusCode = UA_CommonVariableNode_copy(src, dst)
	dst[0].isAbstract = UA_Boolean(src[0].isAbstract)
	return UA_StatusCode(retval)
}
// UA_MethodNode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19263
func UA_MethodNode_copy(src []UA_MethodNode, dst []UA_MethodNode) UA_StatusCode {
	dst[0].executable = UA_Boolean(src[0].executable)
	dst[0].method = UA_MethodCallback(src[0].method)
	return 0
}
// UA_ObjectTypeNode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19270
func UA_ObjectTypeNode_copy(src []UA_ObjectTypeNode, dst []UA_ObjectTypeNode) UA_StatusCode {
	dst[0].isAbstract = UA_Boolean(src[0].isAbstract)
	dst[0].lifecycle = src[0].lifecycle
	return 0
}
// UA_ReferenceTypeNode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19277
func UA_ReferenceTypeNode_copy(src []UA_ReferenceTypeNode, dst []UA_ReferenceTypeNode) UA_StatusCode {
	var retval UA_StatusCode = UA_LocalizedText_copy((*[100000000]UA_LocalizedText)(unsafe.Pointer(&src[0].inverseName))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&dst[0].inverseName))[:])
	dst[0].isAbstract = UA_Boolean(src[0].isAbstract)
	dst[0].symmetric = UA_Boolean(src[0].symmetric)
	return UA_StatusCode(retval)
}
// UA_DataTypeNode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19287
func UA_DataTypeNode_copy(src []UA_DataTypeNode, dst []UA_DataTypeNode) UA_StatusCode {
	dst[0].isAbstract = UA_Boolean(src[0].isAbstract)
	return 0
}
// UA_ViewNode_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19293
func UA_ViewNode_copy(src []UA_ViewNode, dst []UA_ViewNode) UA_StatusCode {
	dst[0].containsNoLoops = UA_Boolean(src[0].containsNoLoops)
	dst[0].eventNotifier = UA_Byte(src[0].eventNotifier)
	return 0
}
// UA_Node_copy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19300
func UA_Node_copy(src []UA_Node, dst []UA_Node) UA_StatusCode {
	if uint32(src[0].nodeClass) != uint32(dst[0].nodeClass) {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var retval UA_StatusCode = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&src[0].nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&dst[0].nodeId))[:])
	// Copy standard content
	retval |= UA_QualifiedName_copy((*[100000000]UA_QualifiedName)(unsafe.Pointer(&src[0].browseName))[:], (*[100000000]UA_QualifiedName)(unsafe.Pointer(&dst[0].browseName))[:])
	retval |= UA_LocalizedText_copy((*[100000000]UA_LocalizedText)(unsafe.Pointer(&src[0].displayName))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&dst[0].displayName))[:])
	retval |= UA_LocalizedText_copy((*[100000000]UA_LocalizedText)(unsafe.Pointer(&src[0].description))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&dst[0].description))[:])
	dst[0].writeMask = UA_UInt32(src[0].writeMask)
	dst[0].context = src[0].context
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_Node_deleteMembers(dst)
		return UA_StatusCode(retval)
	}
	// Copy the references
	dst[0].references = nil
	if uint(src[0].referencesSize) > uint((0)) {
		dst[0].references = make([]UA_NodeReferenceKind, uint(src[0].referencesSize)*uint((144))/144)
		if dst[0].references == nil {
			UA_Node_deleteMembers(dst)
			return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		}
		dst[0].referencesSize = uint(src[0].referencesSize)
		{
			var i uint
			for ; i < uint(src[0].referencesSize); i++ {
				var srefs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&src[0].references[i]))[:]
				var drefs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&dst[0].references[i]))[:]
				drefs[0].isInverse = UA_Boolean(srefs[0].isInverse)
				retval = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&srefs[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&drefs[0].referenceTypeId))[:])
				if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
					break
				}
				retval = UA_Array_copy(srefs[0].targetIds, uint(srefs[0].targetIdsSize), (*[100000000][]UA_ExpandedNodeId)(unsafe.Pointer(&drefs[0].targetIds))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[17]))[:])
				if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
					break
				}
				drefs[0].targetIdsSize = uint(srefs[0].targetIdsSize)
			}
		}
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			UA_Node_deleteMembers(dst)
			return UA_StatusCode(retval)
		}
	}
	switch uint32(src[0].nodeClass) {
	case uint32(UA_NODECLASS_OBJECT):
		// Copy unique content of the nodeclass
		retval = UA_ObjectNode_copy(src, dst)
	case uint32(UA_NODECLASS_VARIABLE):
		retval = UA_VariableNode_copy(src, dst)
	case uint32(UA_NODECLASS_METHOD):
		retval = UA_MethodNode_copy(src, dst)
	case uint32(UA_NODECLASS_OBJECTTYPE):
		retval = UA_ObjectTypeNode_copy(src, dst)
	case uint32(UA_NODECLASS_VARIABLETYPE):
		retval = UA_VariableTypeNode_copy(src, dst)
	case uint32(UA_NODECLASS_REFERENCETYPE):
		retval = UA_ReferenceTypeNode_copy(src, dst)
	case uint32(UA_NODECLASS_DATATYPE):
		retval = UA_DataTypeNode_copy(src, dst)
	case uint32(UA_NODECLASS_VIEW):
		retval = UA_ViewNode_copy(src, dst)
	default:
		{
			break
		}
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_Node_deleteMembers(dst)
	}
	return UA_StatusCode(retval)
}
// UA_Node_copy_alloc - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19384
func UA_Node_copy_alloc(src []UA_Node) []UA_Node {
	var dstPtr interface{}
	switch uint32(src[0].nodeClass) {
	case uint32(UA_NODECLASS_OBJECT):
		// use dstPtr to trick static code analysis in accepting dirty cast
		dstPtr = make([]byte, 248*1/1)
	case uint32(UA_NODECLASS_VARIABLE):
		dstPtr = make([]byte, 832*1/1)
	case uint32(UA_NODECLASS_METHOD):
		dstPtr = make([]byte, 248*1/1)
	case uint32(UA_NODECLASS_OBJECTTYPE):
		dstPtr = make([]byte, 256*1/1)
	case uint32(UA_NODECLASS_VARIABLETYPE):
		dstPtr = make([]byte, 832*1/1)
	case uint32(UA_NODECLASS_REFERENCETYPE):
		dstPtr = make([]byte, 280*1/1)
	case uint32(UA_NODECLASS_DATATYPE):
		dstPtr = make([]byte, 248*1/1)
	case uint32(UA_NODECLASS_VIEW):
		dstPtr = make([]byte, 248*1/1)
	default:
		{
			return nil
		}
	}
	var dst []UA_Node = dstPtr.([]UA_Node)
	dst[0].nodeClass = src[0].nodeClass
	var retval UA_StatusCode = UA_Node_copy(src, dst)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		_ = dst
		return nil
	}
	return dst
}
// copyStandardAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19430
//
// Copy Attributes into Nodes
//
func copyStandardAttributes(node []UA_Node, attr []UA_NodeAttributes) UA_StatusCode {
	var retval UA_StatusCode = UA_LocalizedText_copy((*[100000000]UA_LocalizedText)(unsafe.Pointer(&attr[0].displayName))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&node[0].displayName))[:])
	// retval  = UA_NodeId_copy(&item->requestedNewNodeId.nodeId, &node->nodeId);
	// retval |= UA_QualifiedName_copy(&item->browseName, &node->browseName);
	retval |= UA_LocalizedText_copy((*[100000000]UA_LocalizedText)(unsafe.Pointer(&attr[0].description))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&node[0].description))[:])
	node[0].writeMask = UA_UInt32(attr[0].writeMask)
	return UA_StatusCode(retval)
}
// copyCommonVariableAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19441
func copyCommonVariableAttributes(node []UA_VariableNode, attr []UA_VariableAttributes) UA_StatusCode {
	var retval UA_StatusCode = UA_Array_copy(attr[0].arrayDimensions, uint(attr[0].arrayDimensionsSize), (*[100000000][]UA_UInt32)(unsafe.Pointer(&node[0].arrayDimensions))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Copy the array dimensions
		return UA_StatusCode(retval)
	}
	node[0].arrayDimensionsSize = uint(attr[0].arrayDimensionsSize)
	// Data type and value rank
	retval |= UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&attr[0].dataType))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].dataType))[:])
	node[0].valueRank = UA_Int32(attr[0].valueRank)
	// Copy the value
	node[0].valueSource = UA_VALUESOURCE_DATA
	var extensionObject UA_NodeId = UA_NODEID_NUMERIC(0, 22)
	var valueSet UA_Boolean
	if attr[0].value.type_ != nil && int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&attr[0].value.type_[0].typeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&extensionObject))[:]))))) != 0 {
		if attr[0].value.data == 1 {
			// if we have an extension object which is still encoded (e.g. from the nodeset compiler)
			//     * we need to decode it and set the decoded value instead of the encoded object
			// do nothing since we got an empty array of extension objects
			return 0
		}
		var obj []UA_ExtensionObject = attr[0].value.data.([]UA_ExtensionObject)
		if obj != nil && uint32(obj[0].encoding) == uint32(UA_EXTENSIONOBJECT_ENCODED_BYTESTRING) {
			var type_ []UA_DataType = UA_findDataTypeByBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&(*obj[0].content.encoded()).typeId))[:])
			if type_ != nil {
				var dst interface{} = UA_Array_new(uint(attr[0].value.arrayLength), type_)
				var tmpPos []uint8_t = dst.([]uint8_t)
				{
					var i uint
					for ; i < uint(attr[0].value.arrayLength); i++ {
						var offset uint
						var curr []UA_ExtensionObject = (*[100000000]UA_ExtensionObject)(unsafe.Pointer(&(attr[0].value.data.([]UA_ExtensionObject))[i]))[:]
						var ret UA_StatusCode = UA_decodeBinary((*[100000000]UA_ByteString)(unsafe.Pointer(&(*curr[0].content.encoded()).body))[:], (*[100000000]uint)(unsafe.Pointer(&offset))[:], tmpPos, type_, 0, nil)
						if ret != UA_StatusCode((uint32_t((uint32((0)))))) {
							// TODO: Once we generate type description in the nodeset compiler,
							//             * UA_findDatatypeByBinary can be made internal to the decoding
							//             * layer.
							return UA_StatusCode(ret)
						}
						tmpPos = (*(*[1000000000]uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(&tmpPos[0])) + (uintptr)(int(uint16((uint16((uint16_t((UA_UInt16(type_[0].memSize)))))))))*unsafe.Sizeof(tmpPos[0]))))[:]
					}
				}
				UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&(*node[0].value.data()).value.value))[:], dst, uint(attr[0].value.arrayLength), type_)
				valueSet = 1
			}
		}
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(valueSet)))))) != 0 {
		retval |= UA_Variant_copy((*[100000000]UA_Variant)(unsafe.Pointer(&attr[0].value))[:], (*[100000000]UA_Variant)(unsafe.Pointer(&(*node[0].value.data()).value.value))[:])
	}
	(*node[0].value.data()).value.hasValue = 1
	return UA_StatusCode(retval)
}
// copyVariableNodeAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19505
func copyVariableNodeAttributes(vnode []UA_VariableNode, attr []UA_VariableAttributes) UA_StatusCode {
	vnode[0].accessLevel = UA_Byte(attr[0].accessLevel)
	vnode[0].historizing = UA_Boolean(attr[0].historizing)
	vnode[0].minimumSamplingInterval = UA_Double(attr[0].minimumSamplingInterval)
	return copyCommonVariableAttributes(vnode, attr)
}
// copyVariableTypeNodeAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19514
func copyVariableTypeNodeAttributes(vtnode []UA_VariableTypeNode, attr []UA_VariableTypeAttributes) UA_StatusCode {
	vtnode[0].isAbstract = UA_Boolean(attr[0].isAbstract)
	return copyCommonVariableAttributes(vtnode, attr)
}
// copyObjectNodeAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19522
func copyObjectNodeAttributes(onode []UA_ObjectNode, attr []UA_ObjectAttributes) UA_StatusCode {
	onode[0].eventNotifier = UA_Byte(attr[0].eventNotifier)
	return 0
}
// copyReferenceTypeNodeAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19528
func copyReferenceTypeNodeAttributes(rtnode []UA_ReferenceTypeNode, attr []UA_ReferenceTypeAttributes) UA_StatusCode {
	rtnode[0].isAbstract = UA_Boolean(attr[0].isAbstract)
	rtnode[0].symmetric = UA_Boolean(attr[0].symmetric)
	return UA_LocalizedText_copy((*[100000000]UA_LocalizedText)(unsafe.Pointer(&attr[0].inverseName))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&rtnode[0].inverseName))[:])
}
// copyObjectTypeNodeAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19536
func copyObjectTypeNodeAttributes(otnode []UA_ObjectTypeNode, attr []UA_ObjectTypeAttributes) UA_StatusCode {
	otnode[0].isAbstract = UA_Boolean(attr[0].isAbstract)
	return 0
}
// copyViewNodeAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19543
func copyViewNodeAttributes(vnode []UA_ViewNode, attr []UA_ViewAttributes) UA_StatusCode {
	vnode[0].containsNoLoops = UA_Boolean(attr[0].containsNoLoops)
	vnode[0].eventNotifier = UA_Byte(attr[0].eventNotifier)
	return 0
}
// copyDataTypeNodeAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19550
func copyDataTypeNodeAttributes(dtnode []UA_DataTypeNode, attr []UA_DataTypeAttributes) UA_StatusCode {
	dtnode[0].isAbstract = UA_Boolean(attr[0].isAbstract)
	return 0
}
// copyMethodNodeAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19557
func copyMethodNodeAttributes(mnode []UA_MethodNode, attr []UA_MethodAttributes) UA_StatusCode {
	mnode[0].executable = UA_Boolean(attr[0].executable)
	return 0
}
// UA_Node_setAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19570
func UA_Node_setAttributes(node []UA_Node, attributes interface{}, attributeType []UA_DataType) UA_StatusCode {
	var retval UA_StatusCode
	switch uint32(node[0].nodeClass) {
	case uint32(UA_NODECLASS_OBJECT):
		if attributeType != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:] {
			// Copy the attributes into the node
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153906176)))))))
			break
		}
		retval = copyObjectNodeAttributes(node, attributes.([]UA_ObjectAttributes))
	case uint32(UA_NODECLASS_VARIABLE):
		if attributeType != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:] {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153906176)))))))
			break
		}
		retval = copyVariableNodeAttributes(node, attributes.([]UA_VariableAttributes))
	case uint32(UA_NODECLASS_OBJECTTYPE):
		if attributeType != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:] {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153906176)))))))
			break
		}
		retval = copyObjectTypeNodeAttributes(node, attributes.([]UA_ObjectTypeAttributes))
	case uint32(UA_NODECLASS_VARIABLETYPE):
		if attributeType != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:] {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153906176)))))))
			break
		}
		retval = copyVariableTypeNodeAttributes(node, attributes.([]UA_VariableTypeAttributes))
	case uint32(UA_NODECLASS_REFERENCETYPE):
		if attributeType != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:] {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153906176)))))))
			break
		}
		retval = copyReferenceTypeNodeAttributes(node, attributes.([]UA_ReferenceTypeAttributes))
	case uint32(UA_NODECLASS_DATATYPE):
		if attributeType != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:] {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153906176)))))))
			break
		}
		retval = copyDataTypeNodeAttributes(node, attributes.([]UA_DataTypeAttributes))
	case uint32(UA_NODECLASS_VIEW):
		if attributeType != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[29]))[:] {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153906176)))))))
			break
		}
		retval = copyViewNodeAttributes(node, attributes.([]UA_ViewAttributes))
	case uint32(UA_NODECLASS_METHOD):
		if attributeType != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[58]))[:] {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153906176)))))))
			break
		}
		retval = copyMethodNodeAttributes(node, attributes.([]UA_MethodAttributes))
	case uint32(UA_NODECLASS_UNSPECIFIED):
		fallthrough
	default:
		{
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
		}
	}
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		retval = copyStandardAttributes(node, attributes.([]UA_NodeAttributes))
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_Node_deleteMembers(node)
	}
	return UA_StatusCode(retval)
}
// addReferenceTarget - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19633
//
// Manage References
//
func addReferenceTarget(refs []UA_NodeReferenceKind, target []UA_ExpandedNodeId) UA_StatusCode {
	var targets []UA_ExpandedNodeId = make([]UA_ExpandedNodeId, 144*uint32((uint(refs[0].targetIdsSize)+uint((1))))/144)
	if targets == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	refs[0].targetIds = targets
	var retval UA_StatusCode = UA_ExpandedNodeId_copy(target, (*[100000000]UA_ExpandedNodeId)(unsafe.Pointer(&refs[0].targetIds[uint(refs[0].targetIdsSize)]))[:])
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		refs[0].targetIdsSize ++
	} else if uint(refs[0].targetIdsSize) == uint((0)) {
		_ = refs[0].targetIds
		// We had zero references before (realloc was a malloc)
		refs[0].targetIds = nil
	}
	return UA_StatusCode(retval)
}
// addReferenceKind - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19655
func addReferenceKind(node []UA_Node, item []UA_AddReferencesItem) UA_StatusCode {
	var refs []UA_NodeReferenceKind = make([]UA_NodeReferenceKind, 144*uint32((uint(node[0].referencesSize)+uint((1))))/144)
	if refs == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	node[0].references = refs
	var newRef []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&refs[uint(node[0].referencesSize)]))[:]
	noarch.Memset(newRef, byte(0), 144)
	newRef[0].isInverse = noarch.NotUA_Boolean(UA_Boolean(item[0].isForward))
	var retval UA_StatusCode = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&newRef[0].referenceTypeId))[:])
	retval |= addReferenceTarget(newRef, (*[100000000]UA_ExpandedNodeId)(unsafe.Pointer(&item[0].targetNodeId))[:])
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		node[0].referencesSize ++
	} else {
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&newRef[0].referenceTypeId))[:])
		if uint(node[0].referencesSize) == uint((0)) {
			_ = node[0].references
			node[0].references = nil
		}
	}
	return UA_StatusCode(retval)
}
// UA_Node_addReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19682
func UA_Node_addReference(node []UA_Node, item []UA_AddReferencesItem) UA_StatusCode {
	var existingRefs []UA_NodeReferenceKind
	{
		var i uint
		for ; i < uint(node[0].referencesSize); i++ {
			var refs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&node[0].references[i]))[:]
			if int((int((UA_Boolean(refs[0].isInverse))))) != int((int((UA_Boolean(item[0].isForward))))) && int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].referenceTypeId))[:]))))) != 0 {
				existingRefs = refs
				break
			}
		}
	}
	if existingRefs != nil {
		{
			var i uint
			for ; i < uint(existingRefs[0].targetIdsSize); i++ {
				if int((int((UA_ExpandedNodeId_equal((*[100000000]UA_ExpandedNodeId)(unsafe.Pointer(&existingRefs[0].targetIds[i]))[:], (*[100000000]UA_ExpandedNodeId)(unsafe.Pointer(&item[0].targetNodeId))[:]))))) != 0 {
					return UA_StatusCode((uint32_t((uint32((uint32(2154168320)))))))
				}
			}
		}
		return addReferenceTarget(existingRefs, (*[100000000]UA_ExpandedNodeId)(unsafe.Pointer(&item[0].targetNodeId))[:])
	}
	return addReferenceKind(node, item)
}
// UA_Node_deleteReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19705
func UA_Node_deleteReference(node []UA_Node, item []UA_DeleteReferencesItem) UA_StatusCode {
	{
		var i uint = uint(node[0].referencesSize)
		for ; i > uint((0)); i-- {
			var refs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&node[0].references[i-uint((1))]))[:]
			if int((int((UA_Boolean(item[0].isForward))))) == int((int((UA_Boolean(refs[0].isInverse))))) {
				continue
			}
			if int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].referenceTypeId))[:])))))) != 0 {
				continue
			}
			{
				var j uint = uint(refs[0].targetIdsSize)
				for ; j > uint((0)); j-- {
					if int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].targetNodeId.nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].targetIds[j-uint((1))].nodeId))[:])))))) != 0 {
						continue
					}
					// Ok, delete the reference
					UA_ExpandedNodeId_deleteMembers((*[100000000]UA_ExpandedNodeId)(unsafe.Pointer(&refs[0].targetIds[j-uint((1))]))[:])
					refs[0].targetIdsSize --
					if uint(refs[0].targetIdsSize) > uint((0)) {
						if j-uint((1)) != uint(refs[0].targetIdsSize) {
							// One matching target remaining
							// avoid valgrind error: Source
							// and destination overlap in
							// memcpy
							refs[0].targetIds[j-uint((1))] = refs[0].targetIds[uint(refs[0].targetIdsSize)]
						}
						return 0
					}
					_ = refs[0].targetIds
					// Remove refs
					UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].referenceTypeId))[:])
					node[0].referencesSize --
					if uint(node[0].referencesSize) > uint((0)) {
						if i-uint((1)) != uint(node[0].referencesSize) {
							// avoid valgrind error: Source
							// and destination overlap in
							// memcpy
							node[0].references[i-uint((1))] = node[0].references[uint(node[0].referencesSize)]
						}
						return 0
					}
					_ = node[0].references
					// Remove the node references
					node[0].references = nil
					return 0
				}
			}
		}
	}
	return 1086062592
}
// UA_Node_deleteReferences - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19752
func UA_Node_deleteReferences(node []UA_Node) {
	{
		var i uint
		for ; i < uint(node[0].referencesSize); i++ {
			var refs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&node[0].references[i]))[:]
			UA_Array_delete(refs[0].targetIds, uint(refs[0].targetIdsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[17]))[:])
			UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].referenceTypeId))[:])
		}
	}
	if node[0].references != nil {
		_ = node[0].references
	}
	node[0].references = nil
	node[0].referencesSize = 0
}
// addNamespace - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19791
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_server.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2018 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014-2017 (c) Florian Palm
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015-2016 (c) Chris Iatrou
// *    Copyright 2015 (c) LEvertz
// *    Copyright 2015-2016 (c) Oleksiy Vasylyev
// *    Copyright 2016 (c) Julian Grothoff
// *    Copyright 2016-2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2016 (c) Lorenz Haas
// *    Copyright 2017 (c) frax2222
// *    Copyright 2017 (c) Mark Giraud, Fraunhofer IOSB
//
//
// Namespace Handling
//
func addNamespace(server []UA_Server, name UA_String) UA_UInt16 {
	{
		var i UA_UInt16
		for ; uint32(uint16((uint16((uint16_t((i))))))) < uint32((uint(server[0].namespacesSize))); i++ {
			if int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&name))[:], (*[100000000]UA_String)(unsafe.Pointer(&server[0].namespaces[i]))[:]))))) != 0 {
				// Check if the namespace already exists in the server's namespace array
				return UA_UInt16(i)
			}
		}
	}
	var newNS []UA_String = make([]UA_String, 16*uint32((uint(server[0].namespacesSize)+uint((1))))/16)
	if newNS == nil {
		// Make the array bigger
		return 0
	}
	server[0].namespaces = newNS
	var retval UA_StatusCode = UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&name))[:], (*[100000000]UA_String)(unsafe.Pointer(&server[0].namespaces[uint(server[0].namespacesSize)]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Copy the namespace string
		return 0
	}
	// Announce the change (otherwise, the array appears unchanged)
	server[0].namespacesSize ++
	return UA_UInt16((uint32((uint(server[0].namespacesSize) - uint((1))))))
}
// UA_Server_addNamespace - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19815
func UA_Server_addNamespace(server []UA_Server, name []byte) UA_UInt16 {
	var nameString UA_String
	// Override const attribute to get string (dirty hack)
	nameString.length = uint((uint32(noarch.Strlen(name))))
	nameString.data = nil
	return addNamespace(server, nameString)
}
// UA_Server_forEachChildNodeCall - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19823
func UA_Server_forEachChildNodeCall(server []UA_Server, parentNodeId UA_NodeId, callback UA_NodeIteratorCallback, handle interface{}) UA_StatusCode {
	var parent []UA_Node = server.config.nodestore.getNode(server[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:])
	if parent == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2150825984)))))))
	}
	var parentCopy []UA_Node = UA_Node_copy_alloc(parent)
	if parentCopy == nil {
		// TODO: We need to do an ugly copy of the references array since users may
		//     * delete references from within the callback. In single-threaded mode this
		//     * changes the same node we point at here. In multi-threaded mode, this
		//     * creates a new copy as nodes are truly immutable.
		//     * The callback could remove a node via the regular public API.
		//     * This can remove a member of the nodes-array we iterate over...
		//     *
		server.config.nodestore.releaseNode(server[0].config.nodestore.context, parent)
		return UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
	}
	var retval UA_StatusCode
	{
		var i uint = uint(parentCopy[0].referencesSize)
		for ; i > uint((0)); i-- {
			var ref []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&parentCopy[0].references[i-uint((1))]))[:]
			{
				var j uint
				for ; j < uint(ref[0].targetIdsSize); j++ {
					retval |= callback(ref[0].targetIds[j].nodeId, UA_Boolean(ref[0].isInverse), ref[0].referenceTypeId, handle)
				}
			}
		}
	}
	UA_Node_deleteMembers(parentCopy)
	_ = parentCopy
	server.config.nodestore.releaseNode(server[0].config.nodestore.context, parent)
	return UA_StatusCode(retval)
}
// UA_Server_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19864
//
// Server Lifecycle
//
// The server needs to be stopped before it can be deleted
func UA_Server_delete(server []UA_Server) {
	// Delete all internal data
	UA_SecureChannelManager_deleteMembers((*[100000000]UA_SecureChannelManager)(unsafe.Pointer(&server[0].secureChannelManager))[:])
	UA_SessionManager_deleteMembers((*[100000000]UA_SessionManager)(unsafe.Pointer(&server[0].sessionManager))[:])
	UA_Array_delete(server[0].namespaces, uint(server[0].namespacesSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	var rs []registeredServer_list_entry
	var rs_tmp []registeredServer_list_entry
	for rs = ((*[100000000]registeredServer_list)(unsafe.Pointer(&server[0].registeredServers))[:])[0].lh_first; rs != nil && func() int {
		rs_tmp = (rs)[0].pointers.le_next
		tempVar := &1
		return *tempVar
	}() != 0; rs = rs_tmp {
		for {
			if (rs)[0].pointers.le_next != nil {
				(rs)[0].pointers.le_next[0].pointers.le_prev = (rs)[0].pointers.le_prev
			}
			(rs)[0].pointers.le_prev[0] = (rs)[0].pointers.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		UA_RegisteredServer_deleteMembers((*[100000000]UA_RegisteredServer)(unsafe.Pointer(&rs[0].registeredServer))[:])
		_ = rs
	}
	var ps []periodicServerRegisterCallback_entry
	var ps_tmp []periodicServerRegisterCallback_entry
	for ps = ((*[100000000]periodicServerRegisterCallback_list)(unsafe.Pointer(&server[0].periodicServerRegisterCallbacks))[:])[0].lh_first; ps != nil && func() int {
		ps_tmp = (ps)[0].pointers.le_next
		tempVar := &1
		return *tempVar
	}() != 0; ps = ps_tmp {
		for {
			if (ps)[0].pointers.le_next != nil {
				(ps)[0].pointers.le_next[0].pointers.le_prev = (ps)[0].pointers.le_prev
			}
			(ps)[0].pointers.le_prev[0] = (ps)[0].pointers.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		_ = ps[0].callback
		_ = ps
	}
	// Process new delayed callbacks from the cleanup
	UA_Server_cleanupDelayedCallbacks(server)
	// Delete the timed work
	UA_Timer_deleteMembers((*[100000000]UA_Timer)(unsafe.Pointer(&server[0].timer))[:])
	_ = server
	// Delete the server itself
}
// UA_Server_cleanup - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19928
// Recurring cleanup. Removing unused and timed-out channels and sessions
func UA_Server_cleanup(server []UA_Server, __ interface{}) {
	var nowMonotonic UA_DateTime = UA_DateTime_nowMonotonic()
	UA_SessionManager_cleanupTimedOut((*[100000000]UA_SessionManager)(unsafe.Pointer(&server[0].sessionManager))[:], UA_DateTime(nowMonotonic))
	UA_SecureChannelManager_cleanupTimedOut((*[100000000]UA_SecureChannelManager)(unsafe.Pointer(&server[0].secureChannelManager))[:], UA_DateTime(nowMonotonic))
	UA_Discovery_cleanupTimedOut(server, UA_DateTime(nowMonotonic))
}
// UA_Server_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19942
//
// Server Lifecycle
//
func UA_Server_new(config []UA_ServerConfig) []UA_Server {
	if config == nil {
		// A config is required
		return nil
	}
	if uint(config[0].endpointsSize) == uint((0)) {
		// At least one endpoint has to be configured
		UA_LOG_FATAL(UA_Logger(config[0].logger), UA_LOGCATEGORY_SERVER, []byte("There has to be at least one endpoint.\x00"))
		return nil
	}
	var// Warning (*ast.UnaryExprOrTypeTraitExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19956 :Cannot determine sizeof : |UA_Server|. err = Cannot determine sizeof : |struct UA_Server|. err = Cannot canculate `struct` sizeof for `string`. Cannot determine sizeof : |struct DelayedCallbacksList|. err = Cannot canculate `struct` sizeof for `*program.Struct`. Cannot determine sizeof : |UA_DelayedCallback|. err = error in array size
	// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19956 :Cannot determine sizeof : |UA_Server|. err = Cannot determine sizeof : |struct UA_Server|. err = Cannot canculate `struct` sizeof for `*program.Struct`. Cannot determine sizeof : |DelayedCallbacksList|. err = Cannot canculate `struct` sizeof for `*program.Struct`. Cannot determine sizeof : |UA_DelayedCallback|. err = error in array size
	// Warning (*ast.VarDecl):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:19956 :Cannot getDefaultValueForVar : err = Cannot determine sizeof : |UA_Server|. err = Cannot determine sizeof : |struct UA_Server|. err = Cannot canculate `struct` sizeof for `*program.Struct`. Cannot determine sizeof : |DelayedCallbacksList|. err = Cannot canculate `struct` sizeof for `*program.Struct`. Cannot determine sizeof : |UA_DelayedCallback|. err = error in array size
	server []UA_Server
	if server == nil {
		// Allocate the server
		return nil
	}
	// Set the config
	server[0].config = config[0]
	// Init start time to zero, the actual start time will be sampled in
	//     * UA_Server_run_startup()
	server[0].startTime = 0
	// Set a seed for non-cyptographic randomness
	UA_random_seed(UA_UInt64(UA_DateTime_now()))
	// Initialize the handling of repeated callbacks
	UA_Timer_init((*[100000000]UA_Timer)(unsafe.Pointer(&server[0].timer))[:])
	{
		// Initialized the linked list for delayed callbacks
		((*[100000000]DelayedCallbacksList)(unsafe.Pointer(&server[0].delayedCallbacks))[:])[0].slh_first = nil
	}
	// Initialized the dispatch queue for worker threads
	// Create Namespaces 0 and 1
	server[0].namespaces = UA_Array_new(2, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:]).([]UA_String)
	//opcfoundation.org/UA/");
	server[0].namespaces[0] = UA_String_fromChars([]byte("http://opcfoundation.org/UA/\x00"))
	UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&server[0].config.applicationDescription.applicationUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&server[0].namespaces[1]))[:])
	server[0].namespacesSize = 2
	// Initialized SecureChannel and Session managers
	UA_SecureChannelManager_init((*[100000000]UA_SecureChannelManager)(unsafe.Pointer(&server[0].secureChannelManager))[:], server)
	UA_SessionManager_init((*[100000000]UA_SessionManager)(unsafe.Pointer(&server[0].sessionManager))[:], server)
	// Add a regular callback for cleanup and maintenance
	UA_Server_addRepeatedCallback(server, UA_ServerCallback(UA_Server_cleanup), nil, 10000, nil)
	for {
		// Initialized discovery database
		((*[100000000]registeredServer_list)(unsafe.Pointer(&server[0].registeredServers))[:])[0].lh_first = nil
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	server[0].registeredServersSize = 0
	for {
		((*[100000000]periodicServerRegisterCallback_list)(unsafe.Pointer(&server[0].periodicServerRegisterCallbacks))[:])[0].lh_first = nil
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	server[0].registerServerCallback = nil
	server[0].registerServerCallbackData = nil
	var retVal UA_StatusCode = UA_Server_initNS0(server)
	if retVal != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Initialize multicast discovery
		// Initialize namespace 0
		UA_LOG_ERROR(UA_Logger(config[0].logger), UA_LOGCATEGORY_SERVER, []byte("Initialization of Namespace 0 failed with %s. See previous outputs for any error messages.\x00"), UA_StatusCode_name(UA_StatusCode(retVal)))
		UA_Server_delete(server)
		return nil
	}
	return server
}
// UA_Server_addRepeatedCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20049
//
// Repeated Jobs
//
func UA_Server_addRepeatedCallback(server []UA_Server, callback UA_ServerCallback, data interface{}, interval UA_UInt32, callbackId []UA_UInt64) UA_StatusCode {
	return UA_Timer_addRepeatedCallback((*[100000000]UA_Timer)(unsafe.Pointer(&server[0].timer))[:], UA_TimerCallback(UA_ServerCallback(callback)), data, UA_UInt32(interval), callbackId)
}
// UA_Server_changeRepeatedCallbackInterval - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20057
func UA_Server_changeRepeatedCallbackInterval(server []UA_Server, callbackId UA_UInt64, interval UA_UInt32) UA_StatusCode {
	return UA_Timer_changeRepeatedCallbackInterval((*[100000000]UA_Timer)(unsafe.Pointer(&server[0].timer))[:], UA_UInt64(callbackId), UA_UInt32(interval))
}
// UA_Server_removeRepeatedCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20063
func UA_Server_removeRepeatedCallback(server []UA_Server, callbackId UA_UInt64) UA_StatusCode {
	return UA_Timer_removeRepeatedCallback((*[100000000]UA_Timer)(unsafe.Pointer(&server[0].timer))[:], UA_UInt64(callbackId))
}
// addNode_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20086
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_server_ns0.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Thomas Bender
// *    Copyright 2017 (c) Julian Grothoff
// *    Copyright 2017 (c) Henrik Norrman
//
//
// Node Creation
//
func addNode_begin(server []UA_Server, nodeClass int, nodeId UA_UInt32, name []byte, attributes interface{}, attributesType []UA_DataType) UA_StatusCode {
	var item UA_AddNodesItem
	UA_AddNodesItem_init((*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:])
	item.nodeClass = nodeClass
	item.requestedNewNodeId.nodeId = UA_NODEID_NUMERIC(0, UA_UInt32(nodeId))
	item.browseName = UA_QUALIFIEDNAME(0, name)
	item.nodeAttributes.encoding = UA_EXTENSIONOBJECT_DECODED_NODELETE
	(*item.nodeAttributes.content.decoded()).data = attributes
	(*item.nodeAttributes.content.decoded()).type_ = attributesType
	var parentNode UA_NodeId = UA_NODEID_NULL
	var referenceType UA_NodeId = UA_NODEID_NULL
	return Operation_addNode_begin(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], nil, (*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNode))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceType))[:], nil)
}
// addNode_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20103
func addNode_finish(server []UA_Server, nodeId UA_UInt32, parentNodeId UA_UInt32, referenceTypeId UA_UInt32) UA_StatusCode {
	var sourceId UA_NodeId = UA_NODEID_NUMERIC(0, UA_UInt32(nodeId))
	var refTypeId UA_NodeId = UA_NODEID_NUMERIC(0, UA_UInt32(referenceTypeId))
	var targetId UA_ExpandedNodeId = UA_EXPANDEDNODEID_NUMERIC(0, UA_UInt32(parentNodeId))
	var retval UA_StatusCode = UA_Server_addReference(server, sourceId, refTypeId, targetId, 0)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	var node UA_NodeId = UA_NODEID_NUMERIC(0, UA_UInt32(nodeId))
	return Operation_addNode_finish(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&node))[:])
}
// addDataTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20118
func addDataTypeNode(server []UA_Server, name []byte, datatypeid UA_UInt32, isAbstract UA_Boolean, parentid UA_UInt32) UA_StatusCode {
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), name)
	attr.isAbstract = isAbstract
	return UA_Server_addDataTypeNode(server, UA_NODEID_NUMERIC(0, UA_UInt32(datatypeid)), UA_NODEID_NUMERIC(0, UA_UInt32(parentid)), UA_NODEID_NULL, UA_QUALIFIEDNAME(0, name), attr, nil, nil)
}
// addObjectTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20129
func addObjectTypeNode(server []UA_Server, name []byte, objecttypeid UA_UInt32, isAbstract UA_Boolean, parentid UA_UInt32) UA_StatusCode {
	var attr UA_ObjectTypeAttributes = UA_ObjectTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), name)
	attr.isAbstract = isAbstract
	return UA_Server_addObjectTypeNode(server, UA_NODEID_NUMERIC(0, UA_UInt32(objecttypeid)), UA_NODEID_NUMERIC(0, UA_UInt32(parentid)), UA_NODEID_NULL, UA_QUALIFIEDNAME(0, name), attr, nil, nil)
}
// addObjectNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20140
func addObjectNode(server []UA_Server, name []byte, objectid UA_UInt32, parentid UA_UInt32, referenceid UA_UInt32, type_id UA_UInt32) UA_StatusCode {
	var object_attr UA_ObjectAttributes = UA_ObjectAttributes_default
	object_attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), name)
	return UA_Server_addObjectNode(server, UA_NODEID_NUMERIC(0, UA_UInt32(objectid)), UA_NODEID_NUMERIC(0, UA_UInt32(parentid)), UA_NODEID_NUMERIC(0, UA_UInt32(referenceid)), UA_QUALIFIEDNAME(0, name), UA_NODEID_NUMERIC(0, UA_UInt32(type_id)), object_attr, nil, nil)
}
// addReferenceTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20153
func addReferenceTypeNode(server []UA_Server, name []byte, inverseName []byte, referencetypeid UA_UInt32, isabstract UA_Boolean, symmetric UA_Boolean, parentid UA_UInt32) UA_StatusCode {
	var reference_attr UA_ReferenceTypeAttributes = UA_ReferenceTypeAttributes_default
	reference_attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), name)
	reference_attr.isAbstract = isabstract
	reference_attr.symmetric = symmetric
	if inverseName != nil {
		reference_attr.inverseName = UA_LOCALIZEDTEXT([]byte("\x00"), inverseName)
	}
	return UA_Server_addReferenceTypeNode(server, UA_NODEID_NUMERIC(0, UA_UInt32(referencetypeid)), UA_NODEID_NUMERIC(0, UA_UInt32(parentid)), UA_NODEID_NULL, UA_QUALIFIEDNAME(0, name), reference_attr, nil, nil)
}
// addVariableTypeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20167
func addVariableTypeNode(server []UA_Server, name []byte, variabletypeid UA_UInt32, isAbstract UA_Boolean, valueRank UA_Int32, dataType UA_UInt32, type_ []UA_DataType, parentid UA_UInt32) UA_StatusCode {
	var attr UA_VariableTypeAttributes = UA_VariableTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), name)
	attr.dataType = UA_NODEID_NUMERIC(0, UA_UInt32(dataType))
	attr.isAbstract = isAbstract
	attr.valueRank = valueRank
	if type_ != nil {
		var tempVal []UA_Byte
		UA_init(tempVal, type_)
		UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], tempVal, type_)
		return UA_Server_addVariableTypeNode(server, UA_NODEID_NUMERIC(0, UA_UInt32(variabletypeid)), UA_NODEID_NUMERIC(0, UA_UInt32(parentid)), UA_NODEID_NULL, UA_QUALIFIEDNAME(0, name), UA_NODEID_NULL, attr, nil, nil)
	}
	return UA_Server_addVariableTypeNode(server, UA_NODEID_NUMERIC(0, UA_UInt32(variabletypeid)), UA_NODEID_NUMERIC(0, UA_UInt32(parentid)), UA_NODEID_NULL, UA_QUALIFIEDNAME(0, name), UA_NODEID_NULL, attr, nil, nil)
}
// UA_Server_createNS0_base - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20197
//
// Create Namespace 0
//
// Creates the basic nodes which are expected by the nodeset compiler to be
// * already created. This is necessary to reduce the dependencies for the nodeset
// * compiler.
func UA_Server_createNS0_base(server []UA_Server) UA_StatusCode {
	var ret UA_StatusCode
	var references_attr UA_ReferenceTypeAttributes = UA_ReferenceTypeAttributes_default
	//
	// Bootstrap reference hierarchy
	//
	// Bootstrap References and HasSubtype
	references_attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("References\x00"))
	references_attr.isAbstract = 1
	references_attr.symmetric = 1
	references_attr.inverseName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("References\x00"))
	ret |= addNode_begin(server, UA_NODECLASS_REFERENCETYPE, 31, []byte("References\x00"), (*[100000000]UA_ReferenceTypeAttributes)(unsafe.Pointer(&references_attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:])
	var hassubtype_attr UA_ReferenceTypeAttributes = UA_ReferenceTypeAttributes_default
	hassubtype_attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("HasSubtype\x00"))
	hassubtype_attr.isAbstract = 0
	hassubtype_attr.symmetric = 0
	hassubtype_attr.inverseName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("HasSupertype\x00"))
	ret |= addNode_begin(server, UA_NODECLASS_REFERENCETYPE, 45, []byte("HasSubtype\x00"), (*[100000000]UA_ReferenceTypeAttributes)(unsafe.Pointer(&hassubtype_attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:])
	ret |= addReferenceTypeNode(server, []byte("HierarchicalReferences\x00"), nil, 33, 1, 0, 31)
	ret |= addReferenceTypeNode(server, []byte("NonHierarchicalReferences\x00"), nil, 32, 1, 0, 31)
	ret |= addReferenceTypeNode(server, []byte("HasChild\x00"), nil, 34, 1, 0, 33)
	ret |= addReferenceTypeNode(server, []byte("Organizes\x00"), []byte("OrganizedBy\x00"), 35, 0, 0, 33)
	ret |= addReferenceTypeNode(server, []byte("HasEventSource\x00"), []byte("EventSourceOf\x00"), 36, 0, 0, 33)
	ret |= addReferenceTypeNode(server, []byte("HasModellingRule\x00"), []byte("ModellingRuleOf\x00"), 37, 0, 0, 32)
	ret |= addReferenceTypeNode(server, []byte("HasEncoding\x00"), []byte("EncodingOf\x00"), 38, 0, 0, 32)
	ret |= addReferenceTypeNode(server, []byte("HasDescription\x00"), []byte("DescriptionOf\x00"), 39, 0, 0, 32)
	ret |= addReferenceTypeNode(server, []byte("HasTypeDefinition\x00"), []byte("TypeDefinitionOf\x00"), 40, 0, 0, 32)
	ret |= addReferenceTypeNode(server, []byte("GeneratesEvent\x00"), []byte("GeneratedBy\x00"), 41, 0, 0, 32)
	ret |= addReferenceTypeNode(server, []byte("Aggregates\x00"), []byte("AggregatedBy\x00"), 44, 0, 0, 34)
	// Complete bootstrap of HasSubtype
	ret |= addNode_finish(server, 45, 34, 45)
	ret |= addReferenceTypeNode(server, []byte("HasProperty\x00"), []byte("PropertyOf\x00"), 46, 0, 0, 44)
	ret |= addReferenceTypeNode(server, []byte("HasComponent\x00"), []byte("ComponentOf\x00"), 47, 0, 0, 44)
	ret |= addReferenceTypeNode(server, []byte("HasNotifier\x00"), []byte("NotifierOf\x00"), 48, 0, 0, 36)
	ret |= addReferenceTypeNode(server, []byte("HasOrderedComponent\x00"), []byte("OrderedComponentOf\x00"), 49, 0, 0, 47)
	var basedatatype_attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	//
	// Data Types
	//
	// Bootstrap BaseDataType
	basedatatype_attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("BaseDataType\x00"))
	basedatatype_attr.isAbstract = 1
	ret |= addNode_begin(server, UA_NODECLASS_DATATYPE, 24, []byte("BaseDataType\x00"), (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&basedatatype_attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:])
	ret |= addDataTypeNode(server, []byte("Number\x00"), 26, 1, 24)
	ret |= addDataTypeNode(server, []byte("Integer\x00"), 27, 1, 26)
	ret |= addDataTypeNode(server, []byte("UInteger\x00"), 28, 1, 26)
	ret |= addDataTypeNode(server, []byte("Boolean\x00"), 1, 0, 24)
	ret |= addDataTypeNode(server, []byte("SByte\x00"), 2, 0, 27)
	ret |= addDataTypeNode(server, []byte("Byte\x00"), 3, 0, 28)
	ret |= addDataTypeNode(server, []byte("Int16\x00"), 4, 0, 27)
	ret |= addDataTypeNode(server, []byte("UInt16\x00"), 5, 0, 28)
	ret |= addDataTypeNode(server, []byte("Int32\x00"), 6, 0, 27)
	ret |= addDataTypeNode(server, []byte("UInt32\x00"), 7, 0, 28)
	ret |= addDataTypeNode(server, []byte("Int64\x00"), 8, 0, 27)
	ret |= addDataTypeNode(server, []byte("UInt64\x00"), 9, 0, 28)
	ret |= addDataTypeNode(server, []byte("Float\x00"), 10, 0, 26)
	ret |= addDataTypeNode(server, []byte("Double\x00"), 11, 0, 26)
	ret |= addDataTypeNode(server, []byte("DateTime\x00"), 13, 0, 24)
	ret |= addDataTypeNode(server, []byte("String\x00"), 12, 0, 24)
	ret |= addDataTypeNode(server, []byte("ByteString\x00"), 15, 0, 24)
	ret |= addDataTypeNode(server, []byte("Guid\x00"), 14, 0, 24)
	ret |= addDataTypeNode(server, []byte("XmlElement\x00"), 16, 0, 24)
	ret |= addDataTypeNode(server, []byte("NodeId\x00"), 17, 0, 24)
	ret |= addDataTypeNode(server, []byte("ExpandedNodeId\x00"), 18, 0, 24)
	ret |= addDataTypeNode(server, []byte("QualifiedName\x00"), 20, 0, 24)
	ret |= addDataTypeNode(server, []byte("LocalizedText\x00"), 21, 0, 24)
	ret |= addDataTypeNode(server, []byte("StatusCode\x00"), 19, 0, 24)
	ret |= addDataTypeNode(server, []byte("Structure\x00"), 22, 1, 24)
	ret |= addDataTypeNode(server, []byte("Decimal128\x00"), 121, 0, 26)
	ret |= addDataTypeNode(server, []byte("Duration\x00"), 290, 0, 11)
	ret |= addDataTypeNode(server, []byte("UtcTime\x00"), 294, 0, 13)
	ret |= addDataTypeNode(server, []byte("LocaleId\x00"), 295, 0, 12)
	var basevar_attr UA_VariableTypeAttributes = UA_VariableTypeAttributes_default
	//
	// VariableTypes
	//
	// Bootstrap BaseVariableType
	basevar_attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("BaseVariableType\x00"))
	basevar_attr.isAbstract = 1
	basevar_attr.valueRank = UA_Int32((int32_t((__int32_t((-2))))))
	basevar_attr.dataType = UA_NODEID_NUMERIC(0, 24)
	ret |= addNode_begin(server, UA_NODECLASS_VARIABLETYPE, 62, []byte("BaseVariableType\x00"), (*[100000000]UA_VariableTypeAttributes)(unsafe.Pointer(&basevar_attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:])
	ret |= addVariableTypeNode(server, []byte("BaseDataVariableType\x00"), 63, 0, UA_Int32((int32_t((__int32_t((-2)))))), 24, nil, 62)
	var baseobj_attr UA_ObjectTypeAttributes = UA_ObjectTypeAttributes_default
	//
	// ObjectTypes
	//
	// Bootstrap BaseObjectType
	baseobj_attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("BaseObjectType\x00"))
	ret |= addNode_begin(server, UA_NODECLASS_OBJECTTYPE, 58, []byte("BaseObjectType\x00"), (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&baseobj_attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:])
	ret |= addObjectTypeNode(server, []byte("FolderType\x00"), 61, 0, 58)
	//
	// Root and below
	//
	ret |= addObjectNode(server, []byte("Root\x00"), 84, 0, 0, 61)
	ret |= addObjectNode(server, []byte("Objects\x00"), 85, 84, 35, 61)
	ret |= addObjectNode(server, []byte("Types\x00"), 86, 84, 35, 61)
	ret |= addObjectNode(server, []byte("ReferenceTypes\x00"), 91, 86, 35, 61)
	ret |= addNode_finish(server, 31, 91, 35)
	ret |= addObjectNode(server, []byte("DataTypes\x00"), 90, 86, 35, 61)
	ret |= addNode_finish(server, 24, 90, 35)
	ret |= addObjectNode(server, []byte("VariableTypes\x00"), 89, 86, 35, 61)
	ret |= addNode_finish(server, 62, 89, 35)
	ret |= addObjectNode(server, []byte("ObjectTypes\x00"), 88, 86, 35, 61)
	ret |= addNode_finish(server, 58, 88, 35)
	ret |= addObjectNode(server, []byte("EventTypes\x00"), 3048, 86, 35, 61)
	ret |= addObjectNode(server, []byte("Views\x00"), 87, 84, 35, 61)
	if ret != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	return 0
}
// readStatus - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20392
//
// Data Sources
//
func readStatus(server []UA_Server, sessionId []UA_NodeId, sessionContext interface{}, nodeId []UA_NodeId, nodeContext interface{}, sourceTimestamp UA_Boolean, range_ []UA_NumericRange, value []UA_DataValue) UA_StatusCode {
	if range_ != nil {
		value[0].hasStatus = 1
		value[0].status = UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
		return 0
	}
	var statustype []UA_ServerStatusDataType = UA_ServerStatusDataType_new()
	statustype[0].startTime = UA_DateTime(server[0].startTime)
	statustype[0].currentTime = UA_DateTime_now()
	statustype[0].state = UA_SERVERSTATE_RUNNING
	statustype[0].secondsTillShutdown = 0
	UA_BuildInfo_copy((*[100000000]UA_BuildInfo)(unsafe.Pointer(&server[0].config.buildInfo))[:], (*[100000000]UA_BuildInfo)(unsafe.Pointer(&statustype[0].buildInfo))[:])
	value[0].value.type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[168]))[:]
	value[0].value.arrayLength = 0
	value[0].value.data = statustype
	value[0].value.arrayDimensionsSize = 0
	value[0].value.arrayDimensions = nil
	value[0].hasValue = 1
	if int((int((UA_Boolean(sourceTimestamp))))) != 0 {
		value[0].hasSourceTimestamp = 1
		value[0].sourceTimestamp = UA_DateTime_now()
	}
	return 0
}
// readServiceLevel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20422
func readServiceLevel(server []UA_Server, sessionId []UA_NodeId, sessionContext interface{}, nodeId []UA_NodeId, nodeContext interface{}, includeSourceTimeStamp UA_Boolean, range_ []UA_NumericRange, value []UA_DataValue) UA_StatusCode {
	if range_ != nil {
		value[0].hasStatus = 1
		value[0].status = UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
		return 0
	}
	value[0].value.type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:]
	value[0].value.arrayLength = 0
	var byte []UA_Byte = UA_Byte_new()
	byte[0] = UA_Byte(255)
	value[0].value.data = byte
	value[0].value.arrayDimensionsSize = 0
	value[0].value.arrayDimensions = nil
	value[0].hasValue = 1
	if int((int((UA_Boolean(includeSourceTimeStamp))))) != 0 {
		value[0].hasSourceTimestamp = 1
		value[0].sourceTimestamp = UA_DateTime_now()
	}
	return 0
}
// readAuditing - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20447
func readAuditing(server []UA_Server, sessionId []UA_NodeId, sessionContext interface{}, nodeId []UA_NodeId, nodeContext interface{}, includeSourceTimeStamp UA_Boolean, range_ []UA_NumericRange, value []UA_DataValue) UA_StatusCode {
	if range_ != nil {
		value[0].hasStatus = 1
		value[0].status = UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
		return 0
	}
	value[0].value.type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:]
	value[0].value.arrayLength = 0
	var boolean []UA_Boolean = UA_Boolean_new()
	boolean[0] = 0
	value[0].value.data = boolean
	value[0].value.arrayDimensionsSize = 0
	value[0].value.arrayDimensions = nil
	value[0].hasValue = 1
	if int((int((UA_Boolean(includeSourceTimeStamp))))) != 0 {
		value[0].hasSourceTimestamp = 1
		value[0].sourceTimestamp = UA_DateTime_now()
	}
	return 0
}
// readNamespaces - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20472
func readNamespaces(server []UA_Server, sessionId []UA_NodeId, sessionContext interface{}, nodeid []UA_NodeId, nodeContext interface{}, includeSourceTimeStamp UA_Boolean, range_ []UA_NumericRange, value []UA_DataValue) UA_StatusCode {
	if range_ != nil {
		value[0].hasStatus = 1
		value[0].status = UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
		return 0
	}
	var retval UA_StatusCode
	retval = UA_Variant_setArrayCopy((*[100000000]UA_Variant)(unsafe.Pointer(&value[0].value))[:], server[0].namespaces, uint(server[0].namespacesSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	value[0].hasValue = 1
	if int((int((UA_Boolean(includeSourceTimeStamp))))) != 0 {
		value[0].hasSourceTimestamp = 1
		value[0].sourceTimestamp = UA_DateTime_now()
	}
	return 0
}
// writeNamespaces - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20495
func writeNamespaces(server []UA_Server, sessionId []UA_NodeId, sessionContext interface{}, nodeid []UA_NodeId, nodeContext interface{}, range_ []UA_NumericRange, value []UA_DataValue) UA_StatusCode {
	if int((int((noarch.NotUA_Boolean(UA_Boolean(value[0].hasValue)))))) != 0 || value[0].value.type_ != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:] {
		// Check the data type
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	if value[0].value.data == nil {
		// Check that the variant is not empty
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	if range_ != nil {
		// TODO: Writing with a range is not implemented
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var newNamespaces []UA_String = value[0].value.data.([]UA_String)
	var newNamespacesSize uint = uint(value[0].value.arrayLength)
	if newNamespacesSize <= uint(server[0].namespacesSize) {
		// Test if we append to the existing namespaces
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	{
		var i uint
		for ; i < uint(server[0].namespacesSize); i++ {
			if int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&server[0].namespaces[i]))[:], (*[100000000]UA_String)(unsafe.Pointer(&newNamespaces[i]))[:])))))) != 0 {
				// Test if the existing namespaces are unchanged
				return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
			}
		}
	}
	{
		var i uint = uint(server[0].namespacesSize)
		for ; i < newNamespacesSize; i++ {
			// Add namespaces
			addNamespace(server, newNamespaces[i])
		}
	}
	return 0
}
// readCurrentTime - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20531
func readCurrentTime(server []UA_Server, sessionId []UA_NodeId, sessionContext interface{}, nodeid []UA_NodeId, nodeContext interface{}, sourceTimeStamp UA_Boolean, range_ []UA_NumericRange, value []UA_DataValue) UA_StatusCode {
	if range_ != nil {
		value[0].hasStatus = 1
		value[0].status = UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
		return 0
	}
	var currentTime UA_DateTime = UA_DateTime_now()
	var retval UA_StatusCode = UA_Variant_setScalarCopy((*[100000000]UA_Variant)(unsafe.Pointer(&value[0].value))[:], (*[100000000]UA_DateTime)(unsafe.Pointer(&currentTime))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	value[0].hasValue = 1
	if int((int((UA_Boolean(sourceTimeStamp))))) != 0 {
		value[0].hasSourceTimestamp = 1
		value[0].sourceTimestamp = currentTime
	}
	return 0
}
// readMonitoredItems - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20554
func readMonitoredItems(server []UA_Server, sessionId []UA_NodeId, sessionContext interface{}, methodId []UA_NodeId, methodContext interface{}, objectId []UA_NodeId, objectContext interface{}, inputSize uint, input []UA_Variant, outputSize uint, output []UA_Variant) UA_StatusCode {
	var session []UA_Session = UA_SessionManager_getSessionById((*[100000000]UA_SessionManager)(unsafe.Pointer(&server[0].sessionManager))[:], sessionId)
	if session == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if inputSize == uint((0)) || input[0].data == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
	}
	var subscriptionId UA_UInt32 = ((input[0].data).([]UA_UInt32))[(0)]
	var subscription []UA_Subscription = UA_Session_getSubscriptionById(session, UA_UInt32(subscriptionId))
	if subscription == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
	}
	var sizeOfOutput UA_UInt32
	var monitoredItem []UA_MonitoredItem
	for monitoredItem = ((*[100000000]UA_ListOfUAMonitoredItems)(unsafe.Pointer(&subscription[0].monitoredItems))[:])[0].lh_first; monitoredItem != nil; monitoredItem = (monitoredItem)[0].listEntry.le_next {
		sizeOfOutput ++
	}
	if sizeOfOutput == UA_UInt32((uint32_t((uint32((0)))))) {
		return 0
	}
	var clientHandles []UA_UInt32 = UA_Array_new(uint(UA_UInt32(sizeOfOutput)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
	var serverHandles []UA_UInt32 = UA_Array_new(uint(UA_UInt32(sizeOfOutput)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
	var i UA_UInt32
	for monitoredItem = ((*[100000000]UA_ListOfUAMonitoredItems)(unsafe.Pointer(&subscription[0].monitoredItems))[:])[0].lh_first; monitoredItem != nil; monitoredItem = (monitoredItem)[0].listEntry.le_next {
		clientHandles[i] = UA_UInt32(monitoredItem[0].clientHandle)
		serverHandles[i] = UA_UInt32(monitoredItem[0].monitoredItemId)
		i ++
	}
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&output[0]))[:], clientHandles, uint(UA_UInt32(sizeOfOutput)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&output[1]))[:], serverHandles, uint(UA_UInt32(sizeOfOutput)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	return 0
}
// writeNs0Variable - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20592
func writeNs0Variable(server []UA_Server, id UA_UInt32, v interface{}, type_ []UA_DataType) UA_StatusCode {
	var var_ UA_Variant
	UA_Variant_init((*[100000000]UA_Variant)(unsafe.Pointer(&var_))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&var_))[:], v, type_)
	return UA_Server_writeValue(server, UA_NODEID_NUMERIC(0, UA_UInt32(id)), var_)
}
// writeNs0VariableArray - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20600
func writeNs0VariableArray(server []UA_Server, id UA_UInt32, v interface{}, length uint, type_ []UA_DataType) UA_StatusCode {
	var var_ UA_Variant
	UA_Variant_init((*[100000000]UA_Variant)(unsafe.Pointer(&var_))[:])
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&var_))[:], v, uint(length), type_)
	return UA_Server_writeValue(server, UA_NODEID_NUMERIC(0, UA_UInt32(id)), var_)
}
// UA_Server_initNS0 - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20612
// Initialize the nodeset 0 by using the generated code of the nodeset compiler.
// * This also initialized the data sources for various variables, such as for
// * example server time.
func UA_Server_initNS0(server []UA_Server) UA_StatusCode {
	// Initialize base nodes which are always required an cannot be created
	//     * through the NS compiler
	server[0].bootstrapNS0 = 1
	var retVal UA_StatusCode = UA_Server_createNS0_base(server)
	server[0].bootstrapNS0 = 0
	if retVal != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retVal)
	}
	// Load nodes and references generated from the XML ns0 definition
	server[0].bootstrapNS0 = 1
	retVal = ua_namespace0(server)
	server[0].bootstrapNS0 = 0
	if retVal != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retVal)
	}
	var namespaceDataSource UA_DataSource = UA_DataSource{readNamespaces, nil}
	// NamespaceArray
	retVal |= UA_Server_setVariableNode_dataSource(server, UA_NODEID_NUMERIC(0, 2255), namespaceDataSource)
	// ServerArray
	retVal |= writeNs0VariableArray(server, 2254, (*[100000000]UA_String)(unsafe.Pointer(&server[0].config.applicationDescription.applicationUri))[:], 1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	var locale_en UA_LocaleId = UA_String((UA_STRING([]byte("en\x00"))))
	// LocaleIdArray
	retVal |= writeNs0VariableArray(server, 2271, (*[100000000]UA_LocaleId)(unsafe.Pointer(&locale_en))[:], 1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	var maxBrowseContinuationPoints UA_UInt16 = 5
	// MaxBrowseContinuationPoints
	retVal |= writeNs0Variable(server, 2735, (*[100000000]UA_UInt16)(unsafe.Pointer(&maxBrowseContinuationPoints))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:])
	var profileArray []UA_String = make([]UA_String, 4)
	var profileArraySize UA_UInt16
	// ServerProfileArray
	//opcfoundation.org/UA-Profile/Server/NanoEmbeddedDevice");
	profileArray[func() UA_UInt16 {
		defer func() {
			profileArraySize ++
		}()
		return profileArraySize
	}()] = UA_String_fromChars([]byte("http://opcfoundation.org/UA-Profile/Server/NanoEmbeddedDevice\x00"))
	//opcfoundation.org/UA-Profile/Server/NodeManagement");
	profileArray[func() UA_UInt16 {
		defer func() {
			profileArraySize ++
		}()
		return profileArraySize
	}()] = UA_String_fromChars([]byte("http://opcfoundation.org/UA-Profile/Server/NodeManagement\x00"))
	//opcfoundation.org/UA-Profile/Server/Methods");
	profileArray[func() UA_UInt16 {
		defer func() {
			profileArraySize ++
		}()
		return profileArraySize
	}()] = UA_String_fromChars([]byte("http://opcfoundation.org/UA-Profile/Server/Methods\x00"))
	//opcfoundation.org/UA-Profile/Server/EmbeddedDataChangeSubscription");
	profileArray[func() UA_UInt16 {
		defer func() {
			profileArraySize ++
		}()
		return profileArraySize
	}()] = UA_String_fromChars([]byte("http://opcfoundation.org/UA-Profile/Server/EmbeddedDataChangeSubscription\x00"))
	retVal |= writeNs0VariableArray(server, 2269, profileArray, uint(UA_UInt16(profileArraySize)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	{
		var i int
		for ; i < int(uint16((uint16((uint16_t((profileArraySize))))))); i++ {
			UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&profileArray[i]))[:])
		}
	}
	var maxQueryContinuationPoints UA_UInt16
	// MaxQueryContinuationPoints
	retVal |= writeNs0Variable(server, 2736, (*[100000000]UA_UInt16)(unsafe.Pointer(&maxQueryContinuationPoints))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:])
	var maxHistoryContinuationPoints UA_UInt16
	// MaxHistoryContinuationPoints
	retVal |= writeNs0Variable(server, 2737, (*[100000000]UA_UInt16)(unsafe.Pointer(&maxHistoryContinuationPoints))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:])
	// MinSupportedSampleRate
	retVal |= writeNs0Variable(server, 2272, (*[100000000]UA_Duration)(unsafe.Pointer(&server[0].config.samplingIntervalLimits.min))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:])
	var serverDiagnosticsSummary UA_ServerDiagnosticsSummaryDataType
	// ServerDiagnostics - ServerDiagnosticsSummary
	UA_ServerDiagnosticsSummaryDataType_init((*[100000000]UA_ServerDiagnosticsSummaryDataType)(unsafe.Pointer(&serverDiagnosticsSummary))[:])
	retVal |= writeNs0Variable(server, 2275, (*[100000000]UA_ServerDiagnosticsSummaryDataType)(unsafe.Pointer(&serverDiagnosticsSummary))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[124]))[:])
	var enabledFlag UA_Boolean
	// ServerDiagnostics - EnabledFlag
	retVal |= writeNs0Variable(server, 2294, (*[100000000]UA_Boolean)(unsafe.Pointer(&enabledFlag))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	var serverStatus UA_DataSource = UA_DataSource{readStatus, nil}
	// ServerStatus
	retVal |= UA_Server_setVariableNode_dataSource(server, UA_NODEID_NUMERIC(0, 2256), serverStatus)
	var currentTime UA_DataSource = UA_DataSource{readCurrentTime, nil}
	// StartTime will be sampled in UA_Server_run_startup()
	// CurrentTime
	retVal |= UA_Server_setVariableNode_dataSource(server, UA_NODEID_NUMERIC(0, 2258), currentTime)
	var state int = UA_SERVERSTATE_RUNNING
	// State
	retVal |= writeNs0Variable(server, 2259, (*[100000000]int)(unsafe.Pointer(&state))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[106]))[:])
	// BuildInfo
	retVal |= writeNs0Variable(server, 2260, (*[100000000]UA_BuildInfo)(unsafe.Pointer(&server[0].config.buildInfo))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[74]))[:])
	// BuildInfo - ProductUri
	retVal |= writeNs0Variable(server, 2262, (*[100000000]UA_String)(unsafe.Pointer(&server[0].config.buildInfo.productUri))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	// BuildInfo - ManufacturerName
	retVal |= writeNs0Variable(server, 2263, (*[100000000]UA_String)(unsafe.Pointer(&server[0].config.buildInfo.manufacturerName))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	// BuildInfo - ProductName
	retVal |= writeNs0Variable(server, 2261, (*[100000000]UA_String)(unsafe.Pointer(&server[0].config.buildInfo.productName))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	// BuildInfo - SoftwareVersion
	retVal |= writeNs0Variable(server, 2264, (*[100000000]UA_String)(unsafe.Pointer(&server[0].config.buildInfo.softwareVersion))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	// BuildInfo - BuildNumber
	retVal |= writeNs0Variable(server, 2265, (*[100000000]UA_String)(unsafe.Pointer(&server[0].config.buildInfo.buildNumber))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	// BuildInfo - BuildDate
	retVal |= writeNs0Variable(server, 2266, (*[100000000]UA_DateTime)(unsafe.Pointer(&server[0].config.buildInfo.buildDate))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:])
	var secondsTillShutdown UA_UInt32
	// SecondsTillShutdown
	retVal |= writeNs0Variable(server, 2992, (*[100000000]UA_UInt32)(unsafe.Pointer(&secondsTillShutdown))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	var shutdownReason UA_LocalizedText
	// ShutDownReason
	UA_LocalizedText_init((*[100000000]UA_LocalizedText)(unsafe.Pointer(&shutdownReason))[:])
	retVal |= writeNs0Variable(server, 2993, (*[100000000]UA_LocalizedText)(unsafe.Pointer(&shutdownReason))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
	var serviceLevel UA_DataSource = UA_DataSource{readServiceLevel, nil}
	// ServiceLevel
	retVal |= UA_Server_setVariableNode_dataSource(server, UA_NODEID_NUMERIC(0, 2267), serviceLevel)
	var auditing UA_DataSource = UA_DataSource{readAuditing, nil}
	// Auditing
	retVal |= UA_Server_setVariableNode_dataSource(server, UA_NODEID_NUMERIC(0, 2994), auditing)
	var nsarray_datasource UA_DataSource = UA_DataSource{readNamespaces, writeNamespaces}
	// NamespaceArray
	retVal |= UA_Server_setVariableNode_dataSource(server, UA_NODEID_NUMERIC(0, 2255), nsarray_datasource)
	var redundancySupport int = UA_REDUNDANCYSUPPORT_NONE
	// Redundancy Support
	retVal |= writeNs0Variable(server, 3709, (*[100000000]int)(unsafe.Pointer(&redundancySupport))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[46]))[:])
	// ServerCapabilities - OperationLimits - MaxNodesPerRead
	retVal |= writeNs0Variable(server, 11705, (*[100000000]UA_UInt32)(unsafe.Pointer(&server[0].config.maxNodesPerRead))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	// ServerCapabilities - OperationLimits - maxNodesPerWrite
	retVal |= writeNs0Variable(server, 11707, (*[100000000]UA_UInt32)(unsafe.Pointer(&server[0].config.maxNodesPerWrite))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	// ServerCapabilities - OperationLimits - MaxNodesPerMethodCall
	retVal |= writeNs0Variable(server, 11709, (*[100000000]UA_UInt32)(unsafe.Pointer(&server[0].config.maxNodesPerMethodCall))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	// ServerCapabilities - OperationLimits - MaxNodesPerBrowse
	retVal |= writeNs0Variable(server, 11710, (*[100000000]UA_UInt32)(unsafe.Pointer(&server[0].config.maxNodesPerBrowse))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	// ServerCapabilities - OperationLimits - MaxNodesPerRegisterNodes
	retVal |= writeNs0Variable(server, 11711, (*[100000000]UA_UInt32)(unsafe.Pointer(&server[0].config.maxNodesPerRegisterNodes))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	// ServerCapabilities - OperationLimits - MaxNodesPerTranslateBrowsePathsToNodeIds
	retVal |= writeNs0Variable(server, 11712, (*[100000000]UA_UInt32)(unsafe.Pointer(&server[0].config.maxNodesPerTranslateBrowsePathsToNodeIds))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	// ServerCapabilities - OperationLimits - MaxNodesPerNodeManagement
	retVal |= writeNs0Variable(server, 11713, (*[100000000]UA_UInt32)(unsafe.Pointer(&server[0].config.maxNodesPerNodeManagement))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	// ServerCapabilities - OperationLimits - MaxMonitoredItemsPerCall
	retVal |= writeNs0Variable(server, 11714, (*[100000000]UA_UInt32)(unsafe.Pointer(&server[0].config.maxMonitoredItemsPerCall))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	retVal |= UA_Server_setMethodNode_callback(server, UA_NODEID_NUMERIC(0, 11492), readMonitoredItems)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_0_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20822
// amalgamated original file "/home/travis/build/open62541/open62541/build/src_generated/ua_namespace0.c"
// WARNING: This is a generated file.
// * Any manual changes will be overwritten.
// HasHistoricalConfiguration - ns=0;i=56
func function_ua_namespace0_0_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ReferenceTypeAttributes = UA_ReferenceTypeAttributes_default
	attr.inverseName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("HistoricalConfigurationOf\x00"))
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("HasHistoricalConfiguration\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The type for a reference to the historical configuration for a data variable.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_REFERENCETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 56), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("HasHistoricalConfiguration\x00")), UA_NODEID_NULL, (*[100000000]UA_ReferenceTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 56), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 44), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_0_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20842
func function_ua_namespace0_0_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 56))
}
// function_ua_namespace0_1_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20851
// HasEffect - ns=0;i=54
func function_ua_namespace0_1_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ReferenceTypeAttributes = UA_ReferenceTypeAttributes_default
	attr.inverseName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MayBeEffectedBy\x00"))
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("HasEffect\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The type for a reference to an event that may be raised when a transition occurs.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_REFERENCETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 54), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("HasEffect\x00")), UA_NODEID_NULL, (*[100000000]UA_ReferenceTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 54), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 32), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_1_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20871
func function_ua_namespace0_1_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 54))
}
// function_ua_namespace0_2_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20880
// ToState - ns=0;i=52
func function_ua_namespace0_2_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ReferenceTypeAttributes = UA_ReferenceTypeAttributes_default
	attr.inverseName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("FromTransition\x00"))
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ToState\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The type for a reference to the state after a transition.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_REFERENCETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 52), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ToState\x00")), UA_NODEID_NULL, (*[100000000]UA_ReferenceTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 52), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 32), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_2_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20900
func function_ua_namespace0_2_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 52))
}
// function_ua_namespace0_3_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20909
// HasCause - ns=0;i=53
func function_ua_namespace0_3_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ReferenceTypeAttributes = UA_ReferenceTypeAttributes_default
	attr.inverseName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MayBeCausedBy\x00"))
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("HasCause\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The type for a reference to a method that can cause a transition to occur.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_REFERENCETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 53), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("HasCause\x00")), UA_NODEID_NULL, (*[100000000]UA_ReferenceTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 53), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 32), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_3_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20929
func function_ua_namespace0_3_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 53))
}
// function_ua_namespace0_4_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20938
// FromState - ns=0;i=51
func function_ua_namespace0_4_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ReferenceTypeAttributes = UA_ReferenceTypeAttributes_default
	attr.inverseName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ToTransition\x00"))
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("FromState\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The type for a reference to the state before a transition.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_REFERENCETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 51), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("FromState\x00")), UA_NODEID_NULL, (*[100000000]UA_ReferenceTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[126]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 51), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 32), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_4_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20958
func function_ua_namespace0_4_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 51))
}
// function_ua_namespace0_5_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20967
// EnumValueType - ns=0;i=7594
func function_ua_namespace0_5_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("EnumValueType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("A mapping between a value of an enumerated type and a name and description.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7594), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("EnumValueType\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7594), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 22), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_5_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20986
func function_ua_namespace0_5_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7594))
}
// function_ua_namespace0_6_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:20995
// ServerCapabilitiesType - ns=0;i=2013
func function_ua_namespace0_6_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectTypeAttributes = UA_ObjectTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerCapabilitiesType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Describes the capabilities supported by the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECTTYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2013), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerCapabilitiesType\x00")), UA_NODEID_NULL, (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2013), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 58), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_6_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21014
func function_ua_namespace0_6_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2013))
}
// function_ua_namespace0_7_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21023
// OperationLimitsType - ns=0;i=11564
func function_ua_namespace0_7_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectTypeAttributes = UA_ObjectTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("OperationLimitsType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Identifies the operation limits imposed by the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECTTYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11564), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("OperationLimitsType\x00")), UA_NODEID_NULL, (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11564), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 61), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_7_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21042
func function_ua_namespace0_7_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11564))
}
// function_ua_namespace0_8_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21051
// OperationLimits - ns=0;i=11551
func function_ua_namespace0_8_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("OperationLimits\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Defines the limits supported by the server for different operations.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11551), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("OperationLimits\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11564), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11551), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2013), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_8_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21070
func function_ua_namespace0_8_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11551))
}
// function_ua_namespace0_9_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21079
// BuildInfo - ns=0;i=338
func function_ua_namespace0_9_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("BuildInfo\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 338), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("BuildInfo\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 338), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 22), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_9_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21098
func function_ua_namespace0_9_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 338))
}
// function_ua_namespace0_10_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21107
// ServerType - ns=0;i=2004
func function_ua_namespace0_10_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectTypeAttributes = UA_ObjectTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Specifies the current status and capabilities of the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECTTYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2004), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerType\x00")), UA_NODEID_NULL, (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2004), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 58), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_10_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21126
func function_ua_namespace0_10_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2004))
}
// function_ua_namespace0_11_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21135
// Server - ns=0;i=2253
func function_ua_namespace0_11_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.eventNotifier = UA_Byte(1)
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Server\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2253), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Server\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2004), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2253), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 35), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 85), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_11_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21155
func function_ua_namespace0_11_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2253))
}
// function_ua_namespace0_12_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21164
// GetMonitoredItems - ns=0;i=11492
func function_ua_namespace0_12_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_MethodAttributes = UA_MethodAttributes_default
	attr.executable = 1
	attr.userExecutable = 1
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("GetMonitoredItems\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_METHOD, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11492), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("GetMonitoredItems\x00")), UA_NODEID_NULL, (*[100000000]UA_MethodAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[58]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11492), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2253), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_12_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21189
func function_ua_namespace0_12_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addMethodNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11492), nil, 0, nil, 0, nil)
}
// function_ua_namespace0_13_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21202
// ServerCapabilities - ns=0;i=2268
func function_ua_namespace0_13_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerCapabilities\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Describes capabilities supported by the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2268), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerCapabilities\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2013), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2268), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2253), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_13_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21221
func function_ua_namespace0_13_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2268))
}
// function_ua_namespace0_14_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21230
// OperationLimits - ns=0;i=11704
func function_ua_namespace0_14_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("OperationLimits\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Defines the limits supported by the server for different operations.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11704), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("OperationLimits\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11564), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11704), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2268), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_14_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21249
func function_ua_namespace0_14_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11704))
}
// function_ua_namespace0_15_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21258
// ServerDiagnosticsSummaryType - ns=0;i=2150
func function_ua_namespace0_15_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableTypeAttributes = UA_VariableTypeAttributes_default
	attr.valueRank = UA_Int32(-2)
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 24)
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerDiagnosticsSummaryType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2150), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerDiagnosticsSummaryType\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2150), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 63), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_15_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21279
func function_ua_namespace0_15_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2150))
}
// function_ua_namespace0_16_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21288
// PublishingIntervalCount - ns=0;i=2159
func function_ua_namespace0_16_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2159_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2159_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2159_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("PublishingIntervalCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2159), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("PublishingIntervalCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2159), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_16_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21315
func function_ua_namespace0_16_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2159))
}
// function_ua_namespace0_17_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21324
// SecurityRejectedSessionCount - ns=0;i=2154
func function_ua_namespace0_17_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2154_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2154_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2154_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("SecurityRejectedSessionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2154), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("SecurityRejectedSessionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2154), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_17_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21351
func function_ua_namespace0_17_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2154))
}
// function_ua_namespace0_18_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21360
// SecurityRejectedRequestsCount - ns=0;i=2162
func function_ua_namespace0_18_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2162_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2162_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2162_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("SecurityRejectedRequestsCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2162), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("SecurityRejectedRequestsCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2162), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_18_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21387
func function_ua_namespace0_18_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2162))
}
// function_ua_namespace0_19_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21396
// RejectedRequestsCount - ns=0;i=2163
func function_ua_namespace0_19_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2163_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2163_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2163_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("RejectedRequestsCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2163), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("RejectedRequestsCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2163), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_19_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21423
func function_ua_namespace0_19_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2163))
}
// function_ua_namespace0_20_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21432
// RejectedSessionCount - ns=0;i=2155
func function_ua_namespace0_20_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2155_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2155_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2155_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("RejectedSessionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2155), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("RejectedSessionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2155), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_20_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21459
func function_ua_namespace0_20_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2155))
}
// function_ua_namespace0_21_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21468
// CumulatedSubscriptionCount - ns=0;i=2161
func function_ua_namespace0_21_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2161_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2161_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2161_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("CumulatedSubscriptionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2161), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("CumulatedSubscriptionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2161), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_21_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21495
func function_ua_namespace0_21_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2161))
}
// function_ua_namespace0_22_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21504
// CumulatedSessionCount - ns=0;i=2153
func function_ua_namespace0_22_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2153_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2153_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2153_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("CumulatedSessionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2153), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("CumulatedSessionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2153), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_22_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21531
func function_ua_namespace0_22_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2153))
}
// function_ua_namespace0_23_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21540
// CurrentSessionCount - ns=0;i=2152
func function_ua_namespace0_23_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2152_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2152_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2152_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("CurrentSessionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2152), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("CurrentSessionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2152), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_23_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21567
func function_ua_namespace0_23_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2152))
}
// function_ua_namespace0_24_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21576
// ServerViewCount - ns=0;i=2151
func function_ua_namespace0_24_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2151_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2151_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2151_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerViewCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2151), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerViewCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2151), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_24_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21603
func function_ua_namespace0_24_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2151))
}
// function_ua_namespace0_25_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21612
// SessionAbortCount - ns=0;i=2157
func function_ua_namespace0_25_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2157_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2157_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2157_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("SessionAbortCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2157), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("SessionAbortCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2157), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_25_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21639
func function_ua_namespace0_25_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2157))
}
// function_ua_namespace0_26_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21648
// SessionTimeoutCount - ns=0;i=2156
func function_ua_namespace0_26_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2156_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2156_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2156_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("SessionTimeoutCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2156), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("SessionTimeoutCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2156), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_26_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21675
func function_ua_namespace0_26_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2156))
}
// function_ua_namespace0_27_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21684
// CurrentSubscriptionCount - ns=0;i=2160
func function_ua_namespace0_27_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2160_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2160_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2160_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("CurrentSubscriptionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2160), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("CurrentSubscriptionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2160), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2150), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_27_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21711
func function_ua_namespace0_27_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2160))
}
// function_ua_namespace0_28_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21720
// BuildInfoType - ns=0;i=3051
func function_ua_namespace0_28_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableTypeAttributes = UA_VariableTypeAttributes_default
	attr.valueRank = UA_Int32(-2)
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 24)
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("BuildInfoType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3051), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("BuildInfoType\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3051), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 63), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_28_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21741
func function_ua_namespace0_28_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3051))
}
// function_ua_namespace0_29_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21750
// Image - ns=0;i=30
func function_ua_namespace0_29_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.isAbstract = 1
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Image\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Describes a value that is an image encoded as a string of bytes.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 30), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Image\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 30), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 15), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_29_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21770
func function_ua_namespace0_29_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 30))
}
// function_ua_namespace0_30_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21779
// Decimal - ns=0;i=50
func function_ua_namespace0_30_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Decimal\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Describes an arbitrary precision decimal value.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 50), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Decimal\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 50), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 26), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_30_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21798
func function_ua_namespace0_30_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 50))
}
// function_ua_namespace0_31_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21807
// Enumeration - ns=0;i=29
func function_ua_namespace0_31_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.isAbstract = 1
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Enumeration\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Describes a value that is an enumerated DataType.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 29), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Enumeration\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 29), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 24), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_31_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21827
func function_ua_namespace0_31_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 29))
}
// function_ua_namespace0_32_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21836
// NamingRuleType - ns=0;i=120
func function_ua_namespace0_32_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("NamingRuleType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Describes a value that specifies the significance of the BrowseName for an instance declaration.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 120), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("NamingRuleType\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 120), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 29), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_32_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21855
func function_ua_namespace0_32_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 120))
}
// function_ua_namespace0_33_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21864
// RedundancySupport - ns=0;i=851
func function_ua_namespace0_33_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("RedundancySupport\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 851), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("RedundancySupport\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 851), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 29), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_33_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21883
func function_ua_namespace0_33_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 851))
}
// function_ua_namespace0_34_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21892
// ServerState - ns=0;i=852
func function_ua_namespace0_34_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerState\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 852), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerState\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 852), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 29), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_34_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21911
func function_ua_namespace0_34_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 852))
}
// function_ua_namespace0_35_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21920
// DiagnosticInfo - ns=0;i=25
func function_ua_namespace0_35_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("DiagnosticInfo\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Describes a value that is a structure containing diagnostics associated with a StatusCode.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 25), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("DiagnosticInfo\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 25), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 24), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_35_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21939
func function_ua_namespace0_35_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 25))
}
// function_ua_namespace0_36_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21948
// DataValue - ns=0;i=23
func function_ua_namespace0_36_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("DataValue\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Describes a value that is a structure containing a value, a status code and timestamps.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 23), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("DataValue\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 23), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 24), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_36_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21967
func function_ua_namespace0_36_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 23))
}
// function_ua_namespace0_37_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21976
// ServerRedundancyType - ns=0;i=2034
func function_ua_namespace0_37_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectTypeAttributes = UA_ObjectTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerRedundancyType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("A base type for an object that describe how a server supports redundancy.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECTTYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2034), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerRedundancyType\x00")), UA_NODEID_NULL, (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2034), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 58), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_37_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:21995
func function_ua_namespace0_37_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2034))
}
// function_ua_namespace0_38_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22004
// ServerRedundancy - ns=0;i=2296
func function_ua_namespace0_38_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerRedundancy\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Describes the redundancy capabilities of the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2296), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerRedundancy\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2034), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2296), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2253), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_38_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22023
func function_ua_namespace0_38_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2296))
}
// function_ua_namespace0_39_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22032
// PropertyType - ns=0;i=68
func function_ua_namespace0_39_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableTypeAttributes = UA_VariableTypeAttributes_default
	attr.valueRank = UA_Int32(-2)
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 24)
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("PropertyType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The type for variable that represents a property of another node.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("PropertyType\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 62), (*[100000000]UA_VariableTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 62), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_39_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22053
func function_ua_namespace0_39_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68))
}
// function_ua_namespace0_40_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22062
// MaxBrowseContinuationPoints - ns=0;i=2735
func function_ua_namespace0_40_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 5)
	var variablenode_ns_0_i_2735_variant_DataContents []UA_UInt16 = make([]UA_UInt16, 1)
	UA_init(variablenode_ns_0_i_2735_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2735_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxBrowseContinuationPoints\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of continuation points for Browse operations per session.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2735), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxBrowseContinuationPoints\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2735), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2268), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_40_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22089
func function_ua_namespace0_40_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2735))
}
// function_ua_namespace0_41_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22098
// MaxNodesPerBrowse - ns=0;i=11710
func function_ua_namespace0_41_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11710_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11710_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11710_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerBrowse\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single Browse request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11710), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerBrowse\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11710), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11704), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_41_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22125
func function_ua_namespace0_41_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11710))
}
// function_ua_namespace0_42_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22134
// MaxNodesPerWrite - ns=0;i=11707
func function_ua_namespace0_42_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11707_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11707_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11707_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerWrite\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single Write request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11707), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerWrite\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11707), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11704), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_42_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22161
func function_ua_namespace0_42_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11707))
}
// function_ua_namespace0_43_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22170
// Auditing - ns=0;i=2994
func function_ua_namespace0_43_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 1)
	var variablenode_ns_0_i_2994_variant_DataContents []UA_Boolean = make([]UA_Boolean, 1)
	UA_init(variablenode_ns_0_i_2994_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2994_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Auditing\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("A flag indicating whether the server is currently generating audit events.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2994), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Auditing\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2994), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2253), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_43_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22197
func function_ua_namespace0_43_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2994))
}
// function_ua_namespace0_44_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22206
// MaxNodesPerRead - ns=0;i=11565
func function_ua_namespace0_44_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11565_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11565_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11565_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerRead\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single Read request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11565), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerRead\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11565), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11564), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_44_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22233
func function_ua_namespace0_44_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11565))
}
// function_ua_namespace0_45_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22242
// MaxNodesPerWrite - ns=0;i=11567
func function_ua_namespace0_45_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11567_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11567_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11567_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerWrite\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single Write request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11567), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerWrite\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11567), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11564), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_45_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22269
func function_ua_namespace0_45_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11567))
}
// function_ua_namespace0_46_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22278
// RedundancySupport - ns=0;i=2035
func function_ua_namespace0_46_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 851)
	var variablenode_ns_0_i_2035_variant_DataContents []int = make([]int, 1)
	UA_init(variablenode_ns_0_i_2035_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[46]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2035_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[46]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("RedundancySupport\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Indicates what style of redundancy is supported by the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2035), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("RedundancySupport\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2035), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2034), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_46_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22305
func function_ua_namespace0_46_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2035))
}
// function_ua_namespace0_47_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22314
// MaxNodesPerMethodCall - ns=0;i=11569
func function_ua_namespace0_47_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11569_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11569_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11569_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerMethodCall\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single Call request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11569), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerMethodCall\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11569), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11564), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_47_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22341
func function_ua_namespace0_47_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11569))
}
// function_ua_namespace0_48_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22350
// MaxNodesPerMethodCall - ns=0;i=11709
func function_ua_namespace0_48_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11709_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11709_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11709_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerMethodCall\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single Call request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11709), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerMethodCall\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11709), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11704), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_48_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22377
func function_ua_namespace0_48_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11709))
}
// function_ua_namespace0_49_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22386
// NamespaceArray - ns=0;i=2255
func function_ua_namespace0_49_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((1))))))
	attr.arrayDimensionsSize = 1
	attr.arrayDimensions = UA_Array_new(1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
	attr.arrayDimensions[0] = 0
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_2255_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init((*[100000000]UA_String)(unsafe.Pointer(&variablenode_ns_0_i_2255_variant_DataContents[0]))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2255_variant_DataContents, uint(UA_Int32(1)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("NamespaceArray\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The list of namespace URIs used by the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2255), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("NamespaceArray\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Array_delete(attr.arrayDimensions, 1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2255), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2253), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_49_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22417
func function_ua_namespace0_49_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2255))
}
// function_ua_namespace0_50_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22426
// ServerArray - ns=0;i=2254
func function_ua_namespace0_50_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((1))))))
	attr.arrayDimensionsSize = 1
	attr.arrayDimensions = UA_Array_new(1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
	attr.arrayDimensions[0] = 0
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_2254_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init((*[100000000]UA_String)(unsafe.Pointer(&variablenode_ns_0_i_2254_variant_DataContents[0]))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2254_variant_DataContents, uint(UA_Int32(1)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerArray\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The list of server URIs used by the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2254), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerArray\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Array_delete(attr.arrayDimensions, 1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2254), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2253), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_50_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22457
func function_ua_namespace0_50_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2254))
}
// function_ua_namespace0_51_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22466
// MinSupportedSampleRate - ns=0;i=2272
func function_ua_namespace0_51_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 290)
	var variablenode_ns_0_i_2272_variant_DataContents []UA_Double = make([]UA_Double, 1)
	UA_init(variablenode_ns_0_i_2272_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2272_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MinSupportedSampleRate\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The minimum sampling interval supported by the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2272), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MinSupportedSampleRate\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2272), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2268), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_51_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22493
func function_ua_namespace0_51_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2272))
}
// function_ua_namespace0_52_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22502
// LocaleIdArray - ns=0;i=2271
func function_ua_namespace0_52_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((1))))))
	attr.arrayDimensionsSize = 1
	attr.arrayDimensions = UA_Array_new(1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
	attr.arrayDimensions[0] = 0
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 295)
	var variablenode_ns_0_i_2271_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init((*[100000000]UA_String)(unsafe.Pointer(&variablenode_ns_0_i_2271_variant_DataContents[0]))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2271_variant_DataContents, uint(UA_Int32(1)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("LocaleIdArray\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("A list of locales supported by the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2271), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("LocaleIdArray\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Array_delete(attr.arrayDimensions, 1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2271), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2268), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_52_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22533
func function_ua_namespace0_52_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2271))
}
// function_ua_namespace0_53_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22542
// EnumValues - ns=0;i=12169
func function_ua_namespace0_53_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((1))))))
	attr.arrayDimensionsSize = 1
	attr.arrayDimensions = UA_Array_new(1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
	attr.arrayDimensions[0] = 0
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7594)
	type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_22555_1_ struct {
		Value       UA_Int64
		DisplayName UA_LocalizedText
		Description UA_LocalizedText
	}
	var variablenode_ns_0_i_12169_EnumValueType_0_0_struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_22555_1_
	variablenode_ns_0_i_12169_EnumValueType_0_0_struct.Value = UA_Int64(1)
	variablenode_ns_0_i_12169_EnumValueType_0_0_struct.DisplayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Mandatory\x00"))
	variablenode_ns_0_i_12169_EnumValueType_0_0_struct.Description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The BrowseName must appear in all instances of the type.\x00"))
	var variablenode_ns_0_i_12169_EnumValueType_0_0 []UA_ExtensionObject = UA_ExtensionObject_new()
	variablenode_ns_0_i_12169_EnumValueType_0_0[0].encoding = UA_EXTENSIONOBJECT_ENCODED_BYTESTRING
	(*variablenode_ns_0_i_12169_EnumValueType_0_0[0].content.encoded()).typeId = UA_NODEID_NUMERIC(0, 8251)
	UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&(*variablenode_ns_0_i_12169_EnumValueType_0_0[0].content.encoded()).body))[:], 65000)
	var posvariablenode_ns_0_i_12169_EnumValueType_0_0 []UA_Byte = (*variablenode_ns_0_i_12169_EnumValueType_0_0[0].content.encoded()).body.data
	var endvariablenode_ns_0_i_12169_EnumValueType_0_0 []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&(*variablenode_ns_0_i_12169_EnumValueType_0_0[0].content.encoded()).body.data[65000]))[:]
	{
		retVal |= UA_encodeBinary((*[100000000]UA_Int64)(unsafe.Pointer(&variablenode_ns_0_i_12169_EnumValueType_0_0_struct.Value))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[7]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_12169_EnumValueType_0_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_LocalizedText)(unsafe.Pointer(&variablenode_ns_0_i_12169_EnumValueType_0_0_struct.DisplayName))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_12169_EnumValueType_0_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_LocalizedText)(unsafe.Pointer(&variablenode_ns_0_i_12169_EnumValueType_0_0_struct.Description))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_12169_EnumValueType_0_0))[:], nil, nil)
	}
	var variablenode_ns_0_i_12169_EnumValueType_0_0_encOffset uint = uint((uint32((uintptr_t((uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_0_0))))) - uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&(*variablenode_ns_0_i_12169_EnumValueType_0_0[0].content.encoded()).body.data)))))))))))
	(*variablenode_ns_0_i_12169_EnumValueType_0_0[0].content.encoded()).body.length = variablenode_ns_0_i_12169_EnumValueType_0_0_encOffset
	var variablenode_ns_0_i_12169_EnumValueType_0_0_newBody []UA_Byte = make([]UA_Byte, uint(variablenode_ns_0_i_12169_EnumValueType_0_0_encOffset)/1)
	memcpy(variablenode_ns_0_i_12169_EnumValueType_0_0_newBody, (*variablenode_ns_0_i_12169_EnumValueType_0_0[0].content.encoded()).body.data, uint32((uint(variablenode_ns_0_i_12169_EnumValueType_0_0_encOffset))))
	var variablenode_ns_0_i_12169_EnumValueType_0_0_oldBody []UA_Byte = (*variablenode_ns_0_i_12169_EnumValueType_0_0[0].content.encoded()).body.data
	(*variablenode_ns_0_i_12169_EnumValueType_0_0[0].content.encoded()).body.data = variablenode_ns_0_i_12169_EnumValueType_0_0_newBody
	_ = variablenode_ns_0_i_12169_EnumValueType_0_0_oldBody
	type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_22583_1_ struct {
		Value       UA_Int64
		DisplayName UA_LocalizedText
		Description UA_LocalizedText
	}
	var variablenode_ns_0_i_12169_EnumValueType_1_0_struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_22583_1_
	variablenode_ns_0_i_12169_EnumValueType_1_0_struct.Value = UA_Int64(2)
	variablenode_ns_0_i_12169_EnumValueType_1_0_struct.DisplayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Optional\x00"))
	variablenode_ns_0_i_12169_EnumValueType_1_0_struct.Description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The BrowseName may appear in an instance of the type.\x00"))
	var variablenode_ns_0_i_12169_EnumValueType_1_0 []UA_ExtensionObject = UA_ExtensionObject_new()
	variablenode_ns_0_i_12169_EnumValueType_1_0[0].encoding = UA_EXTENSIONOBJECT_ENCODED_BYTESTRING
	(*variablenode_ns_0_i_12169_EnumValueType_1_0[0].content.encoded()).typeId = UA_NODEID_NUMERIC(0, 8251)
	UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&(*variablenode_ns_0_i_12169_EnumValueType_1_0[0].content.encoded()).body))[:], 65000)
	var posvariablenode_ns_0_i_12169_EnumValueType_1_0 []UA_Byte = (*variablenode_ns_0_i_12169_EnumValueType_1_0[0].content.encoded()).body.data
	var endvariablenode_ns_0_i_12169_EnumValueType_1_0 []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&(*variablenode_ns_0_i_12169_EnumValueType_1_0[0].content.encoded()).body.data[65000]))[:]
	{
		retVal |= UA_encodeBinary((*[100000000]UA_Int64)(unsafe.Pointer(&variablenode_ns_0_i_12169_EnumValueType_1_0_struct.Value))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[7]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_1_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_12169_EnumValueType_1_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_LocalizedText)(unsafe.Pointer(&variablenode_ns_0_i_12169_EnumValueType_1_0_struct.DisplayName))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_1_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_12169_EnumValueType_1_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_LocalizedText)(unsafe.Pointer(&variablenode_ns_0_i_12169_EnumValueType_1_0_struct.Description))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_1_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_12169_EnumValueType_1_0))[:], nil, nil)
	}
	var variablenode_ns_0_i_12169_EnumValueType_1_0_encOffset uint = uint((uint32((uintptr_t((uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_1_0))))) - uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&(*variablenode_ns_0_i_12169_EnumValueType_1_0[0].content.encoded()).body.data)))))))))))
	(*variablenode_ns_0_i_12169_EnumValueType_1_0[0].content.encoded()).body.length = variablenode_ns_0_i_12169_EnumValueType_1_0_encOffset
	var variablenode_ns_0_i_12169_EnumValueType_1_0_newBody []UA_Byte = make([]UA_Byte, uint(variablenode_ns_0_i_12169_EnumValueType_1_0_encOffset)/1)
	memcpy(variablenode_ns_0_i_12169_EnumValueType_1_0_newBody, (*variablenode_ns_0_i_12169_EnumValueType_1_0[0].content.encoded()).body.data, uint32((uint(variablenode_ns_0_i_12169_EnumValueType_1_0_encOffset))))
	var variablenode_ns_0_i_12169_EnumValueType_1_0_oldBody []UA_Byte = (*variablenode_ns_0_i_12169_EnumValueType_1_0[0].content.encoded()).body.data
	(*variablenode_ns_0_i_12169_EnumValueType_1_0[0].content.encoded()).body.data = variablenode_ns_0_i_12169_EnumValueType_1_0_newBody
	_ = variablenode_ns_0_i_12169_EnumValueType_1_0_oldBody
	type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_22611_1_ struct {
		Value       UA_Int64
		DisplayName UA_LocalizedText
		Description UA_LocalizedText
	}
	var variablenode_ns_0_i_12169_EnumValueType_2_0_struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_22611_1_
	variablenode_ns_0_i_12169_EnumValueType_2_0_struct.Value = UA_Int64(3)
	variablenode_ns_0_i_12169_EnumValueType_2_0_struct.DisplayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Constraint\x00"))
	variablenode_ns_0_i_12169_EnumValueType_2_0_struct.Description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The modelling rule defines a constraint and the BrowseName is not used in an instance of the type.\x00"))
	var variablenode_ns_0_i_12169_EnumValueType_2_0 []UA_ExtensionObject = UA_ExtensionObject_new()
	variablenode_ns_0_i_12169_EnumValueType_2_0[0].encoding = UA_EXTENSIONOBJECT_ENCODED_BYTESTRING
	(*variablenode_ns_0_i_12169_EnumValueType_2_0[0].content.encoded()).typeId = UA_NODEID_NUMERIC(0, 8251)
	UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&(*variablenode_ns_0_i_12169_EnumValueType_2_0[0].content.encoded()).body))[:], 65000)
	var posvariablenode_ns_0_i_12169_EnumValueType_2_0 []UA_Byte = (*variablenode_ns_0_i_12169_EnumValueType_2_0[0].content.encoded()).body.data
	var endvariablenode_ns_0_i_12169_EnumValueType_2_0 []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&(*variablenode_ns_0_i_12169_EnumValueType_2_0[0].content.encoded()).body.data[65000]))[:]
	{
		retVal |= UA_encodeBinary((*[100000000]UA_Int64)(unsafe.Pointer(&variablenode_ns_0_i_12169_EnumValueType_2_0_struct.Value))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[7]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_2_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_12169_EnumValueType_2_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_LocalizedText)(unsafe.Pointer(&variablenode_ns_0_i_12169_EnumValueType_2_0_struct.DisplayName))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_2_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_12169_EnumValueType_2_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_LocalizedText)(unsafe.Pointer(&variablenode_ns_0_i_12169_EnumValueType_2_0_struct.Description))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_2_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_12169_EnumValueType_2_0))[:], nil, nil)
	}
	var variablenode_ns_0_i_12169_EnumValueType_2_0_encOffset uint = uint((uint32((uintptr_t((uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&posvariablenode_ns_0_i_12169_EnumValueType_2_0))))) - uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&(*variablenode_ns_0_i_12169_EnumValueType_2_0[0].content.encoded()).body.data)))))))))))
	(*variablenode_ns_0_i_12169_EnumValueType_2_0[0].content.encoded()).body.length = variablenode_ns_0_i_12169_EnumValueType_2_0_encOffset
	var variablenode_ns_0_i_12169_EnumValueType_2_0_newBody []UA_Byte = make([]UA_Byte, uint(variablenode_ns_0_i_12169_EnumValueType_2_0_encOffset)/1)
	memcpy(variablenode_ns_0_i_12169_EnumValueType_2_0_newBody, (*variablenode_ns_0_i_12169_EnumValueType_2_0[0].content.encoded()).body.data, uint32((uint(variablenode_ns_0_i_12169_EnumValueType_2_0_encOffset))))
	var variablenode_ns_0_i_12169_EnumValueType_2_0_oldBody []UA_Byte = (*variablenode_ns_0_i_12169_EnumValueType_2_0[0].content.encoded()).body.data
	(*variablenode_ns_0_i_12169_EnumValueType_2_0[0].content.encoded()).body.data = variablenode_ns_0_i_12169_EnumValueType_2_0_newBody
	_ = variablenode_ns_0_i_12169_EnumValueType_2_0_oldBody
	var variablenode_ns_0_i_12169_variant_DataContents []UA_ExtensionObject = make([]UA_ExtensionObject, 3)
	variablenode_ns_0_i_12169_variant_DataContents[0] = variablenode_ns_0_i_12169_EnumValueType_0_0[0]
	variablenode_ns_0_i_12169_variant_DataContents[1] = variablenode_ns_0_i_12169_EnumValueType_1_0[0]
	variablenode_ns_0_i_12169_variant_DataContents[2] = variablenode_ns_0_i_12169_EnumValueType_2_0[0]
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_12169_variant_DataContents, uint(UA_Int32(3)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("EnumValues\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12169), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("EnumValues\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Array_delete(attr.arrayDimensions, 1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_ExtensionObject_delete(variablenode_ns_0_i_12169_EnumValueType_0_0)
	UA_ExtensionObject_delete(variablenode_ns_0_i_12169_EnumValueType_1_0)
	UA_ExtensionObject_delete(variablenode_ns_0_i_12169_EnumValueType_2_0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12169), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 120), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_53_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22665
func function_ua_namespace0_53_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12169))
}
// function_ua_namespace0_54_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22674
// MaxNodesPerTranslateBrowsePathsToNodeIds - ns=0;i=11712
func function_ua_namespace0_54_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11712_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11712_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11712_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerTranslateBrowsePathsToNodeIds\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single TranslateBrowsePathsToNodeIds request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11712), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerTranslateBrowsePathsToNodeIds\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11712), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11704), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_54_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22701
func function_ua_namespace0_54_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11712))
}
// function_ua_namespace0_55_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22710
// MaxMonitoredItemsPerCall - ns=0;i=11574
func function_ua_namespace0_55_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11574_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11574_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11574_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxMonitoredItemsPerCall\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single MonitoredItem related request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11574), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxMonitoredItemsPerCall\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11574), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11564), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_55_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22737
func function_ua_namespace0_55_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11574))
}
// function_ua_namespace0_56_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22746
// MaxNodesPerNodeManagement - ns=0;i=11573
func function_ua_namespace0_56_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11573_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11573_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11573_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerNodeManagement\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single AddNodes, AddReferences, DeleteNodes or DeleteReferences request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11573), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerNodeManagement\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11573), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11564), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_56_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22773
func function_ua_namespace0_56_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11573))
}
// function_ua_namespace0_57_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22782
// MaxNodesPerTranslateBrowsePathsToNodeIds - ns=0;i=11572
func function_ua_namespace0_57_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11572_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11572_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11572_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerTranslateBrowsePathsToNodeIds\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single TranslateBrowsePathsToNodeIds request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11572), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerTranslateBrowsePathsToNodeIds\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11572), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11564), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_57_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22809
func function_ua_namespace0_57_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11572))
}
// function_ua_namespace0_58_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22818
// MaxNodesPerRegisterNodes - ns=0;i=11571
func function_ua_namespace0_58_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11571_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11571_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11571_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerRegisterNodes\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single RegisterNodes request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11571), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerRegisterNodes\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11571), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11564), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_58_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22845
func function_ua_namespace0_58_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11571))
}
// function_ua_namespace0_59_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22854
// MaxNodesPerBrowse - ns=0;i=11570
func function_ua_namespace0_59_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11570_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11570_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11570_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerBrowse\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single Browse request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11570), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerBrowse\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11570), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11564), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_59_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22881
func function_ua_namespace0_59_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11570))
}
// function_ua_namespace0_60_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22890
// MaxNodesPerRead - ns=0;i=11705
func function_ua_namespace0_60_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11705_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11705_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11705_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerRead\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single Read request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11705), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerRead\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11705), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11704), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_60_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22917
func function_ua_namespace0_60_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11705))
}
// function_ua_namespace0_61_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22926
// EnumStrings - ns=0;i=7611
func function_ua_namespace0_61_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((1))))))
	attr.arrayDimensionsSize = 1
	attr.arrayDimensions = UA_Array_new(1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
	attr.arrayDimensions[0] = 0
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 21)
	var variablenode_ns_0_i_7611_variant_DataContents []UA_LocalizedText = make([]UA_LocalizedText, 6)
	variablenode_ns_0_i_7611_variant_DataContents[0] = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("None\x00"))
	variablenode_ns_0_i_7611_variant_DataContents[1] = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Cold\x00"))
	variablenode_ns_0_i_7611_variant_DataContents[2] = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Warm\x00"))
	variablenode_ns_0_i_7611_variant_DataContents[3] = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Hot\x00"))
	variablenode_ns_0_i_7611_variant_DataContents[4] = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Transparent\x00"))
	variablenode_ns_0_i_7611_variant_DataContents[5] = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("HotAndMirrored\x00"))
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_7611_variant_DataContents, uint(UA_Int32(6)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("EnumStrings\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7611), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("EnumStrings\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Array_delete(attr.arrayDimensions, 1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7611), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 851), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_61_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22962
func function_ua_namespace0_61_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7611))
}
// function_ua_namespace0_62_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:22971
// ServerProfileArray - ns=0;i=2269
func function_ua_namespace0_62_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((1))))))
	attr.arrayDimensionsSize = 1
	attr.arrayDimensions = UA_Array_new(1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
	attr.arrayDimensions[0] = 0
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_2269_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init((*[100000000]UA_String)(unsafe.Pointer(&variablenode_ns_0_i_2269_variant_DataContents[0]))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2269_variant_DataContents, uint(UA_Int32(1)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerProfileArray\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("A list of profiles supported by the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2269), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerProfileArray\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Array_delete(attr.arrayDimensions, 1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2269), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2268), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_62_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23002
func function_ua_namespace0_62_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2269))
}
// function_ua_namespace0_63_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23011
// MaxQueryContinuationPoints - ns=0;i=2736
func function_ua_namespace0_63_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 5)
	var variablenode_ns_0_i_2736_variant_DataContents []UA_UInt16 = make([]UA_UInt16, 1)
	UA_init(variablenode_ns_0_i_2736_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2736_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxQueryContinuationPoints\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of continuation points for Query operations per session.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2736), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxQueryContinuationPoints\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2736), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2268), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_63_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23038
func function_ua_namespace0_63_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2736))
}
// function_ua_namespace0_64_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23047
// MaxHistoryContinuationPoints - ns=0;i=2737
func function_ua_namespace0_64_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 5)
	var variablenode_ns_0_i_2737_variant_DataContents []UA_UInt16 = make([]UA_UInt16, 1)
	UA_init(variablenode_ns_0_i_2737_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2737_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxHistoryContinuationPoints\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of continuation points for ReadHistory operations per session.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2737), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxHistoryContinuationPoints\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2737), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2268), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_64_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23074
func function_ua_namespace0_64_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2737))
}
// function_ua_namespace0_65_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23083
// MaxNodesPerRegisterNodes - ns=0;i=11711
func function_ua_namespace0_65_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11711_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11711_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11711_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerRegisterNodes\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single RegisterNodes request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11711), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerRegisterNodes\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11711), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11704), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_65_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23110
func function_ua_namespace0_65_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11711))
}
// function_ua_namespace0_66_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23119
// ServiceLevel - ns=0;i=2267
func function_ua_namespace0_66_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3)
	var variablenode_ns_0_i_2267_variant_DataContents []UA_Byte = make([]UA_Byte, 1)
	UA_init(variablenode_ns_0_i_2267_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2267_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServiceLevel\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("A value indicating the level of service the server can provide. 255 indicates the best.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2267), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServiceLevel\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2267), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2253), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_66_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23146
func function_ua_namespace0_66_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2267))
}
// function_ua_namespace0_67_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23155
// RedundancySupport - ns=0;i=3709
func function_ua_namespace0_67_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 851)
	var variablenode_ns_0_i_3709_variant_DataContents []int = make([]int, 1)
	UA_init(variablenode_ns_0_i_3709_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[46]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_3709_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[46]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("RedundancySupport\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Indicates what style of redundancy is supported by the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3709), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("RedundancySupport\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3709), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2296), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_67_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23182
func function_ua_namespace0_67_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3709))
}
// function_ua_namespace0_68_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23191
// MaxMonitoredItemsPerCall - ns=0;i=11714
func function_ua_namespace0_68_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11714_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11714_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11714_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxMonitoredItemsPerCall\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single MonitoredItem related request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11714), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxMonitoredItemsPerCall\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11714), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11704), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_68_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23218
func function_ua_namespace0_68_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11714))
}
// function_ua_namespace0_69_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23227
// MaxNodesPerNodeManagement - ns=0;i=11713
func function_ua_namespace0_69_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_11713_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_11713_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11713_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("MaxNodesPerNodeManagement\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The maximum number of operations in a single AddNodes, AddReferences, DeleteNodes or DeleteReferences request.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11713), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("MaxNodesPerNodeManagement\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11713), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11704), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_69_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23254
func function_ua_namespace0_69_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11713))
}
// function_ua_namespace0_70_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23263
// ModellingRuleType - ns=0;i=77
func function_ua_namespace0_70_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectTypeAttributes = UA_ObjectTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ModellingRuleType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The type for an object that describes how an instance declaration is used when a type is instantiated.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECTTYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 77), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ModellingRuleType\x00")), UA_NODEID_NULL, (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 77), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 58), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_70_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23282
func function_ua_namespace0_70_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 77))
}
// function_ua_namespace0_71_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23291
// NamingRule - ns=0;i=111
func function_ua_namespace0_71_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 120)
	var variablenode_ns_0_i_111_variant_DataContents []UA_Int32 = UA_Int32_new()
	variablenode_ns_0_i_111_variant_DataContents[0] = UA_Int32(1)
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_111_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("NamingRule\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Specified the significances of the BrowseName when a type is instantiated.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 111), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("NamingRule\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Int32_delete(variablenode_ns_0_i_111_variant_DataContents)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 111), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 77), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_71_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23319
func function_ua_namespace0_71_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 111))
}
// function_ua_namespace0_72_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23328
// Mandatory - ns=0;i=78
func function_ua_namespace0_72_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Mandatory\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Specifies that an instance with the attributes and references of the instance declaration must appear when a type is instantiated.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Mandatory\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 77), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2035), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2161), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2160), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 7611), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2152), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2153), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 12169), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2151), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2156), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2157), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2154), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2155), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2163), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2159), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 111), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2162), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_72_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23362
func function_ua_namespace0_72_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 78))
}
// function_ua_namespace0_73_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23371
// NamingRule - ns=0;i=112
func function_ua_namespace0_73_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 120)
	var variablenode_ns_0_i_112_variant_DataContents []UA_Int32 = UA_Int32_new()
	variablenode_ns_0_i_112_variant_DataContents[0] = UA_Int32(1)
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_112_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("NamingRule\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Specified the significances of the BrowseName when a type is instantiated.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 112), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("NamingRule\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Int32_delete(variablenode_ns_0_i_112_variant_DataContents)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 112), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 78), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_73_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23399
func function_ua_namespace0_73_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 112))
}
// function_ua_namespace0_74_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23408
// Optional - ns=0;i=80
func function_ua_namespace0_74_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Optional\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Specifies that an instance with the attributes and references of the instance declaration may appear when a type is instantiated.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Optional\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 77), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11567), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11565), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11551), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11574), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11569), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11570), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11571), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11572), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11573), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_74_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23435
func function_ua_namespace0_74_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 80))
}
// function_ua_namespace0_75_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23444
// NamingRule - ns=0;i=113
func function_ua_namespace0_75_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 120)
	var variablenode_ns_0_i_113_variant_DataContents []UA_Int32 = UA_Int32_new()
	variablenode_ns_0_i_113_variant_DataContents[0] = UA_Int32(2)
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_113_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("NamingRule\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Specified the significances of the BrowseName when a type is instantiated.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 113), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("NamingRule\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Int32_delete(variablenode_ns_0_i_113_variant_DataContents)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 113), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 80), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_75_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23472
func function_ua_namespace0_75_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 113))
}
// function_ua_namespace0_76_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23481
// DataTypeEncodingType - ns=0;i=76
func function_ua_namespace0_76_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectTypeAttributes = UA_ObjectTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("DataTypeEncodingType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECTTYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 76), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("DataTypeEncodingType\x00")), UA_NODEID_NULL, (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 76), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 58), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_76_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23500
func function_ua_namespace0_76_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 76))
}
// function_ua_namespace0_77_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23509
// Default Binary - ns=0;i=8251
func function_ua_namespace0_77_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Default Binary\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 8251), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Default Binary\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 76), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 8251), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 38), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 7594), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_77_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23528
func function_ua_namespace0_77_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 8251))
}
// function_ua_namespace0_78_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23537
// DataTypeSystemType - ns=0;i=75
func function_ua_namespace0_78_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectTypeAttributes = UA_ObjectTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("DataTypeSystemType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECTTYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 75), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("DataTypeSystemType\x00")), UA_NODEID_NULL, (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 75), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 58), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_78_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23556
func function_ua_namespace0_78_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 75))
}
// function_ua_namespace0_79_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23565
// OPC Binary - ns=0;i=93
func function_ua_namespace0_79_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("OPC Binary\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("A type system which uses OPC binary schema to describe the encoding of data types.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 93), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("OPC Binary\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 75), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 93), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 35), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 90), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_79_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23584
func function_ua_namespace0_79_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 93))
}
// function_ua_namespace0_80_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23593
// DataTypeDictionaryType - ns=0;i=72
func function_ua_namespace0_80_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableTypeAttributes = UA_VariableTypeAttributes_default
	attr.valueRank = UA_Int32(-2)
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 24)
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("DataTypeDictionaryType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The type for variable that represents the collection of data type decriptions.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 72), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("DataTypeDictionaryType\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 72), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 63), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_80_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23614
func function_ua_namespace0_80_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 72))
}
// function_ua_namespace0_81_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23623
// NamespaceUri - ns=0;i=107
func function_ua_namespace0_81_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_107_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init(variablenode_ns_0_i_107_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_107_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("NamespaceUri\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("A URI that uniquely identifies the dictionary.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 107), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("NamespaceUri\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 107), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 80), 1)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 107), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 72), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_81_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23651
func function_ua_namespace0_81_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 107))
}
// function_ua_namespace0_82_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23660
// DataTypeVersion - ns=0;i=106
func function_ua_namespace0_82_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_106_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init(variablenode_ns_0_i_106_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_106_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("DataTypeVersion\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The version number for the data type dictionary.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 106), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("DataTypeVersion\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 106), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 80), 1)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 106), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 72), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_82_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23688
func function_ua_namespace0_82_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 106))
}
// function_ua_namespace0_83_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23697
// Opc.Ua - ns=0;i=7617
func function_ua_namespace0_83_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 15)
	var variablenode_ns_0_i_7617_variant_DataContents []UA_ByteString = UA_ByteString_new()
	//opcfoundation.org/BinarySchema/\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xmlns:ua=\"http://opcfoundation.org/UA/\"  xmlns:tns=\"http://opcfoundation.org/UA/\"  DefaultByteOrder=\"LittleEndian\"  TargetNamespace=\"http://opcfoundation.org/UA/\"><opc:Import Namespace=\"http://opcfoundation.org/BinarySchema/\" /><opc:StructuredType Name=\"XmlElement\"><opc:Documentation>An XML element encoded as a UTF-8 string.</opc:Documentation><opc:Field Name=\"Length\" T" "ypeName=\"opc:Int32\" /><opc:Field Name=\"Value\" TypeName=\"opc:Char\" LengthField=\"Length\" /></opc:StructuredType><opc:EnumeratedType Name=\"NodeIdType\" LengthInBits=\"6\"><opc:Documentation>The possible encodings for a NodeId value.</opc:Documentation><opc:EnumeratedValue Name=\"TwoByte\" Value=\"0\" /><opc:EnumeratedValue Name=\"FourByte\" Value=\"1\" /><opc:EnumeratedValue Name=\"Numeric\" Value=\"2\" /><opc:EnumeratedValue Name=\"String\" Value=\"3\" /><opc:EnumeratedValue Name=\"Guid\" Value=\"4\" /><opc:EnumeratedVa" "lue Name=\"ByteString\" Value=\"5\" /></opc:EnumeratedType><opc:StructuredType Name=\"TwoByteNodeId\"><opc:Field Name=\"Identifier\" TypeName=\"opc:Byte\" /></opc:StructuredType><opc:StructuredType Name=\"FourByteNodeId\"><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:Byte\" /><opc:Field Name=\"Identifier\" TypeName=\"opc:UInt16\" /></opc:StructuredType><opc:StructuredType Name=\"NumericNodeId\"><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:UInt16\" /><opc:Field Name=\"Identifier\" TypeName=\"opc:UInt32\" /></opc:Stru" "cturedType><opc:StructuredType Name=\"StringNodeId\"><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:UInt16\" /><opc:Field Name=\"Identifier\" TypeName=\"opc:CharArray\" /></opc:StructuredType><opc:StructuredType Name=\"GuidNodeId\"><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:UInt16\" /><opc:Field Name=\"Identifier\" TypeName=\"opc:Guid\" /></opc:StructuredType><opc:StructuredType Name=\"ByteStringNodeId\"><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:UInt16\" /><opc:Field Name=\"Identifier\" TypeName=\"opc:Byte" "String\" /></opc:StructuredType><opc:StructuredType Name=\"NodeId\"><opc:Documentation>An identifier for a node in a UA server address space.</opc:Documentation><opc:Field Name=\"NodeIdType\" TypeName=\"ua:NodeIdType\" /><opc:Field Name=\"Reserved1\" TypeName=\"opc:Bit\" Length=\"2\" /><opc:Field Name=\"TwoByte\" TypeName=\"ua:TwoByteNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"0\" /><opc:Field Name=\"FourByte\" TypeName=\"ua:FourByteNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"1\" /><opc:Field Name=\"Numeric\" Type" "Name=\"ua:NumericNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"2\" /><opc:Field Name=\"String\" TypeName=\"ua:StringNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"3\" /><opc:Field Name=\"Guid\" TypeName=\"ua:GuidNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"4\" /><opc:Field Name=\"ByteString\" TypeName=\"ua:ByteStringNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"5\" /></opc:StructuredType><opc:StructuredType Name=\"ExpandedNodeId\"><opc:Documentation>An identifier for a node in a UA server address space qualifie" "d with a complete namespace string.</opc:Documentation><opc:Field Name=\"NodeIdType\" TypeName=\"ua:NodeIdType\" /><opc:Field Name=\"ServerIndexSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"NamespaceURISpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"TwoByte\" TypeName=\"ua:TwoByteNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"0\" /><opc:Field Name=\"FourByte\" TypeName=\"ua:FourByteNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"1\" /><opc:Field Name=\"Numeric\" TypeName=\"ua:NumericNodeId\" SwitchField=\"NodeI" "dType\" SwitchValue=\"2\" /><opc:Field Name=\"String\" TypeName=\"ua:StringNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"3\" /><opc:Field Name=\"Guid\" TypeName=\"ua:GuidNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"4\" /><opc:Field Name=\"ByteString\" TypeName=\"ua:ByteStringNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"5\" /><opc:Field Name=\"NamespaceURI\" TypeName=\"opc:CharArray\" SwitchField=\"NamespaceURISpecified\"/><opc:Field Name=\"ServerIndex\" TypeName=\"opc:UInt32\" SwitchField=\"ServerIndexSpecified\"/></opc" ":StructuredType><opc:OpaqueType Name=\"StatusCode\" LengthInBits=\"32\" ByteOrderSignificant=\"true\"><opc:Documentation>A 32-bit status code value.</opc:Documentation></opc:OpaqueType><opc:StructuredType Name=\"DiagnosticInfo\"><opc:Documentation>A recursive structure containing diagnostic information associated with a status code.</opc:Documentation><opc:Field Name=\"SymbolicIdSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"NamespaceURISpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"LocaleSpecified\" " "TypeName=\"opc:Bit\" /><opc:Field Name=\"LocalizedTextSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"AdditionalInfoSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"InnerStatusCodeSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"InnerDiagnosticInfoSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"Reserved1\" TypeName=\"opc:Bit\" Length=\"2\" /><opc:Field Name=\"SymbolicId\" TypeName=\"opc:Int32\" SwitchField=\"SymbolicIdSpecified\" /><opc:Field Name=\"NamespaceURI\" TypeName=\"opc:Int32\" SwitchField=\"NamespaceUR" "ISpecified\" /><opc:Field Name=\"Locale\" TypeName=\"opc:Int32\" SwitchField=\"LocaleSpecified\" /><opc:Field Name=\"LocalizedText\" TypeName=\"opc:Int32\" SwitchField=\"LocalizedTextSpecified\" /><opc:Field Name=\"AdditionalInfo\" TypeName=\"opc:CharArray\" SwitchField=\"AdditionalInfoSpecified\" /><opc:Field Name=\"InnerStatusCode\" TypeName=\"ua:StatusCode\" SwitchField=\"InnerStatusCodeSpecified\" /><opc:Field Name=\"InnerDiagnosticInfo\" TypeName=\"ua:DiagnosticInfo\" SwitchField=\"InnerDiagnosticInfoSpecified\" /></opc:" "StructuredType><opc:StructuredType Name=\"QualifiedName\"><opc:Documentation>A string qualified with a namespace index.</opc:Documentation><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:Int32\" /><opc:Field Name=\"Name\" TypeName=\"opc:CharArray\" /></opc:StructuredType><opc:StructuredType Name=\"LocalizedText\"><opc:Documentation>A string qualified with a namespace index.</opc:Documentation><opc:Field Name=\"LocaleSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"TextSpecified\" TypeName=\"opc:Bit\" /><opc:F" "ield Name=\"Reserved1\" TypeName=\"opc:Bit\" Length=\"6\" /><opc:Field Name=\"Locale\" TypeName=\"opc:CharArray\" SwitchField=\"LocaleSpecified\" /><opc:Field Name=\"Text\" TypeName=\"opc:CharArray\" SwitchField=\"TextSpecified\" /></opc:StructuredType><opc:StructuredType Name=\"DataValue\"><opc:Documentation>A value with an associated timestamp, and quality.</opc:Documentation><opc:Field Name=\"ValueSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"StatusCodeSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"SourceTim" "estampSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"SourcePicosecondsSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"ServerTimestampSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"ServerPicosecondsSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"Reserved1\" TypeName=\"opc:Bit\" Length=\"2\" /><opc:Field Name=\"Value\" TypeName=\"ua:Variant\" SwitchField=\"ValueSpecified\" /><opc:Field Name=\"StatusCode\" TypeName=\"ua:StatusCode\" SwitchField=\"StatusCodeSpecified\" /><opc:Field Name=\"SourceTimestamp\" TypeN" "ame=\"opc:DateTime\" SwitchField=\"SourceTimestampSpecified\" /><opc:Field Name=\"SourcePicoseconds\" TypeName=\"opc:UInt16\" SwitchField=\"SourcePicosecondsSpecified\" /><opc:Field Name=\"ServerTimestamp\" TypeName=\"opc:DateTime\" SwitchField=\"ServerTimestampSpecified\" /><opc:Field Name=\"ServerPicoseconds\" TypeName=\"opc:UInt16\" SwitchField=\"ServerPicosecondsSpecified\" /></opc:StructuredType><opc:StructuredType Name=\"ExtensionObject\"><opc:Documentation>A serialized object prefixed with its data type identifi" "er.</opc:Documentation><opc:Field Name=\"TypeIdSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"BinaryBody\" TypeName=\"opc:Bit\" /><opc:Field Name=\"XmlBody\" TypeName=\"opc:Bit\" /><opc:Field Name=\"Reserved1\" TypeName=\"opc:Bit\" Length=\"5\" /><opc:Field Name=\"TypeId\" TypeName=\"ua:ExpandedNodeId\" SwitchField=\"TypeIdSpecified\" /><opc:Field Name=\"BodyLength\" TypeName=\"opc:Int32\" /><opc:Field Name=\"Body\" TypeName=\"opc:Byte\" LengthField=\"BodyLength\" /></opc:StructuredType><opc:StructuredType Name=\"Variant\"><" "opc:Documentation>A union of several types.</opc:Documentation><opc:Field Name=\"VariantType\" TypeName=\"opc:Bit\" Length=\"6\" /><opc:Field Name=\"ArrayDimensionsSpecified\" TypeName=\"opc:Bit\" Length=\"1\"/><opc:Field Name=\"ArrayLengthSpecified\" TypeName=\"opc:Bit\" Length=\"1\"/><opc:Field Name=\"ArrayLength\" TypeName=\"opc:Int32\" SwitchField=\"ArrayLengthSpecified\" /><opc:Field Name=\"Boolean\" TypeName=\"opc:Boolean\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"1\" /><opc:Field Name=\"SByte\" " "TypeName=\"opc:SByte\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"2\" /><opc:Field Name=\"Byte\" TypeName=\"opc:Byte\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"3\" /><opc:Field Name=\"Int16\" TypeName=\"opc:Int16\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"4\" /><opc:Field Name=\"UInt16\" TypeName=\"opc:UInt16\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"5\" /><opc:Field Name=\"Int32\" TypeName=\"opc:Int32\" LengthField=\"ArrayL" "ength\" SwitchField=\"VariantType\" SwitchValue=\"6\" /><opc:Field Name=\"UInt32\" TypeName=\"opc:UInt32\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"7\" /><opc:Field Name=\"Int64\" TypeName=\"opc:Int64\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"8\" /><opc:Field Name=\"UInt64\" TypeName=\"opc:UInt64\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"9\" /><opc:Field Name=\"Float\" TypeName=\"opc:Float\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" Swi" "tchValue=\"10\" /><opc:Field Name=\"Double\" TypeName=\"opc:Double\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"11\" /><opc:Field Name=\"String\" TypeName=\"opc:CharArray\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"12\" /><opc:Field Name=\"DateTime\" TypeName=\"opc:DateTime\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"13\" /><opc:Field Name=\"Guid\" TypeName=\"opc:Guid\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"14\" /><opc:Fiel" "d Name=\"ByteString\" TypeName=\"opc:ByteString\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"15\" /><opc:Field Name=\"XmlElement\" TypeName=\"ua:XmlElement\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"16\" /><opc:Field Name=\"NodeId\" TypeName=\"ua:NodeId\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"17\" /><opc:Field Name=\"ExpandedNodeId\" TypeName=\"ua:ExpandedNodeId\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"18\" /><opc:Fie" "ld Name=\"StatusCode\" TypeName=\"ua:StatusCode\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"19\" /><opc:Field Name=\"QualifiedName\" TypeName=\"ua:QualifiedName\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"20\" /><opc:Field Name=\"LocalizedText\" TypeName=\"ua:LocalizedText\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"21\" /><opc:Field Name=\"ExtensionObject\" TypeName=\"ua:ExtensionObject\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" Switc" "hValue=\"22\" /><opc:Field Name=\"DataValue\" TypeName=\"ua:DataValue\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"23\" /><opc:Field Name=\"Variant\" TypeName=\"ua:Variant\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"24\" /><opc:Field Name=\"DiagnosticInfo\" TypeName=\"ua:DiagnosticInfo\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"25\" /><opc:Field Name=\"NoOfArrayDimensions\" TypeName=\"opc:Int32\" SwitchField=\"ArrayDimensionsSpecified\" /><opc:Field " "Name=\"ArrayDimensions\" TypeName=\"opc:Int32\" LengthField=\"NoOfArrayDimensions\" SwitchField=\"ArrayDimensionsSpecified\" /></opc:StructuredType><opc:EnumeratedType Name=\"NamingRuleType\" LengthInBits=\"32\"><opc:EnumeratedValue Name=\"Mandatory\" Value=\"1\" /><opc:EnumeratedValue Name=\"Optional\" Value=\"2\" /><opc:EnumeratedValue Name=\"Constraint\" Value=\"3\" /></opc:EnumeratedType><opc:StructuredType Name=\"Argument\" BaseType=\"ua:ExtensionObject\"><opc:Documentation>An argument for a method.</opc:Documentation" "><opc:Field Name=\"Name\" TypeName=\"opc:String\" /><opc:Field Name=\"DataType\" TypeName=\"ua:NodeId\" /><opc:Field Name=\"ValueRank\" TypeName=\"opc:Int32\" /><opc:Field Name=\"NoOfArrayDimensions\" TypeName=\"opc:Int32\" /><opc:Field Name=\"ArrayDimensions\" TypeName=\"opc:UInt32\" LengthField=\"NoOfArrayDimensions\" /><opc:Field Name=\"Description\" TypeName=\"ua:LocalizedText\" /></opc:StructuredType><opc:StructuredType Name=\"EnumValueType\" BaseType=\"ua:ExtensionObject\"><opc:Documentation>A mapping between a value o" "f an enumerated type and a name and description.</opc:Documentation><opc:Field Name=\"Value\" TypeName=\"opc:Int64\" /><opc:Field Name=\"DisplayName\" TypeName=\"ua:LocalizedText\" /><opc:Field Name=\"Description\" TypeName=\"ua:LocalizedText\" /></opc:StructuredType></opc:TypeDictionary>" );
	variablenode_ns_0_i_7617_variant_DataContents[0] = UA_BYTESTRING_ALLOC([]byte("<opc:TypeDictionary  xmlns:opc=\"http://opcfoundation.org/BinarySchema/\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xmlns:ua=\"http://opcfoundation.org/UA/\"  xmlns:tns=\"http://opcfoundation.org/UA/\"  DefaultByteOrder=\"LittleEndian\"  TargetNamespace=\"http://opcfoundation.org/UA/\"><opc:Import Namespace=\"http://opcfoundation.org/BinarySchema/\" /><opc:StructuredType Name=\"XmlElement\"><opc:Documentation>An XML element encoded as a UTF-8 string.</opc:Documentation><opc:Field Name=\"Length\" TypeName=\"opc:Int32\" /><opc:Field Name=\"Value\" TypeName=\"opc:Char\" LengthField=\"Length\" /></opc:StructuredType><opc:EnumeratedType Name=\"NodeIdType\" LengthInBits=\"6\"><opc:Documentation>The possible encodings for a NodeId value.</opc:Documentation><opc:EnumeratedValue Name=\"TwoByte\" Value=\"0\" /><opc:EnumeratedValue Name=\"FourByte\" Value=\"1\" /><opc:EnumeratedValue Name=\"Numeric\" Value=\"2\" /><opc:EnumeratedValue Name=\"String\" Value=\"3\" /><opc:EnumeratedValue Name=\"Guid\" Value=\"4\" /><opc:EnumeratedValue Name=\"ByteString\" Value=\"5\" /></opc:EnumeratedType><opc:StructuredType Name=\"TwoByteNodeId\"><opc:Field Name=\"Identifier\" TypeName=\"opc:Byte\" /></opc:StructuredType><opc:StructuredType Name=\"FourByteNodeId\"><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:Byte\" /><opc:Field Name=\"Identifier\" TypeName=\"opc:UInt16\" /></opc:StructuredType><opc:StructuredType Name=\"NumericNodeId\"><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:UInt16\" /><opc:Field Name=\"Identifier\" TypeName=\"opc:UInt32\" /></opc:StructuredType><opc:StructuredType Name=\"StringNodeId\"><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:UInt16\" /><opc:Field Name=\"Identifier\" TypeName=\"opc:CharArray\" /></opc:StructuredType><opc:StructuredType Name=\"GuidNodeId\"><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:UInt16\" /><opc:Field Name=\"Identifier\" TypeName=\"opc:Guid\" /></opc:StructuredType><opc:StructuredType Name=\"ByteStringNodeId\"><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:UInt16\" /><opc:Field Name=\"Identifier\" TypeName=\"opc:ByteString\" /></opc:StructuredType><opc:StructuredType Name=\"NodeId\"><opc:Documentation>An identifier for a node in a UA server address space.</opc:Documentation><opc:Field Name=\"NodeIdType\" TypeName=\"ua:NodeIdType\" /><opc:Field Name=\"Reserved1\" TypeName=\"opc:Bit\" Length=\"2\" /><opc:Field Name=\"TwoByte\" TypeName=\"ua:TwoByteNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"0\" /><opc:Field Name=\"FourByte\" TypeName=\"ua:FourByteNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"1\" /><opc:Field Name=\"Numeric\" TypeName=\"ua:NumericNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"2\" /><opc:Field Name=\"String\" TypeName=\"ua:StringNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"3\" /><opc:Field Name=\"Guid\" TypeName=\"ua:GuidNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"4\" /><opc:Field Name=\"ByteString\" TypeName=\"ua:ByteStringNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"5\" /></opc:StructuredType><opc:StructuredType Name=\"ExpandedNodeId\"><opc:Documentation>An identifier for a node in a UA server address space qualified with a complete namespace string.</opc:Documentation><opc:Field Name=\"NodeIdType\" TypeName=\"ua:NodeIdType\" /><opc:Field Name=\"ServerIndexSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"NamespaceURISpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"TwoByte\" TypeName=\"ua:TwoByteNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"0\" /><opc:Field Name=\"FourByte\" TypeName=\"ua:FourByteNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"1\" /><opc:Field Name=\"Numeric\" TypeName=\"ua:NumericNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"2\" /><opc:Field Name=\"String\" TypeName=\"ua:StringNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"3\" /><opc:Field Name=\"Guid\" TypeName=\"ua:GuidNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"4\" /><opc:Field Name=\"ByteString\" TypeName=\"ua:ByteStringNodeId\" SwitchField=\"NodeIdType\" SwitchValue=\"5\" /><opc:Field Name=\"NamespaceURI\" TypeName=\"opc:CharArray\" SwitchField=\"NamespaceURISpecified\"/><opc:Field Name=\"ServerIndex\" TypeName=\"opc:UInt32\" SwitchField=\"ServerIndexSpecified\"/></opc:StructuredType><opc:OpaqueType Name=\"StatusCode\" LengthInBits=\"32\" ByteOrderSignificant=\"true\"><opc:Documentation>A 32-bit status code value.</opc:Documentation></opc:OpaqueType><opc:StructuredType Name=\"DiagnosticInfo\"><opc:Documentation>A recursive structure containing diagnostic information associated with a status code.</opc:Documentation><opc:Field Name=\"SymbolicIdSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"NamespaceURISpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"LocaleSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"LocalizedTextSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"AdditionalInfoSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"InnerStatusCodeSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"InnerDiagnosticInfoSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"Reserved1\" TypeName=\"opc:Bit\" Length=\"2\" /><opc:Field Name=\"SymbolicId\" TypeName=\"opc:Int32\" SwitchField=\"SymbolicIdSpecified\" /><opc:Field Name=\"NamespaceURI\" TypeName=\"opc:Int32\" SwitchField=\"NamespaceURISpecified\" /><opc:Field Name=\"Locale\" TypeName=\"opc:Int32\" SwitchField=\"LocaleSpecified\" /><opc:Field Name=\"LocalizedText\" TypeName=\"opc:Int32\" SwitchField=\"LocalizedTextSpecified\" /><opc:Field Name=\"AdditionalInfo\" TypeName=\"opc:CharArray\" SwitchField=\"AdditionalInfoSpecified\" /><opc:Field Name=\"InnerStatusCode\" TypeName=\"ua:StatusCode\" SwitchField=\"InnerStatusCodeSpecified\" /><opc:Field Name=\"InnerDiagnosticInfo\" TypeName=\"ua:DiagnosticInfo\" SwitchField=\"InnerDiagnosticInfoSpecified\" /></opc:StructuredType><opc:StructuredType Name=\"QualifiedName\"><opc:Documentation>A string qualified with a namespace index.</opc:Documentation><opc:Field Name=\"NamespaceIndex\" TypeName=\"opc:Int32\" /><opc:Field Name=\"Name\" TypeName=\"opc:CharArray\" /></opc:StructuredType><opc:StructuredType Name=\"LocalizedText\"><opc:Documentation>A string qualified with a namespace index.</opc:Documentation><opc:Field Name=\"LocaleSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"TextSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"Reserved1\" TypeName=\"opc:Bit\" Length=\"6\" /><opc:Field Name=\"Locale\" TypeName=\"opc:CharArray\" SwitchField=\"LocaleSpecified\" /><opc:Field Name=\"Text\" TypeName=\"opc:CharArray\" SwitchField=\"TextSpecified\" /></opc:StructuredType><opc:StructuredType Name=\"DataValue\"><opc:Documentation>A value with an associated timestamp, and quality.</opc:Documentation><opc:Field Name=\"ValueSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"StatusCodeSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"SourceTimestampSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"SourcePicosecondsSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"ServerTimestampSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"ServerPicosecondsSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"Reserved1\" TypeName=\"opc:Bit\" Length=\"2\" /><opc:Field Name=\"Value\" TypeName=\"ua:Variant\" SwitchField=\"ValueSpecified\" /><opc:Field Name=\"StatusCode\" TypeName=\"ua:StatusCode\" SwitchField=\"StatusCodeSpecified\" /><opc:Field Name=\"SourceTimestamp\" TypeName=\"opc:DateTime\" SwitchField=\"SourceTimestampSpecified\" /><opc:Field Name=\"SourcePicoseconds\" TypeName=\"opc:UInt16\" SwitchField=\"SourcePicosecondsSpecified\" /><opc:Field Name=\"ServerTimestamp\" TypeName=\"opc:DateTime\" SwitchField=\"ServerTimestampSpecified\" /><opc:Field Name=\"ServerPicoseconds\" TypeName=\"opc:UInt16\" SwitchField=\"ServerPicosecondsSpecified\" /></opc:StructuredType><opc:StructuredType Name=\"ExtensionObject\"><opc:Documentation>A serialized object prefixed with its data type identifier.</opc:Documentation><opc:Field Name=\"TypeIdSpecified\" TypeName=\"opc:Bit\" /><opc:Field Name=\"BinaryBody\" TypeName=\"opc:Bit\" /><opc:Field Name=\"XmlBody\" TypeName=\"opc:Bit\" /><opc:Field Name=\"Reserved1\" TypeName=\"opc:Bit\" Length=\"5\" /><opc:Field Name=\"TypeId\" TypeName=\"ua:ExpandedNodeId\" SwitchField=\"TypeIdSpecified\" /><opc:Field Name=\"BodyLength\" TypeName=\"opc:Int32\" /><opc:Field Name=\"Body\" TypeName=\"opc:Byte\" LengthField=\"BodyLength\" /></opc:StructuredType><opc:StructuredType Name=\"Variant\"><opc:Documentation>A union of several types.</opc:Documentation><opc:Field Name=\"VariantType\" TypeName=\"opc:Bit\" Length=\"6\" /><opc:Field Name=\"ArrayDimensionsSpecified\" TypeName=\"opc:Bit\" Length=\"1\"/><opc:Field Name=\"ArrayLengthSpecified\" TypeName=\"opc:Bit\" Length=\"1\"/><opc:Field Name=\"ArrayLength\" TypeName=\"opc:Int32\" SwitchField=\"ArrayLengthSpecified\" /><opc:Field Name=\"Boolean\" TypeName=\"opc:Boolean\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"1\" /><opc:Field Name=\"SByte\" TypeName=\"opc:SByte\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"2\" /><opc:Field Name=\"Byte\" TypeName=\"opc:Byte\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"3\" /><opc:Field Name=\"Int16\" TypeName=\"opc:Int16\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"4\" /><opc:Field Name=\"UInt16\" TypeName=\"opc:UInt16\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"5\" /><opc:Field Name=\"Int32\" TypeName=\"opc:Int32\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"6\" /><opc:Field Name=\"UInt32\" TypeName=\"opc:UInt32\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"7\" /><opc:Field Name=\"Int64\" TypeName=\"opc:Int64\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"8\" /><opc:Field Name=\"UInt64\" TypeName=\"opc:UInt64\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"9\" /><opc:Field Name=\"Float\" TypeName=\"opc:Float\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"10\" /><opc:Field Name=\"Double\" TypeName=\"opc:Double\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"11\" /><opc:Field Name=\"String\" TypeName=\"opc:CharArray\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"12\" /><opc:Field Name=\"DateTime\" TypeName=\"opc:DateTime\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"13\" /><opc:Field Name=\"Guid\" TypeName=\"opc:Guid\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"14\" /><opc:Field Name=\"ByteString\" TypeName=\"opc:ByteString\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"15\" /><opc:Field Name=\"XmlElement\" TypeName=\"ua:XmlElement\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"16\" /><opc:Field Name=\"NodeId\" TypeName=\"ua:NodeId\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"17\" /><opc:Field Name=\"ExpandedNodeId\" TypeName=\"ua:ExpandedNodeId\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"18\" /><opc:Field Name=\"StatusCode\" TypeName=\"ua:StatusCode\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"19\" /><opc:Field Name=\"QualifiedName\" TypeName=\"ua:QualifiedName\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"20\" /><opc:Field Name=\"LocalizedText\" TypeName=\"ua:LocalizedText\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"21\" /><opc:Field Name=\"ExtensionObject\" TypeName=\"ua:ExtensionObject\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"22\" /><opc:Field Name=\"DataValue\" TypeName=\"ua:DataValue\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"23\" /><opc:Field Name=\"Variant\" TypeName=\"ua:Variant\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"24\" /><opc:Field Name=\"DiagnosticInfo\" TypeName=\"ua:DiagnosticInfo\" LengthField=\"ArrayLength\" SwitchField=\"VariantType\" SwitchValue=\"25\" /><opc:Field Name=\"NoOfArrayDimensions\" TypeName=\"opc:Int32\" SwitchField=\"ArrayDimensionsSpecified\" /><opc:Field Name=\"ArrayDimensions\" TypeName=\"opc:Int32\" LengthField=\"NoOfArrayDimensions\" SwitchField=\"ArrayDimensionsSpecified\" /></opc:StructuredType><opc:EnumeratedType Name=\"NamingRuleType\" LengthInBits=\"32\"><opc:EnumeratedValue Name=\"Mandatory\" Value=\"1\" /><opc:EnumeratedValue Name=\"Optional\" Value=\"2\" /><opc:EnumeratedValue Name=\"Constraint\" Value=\"3\" /></opc:EnumeratedType><opc:StructuredType Name=\"Argument\" BaseType=\"ua:ExtensionObject\"><opc:Documentation>An argument for a method.</opc:Documentation><opc:Field Name=\"Name\" TypeName=\"opc:String\" /><opc:Field Name=\"DataType\" TypeName=\"ua:NodeId\" /><opc:Field Name=\"ValueRank\" TypeName=\"opc:Int32\" /><opc:Field Name=\"NoOfArrayDimensions\" TypeName=\"opc:Int32\" /><opc:Field Name=\"ArrayDimensions\" TypeName=\"opc:UInt32\" LengthField=\"NoOfArrayDimensions\" /><opc:Field Name=\"Description\" TypeName=\"ua:LocalizedText\" /></opc:StructuredType><opc:StructuredType Name=\"EnumValueType\" BaseType=\"ua:ExtensionObject\"><opc:Documentation>A mapping between a value of an enumerated type and a name and description.</opc:Documentation><opc:Field Name=\"Value\" TypeName=\"opc:Int64\" /><opc:Field Name=\"DisplayName\" TypeName=\"ua:LocalizedText\" /><opc:Field Name=\"Description\" TypeName=\"ua:LocalizedText\" /></opc:StructuredType></opc:TypeDictionary>\x00"))
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_7617_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Opc.Ua\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7617), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Opc.Ua\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 72), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_ByteString_delete(variablenode_ns_0_i_7617_variant_DataContents)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7617), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 93), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_83_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23725
func function_ua_namespace0_83_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7617))
}
// function_ua_namespace0_84_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23734
// ServerStatusDataType - ns=0;i=862
func function_ua_namespace0_84_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerStatusDataType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 862), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerStatusDataType\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 862), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 22), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_84_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23753
func function_ua_namespace0_84_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 862))
}
// function_ua_namespace0_85_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23762
// DataTypeDescriptionType - ns=0;i=69
func function_ua_namespace0_85_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableTypeAttributes = UA_VariableTypeAttributes_default
	attr.valueRank = UA_Int32(-2)
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 24)
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("DataTypeDescriptionType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The type for variable that represents the description of a data type encoding.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 69), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("DataTypeDescriptionType\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 69), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 63), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_85_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23783
func function_ua_namespace0_85_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 69))
}
// function_ua_namespace0_86_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23792
// DictionaryFragment - ns=0;i=105
func function_ua_namespace0_86_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 15)
	var variablenode_ns_0_i_105_variant_DataContents []UA_ByteString = make([]UA_ByteString, 1)
	UA_init(variablenode_ns_0_i_105_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_105_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("DictionaryFragment\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("A fragment of a data type dictionary that defines the data type.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 105), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("DictionaryFragment\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 105), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 80), 1)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 105), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 69), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_86_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23820
func function_ua_namespace0_86_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 105))
}
// function_ua_namespace0_87_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23829
// DataTypeVersion - ns=0;i=104
func function_ua_namespace0_87_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_104_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init(variablenode_ns_0_i_104_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_104_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("DataTypeVersion\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The version number for the data type description.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 104), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("DataTypeVersion\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 104), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 37), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 80), 1)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 104), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 69), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_87_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23857
func function_ua_namespace0_87_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 104))
}
// function_ua_namespace0_88_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23866
// Argument - ns=0;i=7650
func function_ua_namespace0_88_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_7650_variant_DataContents []UA_String = UA_String_new()
	variablenode_ns_0_i_7650_variant_DataContents[0] = UA_String_fromChars([]byte("Argument\x00"))
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_7650_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Argument\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7650), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Argument\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 69), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_String_delete(variablenode_ns_0_i_7650_variant_DataContents)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7650), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 7617), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_88_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23894
func function_ua_namespace0_88_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7650))
}
// function_ua_namespace0_89_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23903
// EnumValueType - ns=0;i=7656
func function_ua_namespace0_89_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_7656_variant_DataContents []UA_String = UA_String_new()
	variablenode_ns_0_i_7656_variant_DataContents[0] = UA_String_fromChars([]byte("EnumValueType\x00"))
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_7656_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("EnumValueType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7656), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("EnumValueType\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 69), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_String_delete(variablenode_ns_0_i_7656_variant_DataContents)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7656), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 7617), 0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7656), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 39), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 8251), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_89_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23932
func function_ua_namespace0_89_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7656))
}
// function_ua_namespace0_90_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23941
// ServerDiagnosticsSummaryDataType - ns=0;i=859
func function_ua_namespace0_90_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerDiagnosticsSummaryDataType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 859), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerDiagnosticsSummaryDataType\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 859), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 22), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_90_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23960
func function_ua_namespace0_90_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 859))
}
// function_ua_namespace0_91_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23969
// ServerStatusType - ns=0;i=2138
func function_ua_namespace0_91_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableTypeAttributes = UA_VariableTypeAttributes_default
	attr.valueRank = UA_Int32(-2)
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 24)
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerStatusType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLETYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2138), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerStatusType\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[116]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2138), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 63), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_91_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23990
func function_ua_namespace0_91_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2138))
}
// function_ua_namespace0_92_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:23999
// ServerStatus - ns=0;i=2256
func function_ua_namespace0_92_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 862)
	var variablenode_ns_0_i_2256_variant_DataContents []UA_ServerStatusDataType = make([]UA_ServerStatusDataType, 1)
	UA_init(variablenode_ns_0_i_2256_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[168]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2256_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[168]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerStatus\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The current status of the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2256), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerStatus\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2138), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2256), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2253), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_92_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24026
func function_ua_namespace0_92_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2256))
}
// function_ua_namespace0_93_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24035
// State - ns=0;i=2259
func function_ua_namespace0_93_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 852)
	var variablenode_ns_0_i_2259_variant_DataContents []int = make([]int, 1)
	UA_init(variablenode_ns_0_i_2259_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[106]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2259_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[106]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("State\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2259), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("State\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2259), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2256), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_93_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24062
func function_ua_namespace0_93_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2259))
}
// function_ua_namespace0_94_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24071
// CurrentTime - ns=0;i=2258
func function_ua_namespace0_94_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 294)
	var variablenode_ns_0_i_2258_variant_DataContents []UA_DateTime = make([]UA_DateTime, 1)
	UA_init(variablenode_ns_0_i_2258_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2258_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("CurrentTime\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2258), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("CurrentTime\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2258), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2256), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_94_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24098
func function_ua_namespace0_94_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2258))
}
// function_ua_namespace0_95_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24107
// StartTime - ns=0;i=2257
func function_ua_namespace0_95_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 294)
	var variablenode_ns_0_i_2257_variant_DataContents []UA_DateTime = make([]UA_DateTime, 1)
	UA_init(variablenode_ns_0_i_2257_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2257_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("StartTime\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2257), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("StartTime\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2257), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2256), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_95_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24134
func function_ua_namespace0_95_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2257))
}
// function_ua_namespace0_96_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24143
// BuildInfo - ns=0;i=2260
func function_ua_namespace0_96_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 338)
	var variablenode_ns_0_i_2260_variant_DataContents []UA_BuildInfo = make([]UA_BuildInfo, 1)
	UA_init(variablenode_ns_0_i_2260_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[74]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2260_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[74]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("BuildInfo\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2260), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("BuildInfo\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3051), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2260), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2256), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_96_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24170
func function_ua_namespace0_96_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2260))
}
// function_ua_namespace0_97_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24179
// BuildDate - ns=0;i=2266
func function_ua_namespace0_97_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 294)
	var variablenode_ns_0_i_2266_variant_DataContents []UA_DateTime = make([]UA_DateTime, 1)
	UA_init(variablenode_ns_0_i_2266_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2266_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("BuildDate\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2266), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("BuildDate\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2266), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2260), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_97_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24206
func function_ua_namespace0_97_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2266))
}
// function_ua_namespace0_98_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24215
// BuildNumber - ns=0;i=2265
func function_ua_namespace0_98_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_2265_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init(variablenode_ns_0_i_2265_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2265_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("BuildNumber\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2265), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("BuildNumber\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2265), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2260), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_98_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24242
func function_ua_namespace0_98_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2265))
}
// function_ua_namespace0_99_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24251
// SoftwareVersion - ns=0;i=2264
func function_ua_namespace0_99_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_2264_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init(variablenode_ns_0_i_2264_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2264_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("SoftwareVersion\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2264), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("SoftwareVersion\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2264), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2260), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_99_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24278
func function_ua_namespace0_99_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2264))
}
// function_ua_namespace0_100_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24287
// ManufacturerName - ns=0;i=2263
func function_ua_namespace0_100_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_2263_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init(variablenode_ns_0_i_2263_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2263_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ManufacturerName\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2263), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ManufacturerName\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2263), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2260), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_100_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24314
func function_ua_namespace0_100_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2263))
}
// function_ua_namespace0_101_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24323
// ProductUri - ns=0;i=2262
func function_ua_namespace0_101_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_2262_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init(variablenode_ns_0_i_2262_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2262_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ProductUri\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2262), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ProductUri\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2262), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2260), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_101_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24350
func function_ua_namespace0_101_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2262))
}
// function_ua_namespace0_102_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24359
// ProductName - ns=0;i=2261
func function_ua_namespace0_102_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((1000))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 12)
	var variablenode_ns_0_i_2261_variant_DataContents []UA_String = make([]UA_String, 1)
	UA_init(variablenode_ns_0_i_2261_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2261_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ProductName\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2261), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ProductName\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2261), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2260), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_102_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24386
func function_ua_namespace0_102_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2261))
}
// function_ua_namespace0_103_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24395
// SecondsTillShutdown - ns=0;i=2992
func function_ua_namespace0_103_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2992_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2992_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2992_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("SecondsTillShutdown\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2992), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("SecondsTillShutdown\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2992), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2256), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_103_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24422
func function_ua_namespace0_103_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2992))
}
// function_ua_namespace0_104_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24431
// ShutdownReason - ns=0;i=2993
func function_ua_namespace0_104_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 21)
	var variablenode_ns_0_i_2993_variant_DataContents []UA_LocalizedText = make([]UA_LocalizedText, 1)
	UA_init(variablenode_ns_0_i_2993_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2993_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ShutdownReason\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2993), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ShutdownReason\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2993), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2256), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_104_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24458
func function_ua_namespace0_104_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2993))
}
// function_ua_namespace0_105_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24467
// Argument - ns=0;i=296
func function_ua_namespace0_105_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_DataTypeAttributes = UA_DataTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Argument\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("An argument for a method.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_DATATYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 296), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Argument\x00")), UA_NODEID_NULL, (*[100000000]UA_DataTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[83]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 296), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 22), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_105_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24486
func function_ua_namespace0_105_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 296))
}
// function_ua_namespace0_106_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24495
// Default Binary - ns=0;i=298
func function_ua_namespace0_106_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Default Binary\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 298), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Default Binary\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 76), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 298), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 39), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 7650), 1)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 298), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 38), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 296), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_106_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24515
func function_ua_namespace0_106_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 298))
}
// function_ua_namespace0_107_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24524
// OutputArguments - ns=0;i=11494
func function_ua_namespace0_107_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((1))))))
	attr.arrayDimensionsSize = 1
	attr.arrayDimensions = UA_Array_new(1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
	attr.arrayDimensions[0] = 0
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 296)
	type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_24537_1_ struct {
		Name                UA_String
		DataType            UA_NodeId
		ValueRank           UA_Int32
		ArrayDimensionsSize UA_Int32
		ArrayDimensions     []UA_UInt32
		Description         UA_LocalizedText
	}
	var variablenode_ns_0_i_11494_Argument_0_0_struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_24537_1_
	variablenode_ns_0_i_11494_Argument_0_0_struct.Name = UA_STRING([]byte("ServerHandles\x00"))
	variablenode_ns_0_i_11494_Argument_0_0_struct.DataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	variablenode_ns_0_i_11494_Argument_0_0_struct.ValueRank = UA_Int32(1)
	variablenode_ns_0_i_11494_Argument_0_0_struct.ArrayDimensionsSize = UA_Int32((int32_t((__int32_t((1))))))
	variablenode_ns_0_i_11494_Argument_0_0_struct.ArrayDimensions = make([]UA_UInt32, 4*1/4)
	variablenode_ns_0_i_11494_Argument_0_0_struct.ArrayDimensions[0] = UA_UInt32(0)
	variablenode_ns_0_i_11494_Argument_0_0_struct.Description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	var variablenode_ns_0_i_11494_Argument_0_0 []UA_ExtensionObject = UA_ExtensionObject_new()
	variablenode_ns_0_i_11494_Argument_0_0[0].encoding = UA_EXTENSIONOBJECT_ENCODED_BYTESTRING
	(*variablenode_ns_0_i_11494_Argument_0_0[0].content.encoded()).typeId = UA_NODEID_NUMERIC(0, 298)
	UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&(*variablenode_ns_0_i_11494_Argument_0_0[0].content.encoded()).body))[:], 65000)
	var posvariablenode_ns_0_i_11494_Argument_0_0 []UA_Byte = (*variablenode_ns_0_i_11494_Argument_0_0[0].content.encoded()).body.data
	var endvariablenode_ns_0_i_11494_Argument_0_0 []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&(*variablenode_ns_0_i_11494_Argument_0_0[0].content.encoded()).body.data[65000]))[:]
	{
		retVal |= UA_encodeBinary((*[100000000]UA_String)(unsafe.Pointer(&variablenode_ns_0_i_11494_Argument_0_0_struct.Name))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11494_Argument_0_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&variablenode_ns_0_i_11494_Argument_0_0_struct.DataType))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11494_Argument_0_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&variablenode_ns_0_i_11494_Argument_0_0_struct.ValueRank))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11494_Argument_0_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_UInt32)(unsafe.Pointer(&variablenode_ns_0_i_11494_Argument_0_0_struct.ArrayDimensions[0]))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11494_Argument_0_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_LocalizedText)(unsafe.Pointer(&variablenode_ns_0_i_11494_Argument_0_0_struct.Description))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11494_Argument_0_0))[:], nil, nil)
	}
	var variablenode_ns_0_i_11494_Argument_0_0_encOffset uint = uint((uint32((uintptr_t((uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_0_0))))) - uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&(*variablenode_ns_0_i_11494_Argument_0_0[0].content.encoded()).body.data)))))))))))
	(*variablenode_ns_0_i_11494_Argument_0_0[0].content.encoded()).body.length = variablenode_ns_0_i_11494_Argument_0_0_encOffset
	var variablenode_ns_0_i_11494_Argument_0_0_newBody []UA_Byte = make([]UA_Byte, uint(variablenode_ns_0_i_11494_Argument_0_0_encOffset)/1)
	memcpy(variablenode_ns_0_i_11494_Argument_0_0_newBody, (*variablenode_ns_0_i_11494_Argument_0_0[0].content.encoded()).body.data, uint32((uint(variablenode_ns_0_i_11494_Argument_0_0_encOffset))))
	var variablenode_ns_0_i_11494_Argument_0_0_oldBody []UA_Byte = (*variablenode_ns_0_i_11494_Argument_0_0[0].content.encoded()).body.data
	(*variablenode_ns_0_i_11494_Argument_0_0[0].content.encoded()).body.data = variablenode_ns_0_i_11494_Argument_0_0_newBody
	_ = variablenode_ns_0_i_11494_Argument_0_0_oldBody
	type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_24574_1_ struct {
		Name                UA_String
		DataType            UA_NodeId
		ValueRank           UA_Int32
		ArrayDimensionsSize UA_Int32
		ArrayDimensions     []UA_UInt32
		Description         UA_LocalizedText
	}
	var variablenode_ns_0_i_11494_Argument_1_0_struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_24574_1_
	variablenode_ns_0_i_11494_Argument_1_0_struct.Name = UA_STRING([]byte("ClientHandles\x00"))
	variablenode_ns_0_i_11494_Argument_1_0_struct.DataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	variablenode_ns_0_i_11494_Argument_1_0_struct.ValueRank = UA_Int32(1)
	variablenode_ns_0_i_11494_Argument_1_0_struct.ArrayDimensionsSize = UA_Int32((int32_t((__int32_t((1))))))
	variablenode_ns_0_i_11494_Argument_1_0_struct.ArrayDimensions = make([]UA_UInt32, 4*1/4)
	variablenode_ns_0_i_11494_Argument_1_0_struct.ArrayDimensions[0] = UA_UInt32(0)
	variablenode_ns_0_i_11494_Argument_1_0_struct.Description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	var variablenode_ns_0_i_11494_Argument_1_0 []UA_ExtensionObject = UA_ExtensionObject_new()
	variablenode_ns_0_i_11494_Argument_1_0[0].encoding = UA_EXTENSIONOBJECT_ENCODED_BYTESTRING
	(*variablenode_ns_0_i_11494_Argument_1_0[0].content.encoded()).typeId = UA_NODEID_NUMERIC(0, 298)
	UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&(*variablenode_ns_0_i_11494_Argument_1_0[0].content.encoded()).body))[:], 65000)
	var posvariablenode_ns_0_i_11494_Argument_1_0 []UA_Byte = (*variablenode_ns_0_i_11494_Argument_1_0[0].content.encoded()).body.data
	var endvariablenode_ns_0_i_11494_Argument_1_0 []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&(*variablenode_ns_0_i_11494_Argument_1_0[0].content.encoded()).body.data[65000]))[:]
	{
		retVal |= UA_encodeBinary((*[100000000]UA_String)(unsafe.Pointer(&variablenode_ns_0_i_11494_Argument_1_0_struct.Name))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_1_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11494_Argument_1_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&variablenode_ns_0_i_11494_Argument_1_0_struct.DataType))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_1_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11494_Argument_1_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&variablenode_ns_0_i_11494_Argument_1_0_struct.ValueRank))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_1_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11494_Argument_1_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_UInt32)(unsafe.Pointer(&variablenode_ns_0_i_11494_Argument_1_0_struct.ArrayDimensions[0]))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_1_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11494_Argument_1_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_LocalizedText)(unsafe.Pointer(&variablenode_ns_0_i_11494_Argument_1_0_struct.Description))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_1_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11494_Argument_1_0))[:], nil, nil)
	}
	var variablenode_ns_0_i_11494_Argument_1_0_encOffset uint = uint((uint32((uintptr_t((uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&posvariablenode_ns_0_i_11494_Argument_1_0))))) - uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&(*variablenode_ns_0_i_11494_Argument_1_0[0].content.encoded()).body.data)))))))))))
	(*variablenode_ns_0_i_11494_Argument_1_0[0].content.encoded()).body.length = variablenode_ns_0_i_11494_Argument_1_0_encOffset
	var variablenode_ns_0_i_11494_Argument_1_0_newBody []UA_Byte = make([]UA_Byte, uint(variablenode_ns_0_i_11494_Argument_1_0_encOffset)/1)
	memcpy(variablenode_ns_0_i_11494_Argument_1_0_newBody, (*variablenode_ns_0_i_11494_Argument_1_0[0].content.encoded()).body.data, uint32((uint(variablenode_ns_0_i_11494_Argument_1_0_encOffset))))
	var variablenode_ns_0_i_11494_Argument_1_0_oldBody []UA_Byte = (*variablenode_ns_0_i_11494_Argument_1_0[0].content.encoded()).body.data
	(*variablenode_ns_0_i_11494_Argument_1_0[0].content.encoded()).body.data = variablenode_ns_0_i_11494_Argument_1_0_newBody
	_ = variablenode_ns_0_i_11494_Argument_1_0_oldBody
	var variablenode_ns_0_i_11494_variant_DataContents []UA_ExtensionObject = make([]UA_ExtensionObject, 2)
	variablenode_ns_0_i_11494_variant_DataContents[0] = variablenode_ns_0_i_11494_Argument_0_0[0]
	variablenode_ns_0_i_11494_variant_DataContents[1] = variablenode_ns_0_i_11494_Argument_1_0[0]
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11494_variant_DataContents, uint(UA_Int32(2)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("OutputArguments\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11494), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("OutputArguments\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Array_delete(attr.arrayDimensions, 1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	_ = variablenode_ns_0_i_11494_Argument_0_0_struct.ArrayDimensions
	UA_ExtensionObject_delete(variablenode_ns_0_i_11494_Argument_0_0)
	_ = variablenode_ns_0_i_11494_Argument_1_0_struct.ArrayDimensions
	UA_ExtensionObject_delete(variablenode_ns_0_i_11494_Argument_1_0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11494), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11492), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_107_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24636
func function_ua_namespace0_107_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11494))
}
// function_ua_namespace0_108_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24645
// InputArguments - ns=0;i=11493
func function_ua_namespace0_108_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((1))))))
	attr.arrayDimensionsSize = 1
	attr.arrayDimensions = UA_Array_new(1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:]).([]UA_UInt32)
	attr.arrayDimensions[0] = 0
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 296)
	type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_24658_1_ struct {
		Name                UA_String
		DataType            UA_NodeId
		ValueRank           UA_Int32
		ArrayDimensionsSize UA_Int32
		ArrayDimensions     []UA_UInt32
		Description         UA_LocalizedText
	}
	var variablenode_ns_0_i_11493_Argument_0_0_struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_24658_1_
	variablenode_ns_0_i_11493_Argument_0_0_struct.Name = UA_STRING([]byte("SubscriptionId\x00"))
	variablenode_ns_0_i_11493_Argument_0_0_struct.DataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	variablenode_ns_0_i_11493_Argument_0_0_struct.ValueRank = UA_Int32(-1)
	variablenode_ns_0_i_11493_Argument_0_0_struct.ArrayDimensionsSize = UA_Int32((int32_t((__int32_t((1))))))
	variablenode_ns_0_i_11493_Argument_0_0_struct.ArrayDimensions = make([]UA_UInt32, 4*1/4)
	variablenode_ns_0_i_11493_Argument_0_0_struct.ArrayDimensions[0] = UA_UInt32(0)
	variablenode_ns_0_i_11493_Argument_0_0_struct.Description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	var variablenode_ns_0_i_11493_Argument_0_0 []UA_ExtensionObject = UA_ExtensionObject_new()
	variablenode_ns_0_i_11493_Argument_0_0[0].encoding = UA_EXTENSIONOBJECT_ENCODED_BYTESTRING
	(*variablenode_ns_0_i_11493_Argument_0_0[0].content.encoded()).typeId = UA_NODEID_NUMERIC(0, 298)
	UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&(*variablenode_ns_0_i_11493_Argument_0_0[0].content.encoded()).body))[:], 65000)
	var posvariablenode_ns_0_i_11493_Argument_0_0 []UA_Byte = (*variablenode_ns_0_i_11493_Argument_0_0[0].content.encoded()).body.data
	var endvariablenode_ns_0_i_11493_Argument_0_0 []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&(*variablenode_ns_0_i_11493_Argument_0_0[0].content.encoded()).body.data[65000]))[:]
	{
		retVal |= UA_encodeBinary((*[100000000]UA_String)(unsafe.Pointer(&variablenode_ns_0_i_11493_Argument_0_0_struct.Name))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11493_Argument_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11493_Argument_0_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_NodeId)(unsafe.Pointer(&variablenode_ns_0_i_11493_Argument_0_0_struct.DataType))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11493_Argument_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11493_Argument_0_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_Int32)(unsafe.Pointer(&variablenode_ns_0_i_11493_Argument_0_0_struct.ValueRank))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11493_Argument_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11493_Argument_0_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_UInt32)(unsafe.Pointer(&variablenode_ns_0_i_11493_Argument_0_0_struct.ArrayDimensions[0]))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11493_Argument_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11493_Argument_0_0))[:], nil, nil)
		retVal |= UA_encodeBinary((*[100000000]UA_LocalizedText)(unsafe.Pointer(&variablenode_ns_0_i_11493_Argument_0_0_struct.Description))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&posvariablenode_ns_0_i_11493_Argument_0_0))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&endvariablenode_ns_0_i_11493_Argument_0_0))[:], nil, nil)
	}
	var variablenode_ns_0_i_11493_Argument_0_0_encOffset uint = uint((uint32((uintptr_t((uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&posvariablenode_ns_0_i_11493_Argument_0_0))))) - uint64(uintptr(unsafe.Pointer(*(**int)(unsafe.Pointer(&(*variablenode_ns_0_i_11493_Argument_0_0[0].content.encoded()).body.data)))))))))))
	(*variablenode_ns_0_i_11493_Argument_0_0[0].content.encoded()).body.length = variablenode_ns_0_i_11493_Argument_0_0_encOffset
	var variablenode_ns_0_i_11493_Argument_0_0_newBody []UA_Byte = make([]UA_Byte, uint(variablenode_ns_0_i_11493_Argument_0_0_encOffset)/1)
	memcpy(variablenode_ns_0_i_11493_Argument_0_0_newBody, (*variablenode_ns_0_i_11493_Argument_0_0[0].content.encoded()).body.data, uint32((uint(variablenode_ns_0_i_11493_Argument_0_0_encOffset))))
	var variablenode_ns_0_i_11493_Argument_0_0_oldBody []UA_Byte = (*variablenode_ns_0_i_11493_Argument_0_0[0].content.encoded()).body.data
	(*variablenode_ns_0_i_11493_Argument_0_0[0].content.encoded()).body.data = variablenode_ns_0_i_11493_Argument_0_0_newBody
	_ = variablenode_ns_0_i_11493_Argument_0_0_oldBody
	var variablenode_ns_0_i_11493_variant_DataContents []UA_ExtensionObject = make([]UA_ExtensionObject, 1)
	variablenode_ns_0_i_11493_variant_DataContents[0] = variablenode_ns_0_i_11493_Argument_0_0[0]
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_11493_variant_DataContents, uint(UA_Int32(1)), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[21]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("InputArguments\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11493), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("InputArguments\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	UA_Array_delete(attr.arrayDimensions, 1, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	_ = variablenode_ns_0_i_11493_Argument_0_0_struct.ArrayDimensions
	UA_ExtensionObject_delete(variablenode_ns_0_i_11493_Argument_0_0)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11493), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 11492), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_108_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24716
func function_ua_namespace0_108_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 11493))
}
// function_ua_namespace0_109_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24725
// Default XML - ns=0;i=3063
func function_ua_namespace0_109_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Default XML\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The default XML encoding for a data type.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3063), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Default XML\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 58), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_109_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24743
func function_ua_namespace0_109_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3063))
}
// function_ua_namespace0_110_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24752
// Default Binary - ns=0;i=3062
func function_ua_namespace0_110_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Default Binary\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The default binary encoding for a data type.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3062), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("Default Binary\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 58), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_110_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24770
func function_ua_namespace0_110_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3062))
}
// function_ua_namespace0_111_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24779
// ServerDiagnosticsType - ns=0;i=2020
func function_ua_namespace0_111_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectTypeAttributes = UA_ObjectTypeAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerDiagnosticsType\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("The diagnostics information for a server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECTTYPE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2020), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerDiagnosticsType\x00")), UA_NODEID_NULL, (*[100000000]UA_ObjectTypeAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[69]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2020), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 45), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 58), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_111_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24798
func function_ua_namespace0_111_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2020))
}
// function_ua_namespace0_112_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24807
// ServerDiagnostics - ns=0;i=2274
func function_ua_namespace0_112_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_ObjectAttributes = UA_ObjectAttributes_default
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerDiagnostics\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("Reports diagnostics about the server.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_OBJECT, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2274), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerDiagnostics\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2020), (*[100000000]UA_ObjectAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[131]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2274), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2253), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_112_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24826
func function_ua_namespace0_112_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2274))
}
// function_ua_namespace0_113_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24835
// ServerDiagnosticsSummary - ns=0;i=2275
func function_ua_namespace0_113_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 859)
	var variablenode_ns_0_i_2275_variant_DataContents []UA_ServerDiagnosticsSummaryDataType = make([]UA_ServerDiagnosticsSummaryDataType, 1)
	UA_init(variablenode_ns_0_i_2275_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[124]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2275_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[124]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerDiagnosticsSummary\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("A summary of server level diagnostics.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2275), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerDiagnosticsSummary\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2150), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2275), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2274), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_113_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24862
func function_ua_namespace0_113_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2275))
}
// function_ua_namespace0_114_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24871
// SecurityRejectedRequestsCount - ns=0;i=2287
func function_ua_namespace0_114_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2287_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2287_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2287_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("SecurityRejectedRequestsCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2287), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("SecurityRejectedRequestsCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2287), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_114_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24898
func function_ua_namespace0_114_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2287))
}
// function_ua_namespace0_115_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24907
// CumulatedSubscriptionCount - ns=0;i=2286
func function_ua_namespace0_115_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2286_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2286_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2286_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("CumulatedSubscriptionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2286), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("CumulatedSubscriptionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2286), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_115_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24934
func function_ua_namespace0_115_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2286))
}
// function_ua_namespace0_116_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24943
// CurrentSubscriptionCount - ns=0;i=2285
func function_ua_namespace0_116_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2285_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2285_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2285_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("CurrentSubscriptionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2285), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("CurrentSubscriptionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2285), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_116_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24970
func function_ua_namespace0_116_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2285))
}
// function_ua_namespace0_117_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:24979
// PublishingIntervalCount - ns=0;i=2284
func function_ua_namespace0_117_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2284_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2284_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2284_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("PublishingIntervalCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2284), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("PublishingIntervalCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2284), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_117_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25006
func function_ua_namespace0_117_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2284))
}
// function_ua_namespace0_118_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25015
// SessionAbortCount - ns=0;i=2282
func function_ua_namespace0_118_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2282_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2282_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2282_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("SessionAbortCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2282), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("SessionAbortCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2282), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_118_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25042
func function_ua_namespace0_118_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2282))
}
// function_ua_namespace0_119_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25051
// SessionTimeoutCount - ns=0;i=2281
func function_ua_namespace0_119_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2281_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2281_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2281_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("SessionTimeoutCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2281), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("SessionTimeoutCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2281), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_119_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25078
func function_ua_namespace0_119_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2281))
}
// function_ua_namespace0_120_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25087
// RejectedSessionCount - ns=0;i=3705
func function_ua_namespace0_120_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_3705_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_3705_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_3705_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("RejectedSessionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3705), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("RejectedSessionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3705), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_120_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25114
func function_ua_namespace0_120_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 3705))
}
// function_ua_namespace0_121_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25123
// RejectedRequestsCount - ns=0;i=2288
func function_ua_namespace0_121_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2288_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2288_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2288_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("RejectedRequestsCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2288), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("RejectedRequestsCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2288), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_121_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25150
func function_ua_namespace0_121_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2288))
}
// function_ua_namespace0_122_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25159
// ServerViewCount - ns=0;i=2276
func function_ua_namespace0_122_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2276_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2276_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2276_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("ServerViewCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2276), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("ServerViewCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2276), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_122_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25186
func function_ua_namespace0_122_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2276))
}
// function_ua_namespace0_123_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25195
// CurrentSessionCount - ns=0;i=2277
func function_ua_namespace0_123_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2277_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2277_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2277_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("CurrentSessionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2277), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("CurrentSessionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2277), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_123_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25222
func function_ua_namespace0_123_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2277))
}
// function_ua_namespace0_124_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25231
// CumulatedSessionCount - ns=0;i=2278
func function_ua_namespace0_124_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2278_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2278_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2278_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("CumulatedSessionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2278), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("CumulatedSessionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2278), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_124_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25258
func function_ua_namespace0_124_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2278))
}
// function_ua_namespace0_125_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25267
// SecurityRejectedSessionCount - ns=0;i=2279
func function_ua_namespace0_125_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(1)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 7)
	var variablenode_ns_0_i_2279_variant_DataContents []UA_UInt32 = make([]UA_UInt32, 1)
	UA_init(variablenode_ns_0_i_2279_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2279_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("SecurityRejectedSessionCount\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2279), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("SecurityRejectedSessionCount\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 63), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2279), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 47), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2275), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_125_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25294
func function_ua_namespace0_125_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2279))
}
// function_ua_namespace0_126_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25303
// EnabledFlag - ns=0;i=2294
func function_ua_namespace0_126_begin(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	var retVal UA_StatusCode
	var attr UA_VariableAttributes = UA_VariableAttributes_default
	attr.minimumSamplingInterval = UA_Double((0))
	attr.userAccessLevel = UA_Byte(1)
	attr.accessLevel = UA_Byte(3)
	attr.valueRank = UA_Int32((int32_t((__int32_t((-1))))))
	attr.dataType = UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 1)
	var variablenode_ns_0_i_2294_variant_DataContents []UA_Boolean = make([]UA_Boolean, 1)
	UA_init(variablenode_ns_0_i_2294_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], variablenode_ns_0_i_2294_variant_DataContents, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("EnabledFlag\x00"))
	attr.description = UA_LOCALIZEDTEXT([]byte("\x00"), []byte("If TRUE the diagnostics collection is enabled.\x00"))
	attr.writeMask = 0
	attr.userWriteMask = 0
	retVal |= UA_Server_addNode_begin(server, UA_NODECLASS_VARIABLE, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2294), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 0), UA_QUALIFIEDNAME(UA_UInt16(ns[0]), []byte("EnabledFlag\x00")), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 68), (*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:], nil, nil)
	retVal |= UA_Server_addReference(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2294), UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 46), UA_EXPANDEDNODEID_NUMERIC(UA_UInt16(ns[0]), 2274), 0)
	return UA_StatusCode(retVal)
}
// function_ua_namespace0_126_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25330
func function_ua_namespace0_126_finish(server []UA_Server, ns []UA_UInt16) UA_StatusCode {
	return UA_Server_addNode_finish(server, UA_NODEID_NUMERIC(UA_UInt16(ns[0]), 2294))
}
// ua_namespace0 - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25337
func ua_namespace0(server []UA_Server) UA_StatusCode {
	var retVal UA_StatusCode
	var ns []UA_UInt16 = make([]UA_UInt16, 1)
	// Use namespace ids generated by the server
	//opcfoundation.org/UA/");
	ns[0] = UA_Server_addNamespace(server, []byte("http://opcfoundation.org/UA/\x00"))
	retVal |= function_ua_namespace0_0_begin(server, ns)
	retVal |= function_ua_namespace0_1_begin(server, ns)
	retVal |= function_ua_namespace0_2_begin(server, ns)
	retVal |= function_ua_namespace0_3_begin(server, ns)
	retVal |= function_ua_namespace0_4_begin(server, ns)
	retVal |= function_ua_namespace0_5_begin(server, ns)
	retVal |= function_ua_namespace0_6_begin(server, ns)
	retVal |= function_ua_namespace0_7_begin(server, ns)
	retVal |= function_ua_namespace0_8_begin(server, ns)
	retVal |= function_ua_namespace0_9_begin(server, ns)
	retVal |= function_ua_namespace0_10_begin(server, ns)
	retVal |= function_ua_namespace0_11_begin(server, ns)
	retVal |= function_ua_namespace0_12_begin(server, ns)
	retVal |= function_ua_namespace0_13_begin(server, ns)
	retVal |= function_ua_namespace0_14_begin(server, ns)
	retVal |= function_ua_namespace0_15_begin(server, ns)
	retVal |= function_ua_namespace0_16_begin(server, ns)
	retVal |= function_ua_namespace0_17_begin(server, ns)
	retVal |= function_ua_namespace0_18_begin(server, ns)
	retVal |= function_ua_namespace0_19_begin(server, ns)
	retVal |= function_ua_namespace0_20_begin(server, ns)
	retVal |= function_ua_namespace0_21_begin(server, ns)
	retVal |= function_ua_namespace0_22_begin(server, ns)
	retVal |= function_ua_namespace0_23_begin(server, ns)
	retVal |= function_ua_namespace0_24_begin(server, ns)
	retVal |= function_ua_namespace0_25_begin(server, ns)
	retVal |= function_ua_namespace0_26_begin(server, ns)
	retVal |= function_ua_namespace0_27_begin(server, ns)
	retVal |= function_ua_namespace0_28_begin(server, ns)
	retVal |= function_ua_namespace0_29_begin(server, ns)
	retVal |= function_ua_namespace0_30_begin(server, ns)
	retVal |= function_ua_namespace0_31_begin(server, ns)
	retVal |= function_ua_namespace0_32_begin(server, ns)
	retVal |= function_ua_namespace0_33_begin(server, ns)
	retVal |= function_ua_namespace0_34_begin(server, ns)
	retVal |= function_ua_namespace0_35_begin(server, ns)
	retVal |= function_ua_namespace0_36_begin(server, ns)
	retVal |= function_ua_namespace0_37_begin(server, ns)
	retVal |= function_ua_namespace0_38_begin(server, ns)
	retVal |= function_ua_namespace0_39_begin(server, ns)
	retVal |= function_ua_namespace0_40_begin(server, ns)
	retVal |= function_ua_namespace0_41_begin(server, ns)
	retVal |= function_ua_namespace0_42_begin(server, ns)
	retVal |= function_ua_namespace0_43_begin(server, ns)
	retVal |= function_ua_namespace0_44_begin(server, ns)
	retVal |= function_ua_namespace0_45_begin(server, ns)
	retVal |= function_ua_namespace0_46_begin(server, ns)
	retVal |= function_ua_namespace0_47_begin(server, ns)
	retVal |= function_ua_namespace0_48_begin(server, ns)
	retVal |= function_ua_namespace0_49_begin(server, ns)
	retVal |= function_ua_namespace0_50_begin(server, ns)
	retVal |= function_ua_namespace0_51_begin(server, ns)
	retVal |= function_ua_namespace0_52_begin(server, ns)
	retVal |= function_ua_namespace0_53_begin(server, ns)
	retVal |= function_ua_namespace0_54_begin(server, ns)
	retVal |= function_ua_namespace0_55_begin(server, ns)
	retVal |= function_ua_namespace0_56_begin(server, ns)
	retVal |= function_ua_namespace0_57_begin(server, ns)
	retVal |= function_ua_namespace0_58_begin(server, ns)
	retVal |= function_ua_namespace0_59_begin(server, ns)
	retVal |= function_ua_namespace0_60_begin(server, ns)
	retVal |= function_ua_namespace0_61_begin(server, ns)
	retVal |= function_ua_namespace0_62_begin(server, ns)
	retVal |= function_ua_namespace0_63_begin(server, ns)
	retVal |= function_ua_namespace0_64_begin(server, ns)
	retVal |= function_ua_namespace0_65_begin(server, ns)
	retVal |= function_ua_namespace0_66_begin(server, ns)
	retVal |= function_ua_namespace0_67_begin(server, ns)
	retVal |= function_ua_namespace0_68_begin(server, ns)
	retVal |= function_ua_namespace0_69_begin(server, ns)
	retVal |= function_ua_namespace0_70_begin(server, ns)
	retVal |= function_ua_namespace0_71_begin(server, ns)
	retVal |= function_ua_namespace0_72_begin(server, ns)
	retVal |= function_ua_namespace0_73_begin(server, ns)
	retVal |= function_ua_namespace0_74_begin(server, ns)
	retVal |= function_ua_namespace0_75_begin(server, ns)
	retVal |= function_ua_namespace0_76_begin(server, ns)
	retVal |= function_ua_namespace0_77_begin(server, ns)
	retVal |= function_ua_namespace0_78_begin(server, ns)
	retVal |= function_ua_namespace0_79_begin(server, ns)
	retVal |= function_ua_namespace0_80_begin(server, ns)
	retVal |= function_ua_namespace0_81_begin(server, ns)
	retVal |= function_ua_namespace0_82_begin(server, ns)
	retVal |= function_ua_namespace0_83_begin(server, ns)
	retVal |= function_ua_namespace0_84_begin(server, ns)
	retVal |= function_ua_namespace0_85_begin(server, ns)
	retVal |= function_ua_namespace0_86_begin(server, ns)
	retVal |= function_ua_namespace0_87_begin(server, ns)
	retVal |= function_ua_namespace0_88_begin(server, ns)
	retVal |= function_ua_namespace0_89_begin(server, ns)
	retVal |= function_ua_namespace0_90_begin(server, ns)
	retVal |= function_ua_namespace0_91_begin(server, ns)
	retVal |= function_ua_namespace0_92_begin(server, ns)
	retVal |= function_ua_namespace0_93_begin(server, ns)
	retVal |= function_ua_namespace0_94_begin(server, ns)
	retVal |= function_ua_namespace0_95_begin(server, ns)
	retVal |= function_ua_namespace0_96_begin(server, ns)
	retVal |= function_ua_namespace0_97_begin(server, ns)
	retVal |= function_ua_namespace0_98_begin(server, ns)
	retVal |= function_ua_namespace0_99_begin(server, ns)
	retVal |= function_ua_namespace0_100_begin(server, ns)
	retVal |= function_ua_namespace0_101_begin(server, ns)
	retVal |= function_ua_namespace0_102_begin(server, ns)
	retVal |= function_ua_namespace0_103_begin(server, ns)
	retVal |= function_ua_namespace0_104_begin(server, ns)
	retVal |= function_ua_namespace0_105_begin(server, ns)
	retVal |= function_ua_namespace0_106_begin(server, ns)
	retVal |= function_ua_namespace0_107_begin(server, ns)
	retVal |= function_ua_namespace0_108_begin(server, ns)
	retVal |= function_ua_namespace0_109_begin(server, ns)
	retVal |= function_ua_namespace0_110_begin(server, ns)
	retVal |= function_ua_namespace0_111_begin(server, ns)
	retVal |= function_ua_namespace0_112_begin(server, ns)
	retVal |= function_ua_namespace0_113_begin(server, ns)
	retVal |= function_ua_namespace0_114_begin(server, ns)
	retVal |= function_ua_namespace0_115_begin(server, ns)
	retVal |= function_ua_namespace0_116_begin(server, ns)
	retVal |= function_ua_namespace0_117_begin(server, ns)
	retVal |= function_ua_namespace0_118_begin(server, ns)
	retVal |= function_ua_namespace0_119_begin(server, ns)
	retVal |= function_ua_namespace0_120_begin(server, ns)
	retVal |= function_ua_namespace0_121_begin(server, ns)
	retVal |= function_ua_namespace0_122_begin(server, ns)
	retVal |= function_ua_namespace0_123_begin(server, ns)
	retVal |= function_ua_namespace0_124_begin(server, ns)
	retVal |= function_ua_namespace0_125_begin(server, ns)
	retVal |= function_ua_namespace0_126_begin(server, ns)
	retVal |= function_ua_namespace0_126_finish(server, ns)
	retVal |= function_ua_namespace0_125_finish(server, ns)
	retVal |= function_ua_namespace0_124_finish(server, ns)
	retVal |= function_ua_namespace0_123_finish(server, ns)
	retVal |= function_ua_namespace0_122_finish(server, ns)
	retVal |= function_ua_namespace0_121_finish(server, ns)
	retVal |= function_ua_namespace0_120_finish(server, ns)
	retVal |= function_ua_namespace0_119_finish(server, ns)
	retVal |= function_ua_namespace0_118_finish(server, ns)
	retVal |= function_ua_namespace0_117_finish(server, ns)
	retVal |= function_ua_namespace0_116_finish(server, ns)
	retVal |= function_ua_namespace0_115_finish(server, ns)
	retVal |= function_ua_namespace0_114_finish(server, ns)
	retVal |= function_ua_namespace0_113_finish(server, ns)
	retVal |= function_ua_namespace0_112_finish(server, ns)
	retVal |= function_ua_namespace0_111_finish(server, ns)
	retVal |= function_ua_namespace0_110_finish(server, ns)
	retVal |= function_ua_namespace0_109_finish(server, ns)
	retVal |= function_ua_namespace0_108_finish(server, ns)
	retVal |= function_ua_namespace0_107_finish(server, ns)
	retVal |= function_ua_namespace0_106_finish(server, ns)
	retVal |= function_ua_namespace0_105_finish(server, ns)
	retVal |= function_ua_namespace0_104_finish(server, ns)
	retVal |= function_ua_namespace0_103_finish(server, ns)
	retVal |= function_ua_namespace0_102_finish(server, ns)
	retVal |= function_ua_namespace0_101_finish(server, ns)
	retVal |= function_ua_namespace0_100_finish(server, ns)
	retVal |= function_ua_namespace0_99_finish(server, ns)
	retVal |= function_ua_namespace0_98_finish(server, ns)
	retVal |= function_ua_namespace0_97_finish(server, ns)
	retVal |= function_ua_namespace0_96_finish(server, ns)
	retVal |= function_ua_namespace0_95_finish(server, ns)
	retVal |= function_ua_namespace0_94_finish(server, ns)
	retVal |= function_ua_namespace0_93_finish(server, ns)
	retVal |= function_ua_namespace0_92_finish(server, ns)
	retVal |= function_ua_namespace0_91_finish(server, ns)
	retVal |= function_ua_namespace0_90_finish(server, ns)
	retVal |= function_ua_namespace0_89_finish(server, ns)
	retVal |= function_ua_namespace0_88_finish(server, ns)
	retVal |= function_ua_namespace0_87_finish(server, ns)
	retVal |= function_ua_namespace0_86_finish(server, ns)
	retVal |= function_ua_namespace0_85_finish(server, ns)
	retVal |= function_ua_namespace0_84_finish(server, ns)
	retVal |= function_ua_namespace0_83_finish(server, ns)
	retVal |= function_ua_namespace0_82_finish(server, ns)
	retVal |= function_ua_namespace0_81_finish(server, ns)
	retVal |= function_ua_namespace0_80_finish(server, ns)
	retVal |= function_ua_namespace0_79_finish(server, ns)
	retVal |= function_ua_namespace0_78_finish(server, ns)
	retVal |= function_ua_namespace0_77_finish(server, ns)
	retVal |= function_ua_namespace0_76_finish(server, ns)
	retVal |= function_ua_namespace0_75_finish(server, ns)
	retVal |= function_ua_namespace0_74_finish(server, ns)
	retVal |= function_ua_namespace0_73_finish(server, ns)
	retVal |= function_ua_namespace0_72_finish(server, ns)
	retVal |= function_ua_namespace0_71_finish(server, ns)
	retVal |= function_ua_namespace0_70_finish(server, ns)
	retVal |= function_ua_namespace0_69_finish(server, ns)
	retVal |= function_ua_namespace0_68_finish(server, ns)
	retVal |= function_ua_namespace0_67_finish(server, ns)
	retVal |= function_ua_namespace0_66_finish(server, ns)
	retVal |= function_ua_namespace0_65_finish(server, ns)
	retVal |= function_ua_namespace0_64_finish(server, ns)
	retVal |= function_ua_namespace0_63_finish(server, ns)
	retVal |= function_ua_namespace0_62_finish(server, ns)
	retVal |= function_ua_namespace0_61_finish(server, ns)
	retVal |= function_ua_namespace0_60_finish(server, ns)
	retVal |= function_ua_namespace0_59_finish(server, ns)
	retVal |= function_ua_namespace0_58_finish(server, ns)
	retVal |= function_ua_namespace0_57_finish(server, ns)
	retVal |= function_ua_namespace0_56_finish(server, ns)
	retVal |= function_ua_namespace0_55_finish(server, ns)
	retVal |= function_ua_namespace0_54_finish(server, ns)
	retVal |= function_ua_namespace0_53_finish(server, ns)
	retVal |= function_ua_namespace0_52_finish(server, ns)
	retVal |= function_ua_namespace0_51_finish(server, ns)
	retVal |= function_ua_namespace0_50_finish(server, ns)
	retVal |= function_ua_namespace0_49_finish(server, ns)
	retVal |= function_ua_namespace0_48_finish(server, ns)
	retVal |= function_ua_namespace0_47_finish(server, ns)
	retVal |= function_ua_namespace0_46_finish(server, ns)
	retVal |= function_ua_namespace0_45_finish(server, ns)
	retVal |= function_ua_namespace0_44_finish(server, ns)
	retVal |= function_ua_namespace0_43_finish(server, ns)
	retVal |= function_ua_namespace0_42_finish(server, ns)
	retVal |= function_ua_namespace0_41_finish(server, ns)
	retVal |= function_ua_namespace0_40_finish(server, ns)
	retVal |= function_ua_namespace0_39_finish(server, ns)
	retVal |= function_ua_namespace0_38_finish(server, ns)
	retVal |= function_ua_namespace0_37_finish(server, ns)
	retVal |= function_ua_namespace0_36_finish(server, ns)
	retVal |= function_ua_namespace0_35_finish(server, ns)
	retVal |= function_ua_namespace0_34_finish(server, ns)
	retVal |= function_ua_namespace0_33_finish(server, ns)
	retVal |= function_ua_namespace0_32_finish(server, ns)
	retVal |= function_ua_namespace0_31_finish(server, ns)
	retVal |= function_ua_namespace0_30_finish(server, ns)
	retVal |= function_ua_namespace0_29_finish(server, ns)
	retVal |= function_ua_namespace0_28_finish(server, ns)
	retVal |= function_ua_namespace0_27_finish(server, ns)
	retVal |= function_ua_namespace0_26_finish(server, ns)
	retVal |= function_ua_namespace0_25_finish(server, ns)
	retVal |= function_ua_namespace0_24_finish(server, ns)
	retVal |= function_ua_namespace0_23_finish(server, ns)
	retVal |= function_ua_namespace0_22_finish(server, ns)
	retVal |= function_ua_namespace0_21_finish(server, ns)
	retVal |= function_ua_namespace0_20_finish(server, ns)
	retVal |= function_ua_namespace0_19_finish(server, ns)
	retVal |= function_ua_namespace0_18_finish(server, ns)
	retVal |= function_ua_namespace0_17_finish(server, ns)
	retVal |= function_ua_namespace0_16_finish(server, ns)
	retVal |= function_ua_namespace0_15_finish(server, ns)
	retVal |= function_ua_namespace0_14_finish(server, ns)
	retVal |= function_ua_namespace0_13_finish(server, ns)
	retVal |= function_ua_namespace0_12_finish(server, ns)
	retVal |= function_ua_namespace0_11_finish(server, ns)
	retVal |= function_ua_namespace0_10_finish(server, ns)
	retVal |= function_ua_namespace0_9_finish(server, ns)
	retVal |= function_ua_namespace0_8_finish(server, ns)
	retVal |= function_ua_namespace0_7_finish(server, ns)
	retVal |= function_ua_namespace0_6_finish(server, ns)
	retVal |= function_ua_namespace0_5_finish(server, ns)
	retVal |= function_ua_namespace0_4_finish(server, ns)
	retVal |= function_ua_namespace0_3_finish(server, ns)
	retVal |= function_ua_namespace0_2_finish(server, ns)
	retVal |= function_ua_namespace0_1_finish(server, ns)
	retVal |= function_ua_namespace0_0_finish(server, ns)
	return UA_StatusCode(retVal)
}
// sendServiceFault - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25635
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_server_binary.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014-2016 (c) Sten Grüner
// *    Copyright 2014-2015, 2017 (c) Florian Palm
// *    Copyright 2015-2016 (c) Chris Iatrou
// *    Copyright 2015-2016 (c) Oleksiy Vasylyev
// *    Copyright 2016 (c) Joakim L. Gilje
// *    Copyright 2016-2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2016 (c) TorbenD
// *    Copyright 2017 (c) frax2222
// *    Copyright 2017 (c) Mark Giraud, Fraunhofer IOSB
//
//
// Helper Functions
//
// This is not an ERR message, the connection is not closed afterwards
func sendServiceFault(channel []UA_SecureChannel, msg []UA_ByteString, offset uint, responseType []UA_DataType, requestId UA_UInt32, error UA_StatusCode) UA_StatusCode {
	var requestHeader UA_RequestHeader
	var retval UA_StatusCode = UA_RequestHeader_decodeBinary(msg, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_RequestHeader)(unsafe.Pointer(&requestHeader))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	var response []UA_Byte
	UA_init(response, responseType)
	var responseHeader []UA_ResponseHeader = response
	responseHeader[0].requestHandle = UA_UInt32(requestHeader.requestHandle)
	responseHeader[0].timestamp = UA_DateTime_now()
	responseHeader[0].serviceResult = error
	// Send error message. Message type is MSG and not ERR, since we are on a securechannel!
	retval = UA_SecureChannel_sendSymmetricMessage(channel, UA_UInt32(requestId), UA_MESSAGETYPE_MSG, response, responseType)
	UA_RequestHeader_deleteMembers((*[100000000]UA_RequestHeader)(unsafe.Pointer(&requestHeader))[:])
	UA_LOG_DEBUG(UA_Logger(channel[0].securityPolicy[0].logger), UA_LOGCATEGORY_SERVER, []byte("Sent ServiceFault with error code %s\x00"), UA_StatusCode_name(UA_StatusCode(error)))
	return UA_StatusCode(retval)
}

const (
	UA_SERVICETYPE_NORMAL int = 0
	UA_SERVICETYPE_INSITU     = 1
	UA_SERVICETYPE_CUSTOM     = 2
)

type UA_ServiceType int
// getServicePointers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25666
func getServicePointers(requestTypeId UA_UInt32, requestType [][]UA_DataType, responseType [][]UA_DataType, service UA_Service, requiresSession []UA_Boolean, serviceType []int) {
	switch UA_UInt32(requestTypeId) {
	case 428:
		service[0] = UA_Service(Service_GetEndpoints)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[137]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[193]))[:]
		requiresSession[0] = 0
	case 422:
		service[0] = UA_Service(Service_FindServers)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[145]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[194]))[:]
		requiresSession[0] = 0
	case 437:
		service[0] = UA_Service(Service_RegisterServer)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[182]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[149]))[:]
		requiresSession[0] = 0
	case 12211:
		service[0] = UA_Service(Service_RegisterServer2)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[190]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[165]))[:]
		requiresSession[0] = 0
	case 461:
		service[0] = UA_Service(Service_CreateSession)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[191]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[197]))[:]
		requiresSession[0] = 0
		serviceType[0] = UA_SERVICETYPE_CUSTOM
	case 467:
		service[0] = UA_Service(Service_ActivateSession)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[103]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[109]))[:]
		serviceType[0] = UA_SERVICETYPE_CUSTOM
	case 473:
		service[0] = UA_Service(Service_CloseSession)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[121]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[176]))[:]
	case 631:
		service[0] = UA_Service(Service_Read)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[163]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[161]))[:]
		serviceType[0] = UA_SERVICETYPE_INSITU
	case 673:
		service[0] = UA_Service(Service_Write)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[130]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[113]))[:]
	case 527:
		service[0] = UA_Service(Service_Browse)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[188]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[196]))[:]
	case 533:
		service[0] = UA_Service(Service_BrowseNext)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[114]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[195]))[:]
	case 560:
		service[0] = UA_Service(Service_RegisterNodes)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[91]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[120]))[:]
	case 566:
		service[0] = UA_Service(Service_UnregisterNodes)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[48]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[129]))[:]
	case 554:
		service[0] = UA_Service(Service_TranslateBrowsePathsToNodeIds)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[175]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[172]))[:]
	case 787:
		service[0] = UA_Service(Service_CreateSubscription)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[115]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[152]))[:]
	case 826:
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[138]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:]
	case 832:
		service[0] = UA_Service(Service_Republish)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[136]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[158]))[:]
	case 793:
		service[0] = UA_Service(Service_ModifySubscription)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[123]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[118]))[:]
	case 799:
		service[0] = UA_Service(Service_SetPublishingMode)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[54]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[147]))[:]
	case 847:
		service[0] = UA_Service(Service_DeleteSubscriptions)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[80]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[139]))[:]
	case 751:
		service[0] = UA_Service(Service_CreateMonitoredItems)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[184]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[155]))[:]
	case 781:
		service[0] = UA_Service(Service_DeleteMonitoredItems)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[85]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[88]))[:]
	case 763:
		service[0] = UA_Service(Service_ModifyMonitoredItems)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[143]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[122]))[:]
	case 769:
		service[0] = UA_Service(Service_SetMonitoringMode)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[128]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[144]))[:]
	case 712:
		service[0] = UA_Service(Service_Call)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[57]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[156]))[:]
	case 488:
		service[0] = UA_Service(Service_AddNodes)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[187]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[140]))[:]
	case 494:
		service[0] = UA_Service(Service_AddReferences)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[162]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[170]))[:]
	case 500:
		service[0] = UA_Service(Service_DeleteNodes)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[93]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[157]))[:]
	case 506:
		service[0] = UA_Service(Service_DeleteReferences)
		requestType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[160]))[:]
		responseType[0] = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[154]))[:]
	default:
		{
			break
		}
	}
}
// processHEL - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25853
//
// Process Message Types
//
// HEL -> Open up the connection
func processHEL(server []UA_Server, connection []UA_Connection, msg []UA_ByteString, offset []uint) UA_StatusCode {
	var helloMessage UA_TcpHelloMessage
	var retval UA_StatusCode = UA_TcpHelloMessage_decodeBinary(msg, offset, (*[100000000]UA_TcpHelloMessage)(unsafe.Pointer(&helloMessage))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	// Parameterize the connection
	// zero -> unlimited
	connection[0].remoteConf.maxChunkCount = UA_UInt32(helloMessage.maxChunkCount)
	// zero -> unlimited
	connection[0].remoteConf.maxMessageSize = UA_UInt32(helloMessage.maxMessageSize)
	connection[0].remoteConf.protocolVersion = UA_UInt32(helloMessage.protocolVersion)
	connection[0].remoteConf.recvBufferSize = UA_UInt32(helloMessage.receiveBufferSize)
	if UA_UInt32(connection[0].localConf.sendBufferSize) > UA_UInt32(helloMessage.receiveBufferSize) {
		connection[0].localConf.sendBufferSize = UA_UInt32(helloMessage.receiveBufferSize)
	}
	connection[0].remoteConf.sendBufferSize = UA_UInt32(helloMessage.sendBufferSize)
	if UA_UInt32(connection[0].localConf.recvBufferSize) > UA_UInt32(helloMessage.sendBufferSize) {
		connection[0].localConf.recvBufferSize = UA_UInt32(helloMessage.sendBufferSize)
	}
	UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&helloMessage.endpointUrl))[:])
	if UA_UInt32(connection[0].remoteConf.recvBufferSize) == UA_UInt32((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | Remote end indicated a receive buffer size of 0. Not able to send any messages.\x00"), UA_Int32(connection[0].sockfd))
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	connection[0].state = UA_CONNECTION_ESTABLISHED
	var ackMessage UA_TcpAcknowledgeMessage
	// Build acknowledge response
	ackMessage.protocolVersion = UA_UInt32(connection[0].localConf.protocolVersion)
	ackMessage.receiveBufferSize = UA_UInt32(connection[0].localConf.recvBufferSize)
	ackMessage.sendBufferSize = UA_UInt32(connection[0].localConf.sendBufferSize)
	ackMessage.maxMessageSize = UA_UInt32(connection[0].localConf.maxMessageSize)
	ackMessage.maxChunkCount = UA_UInt32(connection[0].localConf.maxChunkCount)
	var ackHeader UA_TcpMessageHeader
	ackHeader.messageTypeAndChunkType = UA_UInt32((uint32_t((uint32((uint32(UA_MESSAGETYPE_ACK + UA_CHUNKTYPE_FINAL)))))))
	// ackHeader + ackMessage
	ackHeader.messageSize = UA_UInt32((uint32_t((uint32((uint32(8 + 20)))))))
	var ack_msg UA_ByteString
	// Get the send buffer from the network layer
	UA_ByteString_init((*[100000000]UA_ByteString)(unsafe.Pointer(&ack_msg))[:])
	retval = connection.getSendBuffer(connection, uint(UA_UInt32(connection[0].localConf.sendBufferSize)), (*[100000000]UA_ByteString)(unsafe.Pointer(&ack_msg))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	var bufPos []UA_Byte = ack_msg.data
	var bufEnd []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&ack_msg.data[uint(ack_msg.length)]))[:]
	// Encode and send the response
	retval = UA_TcpMessageHeader_encodeBinary((*[100000000]UA_TcpMessageHeader)(unsafe.Pointer(&ackHeader))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufPos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufEnd))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		connection.releaseSendBuffer(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&ack_msg))[:])
		return UA_StatusCode(retval)
	}
	retval = UA_TcpAcknowledgeMessage_encodeBinary((*[100000000]UA_TcpAcknowledgeMessage)(unsafe.Pointer(&ackMessage))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufPos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufEnd))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		connection.releaseSendBuffer(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&ack_msg))[:])
		return UA_StatusCode(retval)
	}
	ack_msg.length = uint((uint32((uint32((uint32_t((UA_UInt32(ackHeader.messageSize)))))))))
	return connection.send(connection, (*[100000000]UA_ByteString)(unsafe.Pointer(&ack_msg))[:])
}
// processOPN - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25922
// OPN -> Open up/renew the securechannel
func processOPN(server []UA_Server, channel []UA_SecureChannel, requestId UA_UInt32, msg []UA_ByteString) UA_StatusCode {
	var offset uint
	var requestType UA_NodeId
	var retval UA_StatusCode
	var openSecureChannelRequest UA_OpenSecureChannelRequest
	// Decode the request
	retval |= UA_NodeId_decodeBinary(msg, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&requestType))[:])
	retval |= UA_OpenSecureChannelRequest_decodeBinary(msg, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_OpenSecureChannelRequest)(unsafe.Pointer(&openSecureChannelRequest))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) || UA_UInt32((*requestType.identifier.numeric())) != UA_UInt32((uint32_t((uint32((uint32(uint16((uint16((uint16_t((UA_UInt16(UA_TYPES[164].binaryEncodingId)))))))))))))) {
		// Error occurred
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&requestType))[:])
		UA_OpenSecureChannelRequest_deleteMembers((*[100000000]UA_OpenSecureChannelRequest)(unsafe.Pointer(&openSecureChannelRequest))[:])
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Could not decode the OPN message. Closing the connection.%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		UA_SecureChannelManager_close((*[100000000]UA_SecureChannelManager)(unsafe.Pointer(&server[0].secureChannelManager))[:], UA_UInt32(channel[0].securityToken.channelId))
		return UA_StatusCode(retval)
	}
	UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&requestType))[:])
	var openScResponse UA_OpenSecureChannelResponse
	// Call the service
	UA_OpenSecureChannelResponse_init((*[100000000]UA_OpenSecureChannelResponse)(unsafe.Pointer(&openScResponse))[:])
	Service_OpenSecureChannel(server, channel, (*[100000000]UA_OpenSecureChannelRequest)(unsafe.Pointer(&openSecureChannelRequest))[:], (*[100000000]UA_OpenSecureChannelResponse)(unsafe.Pointer(&openScResponse))[:])
	UA_OpenSecureChannelRequest_deleteMembers((*[100000000]UA_OpenSecureChannelRequest)(unsafe.Pointer(&openSecureChannelRequest))[:])
	if UA_StatusCode(openScResponse.responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Could not open a SecureChannel. Closing the connection.%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		UA_SecureChannelManager_close((*[100000000]UA_SecureChannelManager)(unsafe.Pointer(&server[0].secureChannelManager))[:], UA_UInt32(channel[0].securityToken.channelId))
		return UA_StatusCode(openScResponse.responseHeader.serviceResult)
	}
	// Send the response
	retval = UA_SecureChannel_sendAsymmetricOPNMessage(channel, UA_UInt32(requestId), (*[100000000]UA_OpenSecureChannelResponse)(unsafe.Pointer(&openScResponse))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[104]))[:])
	UA_OpenSecureChannelResponse_deleteMembers((*[100000000]UA_OpenSecureChannelResponse)(unsafe.Pointer(&openScResponse))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Could not send the OPN answer with error code %s%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
		UA_SecureChannelManager_close((*[100000000]UA_SecureChannelManager)(unsafe.Pointer(&server[0].secureChannelManager))[:], UA_UInt32(channel[0].securityToken.channelId))
	}
	return UA_StatusCode(retval)
}
// processMSG - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:25972
func processMSG(server []UA_Server, channel []UA_SecureChannel, requestId UA_UInt32, msg []UA_ByteString) UA_StatusCode {
	var offset uint
	var requestTypeId UA_NodeId
	var retval UA_StatusCode = UA_NodeId_decodeBinary(msg, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&requestTypeId))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// At 0, the nodeid starts...
		// Decode the nodeid
		return UA_StatusCode(retval)
	}
	if int(uint16((uint16((uint16_t((UA_UInt16(requestTypeId.namespaceIndex)))))))) != 0 || uint32(int((requestTypeId.identifierType))) != uint32(int((UA_NODEIDTYPE_NUMERIC))) {
		// leads to badserviceunsupported
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&requestTypeId))[:])
	}
	var requestPos uint = offset
	var service UA_Service
	var requestType []UA_DataType
	var responseType []UA_DataType
	var sessionRequired UA_Boolean = 1
	var serviceType int = UA_SERVICETYPE_NORMAL
	// Store the start-position of the request
	// Get the service pointers
	getServicePointers(UA_UInt32((*requestTypeId.identifier.numeric())), (*[100000000][]UA_DataType)(unsafe.Pointer(&requestType))[:], (*[100000000][]UA_DataType)(unsafe.Pointer(&responseType))[:], (*[100000000]UA_Service)(unsafe.Pointer(&service))[:], (*[100000000]UA_Boolean)(unsafe.Pointer(&sessionRequired))[:], (*[100000000]int)(unsafe.Pointer(&serviceType))[:])
	if requestType == nil {
		if UA_UInt32((*requestTypeId.identifier.numeric())) == UA_UInt32((uint32_t((uint32((787)))))) {
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Client requested a subscription, but those are not enabled in the build%.0s\x00"), (func() int {
				if (channel)[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
				}
				return 0
			}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		} else {
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Unknown request with type identifier %i%.0s\x00"), (func() int {
				if (channel)[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
				}
				return 0
			}()), UA_UInt32((channel)[0].securityToken.channelId), UA_UInt32((*requestTypeId.identifier.numeric())), []byte("\x00"))
		}
		return sendServiceFault(channel, msg, uint(requestPos), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[179]))[:], UA_UInt32(requestId), UA_StatusCode((uint32_t((uint32((uint32(2148204544))))))))
	}
	var request []UA_Byte
	var requestHeader []UA_RequestHeader = request
	// Decode the request
	retval = UA_decodeBinary(msg, (*[100000000]uint)(unsafe.Pointer(&offset))[:], request, requestType, uint(server[0].config.customDataTypesSize), server[0].config.customDataTypes)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Could not decode the request%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		return sendServiceFault(channel, msg, uint(requestPos), responseType, UA_UInt32(requestId), UA_StatusCode(retval))
	}
	var responseBuf []UA_Byte
	var response interface{} = uint32((uintptr_t((*[100000000]UA_Byte)(unsafe.Pointer(&responseBuf[0]))[:])))
	// Prepare the respone
	// Get around aliasing rules
	UA_init(response, responseType)
	var session []UA_Session
	if requestType == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[191]))[:] {
		// must be initialized before goto send_response
		// CreateSession doesn't need a session
		Service_CreateSession(server, channel, request, response.([]UA_CreateSessionResponse))
		goto send_response
	}
	// Find the matching session
	session = UA_SecureChannel_getSession(channel, (*[100000000]UA_NodeId)(unsafe.Pointer(&requestHeader[0].authenticationToken))[:])
	if session == nil && int((int((noarch.NotUA_Boolean(UA_NodeId_isNull((*[100000000]UA_NodeId)(unsafe.Pointer(&requestHeader[0].authenticationToken))[:])))))) != 0 {
		session = UA_SessionManager_getSessionByToken((*[100000000]UA_SessionManager)(unsafe.Pointer(&server[0].sessionManager))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&requestHeader[0].authenticationToken))[:])
	}
	if requestType == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[103]))[:] {
		if session == nil {
			UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Trying to activate a session that is not known in the server%.0s\x00"), (func() int {
				if (channel)[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
				}
				return 0
			}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
			UA_deleteMembers(request, requestType)
			return sendServiceFault(channel, msg, uint(requestPos), responseType, UA_UInt32(requestId), UA_StatusCode((uint32_t((uint32((uint32(2149908480))))))))
		}
		Service_ActivateSession(server, channel, session, request, response.([]UA_ActivateSessionResponse))
		goto send_response
	}
	var anonymousSession UA_Session
	if session == nil {
		if int((int((UA_Boolean(sessionRequired))))) != 0 {
			// Set an anonymous, inactive session for services that need no session
			UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Service request %i without a valid session%.0s\x00"), (func() int {
				if (channel)[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
				}
				return 0
			}()), UA_UInt32((channel)[0].securityToken.channelId), int(uint16((uint16((uint16_t((UA_UInt16(requestType[0].binaryEncodingId)))))))), []byte("\x00"))
			UA_deleteMembers(request, requestType)
			return sendServiceFault(channel, msg, uint(requestPos), responseType, UA_UInt32(requestId), UA_StatusCode((uint32_t((uint32((uint32(2149908480))))))))
		}
		UA_Session_init((*[100000000]UA_Session)(unsafe.Pointer(&anonymousSession))[:])
		anonymousSession.sessionId = UA_NODEID_GUID(0, UA_GUID_NULL)
		anonymousSession.header.channel = channel
		session = (*[100000000]UA_Session)(unsafe.Pointer(&anonymousSession))[:]
	}
	if int((int((sessionRequired)))) != 0 && int((int((noarch.NotUA_Boolean(UA_Boolean(session[0].activated)))))) != 0 {
		// Trying to use a non-activated session?
		UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Calling service %i on a non-activated session%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), int(uint16((uint16((uint16_t((UA_UInt16(requestType[0].binaryEncodingId)))))))), []byte("\x00"))
		UA_SessionManager_removeSession((*[100000000]UA_SessionManager)(unsafe.Pointer(&server[0].sessionManager))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].header.authenticationToken))[:])
		UA_deleteMembers(request, requestType)
		return sendServiceFault(channel, msg, uint(requestPos), responseType, UA_UInt32(requestId), UA_StatusCode((uint32_t((uint32((uint32(2150039552))))))))
	}
	if session != (*[100000000]UA_Session)(unsafe.Pointer(&anonymousSession))[:] && session[0].header.channel != channel {
		// The session is bound to another channel
		UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Client tries to use a Session that is not bound to this SecureChannel%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		UA_deleteMembers(request, requestType)
		return sendServiceFault(channel, msg, uint(requestPos), responseType, UA_UInt32(requestId), UA_StatusCode((uint32_t((uint32((uint32(2150039552))))))))
	}
	// Update the session lifetime
	UA_Session_updateLifetime(session)
	if requestType == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[138]))[:] {
		// The publish request is not answered immediately
		Service_Publish(server, session, request, UA_UInt32(requestId))
		UA_deleteMembers(request, requestType)
		return 0
	}
send_response:
	;
	(response.([]UA_ResponseHeader))[0].requestHandle = UA_UInt32(requestHeader[0].requestHandle)
	// Prepare the ResponseHeader
	(response.([]UA_ResponseHeader))[0].timestamp = UA_DateTime_now()
	var typeId UA_NodeId = UA_NODEID_NUMERIC(0, UA_UInt32(UA_UInt16(responseType[0].binaryEncodingId)))
	var mc UA_MessageContext
	// Start the message
	retval = UA_MessageContext_begin((*[100000000]UA_MessageContext)(unsafe.Pointer(&mc))[:], channel, UA_UInt32(requestId), UA_MESSAGETYPE_MSG)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		goto cleanup
	}
	// Assert's required for clang-analyzer
	retval = UA_MessageContext_encode((*[100000000]UA_MessageContext)(unsafe.Pointer(&mc))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&typeId))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		goto cleanup
	}
	switch uint32(serviceType) {
	case uint32(UA_SERVICETYPE_CUSTOM):
		// Was processed before...
		retval = UA_MessageContext_encode((*[100000000]UA_MessageContext)(unsafe.Pointer(&mc))[:], response, responseType)
	case uint32(UA_SERVICETYPE_INSITU):
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26153 :Cannot transpile BinaryOperator with type 'UA_StatusCode' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Error in transpileCallExpr : unable to use CallExpr: &ast.ParenExpr{Addr:0x56359e7d4398, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c", Line:26153, LineEnd:0, Column:18, ColumnEnd:44, StringValue:""}, Type:"UA_InSituService", Type2:"UA_StatusCode (*)(UA_Server *, UA_Session *, UA_MessageContext *, const void *, UA_ResponseHeader *)", IsLvalue:false, IsBitfield:false, ChildNodes:[]ast.Node{(*ast.CStyleCastExpr)(0xc007030750)}}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26153 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'UA_StatusCode' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Error in transpileCallExpr : unable to use CallExpr: &ast.ParenExpr{Addr:0x56359e7d4398, Pos:ast.Position{File:"$GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c", Line:26153, LineEnd:0, Column:18, ColumnEnd:44, StringValue:""}, Type:"UA_InSituService", Type2:"UA_StatusCode (*)(UA_Server *, UA_Session *, UA_MessageContext *, const void *, UA_ResponseHeader *)", IsLvalue:false, IsBitfield:false, ChildNodes:[]ast.Node{(*ast.CStyleCastExpr)(0xc007030750)}}
	case uint32(UA_SERVICETYPE_NORMAL):
		fallthrough
	default:
		{
			service(server, session, request, response)
			retval = UA_MessageContext_encode((*[100000000]UA_MessageContext)(unsafe.Pointer(&mc))[:], response, responseType)
			break
		}
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Finish sending the message
		UA_MessageContext_abort((*[100000000]UA_MessageContext)(unsafe.Pointer(&mc))[:])
		goto cleanup
	}
	retval = UA_MessageContext_finish((*[100000000]UA_MessageContext)(unsafe.Pointer(&mc))[:])
cleanup:
	;
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Could not send the message over the SecureChannel with StatusCode %s%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
	}
	// Clean up
	UA_deleteMembers(request, requestType)
	UA_deleteMembers(response, responseType)
	return UA_StatusCode(retval)
}
// processSecureChannelMessage - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26183
// Takes decoded messages starting at the nodeid of the content type.
func processSecureChannelMessage(application interface{}, channel []UA_SecureChannel, messagetype int, requestId UA_UInt32, message []UA_ByteString) UA_StatusCode {
	var server []UA_Server = application.([]UA_Server)
	var retval UA_StatusCode
	switch uint32(messagetype) {
	case uint32(UA_MESSAGETYPE_OPN):
		UA_LOG_TRACE(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Process an OPN on an open channel%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		retval = processOPN(server, channel, UA_UInt32(requestId), message)
	case uint32(UA_MESSAGETYPE_MSG):
		UA_LOG_TRACE(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Process a MSG%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		retval = processMSG(server, channel, UA_UInt32(requestId), message)
	case uint32(UA_MESSAGETYPE_CLO):
		UA_LOG_TRACE(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Process a CLO%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		Service_CloseSecureChannel(server, channel)
	default:
		{
			UA_LOG_TRACE(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Invalid message type%.0s\x00"), (func() int {
				if (channel)[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
				}
				return 0
			}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
			break
		}
	}
	return UA_StatusCode(retval)
}
// createSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26211
func createSecureChannel(application interface{}, connection []UA_Connection, asymHeader []UA_AsymmetricAlgorithmSecurityHeader) UA_StatusCode {
	var server []UA_Server = application.([]UA_Server)
	var endpoint []UA_Endpoint
	var retval UA_StatusCode
	{
		var i uint
		for ; i < uint(server[0].config.endpointsSize); i++ {
			var endpointCandidate []UA_Endpoint = (*[100000000]UA_Endpoint)(unsafe.Pointer(&server[0].config.endpoints[i]))[:]
			if int((int((noarch.NotUA_Boolean(UA_ByteString_equal((*[100000000]UA_ByteString)(unsafe.Pointer(&asymHeader[0].securityPolicyUri))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&endpointCandidate[0].securityPolicy.policyUri))[:])))))) != 0 {
				// Iterate over available endpoints and choose the correct one
				continue
			}
			retval = endpointCandidate.securityPolicy.asymmetricModule.compareCertificateThumbprint((*[100000000]UA_SecurityPolicy)(unsafe.Pointer(&endpointCandidate[0].securityPolicy))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&asymHeader[0].receiverCertificateThumbprint))[:])
			if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
				continue
			}
			// We found the correct endpoint (except for security mode) The endpoint
			//         * needs to be changed by the client / server to match the security
			//         * mode. The server does this in the securechannel manager
			endpoint = endpointCandidate
			break
		}
	}
	if endpoint == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2153054208)))))))
	}
	// Create a new channel
	return UA_SecureChannelManager_create((*[100000000]UA_SecureChannelManager)(unsafe.Pointer(&server[0].secureChannelManager))[:], connection, (*[100000000]UA_SecurityPolicy)(unsafe.Pointer(&endpoint[0].securityPolicy))[:], asymHeader)
}
// processCompleteChunkWithoutChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26245
func processCompleteChunkWithoutChannel(server []UA_Server, connection []UA_Connection, message []UA_ByteString) UA_StatusCode {
	// Process chunk without a channel; must be OPN
	UA_LOG_TRACE(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | No channel attached to the connection. Process the chunk directly\x00"), UA_Int32(connection[0].sockfd))
	var offset uint
	var tcpMessageHeader UA_TcpMessageHeader
	var retval UA_StatusCode = UA_TcpMessageHeader_decodeBinary(message, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_TcpMessageHeader)(unsafe.Pointer(&tcpMessageHeader))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	switch UA_UInt32(tcpMessageHeader.messageTypeAndChunkType) & UA_UInt32((uint32_t((uint32((16777215)))))) {
	case uint32(UA_MESSAGETYPE_HEL):
		// Only HEL and OPN messages possible without a channel (on the server side)
		retval = processHEL(server, connection, message, (*[100000000]uint)(unsafe.Pointer(&offset))[:])
	case uint32(UA_MESSAGETYPE_OPN):
		UA_LOG_TRACE(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | Process OPN message\x00"), UA_Int32(connection[0].sockfd))
		if uint32(connection[0].state) != uint32(UA_CONNECTION_ESTABLISHED) {
			// Called before HEL
			retval = UA_StatusCode((uint32_t((uint32((uint32(2147811328)))))))
			break
		}
		var asymHeader UA_AsymmetricAlgorithmSecurityHeader
		// Decode the asymmetric algorithm security header since it is not encrypted and
		// needed to decide what security policy to use.
		UA_AsymmetricAlgorithmSecurityHeader_init((*[100000000]UA_AsymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&asymHeader))[:])
		var messageHeaderOffset uint = 12
		retval = UA_AsymmetricAlgorithmSecurityHeader_decodeBinary(message, (*[100000000]uint)(unsafe.Pointer(&messageHeaderOffset))[:], (*[100000000]UA_AsymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&asymHeader))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			break
		}
		retval = createSecureChannel(server, connection, (*[100000000]UA_AsymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&asymHeader))[:])
		UA_AsymmetricAlgorithmSecurityHeader_deleteMembers((*[100000000]UA_AsymmetricAlgorithmSecurityHeader)(unsafe.Pointer(&asymHeader))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			break
		}
		retval = UA_SecureChannel_processChunk(connection[0].channel, message, processSecureChannelMessage, server)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			break
		}
	default:
		{
			UA_LOG_TRACE(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | Expected OPN or HEL message on a connection without a SecureChannel\x00"), UA_Int32(connection[0].sockfd))
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
			break
		}
	}
	return UA_StatusCode(retval)
}
// processCompleteChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26308
func processCompleteChunk(application interface{}, connection []UA_Connection, chunk []UA_ByteString) UA_StatusCode {
	var server []UA_Server = application.([]UA_Server)
	if connection[0].channel == nil {
		return processCompleteChunkWithoutChannel(server, connection, chunk)
	}
	return UA_SecureChannel_processChunk(connection[0].channel, chunk, processSecureChannelMessage, server)
}
// processBinaryMessage - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26323
func processBinaryMessage(server []UA_Server, connection []UA_Connection, message []UA_ByteString) {
	UA_LOG_TRACE(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | Received a packet.\x00"), UA_Int32(connection[0].sockfd))
	var retval UA_StatusCode = UA_Connection_processChunks(connection, server, processCompleteChunk, message)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | Processing the message failed with error %s\x00"), UA_Int32(connection[0].sockfd), UA_StatusCode_name(UA_StatusCode(retval)))
		var error UA_TcpErrorMessage
		// Send an ERR message and close the connection
		error.error = UA_UInt32((uint32_t((uint32((uint32((uint32((uint32_t((retval))))))))))))
		error.reason = UA_STRING_NULL
		UA_Connection_sendError(connection, (*[100000000]UA_TcpErrorMessage)(unsafe.Pointer(&error))[:])
		connection.close(connection)
	}
}
// UA_Server_processBinaryMessage - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26349
func UA_Server_processBinaryMessage(server []UA_Server, connection []UA_Connection, message []UA_ByteString) {
	processBinaryMessage(server, connection, message)
}
// UA_Server_removeConnection - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26393
func UA_Server_removeConnection(server []UA_Server, connection []UA_Connection) {
	UA_Connection_detachSecureChannel(connection)
	connection.free(connection)
}
// readDimension - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26424
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_server_utils.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2016-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2016 (c) Lorenz Haas
// *    Copyright 2017 (c) frax2222
// *    Copyright 2017 (c) Florian Palm
// *    Copyright 2017-2018 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Julian Grothoff
//
//
// Parse NumericRange
//
func readDimension(buf []UA_Byte, buflen uint, dim []UA_NumericRangeDimension) uint {
	var progress uint = UA_readNumber(buf, uint(buflen), (*[100000000]UA_UInt32)(unsafe.Pointer(&dim[0].min))[:])
	if progress == uint((0)) {
		return 0
	}
	if buflen <= progress+uint((1)) || int(uint8((__uint8_t((uint8_t((buf[progress]))))))) != int(':') {
		dim[0].max = UA_UInt32(dim[0].min)
		return uint(progress)
	}
	progress ++
	var progress2 uint = UA_readNumber((*[100000000]UA_Byte)(unsafe.Pointer(&buf[progress]))[:], buflen-progress, (*[100000000]UA_UInt32)(unsafe.Pointer(&dim[0].max))[:])
	if progress2 == uint((0)) {
		return 0
	}
	if UA_UInt32(dim[0].min) >= UA_UInt32(dim[0].max) {
		// invalid range
		return 0
	}
	return progress + progress2
}
// UA_NumericRange_parseFromString - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26446
func UA_NumericRange_parseFromString(range_ []UA_NumericRange, str []UA_String) UA_StatusCode {
	var idx uint
	var dimensionsMax uint
	var dimensions []UA_NumericRangeDimension
	var retval UA_StatusCode
	var offset uint
	for 1 != 0 {
		if idx >= dimensionsMax {
			var newds []UA_NumericRangeDimension
			var newdssize uint = uint((8 * uint32((dimensionsMax + uint((2))))))
			// alloc dimensions
			newds = make([]UA_NumericRangeDimension, newdssize*uint((8))/8)
			if newds == nil {
				retval = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
				break
			}
			dimensions = newds
			dimensionsMax = dimensionsMax+uint((2))
		}
		var progress uint = readDimension((*[100000000]UA_Byte)(unsafe.Pointer(&str[0].data[offset]))[:], uint(str[0].length)-offset, (*[100000000]UA_NumericRangeDimension)(unsafe.Pointer(&dimensions[idx]))[:])
		if progress == uint((0)) {
			// read the dimension
			retval = UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
			break
		}
		offset += progress
		idx ++
		if offset >= uint(str[0].length) {
			// loop into the next dimension
			break
		}
		if int(uint8((__uint8_t((uint8_t((str[0].data[offset]))))))) != int(',') {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
			break
		}
		offset ++
	}
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) && idx > uint((0)) {
		range_[0].dimensions = dimensions
		range_[0].dimensionsSize = idx
	} else {
		_ = dimensions
	}
	return UA_StatusCode(retval)
}

type ref_history struct {
	parent []ref_history
	id     []UA_NodeId
	depth  UA_UInt16
}
// isNodeInTreeNoCircular - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26508
//
// Information Model Operations
//
// Keeps track of already visited nodes to detect circular references
// the previous element
// the id of the node at this depth
func isNodeInTreeNoCircular(ns []UA_Nodestore, leafNode []UA_NodeId, nodeToFind []UA_NodeId, visitedRefs []ref_history, referenceTypeIds []UA_NodeId, referenceTypeIdsSize uint) UA_Boolean {
	if int((int((UA_NodeId_equal(nodeToFind, leafNode))))) != 0 {
		return 1
	}
	if int(uint16((uint16((uint16_t((UA_UInt16(visitedRefs[0].depth)))))))) >= 50 {
		return 0
	}
	var node []UA_Node = ns.getNode(ns[0].context, leafNode)
	if node == nil {
		return 0
	}
	{
		var i uint
		for ; i < uint(node[0].referencesSize); i++ {
			var refs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&node[0].references[i]))[:]
			if int((int((noarch.NotUA_Boolean(UA_Boolean(refs[0].isInverse)))))) != 0 {
				// Search upwards in the tree
				continue
			}
			var match UA_Boolean
			{
				var j uint
				for ; j < referenceTypeIdsSize; j++ {
					if int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeIds[j]))[:]))))) != 0 {
						// Consider only the indicated reference types
						match = 1
						break
					}
				}
			}
			if int((int((noarch.NotUA_Boolean(UA_Boolean(match)))))) != 0 {
				continue
			}
			{
				var j uint
				for ; j < uint(refs[0].targetIdsSize); j++ {
					if int(uint16((uint16((uint16_t((UA_UInt16(visitedRefs[0].depth))))))))%5 == 4 {
						var last []ref_history = visitedRefs
						var skip UA_Boolean
						for int((int((noarch.NotUA_Boolean(UA_Boolean(skip)))))) != 0 && last != nil {
							if int((int((UA_NodeId_equal(last[0].id, (*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].targetIds[j].nodeId))[:]))))) != 0 {
								// Match the targets or recurse
								// Check if we already have seen the referenced node and skip to
								//             * avoid endless recursion. Do this only at every 5th depth to save
								//             * effort. Circular dependencies are rare and forbidden for most
								//             * reference types.
								skip = 1
							}
							last = last[0].parent
						}
						if int((int((UA_Boolean(skip))))) != 0 {
							continue
						}
					}
					var nextVisitedRefs ref_history = ref_history{visitedRefs, (*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].targetIds[j].nodeId))[:], UA_UInt16((int(uint16((uint16((uint16_t((UA_UInt16(visitedRefs[0].depth)))))))) + 1))}
					var foundRecursive UA_Boolean = isNodeInTreeNoCircular(ns, (*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].targetIds[j].nodeId))[:], nodeToFind, (*[100000000]ref_history)(unsafe.Pointer(&nextVisitedRefs))[:], referenceTypeIds, uint(referenceTypeIdsSize))
					if int((int((UA_Boolean(foundRecursive))))) != 0 {
						// Stack-allocate the visitedRefs structure for the next depth
						// Recurse
						ns.releaseNode(ns[0].context, node)
						return 1
					}
				}
			}
		}
	}
	ns.releaseNode(ns[0].context, node)
	return 0
}
// isNodeInTree - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26576
func isNodeInTree(ns []UA_Nodestore, leafNode []UA_NodeId, nodeToFind []UA_NodeId, referenceTypeIds []UA_NodeId, referenceTypeIdsSize uint) UA_Boolean {
	var visitedRefs ref_history = ref_history{nil, leafNode, 0}
	return isNodeInTreeNoCircular(ns, leafNode, nodeToFind, (*[100000000]ref_history)(unsafe.Pointer(&visitedRefs))[:], referenceTypeIds, uint(referenceTypeIdsSize))
}
// getNodeType - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26583
func getNodeType(server []UA_Server, node []UA_Node) []UA_Node {
	var parentRef UA_NodeId
	var inverse UA_Boolean
	var typeNodeClass int
	switch uint32(node[0].nodeClass) {
	case uint32(UA_NODECLASS_OBJECT):
		// The reference to the parent is different for variable and variabletype
		parentRef = UA_NODEID_NUMERIC(0, 40)
		inverse = 0
		typeNodeClass = UA_NODECLASS_OBJECTTYPE
	case uint32(UA_NODECLASS_VARIABLE):
		parentRef = UA_NODEID_NUMERIC(0, 40)
		inverse = 0
		typeNodeClass = UA_NODECLASS_VARIABLETYPE
	case uint32(UA_NODECLASS_OBJECTTYPE):
		fallthrough
	case uint32(UA_NODECLASS_VARIABLETYPE):
		fallthrough
	case uint32(UA_NODECLASS_REFERENCETYPE):
		fallthrough
	case uint32(UA_NODECLASS_DATATYPE):
		parentRef = UA_NODEID_NUMERIC(0, 45)
		inverse = 1
		typeNodeClass = node[0].nodeClass
	default:
		{
			return nil
		}
	}
	{
		var i uint
		for ; i < uint(node[0].referencesSize); i++ {
			if int((int((UA_Boolean(node[0].references[i].isInverse))))) != int((int((inverse)))) {
				// Return the first matching candidate
				continue
			}
			if int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].references[i].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentRef))[:])))))) != 0 {
				continue
			}
			var targetId []UA_NodeId = (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].references[i].targetIds[0].nodeId))[:]
			var type_ []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, targetId)
			if type_ == nil {
				continue
			}
			if uint32(type_[0].nodeClass) == uint32(typeNodeClass) {
				return type_
			}
			server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
		}
	}
	return nil
}
// UA_Node_hasSubTypeOrInstances - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26631
func UA_Node_hasSubTypeOrInstances(node []UA_Node) UA_Boolean {
	var hasSubType UA_NodeId = UA_NODEID_NUMERIC(0, 45)
	var hasTypeDefinition UA_NodeId = UA_NODEID_NUMERIC(0, 40)
	{
		var i uint
		for ; i < uint(node[0].referencesSize); i++ {
			if int((int((UA_Boolean(node[0].references[i].isInverse))))) == 0 && int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].references[i].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&hasSubType))[:]))))) != 0 {
				return 1
			}
			if int((int((UA_Boolean(node[0].references[i].isInverse))))) == 1 && int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].references[i].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&hasTypeDefinition))[:]))))) != 0 {
				return 1
			}
		}
	}
	return 0
}

var hasSubtypeNodeId UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{45}}
// getTypeHierarchyFromNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26649
func getTypeHierarchyFromNode(results_ptr [][]UA_NodeId, results_count []uint, results_size []uint, node []UA_Node) UA_StatusCode {
	var results []UA_NodeId = results_ptr[0]
	{
		var i uint
		for ; i < uint(node[0].referencesSize); i++ {
			var refs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&node[0].references[i]))[:]
			if int((int((noarch.NotUA_Boolean(UA_Boolean(refs[0].isInverse)))))) != 0 {
				// Is the reference kind relevant?
				continue
			}
			if int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&hasSubtypeNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].referenceTypeId))[:])))))) != 0 {
				continue
			}
			{
				var j uint
				for ; j < uint(refs[0].targetIdsSize); j++ {
					var targetId []UA_NodeId = (*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].targetIds[j].nodeId))[:]
					var duplicate UA_Boolean
					{
						var k uint
						for ; k < results_count[0]; k++ {
							if int((int((UA_NodeId_equal(targetId, (*[100000000]UA_NodeId)(unsafe.Pointer(&results[k]))[:]))))) != 0 {
								// Append all targets of the reference kind .. if not a duplicate
								// Is the target a duplicate? (multi-inheritance)
								duplicate = 1
								break
							}
						}
					}
					if int((int((UA_Boolean(duplicate))))) != 0 {
						continue
					}
					if results_count[0] >= results_size[0] {
						var new_size uint = uint((120 * uint32((results_size[0])) * 2))
						var new_results []UA_NodeId = make([]UA_NodeId, uint(new_size)/120)
						if new_results == nil {
							// Increase array length if necessary
							UA_Array_delete(results, uint(results_count[0]), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
							return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
						}
						results = new_results
						results_ptr[0] = results
						results_size[0] *= uint((2))
					}
					var retval UA_StatusCode = UA_NodeId_copy(targetId, (*[100000000]UA_NodeId)(unsafe.Pointer(&results[results_count[0]]))[:])
					if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
						// Copy new nodeid to the end of the list
						UA_Array_delete(results, uint(results_count[0]), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
						return UA_StatusCode(retval)
					}
					results_count[0] += uint((1))
				}
			}
		}
	}
	return 0
}
// getTypeHierarchy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26700
func getTypeHierarchy(ns []UA_Nodestore, leafType []UA_NodeId, typeHierarchy [][]UA_NodeId, typeHierarchySize []uint) UA_StatusCode {
	var results_size uint = 20
	var results []UA_NodeId = make([]UA_NodeId, 120*uint32((results_size))/120)
	if results == nil {
		// Allocate the results array. Probably too big, but saves mallocs.
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var results_count uint = 1
	var retval UA_StatusCode = UA_NodeId_copy(leafType, (*[100000000]UA_NodeId)(unsafe.Pointer(&results[0]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		_ = results
		// The leaf is the first element
		return UA_StatusCode(retval)
	}
	{
		var idx uint
		for ; idx < results_count; idx++ {
			var node []UA_Node = ns.getNode(ns[0].context, (*[100000000]UA_NodeId)(unsafe.Pointer(&results[idx]))[:])
			if node == nil {
				{
					var i uint = idx
					for ; i < results_count-uint((1)); i++ {
						// Loop over the array members .. and add new elements to the end
						// Get the node
						// Invalid node, remove from the array
						results[i] = results[i+uint((1))]
					}
				}
				results_count --
				continue
			}
			// Add references from the current node to the end of the array
			retval = getTypeHierarchyFromNode((*[100000000][]UA_NodeId)(unsafe.Pointer(&results))[:], (*[100000000]uint)(unsafe.Pointer(&results_count))[:], (*[100000000]uint)(unsafe.Pointer(&results_size))[:], node)
			// Release the node
			ns.releaseNode(ns[0].context, node)
			if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
				UA_Array_delete(results, uint(results_count), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
				return UA_StatusCode(retval)
			}
		}
	}
	if results_count == uint((0)) {
		_ = results
		// Zero results. The leaf node was not found
		results = nil
	}
	typeHierarchy[0] = results
	typeHierarchySize[0] = results_count
	return 0
}
// UA_Server_editNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26756
// For mulithreading: make a copy of the node, edit and replace.
// * For singlethreading: edit the original
func UA_Server_editNode(server []UA_Server, session []UA_Session, nodeId []UA_NodeId, callback UA_EditNodeCallback, data interface{}) UA_StatusCode {
	var node []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, nodeId)
	if node == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
	}
	var retval UA_StatusCode = callback(server, session, nil, data)
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
	return UA_StatusCode(retval)
}
// UA_Server_processServiceOperations - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:26787
func UA_Server_processServiceOperations(server []UA_Server, session []UA_Session, operationCallback UA_ServiceOperation, context interface{}, requestOperations []uint, requestOperationsType []UA_DataType, responseOperations []uint, responseOperationsType []UA_DataType) UA_StatusCode {
	var ops uint = requestOperations[0]
	if ops == uint((0)) {
		return UA_StatusCode((uint32_t((uint32((uint32(2148466688)))))))
	}
	var respPos []interface{}
	// No padding after size_t
	respPos[0] = UA_Array_new(uint(ops), responseOperationsType)
	if (respPos[0]) == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	responseOperations[0] = ops
	var respOp uintptr_t = uintptr_t(respPos[0])
	var reqOp uintptr_t = (nil)[0]
	{
		var i uint
		for ; i < ops; i++ {
			// No padding after size_t
			operationCallback(server, session, context, uint32((uintptr_t(reqOp))), uint32((uintptr_t(respOp))))
			reqOp += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(requestOperationsType[0].memSize))))))))))
			respOp += uintptr_t((uint32(uint16((uint16((uint16_t((UA_UInt16(responseOperationsType[0].memSize))))))))))
		}
	}
	return 0
}

var UA_ObjectAttributes_default UA_ObjectAttributes = UA_ObjectAttributes{0, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, 0, 0, UA_Byte(0)}
var UA_VariableAttributes_default UA_VariableAttributes = UA_VariableAttributes{0, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, 0, 0, UA_Variant{nil, UA_VARIANT_DATA, 0, (nil), 0, nil}, UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{24}}, -2, 0, nil, UA_Byte((1 << uint64(0))), UA_Byte(0), 0, 0}
var UA_MethodAttributes_default UA_MethodAttributes = UA_MethodAttributes{0, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, 0, 0, 1, 1}
var UA_ObjectTypeAttributes_default UA_ObjectTypeAttributes = UA_ObjectTypeAttributes{0, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, 0, 0, 0}
var UA_VariableTypeAttributes_default UA_VariableTypeAttributes = UA_VariableTypeAttributes{0, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, 0, 0, UA_Variant{nil, UA_VARIANT_DATA, 0, (nil), 0, nil}, UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{24}}, -2, 0, nil, 0}
var UA_ReferenceTypeAttributes_default UA_ReferenceTypeAttributes = UA_ReferenceTypeAttributes{0, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, 0, 0, 0, 0, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}}
var UA_DataTypeAttributes_default UA_DataTypeAttributes = UA_DataTypeAttributes{0, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, 0, 0, 0}
var UA_ViewAttributes_default UA_ViewAttributes = UA_ViewAttributes{0, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, UA_LocalizedText{UA_String{0, nil}, UA_String{0, nil}}, 0, 0, 0, UA_Byte(0)}
// UA_Server_workerCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27031
//
// Default attribute definitions
//
// specifiedAttributes
// displayName
// description
// writeMask (userWriteMask)
// eventNotifier
// specifiedAttributes
// displayName
// description
// writeMask (userWriteMask)
// value
// dataType
// valueRank
// arrayDimensions
// accessLevel (userAccessLevel)
// minimumSamplingInterval
// historizing
// specifiedAttributes
// displayName
// description
// writeMask (userWriteMask)
// executable (userExecutable)
// specifiedAttributes
// displayName
// description
// writeMask (userWriteMask)
// isAbstract
// specifiedAttributes
// displayName
// description
// writeMask (userWriteMask)
// value
// dataType
// valueRank
// arrayDimensions
// isAbstract
// specifiedAttributes
// displayName
// description
// writeMask (userWriteMask)
// isAbstract
// symmetric
// inverseName
// specifiedAttributes
// displayName
// description
// writeMask (userWriteMask)
// isAbstract
// specifiedAttributes
// displayName
// description
// writeMask (userWriteMask)
// containsNoLoops
// eventNotifier
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_server_worker.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014-2016 (c) Sten Grüner
// *    Copyright 2015 (c) Chris Iatrou
// *    Copyright 2015 (c) Nick Goossens
// *    Copyright 2015 (c) Jörg Schüler-Maroldt
// *    Copyright 2015-2016 (c) Oleksiy Vasylyev
// *    Copyright 2016-2017 (c) Florian Palm
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2016 (c) Lorenz Haas
// *    Copyright 2017 (c) Jonas Green
//
//
// * Worker Threads and Dispatch Queue
// * ---------------------------------
// * The worker threads dequeue callbacks from a central Multi-Producer
// * Multi-Consumer Queue (MPMC). When there are no callbacks, workers go idle.
// * The condition to wake them up is triggered whenever a callback is
// * dispatched.
// *
// * Future Plans: Use work-stealing to load-balance between cores.
// * Le, Nhat Minh, et al. "Correct and efficient work-stealing for weak memory
// * models." ACM SIGPLAN Notices. Vol. 48. No. 8. ACM, 2013.
//
// * Repeated Callbacks
// * ------------------
// * Repeated Callbacks are handled by UA_Timer (used in both client and server).
// * In the multi-threaded case, callbacks are dispatched to workers. Otherwise,
// * they are executed immediately.
func UA_Server_workerCallback(server []UA_Server, callback UA_ServerCallback, data interface{}) {
	// Execute immediately
	callback(server, data)
}
// freeCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27077
//
// * Delayed Callbacks
// * -----------------
// *
// * Delayed Callbacks are called only when all callbacks that were dispatched
// * prior are finished. In the single-threaded case, the callback is added to a
// * singly-linked list that is processed at the end of the server's main-loop. In
// * the multi-threaded case, the delay is ensure by a three-step procedure:
// *
// * 1. The delayed callback is dispatched to the worker queue. So it is only
// *    dequeued when all prior callbacks have been dequeued.
// *
// * 2. When the callback is first dequeued by a worker, sample the counter of all
// *    workers. Once all counters have advanced, the callback is ready.
// *
// * 3. Check regularly if the callback is ready by adding it back to the dispatch
// *    queue.
// Delayed callback to free the subscription memory
func freeCallback(server []UA_Server, data interface{}) {
	_ = data
}
// UA_Server_delayedFree - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27084
// TODO: Delayed free should never fail. This can be achieved by adding a prefix
// * with the list pointers
func UA_Server_delayedFree(server []UA_Server, data interface{}) UA_StatusCode {
	return UA_Server_delayedCallback(server, freeCallback, data)
}

type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_27092_5_ struct {
	sle_next []UA_DelayedCallback
}
type UA_DelayedCallback struct {
	next     __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_27092_5_
	callback UA_ServerCallback
	data     interface{}
}
// UA_Server_delayedCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27097
func UA_Server_delayedCallback(server []UA_Server, callback UA_ServerCallback, data interface{}) UA_StatusCode {
	var dc []UA_DelayedCallback = make([]UA_DelayedCallback, 32/32)
	if dc == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	dc[0].callback = callback
	dc[0].data = data
	for {
		(dc)[0].next.sle_next = ((*[100000000]DelayedCallbacksList)(unsafe.Pointer(&server[0].delayedCallbacks))[:])[0].slh_first
		((*[100000000]DelayedCallbacksList)(unsafe.Pointer(&server[0].delayedCallbacks))[:])[0].slh_first = dc
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	return 0
}
// UA_Server_cleanupDelayedCallbacks - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27111
func UA_Server_cleanupDelayedCallbacks(server []UA_Server) {
	var dc []UA_DelayedCallback
	var dc_tmp []UA_DelayedCallback
	for dc = ((*[100000000]DelayedCallbacksList)(unsafe.Pointer(&server[0].delayedCallbacks))[:])[0].slh_first; dc != nil && func() int {
		dc_tmp = (dc)[0].next.sle_next
		tempVar := &1
		return *tempVar
	}() != 0; dc = dc_tmp {
		for {
			if ((*[100000000]DelayedCallbacksList)(unsafe.Pointer(&server[0].delayedCallbacks))[:])[0].slh_first == dc {
				for {
					((*[100000000]DelayedCallbacksList)(unsafe.Pointer(&server[0].delayedCallbacks))[:])[0].slh_first = ((*[100000000]DelayedCallbacksList)(unsafe.Pointer(&server[0].delayedCallbacks))[:])[0].slh_first[0].next.sle_next
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
			} else {
				var curelm []UA_DelayedCallback = ((*[100000000]DelayedCallbacksList)(unsafe.Pointer(&server[0].delayedCallbacks))[:])[0].slh_first
				for curelm[0].next.sle_next != dc {
					curelm = curelm[0].next.sle_next
				}
				curelm[0].next.sle_next = curelm[0].next.sle_next[0].next.sle_next
			}
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		dc.callback(server, dc[0].data)
		_ = dc
	}
}
// UA_Server_run_startup - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27204
//
// * Main Server Loop
// * ----------------
// * Start: Spin up the workers and the network layer and sample the server's
// *        start time.
// * Iterate: Process repeated callbacks and events in the network layer.
// *          This part can be driven from an external main-loop in an
// *          event-driven single-threaded architecture.
// * Stop: Stop workers, finish all callbacks, stop the network layer,
// *       clean up
func UA_Server_run_startup(server []UA_Server) UA_StatusCode {
	var var_ UA_Variant
	var result UA_StatusCode
	// Sample the start time and set it to the Server object
	server[0].startTime = UA_DateTime_now()
	UA_Variant_init((*[100000000]UA_Variant)(unsafe.Pointer(&var_))[:])
	UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&var_))[:], (*[100000000]UA_DateTime)(unsafe.Pointer(&server[0].startTime))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[12]))[:])
	UA_Server_writeValue(server, UA_NODEID_NUMERIC(0, 2257), var_)
	{
		var i uint
		for ; i < uint(server[0].config.networkLayersSize); i++ {
			var nl []UA_ServerNetworkLayer = (*[100000000]UA_ServerNetworkLayer)(unsafe.Pointer(&server[0].config.networkLayers[i]))[:]
			// Start the networklayers
			result |= nl.start(nl, (*[100000000]UA_String)(unsafe.Pointer(&server[0].config.customHostname))[:])
		}
	}
	// Spin up the worker threads
	// Start the multicast discovery server
	return UA_StatusCode(result)
}
// UA_Server_run_iterate - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27252
func UA_Server_run_iterate(server []UA_Server, waitInternal UA_Boolean) UA_UInt16 {
	var now UA_DateTime = UA_DateTime_nowMonotonic()
	var nextRepeated UA_DateTime = UA_Timer_process((*[100000000]UA_Timer)(unsafe.Pointer(&server[0].timer))[:], UA_DateTime(now), UA_TimerDispatchCallback(UA_Server_workerCallback), server)
	var latest UA_DateTime = UA_DateTime((int64_t((__int64_t((int32(int64(int32((__int64_t((int64_t((now))))))) + 50*int64(10*1000))))))))
	if nextRepeated > latest {
		// Process repeated work
		nextRepeated = latest
	}
	var timeout UA_UInt16
	if int((int((UA_Boolean(waitInternal))))) != 0 {
		// round always to upper value to avoid timeout to be set to 0
		//    * if(nextRepeated - now) < (UA_DATETIME_MSEC/2)
		timeout = UA_UInt16(((int64(int32((__int64_t((int64_t((nextRepeated - now))))))) + int64(10*1000-int(1))) / int64(10*1000)))
	}
	{
		var i uint
		for ; i < uint(server[0].config.networkLayersSize); i++ {
			var nl []UA_ServerNetworkLayer = (*[100000000]UA_ServerNetworkLayer)(unsafe.Pointer(&server[0].config.networkLayers[i]))[:]
			// Listen on the networklayer
			nl.listen(nl, server, UA_UInt16(timeout))
		}
	}
	// Process delayed callbacks when all callbacks and network events are done.
	//     * If multithreading is enabled, the cleanup of delayed values is attempted
	//     * by a callback in the job queue.
	UA_Server_cleanupDelayedCallbacks(server)
	now = UA_DateTime_nowMonotonic()
	timeout = 0
	if nextRepeated > now {
		timeout = UA_UInt16((int64(int32((__int64_t((int64_t((nextRepeated - now))))))) / int64(10*1000)))
	}
	return UA_UInt16(timeout)
}
// UA_Server_run_shutdown - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27306
func UA_Server_run_shutdown(server []UA_Server) UA_StatusCode {
	{
		var i uint
		for ; i < uint(server[0].config.networkLayersSize); i++ {
			var nl []UA_ServerNetworkLayer = (*[100000000]UA_ServerNetworkLayer)(unsafe.Pointer(&server[0].config.networkLayers[i]))[:]
			// Stop the netowrk layer
			nl.stop(nl, server)
		}
	}
	// Process remaining delayed callbacks
	UA_Server_cleanupDelayedCallbacks(server)
	return 0
}
// UA_Server_run - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27347
func UA_Server_run(server []UA_Server, running []UA_Boolean) UA_StatusCode {
	var retval UA_StatusCode = UA_Server_run_startup(server)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	for int((int((running[0])))) != 0 {
		UA_Server_run_iterate(server, 1)
	}
	return UA_Server_run_shutdown(server)
}
// register_server_with_discovery_server - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27381
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_server_discovery.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
func register_server_with_discovery_server(server []UA_Server, discoveryServerUrl []byte, isUnregister UA_Boolean, semaphoreFilePath []byte) UA_StatusCode {
	if discoveryServerUrl == nil {
		UA_LOG_ERROR(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("No discovery server url provided\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var clientConfig UA_ClientConfig = UA_Server_getClientConfig()
	var client []UA_Client = UA_Client_new(UA_ClientConfig(clientConfig))
	if client == nil {
		// Create the client
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var retval UA_StatusCode = UA_Client_connect(client, discoveryServerUrl)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Connect the client
		UA_LOG_ERROR(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Connecting to the discovery server failed with statuscode %s\x00"), UA_StatusCode_name(UA_StatusCode(retval)))
		UA_Client_disconnect(client)
		UA_Client_delete(client)
		return UA_StatusCode(retval)
	}
	var request UA_RegisterServer2Request
	// Prepare the request. Do not cleanup the request after the service call,
	//     * as the members are stack-allocated or point into the server config.
	UA_RegisterServer2Request_init((*[100000000]UA_RegisterServer2Request)(unsafe.Pointer(&request))[:])
	request.requestHeader.timestamp = UA_DateTime_now()
	request.requestHeader.timeoutHint = 10000
	request.server.isOnline = noarch.NotUA_Boolean(UA_Boolean(isUnregister))
	request.server.serverUri = server[0].config.applicationDescription.applicationUri
	request.server.productUri = server[0].config.applicationDescription.productUri
	request.server.serverType = server[0].config.applicationDescription.applicationType
	request.server.gatewayServerUri = server[0].config.applicationDescription.gatewayServerUri
	if semaphoreFilePath != nil {
		request.server.semaphoreFilePath = UA_STRING([]byte(uint32((uintptr_t(semaphoreFilePath)))))
	}
	// dirty cast
	request.server.serverNames = (*[100000000]UA_LocalizedText)(unsafe.Pointer(&server[0].config.applicationDescription.applicationName))[:]
	request.server.serverNamesSize = 1
	var config_discurls uint = uint(server[0].config.applicationDescription.discoveryUrlsSize)
	var nl_discurls uint = uint(server[0].config.networkLayersSize)
	var total_discurls uint = config_discurls + nl_discurls
	var urlsBuf []UA_String
	// Copy the discovery urls from the server config and the network layers
	request.server.discoveryUrls = urlsBuf
	request.server.discoveryUrlsSize = total_discurls
	{
		var i uint
		for ; i < config_discurls; i++ {
			request.server.discoveryUrls[i] = server[0].config.applicationDescription.discoveryUrls[i]
		}
	}
	{
		var i uint
		for ; i < nl_discurls; i++ {
			var nl []UA_ServerNetworkLayer = (*[100000000]UA_ServerNetworkLayer)(unsafe.Pointer(&server[0].config.networkLayers[i]))[:]
			// TODO: Add nl only if discoveryUrl not already present
			request.server.discoveryUrls[config_discurls+i] = nl[0].discoveryUrl
		}
	}
	var mdnsConfig UA_MdnsDiscoveryConfiguration
	UA_MdnsDiscoveryConfiguration_init((*[100000000]UA_MdnsDiscoveryConfiguration)(unsafe.Pointer(&mdnsConfig))[:])
	request.discoveryConfigurationSize = 1
	request.discoveryConfiguration = UA_ExtensionObject_new()
	UA_ExtensionObject_init((*[100000000]UA_ExtensionObject)(unsafe.Pointer(&request.discoveryConfiguration[0]))[:])
	request.discoveryConfiguration[0].encoding = UA_EXTENSIONOBJECT_DECODED_NODELETE
	(*request.discoveryConfiguration[0].content.decoded()).type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[40]))[:]
	(*request.discoveryConfiguration[0].content.decoded()).data = (*[100000000]UA_MdnsDiscoveryConfiguration)(unsafe.Pointer(&mdnsConfig))[:]
	mdnsConfig.mdnsServerName = server[0].config.mdnsServerName
	mdnsConfig.serverCapabilities = server[0].config.serverCapabilities
	mdnsConfig.serverCapabilitiesSize = uint(server[0].config.serverCapabilitiesSize)
	var response UA_RegisterServer2Response
	// First try with RegisterServer2, if that isn't implemented, use RegisterServer
	__UA_Client_Service(client, (*[100000000]UA_RegisterServer2Request)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[190]))[:], (*[100000000]UA_RegisterServer2Response)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[165]))[:])
	var serviceResult UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	UA_RegisterServer2Response_deleteMembers((*[100000000]UA_RegisterServer2Response)(unsafe.Pointer(&response))[:])
	UA_ExtensionObject_delete(request.discoveryConfiguration)
	if serviceResult == UA_StatusCode((uint32_t((uint32((uint32(2151677952))))))) || serviceResult == UA_StatusCode((uint32_t((uint32((uint32(2148204544))))))) {
		var request_fallback UA_RegisterServerRequest
		// Try RegisterServer
		UA_RegisterServerRequest_init((*[100000000]UA_RegisterServerRequest)(unsafe.Pointer(&request_fallback))[:])
		// Copy from RegisterServer2 request
		request_fallback.requestHeader = request.requestHeader
		request_fallback.server = request.server
		var response_fallback UA_RegisterServerResponse
		__UA_Client_Service(client, (*[100000000]UA_RegisterServerRequest)(unsafe.Pointer(&request_fallback))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[182]))[:], (*[100000000]UA_RegisterServerResponse)(unsafe.Pointer(&response_fallback))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[149]))[:])
		serviceResult = UA_StatusCode(response_fallback.responseHeader.serviceResult)
		UA_RegisterServerResponse_deleteMembers((*[100000000]UA_RegisterServerResponse)(unsafe.Pointer(&response_fallback))[:])
	}
	if serviceResult != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_ERROR(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("RegisterServer/RegisterServer2 failed with statuscode %s\x00"), UA_StatusCode_name(UA_StatusCode(serviceResult)))
	}
	UA_Client_disconnect(client)
	UA_Client_delete(client)
	return UA_StatusCode(serviceResult)
}
// UA_Server_register_discovery - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27507
func UA_Server_register_discovery(server []UA_Server, discoveryServerUrl []byte, semaphoreFilePath []byte) UA_StatusCode {
	return register_server_with_discovery_server(server, discoveryServerUrl, 0, semaphoreFilePath)
}
// UA_Server_unregister_discovery - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27514
func UA_Server_unregister_discovery(server []UA_Server, discoveryServerUrl []byte) UA_StatusCode {
	return register_server_with_discovery_server(server, discoveryServerUrl, 1, nil)
}
// UA_SecureChannelManager_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27540
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_securechannel_manager.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014-2017 (c) Florian Palm
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Mark Giraud, Fraunhofer IOSB
//
func UA_SecureChannelManager_init(cm []UA_SecureChannelManager, server []UA_Server) UA_StatusCode {
	for {
		((*[100000000]channel_list)(unsafe.Pointer(&cm[0].channels))[:])[0].lh_first = nil
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	// TODO: use an ID that is likely to be unique after a restart
	cm[0].lastChannelId = 1
	cm[0].lastTokenId = 1
	cm[0].currentChannelCount = 0
	cm[0].server = server
	return 0
}
// UA_SecureChannelManager_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27551
func UA_SecureChannelManager_deleteMembers(cm []UA_SecureChannelManager) {
	var entry []channel_list_entry
	var temp []channel_list_entry
	for entry = ((*[100000000]channel_list)(unsafe.Pointer(&cm[0].channels))[:])[0].lh_first; entry != nil && func() int {
		temp = (entry)[0].pointers.le_next
		tempVar := &1
		return *tempVar
	}() != 0; entry = temp {
		for {
			if (entry)[0].pointers.le_next != nil {
				(entry)[0].pointers.le_next[0].pointers.le_prev = (entry)[0].pointers.le_prev
			}
			(entry)[0].pointers.le_prev[0] = (entry)[0].pointers.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		UA_SecureChannel_deleteMembersCleanup((*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:])
		_ = entry
	}
}
// removeSecureChannelCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27561
func removeSecureChannelCallback(server []UA_Server, entry interface{}) {
	var centry []channel_list_entry = entry.([]channel_list_entry)
	UA_SecureChannel_deleteMembersCleanup((*[100000000]UA_SecureChannel)(unsafe.Pointer(&centry[0].channel))[:])
	_ = entry
}
// removeSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27568
func removeSecureChannel(cm []UA_SecureChannelManager, entry []channel_list_entry) UA_StatusCode {
	var retval UA_StatusCode = UA_Server_delayedCallback(cm[0].server, removeSecureChannelCallback, entry)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Add a delayed callback to remove the channel when the currently
		//     * scheduled jobs have completed
		UA_LOG_WARNING(UA_Logger(cm[0].server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Could not remove the secure channel with error code %s\x00"), UA_StatusCode_name(UA_StatusCode(retval)))
		// Try again next time
		return UA_StatusCode(retval)
	}
	for {
		if (entry)[0].pointers.le_next != nil {
			// Detach the channel and make the capacity available
			(entry)[0].pointers.le_next[0].pointers.le_prev = (entry)[0].pointers.le_prev
		}
		(entry)[0].pointers.le_prev[0] = (entry)[0].pointers.le_next
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	UA_atomic_subUInt32((*[100000000]UA_UInt32)(unsafe.Pointer(&cm[0].currentChannelCount))[:], 1)
	return 0
}
// UA_SecureChannelManager_cleanupTimedOut - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27587
// remove channels that were not renewed or who have no connection attached
func UA_SecureChannelManager_cleanupTimedOut(cm []UA_SecureChannelManager, nowMonotonic UA_DateTime) {
	var entry []channel_list_entry
	var temp []channel_list_entry
	for entry = ((*[100000000]channel_list)(unsafe.Pointer(&cm[0].channels))[:])[0].lh_first; entry != nil && func() int {
		temp = (entry)[0].pointers.le_next
		tempVar := &1
		return *tempVar
	}() != 0; entry = temp {
		var timeout UA_DateTime = UA_DateTime(entry[0].channel.securityToken.createdAt) + UA_DateTime((int64(uint32((uint32((uint32_t((UA_UInt32(entry[0].channel.securityToken.revisedLifetime)))))))) * int64(10*1000)))
		if timeout < nowMonotonic || entry[0].channel.connection == nil {
			UA_LOG_INFO(UA_Logger(cm[0].server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | SecureChannel has timed out%.0s\x00"), (func() int {
				if ((*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:])[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32(((*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:])[0].connection[0].sockfd)))))))
				}
				return 0
			}()), UA_UInt32(((*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:])[0].securityToken.channelId), []byte("\x00"))
			removeSecureChannel(cm, entry)
		} else if UA_UInt32(entry[0].channel.nextSecurityToken.tokenId) > UA_UInt32((uint32_t((uint32((0)))))) {
			UA_SecureChannel_revolveTokens((*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:])
		}
	}
}
// purgeFirstChannelWithoutSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27604
// remove the first channel that has no session attached
func purgeFirstChannelWithoutSession(cm []UA_SecureChannelManager) UA_Boolean {
	var entry []channel_list_entry
	for entry = ((*[100000000]channel_list)(unsafe.Pointer(&cm[0].channels))[:])[0].lh_first; entry != nil; entry = (entry)[0].pointers.le_next {
		if ((*[100000000]session_pointerlist)(unsafe.Pointer(&(entry[0].channel.sessions)))[:])[0].lh_first == nil {
			UA_LOG_DEBUG(UA_Logger(cm[0].server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Channel was purged since maxSecureChannels was reached and channel had no session attached%.0s\x00"), (func() int {
				if ((*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:])[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32(((*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:])[0].connection[0].sockfd)))))))
				}
				return 0
			}()), UA_UInt32(((*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:])[0].securityToken.channelId), []byte("\x00"))
			removeSecureChannel(cm, entry)
			return 1
		}
	}
	return 0
}
// UA_SecureChannelManager_create - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27620
func UA_SecureChannelManager_create(cm []UA_SecureChannelManager, connection []UA_Connection, securityPolicy []UA_SecurityPolicy, asymHeader []UA_AsymmetricAlgorithmSecurityHeader) UA_StatusCode {
	if connection[0].channel != nil {
		// connection already has a channel attached.
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if UA_UInt32(cm[0].currentChannelCount) >= uint32(uint16((uint16((uint16_t((UA_UInt16(cm[0].server[0].config.maxSecureChannels)))))))) && int((int((noarch.NotUA_Boolean(purgeFirstChannelWithoutSession(cm)))))) != 0 {
		// Check if there exists a free SC, otherwise try to purge one SC without a
		//     * session the purge has been introduced to pass CTT, it is not clear what
		//     * strategy is expected here
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	UA_LOG_INFO(UA_Logger(cm[0].server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Creating a new SecureChannel\x00"))
	var entry []channel_list_entry = make([]channel_list_entry, 224/224)
	if entry == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var retval UA_StatusCode = UA_SecureChannel_init((*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:], securityPolicy, (*[100000000]UA_ByteString)(unsafe.Pointer(&asymHeader[0].senderCertificate))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		_ = entry
		// Create the channel context and parse the sender (remote) certificate used for the
		//     * secureChannel.
		return UA_StatusCode(retval)
	}
	// Channel state is fresh (0)
	entry[0].channel.securityToken.channelId = 0
	entry[0].channel.securityToken.tokenId = func() UA_UInt32 {
		tempVar := &cm[0].lastTokenId
		defer func() {
			*tempVar ++
		}()
		return *tempVar
	}()
	entry[0].channel.securityToken.createdAt = UA_DateTime_now()
	entry[0].channel.securityToken.revisedLifetime = UA_UInt32(cm[0].server[0].config.maxSecurityTokenLifetime)
	for {
		if ((entry)[0].pointers.le_next = ((*[100000000]channel_list)(unsafe.Pointer(&cm[0].channels))[:])[0].lh_first) != nil {
			((*[100000000]channel_list)(unsafe.Pointer(&cm[0].channels))[:])[0].lh_first[0].pointers.le_prev = (*[100000000][]channel_list_entry)(unsafe.Pointer(&(entry)[0].pointers.le_next))[:]
		}
		((*[100000000]channel_list)(unsafe.Pointer(&cm[0].channels))[:])[0].lh_first = entry
		(entry)[0].pointers.le_prev = (*[100000000][]channel_list_entry)(unsafe.Pointer(&((*[100000000]channel_list)(unsafe.Pointer(&cm[0].channels))[:])[0].lh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	UA_atomic_addUInt32((*[100000000]UA_UInt32)(unsafe.Pointer(&cm[0].currentChannelCount))[:], 1)
	UA_Connection_attachSecureChannel(connection, (*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:])
	return 0
}
// UA_SecureChannelManager_open - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27663
func UA_SecureChannelManager_open(cm []UA_SecureChannelManager, channel []UA_SecureChannel, request []UA_OpenSecureChannelRequest, response []UA_OpenSecureChannelResponse) UA_StatusCode {
	if uint32(channel[0].state) != uint32(UA_SECURECHANNELSTATE_FRESH) {
		UA_LOG_ERROR(UA_Logger(cm[0].server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Called open on already open or closed channel%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if uint32(request[0].securityMode) != uint32(UA_MESSAGESECURITYMODE_NONE) && int((int((UA_ByteString_equal((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].securityPolicy[0].policyUri))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&UA_SECURITY_POLICY_NONE_URI))[:]))))) != 0 {
		return UA_StatusCode((uint32_t((uint32((uint32(2152988672)))))))
	}
	channel[0].securityMode = request[0].securityMode
	channel[0].securityToken.createdAt = UA_DateTime_nowMonotonic()
	channel[0].securityToken.channelId = func() UA_UInt32 {
		tempVar := &cm[0].lastChannelId
		defer func() {
			*tempVar ++
		}()
		return *tempVar
	}()
	channel[0].securityToken.createdAt = UA_DateTime_now()
	// Set the lifetime. Lifetime 0 -> set the maximum possible
	channel[0].securityToken.revisedLifetime = UA_UInt32((uint32_t((uint32((func() uint32 {
		if UA_UInt32(request[0].requestedLifetime) > UA_UInt32(cm[0].server[0].config.maxSecurityTokenLifetime) {
			return uint32((uint32((uint32_t((UA_UInt32(cm[0].server[0].config.maxSecurityTokenLifetime)))))))
		}
		return uint32((uint32((uint32_t((UA_UInt32(request[0].requestedLifetime)))))))
	}()))))))
	if UA_UInt32(channel[0].securityToken.revisedLifetime) == UA_UInt32((uint32_t((uint32((0)))))) {
		channel[0].securityToken.revisedLifetime = UA_UInt32(cm[0].server[0].config.maxSecurityTokenLifetime)
	}
	var retval UA_StatusCode = UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&request[0].clientNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].remoteNonce))[:])
	// Set the nonces and generate the keys
	retval |= UA_SecureChannel_generateLocalNonce(channel)
	retval |= UA_SecureChannel_generateNewKeys(channel)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	// Set the response
	retval = UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].localNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&response[0].serverNonce))[:])
	retval |= UA_ChannelSecurityToken_copy((*[100000000]UA_ChannelSecurityToken)(unsafe.Pointer(&channel[0].securityToken))[:], (*[100000000]UA_ChannelSecurityToken)(unsafe.Pointer(&response[0].securityToken))[:])
	response[0].responseHeader.timestamp = UA_DateTime_now()
	response[0].responseHeader.requestHandle = UA_UInt32(request[0].requestHeader.requestHandle)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	// The channel is open
	channel[0].state = UA_SECURECHANNELSTATE_OPEN
	return 0
}
// UA_SecureChannelManager_renew - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27711
func UA_SecureChannelManager_renew(cm []UA_SecureChannelManager, channel []UA_SecureChannel, request []UA_OpenSecureChannelRequest, response []UA_OpenSecureChannelResponse) UA_StatusCode {
	if uint32(channel[0].state) != uint32(UA_SECURECHANNELSTATE_OPEN) {
		UA_LOG_ERROR(UA_Logger(cm[0].server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Called renew on channel which is not open%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if UA_UInt32(channel[0].nextSecurityToken.tokenId) == UA_UInt32((uint32_t((uint32((0)))))) {
		// If no security token is already issued
		channel[0].nextSecurityToken.channelId = UA_UInt32(channel[0].securityToken.channelId)
		channel[0].nextSecurityToken.tokenId = func() UA_UInt32 {
			tempVar := &cm[0].lastTokenId
			defer func() {
				*tempVar ++
			}()
			return *tempVar
		}()
		channel[0].nextSecurityToken.createdAt = UA_DateTime_now()
		channel[0].nextSecurityToken.revisedLifetime = UA_UInt32((uint32_t((uint32((func() uint32 {
			if UA_UInt32(request[0].requestedLifetime) > UA_UInt32(cm[0].server[0].config.maxSecurityTokenLifetime) {
				return uint32((uint32((uint32_t((UA_UInt32(cm[0].server[0].config.maxSecurityTokenLifetime)))))))
			}
			return uint32((uint32((uint32_t((UA_UInt32(request[0].requestedLifetime)))))))
		}()))))))
		if UA_UInt32(channel[0].nextSecurityToken.revisedLifetime) == UA_UInt32((uint32_t((uint32((0)))))) {
			// lifetime 0 -> return the max lifetime
			channel[0].nextSecurityToken.revisedLifetime = UA_UInt32(cm[0].server[0].config.maxSecurityTokenLifetime)
		}
	}
	// Replace the nonces
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].remoteNonce))[:])
	var retval UA_StatusCode = UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&request[0].clientNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].remoteNonce))[:])
	retval |= UA_SecureChannel_generateLocalNonce(channel)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	// Set the response
	response[0].responseHeader.requestHandle = UA_UInt32(request[0].requestHeader.requestHandle)
	retval = UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].localNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&response[0].serverNonce))[:])
	retval |= UA_ChannelSecurityToken_copy((*[100000000]UA_ChannelSecurityToken)(unsafe.Pointer(&channel[0].nextSecurityToken))[:], (*[100000000]UA_ChannelSecurityToken)(unsafe.Pointer(&response[0].securityToken))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	// Reset the internal creation date to the monotonic clock
	channel[0].nextSecurityToken.createdAt = UA_DateTime_nowMonotonic()
	return 0
}
// UA_SecureChannelManager_get - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27752
func UA_SecureChannelManager_get(cm []UA_SecureChannelManager, channelId UA_UInt32) []UA_SecureChannel {
	var entry []channel_list_entry
	for entry = ((*[100000000]channel_list)(unsafe.Pointer(&cm[0].channels))[:])[0].lh_first; entry != nil; entry = (entry)[0].pointers.le_next {
		if UA_UInt32(entry[0].channel.securityToken.channelId) == channelId {
			return (*[100000000]UA_SecureChannel)(unsafe.Pointer(&entry[0].channel))[:]
		}
	}
	return nil
}
// UA_SecureChannelManager_close - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27762
func UA_SecureChannelManager_close(cm []UA_SecureChannelManager, channelId UA_UInt32) UA_StatusCode {
	var entry []channel_list_entry
	for entry = ((*[100000000]channel_list)(unsafe.Pointer(&cm[0].channels))[:])[0].lh_first; entry != nil; entry = (entry)[0].pointers.le_next {
		if UA_UInt32(entry[0].channel.securityToken.channelId) == channelId {
			break
		}
	}
	if entry == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	return removeSecureChannel(cm, entry)
}
// UA_SessionManager_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27788
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_session_manager.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014, 2017 (c) Florian Palm
// *    Copyright 2015 (c) Sten Grüner
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
func UA_SessionManager_init(sm []UA_SessionManager, server []UA_Server) UA_StatusCode {
	for {
		((*[100000000]session_list)(unsafe.Pointer(&sm[0].sessions))[:])[0].lh_first = nil
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	sm[0].currentSessionCount = 0
	sm[0].server = server
	return 0
}
// UA_SessionManager_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27796
func UA_SessionManager_deleteMembers(sm []UA_SessionManager) {
	var current []session_list_entry
	var temp []session_list_entry
	for current = ((*[100000000]session_list)(unsafe.Pointer(&sm[0].sessions))[:])[0].lh_first; current != nil && func() int {
		temp = (current)[0].pointers.le_next
		tempVar := &1
		return *tempVar
	}() != 0; current = temp {
		for {
			if (current)[0].pointers.le_next != nil {
				(current)[0].pointers.le_next[0].pointers.le_prev = (current)[0].pointers.le_prev
			}
			(current)[0].pointers.le_prev[0] = (current)[0].pointers.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		UA_Session_deleteMembersCleanup((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:], sm[0].server)
		_ = current
	}
}
// removeSessionCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27806
// Delayed callback to free the session memory
func removeSessionCallback(server []UA_Server, entry interface{}) {
	var sentry []session_list_entry = entry.([]session_list_entry)
	UA_Session_deleteMembersCleanup((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:], server)
	_ = sentry
}
// removeSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27813
func removeSession(sm []UA_SessionManager, sentry []session_list_entry) UA_StatusCode {
	// Detach the Session from the SecureChannel
	UA_Session_detachFromSecureChannel((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])
	// Deactivate the session
	sentry[0].session.activated = 0
	var retval UA_StatusCode = UA_Server_delayedCallback(sm[0].server, removeSessionCallback, sentry)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Add a delayed callback to remove the session when the currently
		//     * scheduled jobs have completed
		UA_LOG_WARNING(UA_Logger(sm[0].server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Could not remove session with error code %s%.0s\x00"), (func() int {
			if ((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].header.channel != nil {
				return (func() int {
					if ((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32(((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if ((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32(((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
		// Try again next time
		return UA_StatusCode(retval)
	}
	for {
		if (sentry)[0].pointers.le_next != nil {
			// Detach the session from the session manager and make the capacity
			//     * available
			(sentry)[0].pointers.le_next[0].pointers.le_prev = (sentry)[0].pointers.le_prev
		}
		(sentry)[0].pointers.le_prev[0] = (sentry)[0].pointers.le_next
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	UA_atomic_subUInt32((*[100000000]UA_UInt32)(unsafe.Pointer(&sm[0].currentSessionCount))[:], 1)
	return 0
}
// UA_SessionManager_cleanupTimedOut - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27838
func UA_SessionManager_cleanupTimedOut(sm []UA_SessionManager, nowMonotonic UA_DateTime) {
	var sentry []session_list_entry
	var temp []session_list_entry
	for sentry = ((*[100000000]session_list)(unsafe.Pointer(&sm[0].sessions))[:])[0].lh_first; sentry != nil && func() int {
		temp = (sentry)[0].pointers.le_next
		tempVar := &1
		return *tempVar
	}() != 0; sentry = temp {
		if UA_DateTime(sentry[0].session.validTill) >= nowMonotonic {
			// Session has timed out?
			continue
		}
		UA_LOG_INFO(UA_Logger(sm[0].server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Session has timed out%.0s\x00"), (func() int {
			if ((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].header.channel != nil {
				return (func() int {
					if ((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32(((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if ((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32(((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&sentry[0].session))[:])[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		sm.server.config.accessControl.closeSession(sm[0].server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&sm[0].server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&sentry[0].session.sessionId))[:], sentry[0].session.sessionHandle)
		removeSession(sm, sentry)
	}
}
// UA_SessionManager_getSessionByToken - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27856
func UA_SessionManager_getSessionByToken(sm []UA_SessionManager, token []UA_NodeId) []UA_Session {
	var current []session_list_entry
	for current = ((*[100000000]session_list)(unsafe.Pointer(&sm[0].sessions))[:])[0].lh_first; current != nil; current = (current)[0].pointers.le_next {
		if int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&current[0].session.header.authenticationToken))[:], token)))))) != 0 {
			// Token does not match
			continue
		}
		if UA_DateTime_nowMonotonic() > UA_DateTime(current[0].session.validTill) {
			// Session has timed out
			UA_LOG_INFO(UA_Logger(sm[0].server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Client tries to use a session that has timed out%.0s\x00"), (func() int {
				if ((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].header.channel != nil {
					return (func() int {
						if ((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32(((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if ((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32(((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			return nil
		}
		// Ok, return
		return (*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:]
	}
	// Session not found
	UA_LOG_INFO(UA_Logger(sm[0].server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Try to use Session with token %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x but is not found\x00"), UA_UInt32((*token[0].identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*token[0].identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*token[0].identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*token[0].identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*token[0].identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*token[0].identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*token[0].identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*token[0].identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*token[0].identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*token[0].identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*token[0].identifier.guid()).data4[:][7])))))))))
	return nil
}
// UA_SessionManager_getSessionById - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27882
func UA_SessionManager_getSessionById(sm []UA_SessionManager, sessionId []UA_NodeId) []UA_Session {
	var current []session_list_entry
	for current = ((*[100000000]session_list)(unsafe.Pointer(&sm[0].sessions))[:])[0].lh_first; current != nil; current = (current)[0].pointers.le_next {
		if int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&current[0].session.sessionId))[:], sessionId)))))) != 0 {
			// Token does not match
			continue
		}
		if UA_DateTime_nowMonotonic() > UA_DateTime(current[0].session.validTill) {
			// Session has timed out
			UA_LOG_INFO(UA_Logger(sm[0].server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Client tries to use a session that has timed out%.0s\x00"), (func() int {
				if ((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].header.channel != nil {
					return (func() int {
						if ((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32(((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if ((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32(((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*((*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:])[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			return nil
		}
		// Ok, return
		return (*[100000000]UA_Session)(unsafe.Pointer(&current[0].session))[:]
	}
	// Session not found
	UA_LOG_INFO(UA_Logger(sm[0].server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Try to use Session with identifier %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x but is not found\x00"), UA_UInt32((*sessionId[0].identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*sessionId[0].identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*sessionId[0].identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*sessionId[0].identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*sessionId[0].identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*sessionId[0].identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*sessionId[0].identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*sessionId[0].identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*sessionId[0].identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*sessionId[0].identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*sessionId[0].identifier.guid()).data4[:][7])))))))))
	return nil
}
// UA_SessionManager_createSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27909
// Creates and adds a session. But it is not yet attached to a secure channel.
func UA_SessionManager_createSession(sm []UA_SessionManager, channel []UA_SecureChannel, request []UA_CreateSessionRequest, session [][]UA_Session) UA_StatusCode {
	if UA_UInt32(sm[0].currentSessionCount) >= uint32(uint16((uint16((uint16_t((UA_UInt16(sm[0].server[0].config.maxSessions)))))))) {
		return UA_StatusCode((uint32_t((uint32((uint32(2153119744)))))))
	}
	var newentry []session_list_entry = make([]session_list_entry, 584/584)
	if newentry == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	UA_atomic_addUInt32((*[100000000]UA_UInt32)(unsafe.Pointer(&sm[0].currentSessionCount))[:], 1)
	UA_Session_init((*[100000000]UA_Session)(unsafe.Pointer(&newentry[0].session))[:])
	newentry[0].session.sessionId = UA_NODEID_GUID(1, UA_Guid_random())
	newentry[0].session.header.authenticationToken = UA_NODEID_GUID(1, UA_Guid_random())
	if UA_Double(request[0].requestedSessionTimeout) <= UA_Double(sm[0].server[0].config.maxSessionTimeout) && UA_Double(request[0].requestedSessionTimeout) > UA_Double((0)) {
		newentry[0].session.timeout = UA_Double(request[0].requestedSessionTimeout)
	} else {
		newentry[0].session.timeout = UA_Double(sm[0].server[0].config.maxSessionTimeout)
	}
	UA_Session_updateLifetime((*[100000000]UA_Session)(unsafe.Pointer(&newentry[0].session))[:])
	for {
		if ((newentry)[0].pointers.le_next = ((*[100000000]session_list)(unsafe.Pointer(&sm[0].sessions))[:])[0].lh_first) != nil {
			((*[100000000]session_list)(unsafe.Pointer(&sm[0].sessions))[:])[0].lh_first[0].pointers.le_prev = (*[100000000][]session_list_entry)(unsafe.Pointer(&(newentry)[0].pointers.le_next))[:]
		}
		((*[100000000]session_list)(unsafe.Pointer(&sm[0].sessions))[:])[0].lh_first = newentry
		(newentry)[0].pointers.le_prev = (*[100000000][]session_list_entry)(unsafe.Pointer(&((*[100000000]session_list)(unsafe.Pointer(&sm[0].sessions))[:])[0].lh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	session[0] = (*[100000000]UA_Session)(unsafe.Pointer(&newentry[0].session))[:]
	return 0
}
// UA_SessionManager_removeSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27936
func UA_SessionManager_removeSession(sm []UA_SessionManager, token []UA_NodeId) UA_StatusCode {
	var current []session_list_entry
	for current = ((*[100000000]session_list)(unsafe.Pointer(&sm[0].sessions))[:])[0].lh_first; current != nil; current = (current)[0].pointers.le_next {
		if int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&current[0].session.header.authenticationToken))[:], token))))) != 0 {
			break
		}
	}
	if current == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2149908480)))))))
	}
	return removeSession(sm, current)
}
// UA_Subscription_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27969
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_subscription.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2015-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2015 (c) Chris Iatrou
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2017-2018 (c) Thomas Stalder, Blue Time Concept SA
// *    Copyright 2015 (c) Joakim L. Gilje
// *    Copyright 2016-2017 (c) Florian Palm
// *    Copyright 2015-2016 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) frax2222
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Mattias Bornhager
//
func UA_Subscription_new(session []UA_Session, subscriptionId UA_UInt32) []UA_Subscription {
	var newSub []UA_Subscription = make([]UA_Subscription, 1*168/168)
	if newSub == nil {
		// Allocate the memory
		return nil
	}
	// Remaining members are covered by calloc zeroing out the memory
	newSub[0].session = session
	newSub[0].subscriptionId = subscriptionId
	// The first publish response is sent immediately
	newSub[0].state = UA_SUBSCRIPTIONSTATE_NORMAL
	for {
		((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&newSub[0].retransmissionQueue))[:])[0].tqh_first = nil
		((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&newSub[0].retransmissionQueue))[:])[0].tqh_last = (*[100000000][]UA_NotificationMessageEntry)(unsafe.Pointer(&((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&newSub[0].retransmissionQueue))[:])[0].tqh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	for {
		((*[100000000]NotificationQueue)(unsafe.Pointer(&newSub[0].notificationQueue))[:])[0].tqh_first = nil
		((*[100000000]NotificationQueue)(unsafe.Pointer(&newSub[0].notificationQueue))[:])[0].tqh_last = (*[100000000][]UA_Notification)(unsafe.Pointer(&((*[100000000]NotificationQueue)(unsafe.Pointer(&newSub[0].notificationQueue))[:])[0].tqh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	return newSub
}
// UA_Subscription_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:27986
func UA_Subscription_deleteMembers(server []UA_Server, sub []UA_Subscription) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Delete the subscription%.0s\x00"), (func() int {
		if (sub[0].session)[0].header.channel != nil {
			return (func() int {
				if (sub[0].session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (sub[0].session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), []byte("\x00"))
	Subscription_unregisterPublishCallback(server, sub)
	var mon []UA_MonitoredItem
	var tmp_mon []UA_MonitoredItem
	{
		// Delete monitored Items
		for mon = ((*[100000000]UA_ListOfUAMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first; mon != nil && func() int {
			tmp_mon = (mon)[0].listEntry.le_next
			tempVar := &1
			return *tempVar
		}() != 0; mon = tmp_mon {
			MonitoredItem_delete(server, mon)
		}
	}
	sub[0].monitoredItemsSize = 0
	var nme []UA_NotificationMessageEntry
	var nme_tmp []UA_NotificationMessageEntry
	{
		// Delete Retransmission Queue
		for nme = ((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_first; nme != nil && func() int {
			nme_tmp = (nme)[0].listEntry.tqe_next
			tempVar := &1
			return *tempVar
		}() != 0; nme = nme_tmp {
			for {
				if (nme)[0].listEntry.tqe_next != nil {
					(nme)[0].listEntry.tqe_next[0].listEntry.tqe_prev = (nme)[0].listEntry.tqe_prev
				} else {
					((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_last = (nme)[0].listEntry.tqe_prev
				}
				(nme)[0].listEntry.tqe_prev[0] = (nme)[0].listEntry.tqe_next
				if noarch.NotInt((0)) != 0 {
					break
				}
			}
			UA_NotificationMessage_deleteMembers((*[100000000]UA_NotificationMessage)(unsafe.Pointer(&nme[0].message))[:])
			_ = nme
		}
	}
	sub[0].retransmissionQueueSize = 0
}
// UA_Subscription_getMonitoredItem - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28010
func UA_Subscription_getMonitoredItem(sub []UA_Subscription, monitoredItemId UA_UInt32) []UA_MonitoredItem {
	var mon []UA_MonitoredItem
	for mon = ((*[100000000]UA_ListOfUAMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first; mon != nil; mon = (mon)[0].listEntry.le_next {
		if UA_UInt32(mon[0].monitoredItemId) == monitoredItemId {
			break
		}
	}
	return mon
}
// UA_Subscription_deleteMonitoredItem - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28020
func UA_Subscription_deleteMonitoredItem(server []UA_Server, sub []UA_Subscription, monitoredItemId UA_UInt32) UA_StatusCode {
	var mon []UA_MonitoredItem
	{
		// Find the MonitoredItem
		for mon = ((*[100000000]UA_ListOfUAMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first; mon != nil; mon = (mon)[0].listEntry.le_next {
			if UA_UInt32(mon[0].monitoredItemId) == monitoredItemId {
				break
			}
		}
	}
	if mon == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2151809024)))))))
	}
	// Remove the MonitoredItem
	MonitoredItem_delete(server, mon)
	sub[0].monitoredItemsSize --
	return 0
}
// UA_Subscription_addMonitoredItem - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28038
func UA_Subscription_addMonitoredItem(sub []UA_Subscription, newMon []UA_MonitoredItem) {
	sub[0].monitoredItemsSize ++
	for {
		if ((newMon)[0].listEntry.le_next = ((*[100000000]UA_ListOfUAMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first) != nil {
			((*[100000000]UA_ListOfUAMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first[0].listEntry.le_prev = (*[100000000][]UA_MonitoredItem)(unsafe.Pointer(&(newMon)[0].listEntry.le_next))[:]
		}
		((*[100000000]UA_ListOfUAMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first = newMon
		(newMon)[0].listEntry.le_prev = (*[100000000][]UA_MonitoredItem)(unsafe.Pointer(&((*[100000000]UA_ListOfUAMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
}
// UA_Subscription_addRetransmissionMessage - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28044
func UA_Subscription_addRetransmissionMessage(server []UA_Server, sub []UA_Subscription, entry []UA_NotificationMessageEntry) {
	if UA_UInt32(server[0].config.maxRetransmissionQueueSize) > UA_UInt32((uint32_t((uint32((0)))))) && UA_UInt32(sub[0].retransmissionQueueSize) >= UA_UInt32(server[0].config.maxRetransmissionQueueSize) {
		var// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28051 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
		lastentry []UA_NotificationMessageEntry = (((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_last)[((0)[0].tqh_last)]
		for {
			if (lastentry)[0].listEntry.tqe_next != nil {
				// Release the oldest entry if there is not enough space
				(lastentry)[0].listEntry.tqe_next[0].listEntry.tqe_prev = (lastentry)[0].listEntry.tqe_prev
			} else {
				((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_last = (lastentry)[0].listEntry.tqe_prev
			}
			(lastentry)[0].listEntry.tqe_prev[0] = (lastentry)[0].listEntry.tqe_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		sub[0].retransmissionQueueSize --
		UA_NotificationMessage_deleteMembers((*[100000000]UA_NotificationMessage)(unsafe.Pointer(&lastentry[0].message))[:])
		_ = lastentry
	}
	for {
		if ((entry)[0].listEntry.tqe_next = ((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_first) != nil {
			// Add entry
			((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_first[0].listEntry.tqe_prev = (*[100000000][]UA_NotificationMessageEntry)(unsafe.Pointer(&(entry)[0].listEntry.tqe_next))[:]
		} else {
			((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_last = (*[100000000][]UA_NotificationMessageEntry)(unsafe.Pointer(&(entry)[0].listEntry.tqe_next))[:]
		}
		((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_first = entry
		(entry)[0].listEntry.tqe_prev = (*[100000000][]UA_NotificationMessageEntry)(unsafe.Pointer(&((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	sub[0].retransmissionQueueSize ++
}
// UA_Subscription_removeRetransmissionMessage - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28063
func UA_Subscription_removeRetransmissionMessage(sub []UA_Subscription, sequenceNumber UA_UInt32) UA_StatusCode {
	var entry []UA_NotificationMessageEntry
	{
		// Find the retransmission message
		for entry = ((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_first; entry != nil; entry = (entry)[0].listEntry.tqe_next {
			if UA_UInt32(entry[0].message.sequenceNumber) == sequenceNumber {
				break
			}
		}
	}
	if entry == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2155479040)))))))
	}
	for {
		if (entry)[0].listEntry.tqe_next != nil {
			// Remove the retransmission message
			(entry)[0].listEntry.tqe_next[0].listEntry.tqe_prev = (entry)[0].listEntry.tqe_prev
		} else {
			((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_last = (entry)[0].listEntry.tqe_prev
		}
		(entry)[0].listEntry.tqe_prev[0] = (entry)[0].listEntry.tqe_next
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	sub[0].retransmissionQueueSize --
	UA_NotificationMessage_deleteMembers((*[100000000]UA_NotificationMessage)(unsafe.Pointer(&entry[0].message))[:])
	_ = entry
	return 0
}
// moveNotificationsFromMonitoredItems - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28084
// Iterate over the monitoreditems of the subscription, starting at mon, and
// * move notifications into the response.
func moveNotificationsFromMonitoredItems(sub []UA_Subscription, mins []UA_MonitoredItemNotification, minsSize uint) {
	var pos uint
	var notification []UA_Notification
	var notification_tmp []UA_Notification
	for notification = ((*[100000000]NotificationQueue)(unsafe.Pointer(&sub[0].notificationQueue))[:])[0].tqh_first; notification != nil && func() int {
		notification_tmp = (notification)[0].globalEntry.tqe_next
		tempVar := &1
		return *tempVar
	}() != 0; notification = notification_tmp {
		if pos >= minsSize {
			return
		}
		var mon []UA_MonitoredItem = notification[0].mon
		for {
			if (notification)[0].globalEntry.tqe_next != nil {
				// Remove the notification from the queues
				(notification)[0].globalEntry.tqe_next[0].globalEntry.tqe_prev = (notification)[0].globalEntry.tqe_prev
			} else {
				((*[100000000]NotificationQueue)(unsafe.Pointer(&sub[0].notificationQueue))[:])[0].tqh_last = (notification)[0].globalEntry.tqe_prev
			}
			(notification)[0].globalEntry.tqe_prev[0] = (notification)[0].globalEntry.tqe_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		for {
			if (notification)[0].listEntry.tqe_next != nil {
				(notification)[0].listEntry.tqe_next[0].listEntry.tqe_prev = (notification)[0].listEntry.tqe_prev
			} else {
				((*[100000000]NotificationQueue)(unsafe.Pointer(&mon[0].queue))[:])[0].tqh_last = (notification)[0].listEntry.tqe_prev
			}
			(notification)[0].listEntry.tqe_prev[0] = (notification)[0].listEntry.tqe_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		mon[0].queueSize --
		sub[0].notificationQueueSize --
		var min []UA_MonitoredItemNotification = (*[100000000]UA_MonitoredItemNotification)(unsafe.Pointer(&mins[pos]))[:]
		// Move the content to the response
		min[0].clientHandle = UA_UInt32(mon[0].clientHandle)
		if uint32(mon[0].monitoredItemType) == uint32(UA_MONITOREDITEMTYPE_CHANGENOTIFY) {
			min[0].value = (*notification[0].data.value())
		} else {
		}
		_ = notification
		// TODO implementation for events
		pos ++
	}
}
// prepareNotificationMessage - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28114
func prepareNotificationMessage(sub []UA_Subscription, message []UA_NotificationMessage, notifications uint) UA_StatusCode {
	// Array of ExtensionObject to hold different kinds of notifications
	//     * (currently only DataChangeNotifications)
	message[0].notificationData = UA_ExtensionObject_new()
	if message[0].notificationData == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	message[0].notificationDataSize = 1
	var dcn []UA_DataChangeNotification = UA_DataChangeNotification_new()
	if dcn == nil {
		// Allocate Notification
		UA_NotificationMessage_deleteMembers(message)
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var data []UA_ExtensionObject = message[0].notificationData
	data[0].encoding = UA_EXTENSIONOBJECT_DECODED
	(*data[0].content.decoded()).data = dcn
	(*data[0].content.decoded()).type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[141]))[:]
	// Allocate array of notifications
	dcn[0].monitoredItems = UA_Array_new(uint(notifications), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[78]))[:]).([]UA_MonitoredItemNotification)
	if dcn[0].monitoredItems == nil {
		UA_NotificationMessage_deleteMembers(message)
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	dcn[0].monitoredItemsSize = notifications
	// Move notifications into the response .. the point of no return
	moveNotificationsFromMonitoredItems(sub, dcn[0].monitoredItems, uint(notifications))
	return 0
}
// UA_Subscription_nextSequenceNumber - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28154
// According to OPC Unified Architecture, Part 4 5.13.1.1 i) The value 0 is
// * never used for the sequence number
func UA_Subscription_nextSequenceNumber(sequenceNumber UA_UInt32) UA_UInt32 {
	var nextSequenceNumber UA_UInt32 = sequenceNumber + UA_UInt32((uint32_t((uint32((1))))))
	if nextSequenceNumber == UA_UInt32((uint32_t((uint32((0)))))) {
		nextSequenceNumber = 1
	}
	return UA_UInt32(nextSequenceNumber)
}
// publishCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28162
func publishCallback(server []UA_Server, sub []UA_Subscription) {
	sub[0].readyNotifications = UA_UInt32(sub[0].notificationQueueSize)
	UA_Subscription_publish(server, sub)
}
// UA_Subscription_publish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28168
func UA_Subscription_publish(server []UA_Server, sub []UA_Subscription) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Publish Callback%.0s\x00"), (func() int {
		if (sub[0].session)[0].header.channel != nil {
			return (func() int {
				if (sub[0].session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (sub[0].session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), []byte("\x00"))
	var pre []UA_PublishResponseEntry = UA_Session_dequeuePublishReq(sub[0].session)
	if pre != nil {
		// Dequeue a response
		// Reset the LifetimeCounter
		sub[0].currentLifetimeCount = 0
	} else {
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | The publish queue is empty%.0s\x00"), (func() int {
			if (sub[0].session)[0].header.channel != nil {
				return (func() int {
					if (sub[0].session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (sub[0].session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), []byte("\x00"))
		sub[0].currentLifetimeCount ++
		if UA_UInt32(sub[0].currentLifetimeCount) > UA_UInt32(sub[0].lifeTimeCount) {
			UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | End of lifetime for subscription%.0s\x00"), (func() int {
				if (sub[0].session)[0].header.channel != nil {
					return (func() int {
						if (sub[0].session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (sub[0].session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), []byte("\x00"))
			UA_Session_deleteSubscription(server, sub[0].session, UA_UInt32(sub[0].subscriptionId))
			// TODO: send a StatusChangeNotification with Bad_Timeout
			return
		}
	}
	if UA_UInt32(sub[0].readyNotifications) > UA_UInt32(sub[0].notificationQueueSize) {
		sub[0].readyNotifications = UA_UInt32(sub[0].notificationQueueSize)
	}
	var notifications UA_UInt32 = UA_UInt32(sub[0].readyNotifications)
	if int((int((noarch.NotUA_Boolean(UA_Boolean(sub[0].publishingEnabled)))))) != 0 {
		// Count the available notifications
		notifications = 0
	}
	var moreNotifications UA_Boolean
	if notifications > UA_UInt32(sub[0].notificationsPerPublish) {
		notifications = UA_UInt32(sub[0].notificationsPerPublish)
		moreNotifications = 1
	}
	if notifications == UA_UInt32((uint32_t((uint32((0)))))) {
		// Return if no notifications and no keepalive
		sub[0].currentKeepAliveCount ++
		if UA_UInt32(sub[0].currentKeepAliveCount) < UA_UInt32(sub[0].maxKeepAliveCount) {
			if pre != nil {
				// Re-enqueue
				UA_Session_queuePublishReq(sub[0].session, pre, 1)
			}
			return
		}
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Sending a KeepAlive%.0s\x00"), (func() int {
			if (sub[0].session)[0].header.channel != nil {
				return (func() int {
					if (sub[0].session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (sub[0].session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), []byte("\x00"))
	}
	var channel []UA_SecureChannel = sub[0].session[0].header.channel
	if channel == nil || pre == nil {
		// We want to send a response. Is it possible?
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Want to send a publish response but can't. The subscription is late.%.0s\x00"), (func() int {
			if (sub[0].session)[0].header.channel != nil {
				return (func() int {
					if (sub[0].session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (sub[0].session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), []byte("\x00"))
		sub[0].state = UA_SUBSCRIPTIONSTATE_LATE
		if pre != nil {
			// Re-enqueue
			UA_Session_queuePublishReq(sub[0].session, pre, 1)
		}
		return
	}
	var response []UA_PublishResponse = (*[100000000]UA_PublishResponse)(unsafe.Pointer(&pre[0].response))[:]
	var message []UA_NotificationMessage = (*[100000000]UA_NotificationMessage)(unsafe.Pointer(&response[0].notificationMessage))[:]
	var retransmission []UA_NotificationMessageEntry
	if notifications > UA_UInt32((uint32_t((uint32((0)))))) {
		// Prepare the response
		// Allocate the retransmission entry
		retransmission = make([]UA_NotificationMessageEntry, 64*1/64)
		if retransmission == nil {
			UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Could not allocate memory for retransmission. The subscription is late.%.0s\x00"), (func() int {
				if (sub[0].session)[0].header.channel != nil {
					return (func() int {
						if (sub[0].session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (sub[0].session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), []byte("\x00"))
			sub[0].state = UA_SUBSCRIPTIONSTATE_LATE
			// Re-enqueue
			UA_Session_queuePublishReq(sub[0].session, pre, 1)
			return
		}
		var retval UA_StatusCode = prepareNotificationMessage(sub, message, uint(UA_UInt32(notifications)))
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			// Prepare the response
			UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Could not prepare the notification message. The subscription is late.%.0s\x00"), (func() int {
				if (sub[0].session)[0].header.channel != nil {
					return (func() int {
						if (sub[0].session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (sub[0].session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), []byte("\x00"))
			_ = retransmission
			sub[0].state = UA_SUBSCRIPTIONSTATE_LATE
			// Re-enqueue
			UA_Session_queuePublishReq(sub[0].session, pre, 1)
			return
		}
	}
	// <-- The point of no return -->
	// Adjust the number of ready notifications
	sub[0].readyNotifications -= notifications
	// Set up the response
	response[0].responseHeader.timestamp = UA_DateTime_now()
	response[0].subscriptionId = UA_UInt32(sub[0].subscriptionId)
	response[0].moreNotifications = moreNotifications
	message[0].publishTime = UA_DateTime(response[0].responseHeader.timestamp)
	// Set the sequence number. The sequence number will be reused if there are
	//     * no notifications (and this is a keepalive message).
	message[0].sequenceNumber = UA_Subscription_nextSequenceNumber(UA_UInt32(sub[0].sequenceNumber))
	if notifications != UA_UInt32((uint32_t((uint32((0)))))) {
		// There are notifications. So we can't reuse the sequence number.
		sub[0].sequenceNumber = UA_UInt32(message[0].sequenceNumber)
		// Put the notification message into the retransmission queue. This
		//         * needs to be done here, so that the message itself is included in the
		//         * available sequence numbers for acknowledgement.
		retransmission[0].message = response[0].notificationMessage
		UA_Subscription_addRetransmissionMessage(server, sub, retransmission)
	}
	var available uint = uint((uint32((uint32((uint32_t((UA_UInt32(sub[0].retransmissionQueueSize)))))))))
	var seqNumbers []UA_UInt32
	if available > uint((0)) {
		// Get the available sequence numbers from the retransmission queue
		response[0].availableSequenceNumbers = seqNumbers
		response[0].availableSequenceNumbersSize = available
		var i uint
		var nme []UA_NotificationMessageEntry
		for nme = ((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_first; nme != nil; nme = (nme)[0].listEntry.tqe_next {
			response[0].availableSequenceNumbers[i] = UA_UInt32(nme[0].message.sequenceNumber)
			i ++
		}
	}
	// Send the response
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Sending out a publish response with %d notifications%.0s\x00"), (func() int {
		if (sub[0].session)[0].header.channel != nil {
			return (func() int {
				if (sub[0].session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (sub[0].session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), UA_UInt32(UA_UInt32(notifications)), []byte("\x00"))
	UA_SecureChannel_sendSymmetricMessage(sub[0].session[0].header.channel, UA_UInt32(pre[0].requestId), UA_MESSAGETYPE_MSG, response, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:])
	// Reset subscription state to normal
	sub[0].state = UA_SUBSCRIPTIONSTATE_NORMAL
	sub[0].currentKeepAliveCount = 0
	// Free the response
	UA_Array_delete(response[0].results, uint(response[0].resultsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	_ = pre
	// No need for UA_PublishResponse_deleteMembers
	if int((int((UA_Boolean(moreNotifications))))) != 0 {
		// Repeat sending responses if there are more notifications to send
		UA_Subscription_publish(server, sub)
	}
}
// UA_Subscription_reachedPublishReqLimit - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28323
func UA_Subscription_reachedPublishReqLimit(server []UA_Server, session []UA_Session) UA_Boolean {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Reached number of publish request limit%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	var pre []UA_PublishResponseEntry = UA_Session_dequeuePublishReq(session)
	if pre == nil {
		// Dequeue a response
		// Cannot publish without a response
		UA_LOG_FATAL(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | No publish requests available%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		return 0
	}
	var response []UA_PublishResponse = (*[100000000]UA_PublishResponse)(unsafe.Pointer(&pre[0].response))[:]
	var message []UA_NotificationMessage = (*[100000000]UA_NotificationMessage)(unsafe.Pointer(&response[0].notificationMessage))[:]
	// <-- The point of no return -->
	// Set up the response. Note that this response has no related subscription id
	response[0].responseHeader.timestamp = UA_DateTime_now()
	response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2155347968)))))))
	response[0].subscriptionId = 0
	response[0].moreNotifications = 0
	message[0].publishTime = UA_DateTime(response[0].responseHeader.timestamp)
	message[0].sequenceNumber = 0
	response[0].availableSequenceNumbersSize = 0
	// Send the response
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Sending out a publish response triggered by too many publish requests%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	UA_SecureChannel_sendSymmetricMessage(session[0].header.channel, UA_UInt32(pre[0].requestId), UA_MESSAGETYPE_MSG, response, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:])
	// Free the response
	UA_Array_delete(response[0].results, uint(response[0].resultsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	_ = pre
	// no need for UA_PublishResponse_deleteMembers
	return 1
}
// Subscription_registerPublishCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28363
func Subscription_registerPublishCallback(server []UA_Server, sub []UA_Subscription) UA_StatusCode {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Register subscription publishing callback%.0s\x00"), (func() int {
		if (sub[0].session)[0].header.channel != nil {
			return (func() int {
				if (sub[0].session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (sub[0].session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), []byte("\x00"))
	if int((int((UA_Boolean(sub[0].publishCallbackIsRegistered))))) != 0 {
		return 0
	}
	var retval UA_StatusCode = UA_Server_addRepeatedCallback(server, UA_ServerCallback(publishCallback), sub, UA_UInt32(UA_Double(sub[0].publishingInterval)), (*[100000000]UA_UInt64)(unsafe.Pointer(&sub[0].publishCallbackId))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	sub[0].publishCallbackIsRegistered = 1
	return 0
}
// Subscription_unregisterPublishCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28382
func Subscription_unregisterPublishCallback(server []UA_Server, sub []UA_Subscription) UA_StatusCode {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Unregister subscription publishing callback%.0s\x00"), (func() int {
		if (sub[0].session)[0].header.channel != nil {
			return (func() int {
				if (sub[0].session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (sub[0].session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), []byte("\x00"))
	if int((int((noarch.NotUA_Boolean(UA_Boolean(sub[0].publishCallbackIsRegistered)))))) != 0 {
		return 0
	}
	var retval UA_StatusCode = UA_Server_removeRepeatedCallback(server, UA_UInt64(sub[0].publishCallbackId))
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	sub[0].publishCallbackIsRegistered = 0
	return 0
}
// UA_Subscription_answerPublishRequestsNoSubscription - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28400
// When the session has publish requests stored but the last subscription is
// * deleted... Send out empty responses
func UA_Subscription_answerPublishRequestsNoSubscription(server []UA_Server, session []UA_Session) {
	if session == nil || ((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first != nil {
		// No session or there are remaining subscriptions
		return
	}
	var pre []UA_PublishResponseEntry
	for (func() []UA_PublishResponseEntry {
		pre = UA_Session_dequeuePublishReq(session)
		return pre
	}()) != nil {
		var response []UA_PublishResponse = (*[100000000]UA_PublishResponse)(unsafe.Pointer(&pre[0].response))[:]
		// Send a response for every queued request
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2155413504)))))))
		response[0].responseHeader.timestamp = UA_DateTime_now()
		UA_SecureChannel_sendSymmetricMessage(session[0].header.channel, UA_UInt32(pre[0].requestId), UA_MESSAGETYPE_MSG, response, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:])
		UA_PublishResponse_deleteMembers(response)
		_ = pre
	}
}
// UA_MonitoredItem_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28437
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_subscription_datachange.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2018 (c) Thomas Stalder, Blue Time Concept SA
//
func UA_MonitoredItem_new(monType int) []UA_MonitoredItem {
	var newItem []UA_MonitoredItem = make([]UA_MonitoredItem, 1*328/328)
	if newItem == nil {
		// Allocate the memory
		return nil
	}
	// Remaining members are covered by calloc zeroing out the memory
	// currently hardcoded
	newItem[0].monitoredItemType = monType
	newItem[0].timestampsToReturn = UA_TIMESTAMPSTORETURN_SOURCE
	for {
		((*[100000000]NotificationQueue)(unsafe.Pointer(&newItem[0].queue))[:])[0].tqh_first = nil
		((*[100000000]NotificationQueue)(unsafe.Pointer(&newItem[0].queue))[:])[0].tqh_last = (*[100000000][]UA_Notification)(unsafe.Pointer(&((*[100000000]NotificationQueue)(unsafe.Pointer(&newItem[0].queue))[:])[0].tqh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	return newItem
}
// MonitoredItem_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28452
func MonitoredItem_delete(server []UA_Server, monitoredItem []UA_MonitoredItem) {
	var sub []UA_Subscription = monitoredItem[0].subscription
	UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | MonitoredItem %i | Delete the MonitoredItem%.0s\x00"), (func() int {
		if (sub[0].session)[0].header.channel != nil {
			return (func() int {
				if (sub[0].session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (sub[0].session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), UA_UInt32(monitoredItem[0].monitoredItemId), []byte("\x00"))
	if uint32(monitoredItem[0].monitoredItemType) == uint32(UA_MONITOREDITEMTYPE_CHANGENOTIFY) {
		// Remove the sampling callback
		MonitoredItem_unregisterSampleCallback(server, monitoredItem)
		var notification []UA_Notification
		var notification_tmp []UA_Notification
		{
			// Clear the queued notifications
			for notification = ((*[100000000]NotificationQueue)(unsafe.Pointer(&monitoredItem[0].queue))[:])[0].tqh_first; notification != nil && func() int {
				notification_tmp = (notification)[0].listEntry.tqe_next
				tempVar := &1
				return *tempVar
			}() != 0; notification = notification_tmp {
				for {
					if (notification)[0].listEntry.tqe_next != nil {
						// Remove the item from the queues
						(notification)[0].listEntry.tqe_next[0].listEntry.tqe_prev = (notification)[0].listEntry.tqe_prev
					} else {
						((*[100000000]NotificationQueue)(unsafe.Pointer(&monitoredItem[0].queue))[:])[0].tqh_last = (notification)[0].listEntry.tqe_prev
					}
					(notification)[0].listEntry.tqe_prev[0] = (notification)[0].listEntry.tqe_next
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
				for {
					if (notification)[0].globalEntry.tqe_next != nil {
						(notification)[0].globalEntry.tqe_next[0].globalEntry.tqe_prev = (notification)[0].globalEntry.tqe_prev
					} else {
						((*[100000000]NotificationQueue)(unsafe.Pointer(&sub[0].notificationQueue))[:])[0].tqh_last = (notification)[0].globalEntry.tqe_prev
					}
					(notification)[0].globalEntry.tqe_prev[0] = (notification)[0].globalEntry.tqe_next
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
				sub[0].notificationQueueSize --
				UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&(*notification[0].data.value())))[:])
				_ = notification
			}
		}
		monitoredItem[0].queueSize = 0
	} else {
		// TODO: Access val data.event
		UA_LOG_ERROR(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("MonitoredItemTypes other than ChangeNotify are not supported yet\x00"))
	}
	if monitoredItem[0].listEntry.le_prev != nil {
		for {
			if (monitoredItem)[0].listEntry.le_next != nil {
				// Remove the monitored item
				(monitoredItem)[0].listEntry.le_next[0].listEntry.le_prev = (monitoredItem)[0].listEntry.le_prev
			}
			(monitoredItem)[0].listEntry.le_prev[0] = (monitoredItem)[0].listEntry.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
	}
	UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&monitoredItem[0].indexRange))[:])
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&monitoredItem[0].lastSampledValue))[:])
	UA_Variant_deleteMembers((*[100000000]UA_Variant)(unsafe.Pointer(&monitoredItem[0].lastValue))[:])
	UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&monitoredItem[0].monitoredNodeId))[:])
	UA_Server_delayedFree(server, monitoredItem)
}
// MonitoredItem_ensureQueueSpace - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28492
func MonitoredItem_ensureQueueSpace(mon []UA_MonitoredItem) {
	if UA_UInt32(mon[0].queueSize) <= UA_UInt32(mon[0].maxQueueSize) {
		return
	}
	var sub []UA_Subscription = mon[0].subscription
	for UA_UInt32(mon[0].queueSize) > UA_UInt32(mon[0].maxQueueSize) {
		var del []UA_Notification
		var after_del []UA_Notification
		if int((int((UA_Boolean(mon[0].discardOldest))))) != 0 {
			// Remove notifications until the queue size is reached
			// At least two Notifications in the queue
			// Make sure that the MonitoredItem does not lose its place in the
			//         * global queue when notifications are removed. Otherwise the
			//         * MonitoredItem can "starve" itself by putting new notifications always
			//         * at the end of the global queue and removing the old ones.
			//         *
			//         * - If the oldest notification is removed, put the second oldest
			//         *   notification right behind it.
			//         * - If the newest notification is removed, put the new notification
			//         *   right behind it.
			// The notification that will be deleted
			// The notification to keep and move after del
			// Remove the oldest
			del = ((*[100000000]NotificationQueue)(unsafe.Pointer(&mon[0].queue))[:])[0].tqh_first
			after_del = (del)[0].listEntry.tqe_next
		} else {
			// Remove the second newest (to keep the up-to-date notification)
			// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28519 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
			after_del = (((*[100000000]NotificationQueue)(unsafe.Pointer(&mon[0].queue))[:])[0].tqh_last)[((0)[0].tqh_last)]
			// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28520 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
			del = ((after_del)[0].listEntry.tqe_prev)[((0)[0].tqh_last)]
		}
		for {
			if (after_del)[0].globalEntry.tqe_next != nil {
				// Move after_del right after del in the global queue
				(after_del)[0].globalEntry.tqe_next[0].globalEntry.tqe_prev = (after_del)[0].globalEntry.tqe_prev
			} else {
				((*[100000000]NotificationQueue)(unsafe.Pointer(&sub[0].notificationQueue))[:])[0].tqh_last = (after_del)[0].globalEntry.tqe_prev
			}
			(after_del)[0].globalEntry.tqe_prev[0] = (after_del)[0].globalEntry.tqe_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		for {
			if ((after_del)[0].globalEntry.tqe_next = (del)[0].globalEntry.tqe_next) != nil {
				(after_del)[0].globalEntry.tqe_next[0].globalEntry.tqe_prev = (*[100000000][]UA_Notification)(unsafe.Pointer(&(after_del)[0].globalEntry.tqe_next))[:]
			} else {
				((*[100000000]NotificationQueue)(unsafe.Pointer(&sub[0].notificationQueue))[:])[0].tqh_last = (*[100000000][]UA_Notification)(unsafe.Pointer(&(after_del)[0].globalEntry.tqe_next))[:]
			}
			(del)[0].globalEntry.tqe_next = after_del
			(after_del)[0].globalEntry.tqe_prev = (*[100000000][]UA_Notification)(unsafe.Pointer(&(del)[0].globalEntry.tqe_next))[:]
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		for {
			if (del)[0].listEntry.tqe_next != nil {
				// Remove the notification from the queues
				(del)[0].listEntry.tqe_next[0].listEntry.tqe_prev = (del)[0].listEntry.tqe_prev
			} else {
				((*[100000000]NotificationQueue)(unsafe.Pointer(&mon[0].queue))[:])[0].tqh_last = (del)[0].listEntry.tqe_prev
			}
			(del)[0].listEntry.tqe_prev[0] = (del)[0].listEntry.tqe_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		for {
			if (del)[0].globalEntry.tqe_next != nil {
				(del)[0].globalEntry.tqe_next[0].globalEntry.tqe_prev = (del)[0].globalEntry.tqe_prev
			} else {
				((*[100000000]NotificationQueue)(unsafe.Pointer(&sub[0].notificationQueue))[:])[0].tqh_last = (del)[0].globalEntry.tqe_prev
			}
			(del)[0].globalEntry.tqe_prev[0] = (del)[0].globalEntry.tqe_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		mon[0].queueSize --
		sub[0].notificationQueueSize --
		if uint32(mon[0].monitoredItemType) == uint32(UA_MONITOREDITEMTYPE_CHANGENOTIFY) {
			// Free the notification
			UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&(*del[0].data.value())))[:])
		} else {
		}
		_ = del
		// TODO: event implemantation
		// Work around a false positive in clang analyzer
	}
	if uint32(mon[0].monitoredItemType) == uint32(UA_MONITOREDITEMTYPE_CHANGENOTIFY) {
		var notification []UA_Notification
		if int((int((UA_Boolean(mon[0].discardOldest))))) != 0 {
			// Get the element that carries the infobits
			notification = ((*[100000000]NotificationQueue)(unsafe.Pointer(&mon[0].queue))[:])[0].tqh_first
		} else {
			// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28552 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
			notification = (((*[100000000]NotificationQueue)(unsafe.Pointer(&mon[0].queue))[:])[0].tqh_last)[((0)[0].tqh_last)]
		}
		if UA_UInt32(mon[0].maxQueueSize) > UA_UInt32((uint32_t((uint32((1)))))) {
			// Add the infobits either to the newest or the new last entry
			(*notification[0].data.value()).hasStatus = 1
			(*notification[0].data.value()).status |= UA_StatusCode((uint32_t((uint32((uint32(1024 | 128)))))))
		} else {
			// If the queue size is reduced to one, remove the infobits
			(*notification[0].data.value()).status &= ^UA_StatusCode((1024 | 128))
		}
	}
}
// outOfDeadBand - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28572
// TODO: Infobits for Events?
func outOfDeadBand(data1 interface{}, data2 interface{}, index uint, type_ []UA_DataType, deadbandValue UA_Double) UA_Boolean {
	if type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[1]))[:] {
		if float64(func() int {
			if int(int8((__int8_t((int8_t(((data1.([]UA_SByte))[index]))))))) > int(int8((__int8_t((int8_t(((data2.([]UA_SByte))[index]))))))) {
				return int(int8((__int8_t((int8_t(((data1.([]UA_SByte))[index]))))))) - int(int8((__int8_t((int8_t(((data2.([]UA_SByte))[index])))))))
			}
			return int(int8((__int8_t((int8_t(((data2.([]UA_SByte))[index]))))))) - int(int8((__int8_t((int8_t(((data1.([]UA_SByte))[index])))))))
		}()) <= deadbandValue {
			return 0
		}
	} else if type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:] {
		if float64(func() int {
			if int(uint8((__uint8_t((uint8_t(((data1.([]UA_Byte))[index]))))))) > int(uint8((__uint8_t((uint8_t(((data2.([]UA_Byte))[index]))))))) {
				return int(uint8((__uint8_t((uint8_t(((data1.([]UA_Byte))[index]))))))) - int(uint8((__uint8_t((uint8_t(((data2.([]UA_Byte))[index])))))))
			}
			return int(uint8((__uint8_t((uint8_t(((data2.([]UA_Byte))[index]))))))) - int(uint8((__uint8_t((uint8_t(((data1.([]UA_Byte))[index])))))))
		}()) <= deadbandValue {
			return 0
		}
	} else if type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[3]))[:] {
		if float64(func() int {
			if int(int16((__int16_t((int16_t(((data1.([]UA_Int16))[index]))))))) > int(int16((__int16_t((int16_t(((data2.([]UA_Int16))[index]))))))) {
				return int(int16((__int16_t((int16_t(((data1.([]UA_Int16))[index]))))))) - int(int16((__int16_t((int16_t(((data2.([]UA_Int16))[index])))))))
			}
			return int(int16((__int16_t((int16_t(((data2.([]UA_Int16))[index]))))))) - int(int16((__int16_t((int16_t(((data1.([]UA_Int16))[index])))))))
		}()) <= deadbandValue {
			return 0
		}
	} else if type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[4]))[:] {
		if float64(func() int {
			if int(uint16((uint16((uint16_t(((data1.([]UA_UInt16))[index]))))))) > int(uint16((uint16((uint16_t(((data2.([]UA_UInt16))[index]))))))) {
				return int(uint16((uint16((uint16_t(((data1.([]UA_UInt16))[index]))))))) - int(uint16((uint16((uint16_t(((data2.([]UA_UInt16))[index])))))))
			}
			return int(uint16((uint16((uint16_t(((data2.([]UA_UInt16))[index]))))))) - int(uint16((uint16((uint16_t(((data1.([]UA_UInt16))[index])))))))
		}()) <= deadbandValue {
			return 0
		}
	} else if type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:] {
		if float64(func() int {
			if (data1.([]UA_Int32))[index] > (data2.([]UA_Int32))[index] {
				return int((__int32_t((int32_t(((data1.([]UA_Int32))[index] - (data2.([]UA_Int32))[index]))))))
			}
			return int((__int32_t((int32_t(((data2.([]UA_Int32))[index] - (data1.([]UA_Int32))[index]))))))
		}()) <= deadbandValue {
			return 0
		}
	} else if type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:] {
		if float64(func() uint32 {
			if (data1.([]UA_UInt32))[index] > (data2.([]UA_UInt32))[index] {
				return uint32((uint32((uint32_t(((data1.([]UA_UInt32))[index] - (data2.([]UA_UInt32))[index]))))))
			}
			return uint32((uint32((uint32_t(((data2.([]UA_UInt32))[index] - (data1.([]UA_UInt32))[index]))))))
		}()) <= deadbandValue {
			return 0
		}
	} else if type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[7]))[:] {
		if float64(func() int32 {
			if (data1.([]UA_Int64))[index] > (data2.([]UA_Int64))[index] {
				return int32((__int64_t((int64_t(((data1.([]UA_Int64))[index] - (data2.([]UA_Int64))[index]))))))
			}
			return int32((__int64_t((int64_t(((data2.([]UA_Int64))[index] - (data1.([]UA_Int64))[index]))))))
		}()) <= deadbandValue {
			return 0
		}
	} else if type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[8]))[:] {
		if float64(func() uint32 {
			if (data1.([]UA_UInt64))[index] > (data2.([]UA_UInt64))[index] {
				return uint32((uint64((uint64_t(((data1.([]UA_UInt64))[index] - (data2.([]UA_UInt64))[index]))))))
			}
			return uint32((uint64((uint64_t(((data2.([]UA_UInt64))[index] - (data1.([]UA_UInt64))[index]))))))
		}()) <= deadbandValue {
			return 0
		}
	} else if type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[9]))[:] {
		if float64(func() float32 {
			if (data1.([]UA_Float))[index] > (data2.([]UA_Float))[index] {
				return float32(((data1.([]UA_Float))[index] - (data2.([]UA_Float))[index]))
			}
			return float32(((data2.([]UA_Float))[index] - (data1.([]UA_Float))[index]))
		}()) <= deadbandValue {
			return 0
		}
	} else if type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:] {
		if func() float64 {
			if (data1.([]UA_Double))[index] > (data2.([]UA_Double))[index] {
				return float64(((data1.([]UA_Double))[index] - (data2.([]UA_Double))[index]))
			}
			return float64(((data2.([]UA_Double))[index] - (data1.([]UA_Double))[index]))
		}() <= deadbandValue {
			return 0
		}
	}
	return 1
}
// updateNeededForFilteredValue - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28617
func updateNeededForFilteredValue(value []UA_Variant, oldValue []UA_Variant, deadbandValue UA_Double) UA_Boolean {
	if uint(value[0].arrayLength) != uint(oldValue[0].arrayLength) {
		return 1
	}
	if value[0].type_ != oldValue[0].type_ {
		return 1
	}
	if int((int((UA_Variant_isScalar(value))))) != 0 {
		return outOfDeadBand(value[0].data, oldValue[0].data, 0, value[0].type_, UA_Double(deadbandValue))
	} else {
		{
			var i uint
			for ; i < uint(value[0].arrayLength); i++ {
				if int((int((outOfDeadBand(value[0].data, oldValue[0].data, uint(i), value[0].type_, UA_Double(deadbandValue)))))) != 0 {
					return 1
				}
			}
		}
	}
	return 0
}
// detectValueChangeWithFilter - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28637
// Errors are returned as no change detected
func detectValueChangeWithFilter(mon []UA_MonitoredItem, value []UA_DataValue, encoding []UA_ByteString) UA_Boolean {
	if int((int((isDataTypeNumeric(value[0].value.type_))))) != 0 && (uint32(mon[0].filter.trigger) == uint32(UA_DATACHANGETRIGGER_STATUSVALUE) || uint32(mon[0].filter.trigger) == uint32(UA_DATACHANGETRIGGER_STATUSVALUETIMESTAMP)) {
		if UA_UInt32(mon[0].filter.deadbandType) == UA_UInt32((uint32_t((uint32((uint32(UA_DEADBANDTYPE_ABSOLUTE))))))) {
			if int((int((noarch.NotUA_Boolean(updateNeededForFilteredValue((*[100000000]UA_Variant)(unsafe.Pointer(&value[0].value))[:], (*[100000000]UA_Variant)(unsafe.Pointer(&mon[0].lastValue))[:], UA_Double(mon[0].filter.deadbandValue))))))) != 0 {
				return 0
			}
		}
	}
	var binsize uint = UA_calcSizeBinary(value, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[22]))[:])
	if binsize == uint((0)) {
		//else if (mon->filter.deadbandType == UA_DEADBANDTYPE_PERCENT) {
		//            // TODO where do this EURange come from ?
		//            UA_Double deadbandValue = fabs(mon->filter.deadbandValue * (EURange.high-EURange.low));
		//            if (!updateNeededForFilteredValue(value->value, mon->lastValue, deadbandValue))
		//                return false;
		//        }
		// Encode the data for comparison
		return 0
	}
	if binsize > uint((512)) && UA_ByteString_allocBuffer(encoding, uint(binsize)) != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Allocate buffer on the heap if necessary
		return 0
	}
	var bufPos []UA_Byte = encoding[0].data
	var bufEnd []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&encoding[0].data[uint(encoding[0].length)]))[:]
	var retval UA_StatusCode = UA_encodeBinary(value, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[22]))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufPos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufEnd))[:], nil, nil)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Encode the value
		return 0
	}
	// The value has changed
	encoding[0].length = uint((uint32((uintptr_t(bufPos) - uintptr_t(encoding[0].data)))))
	return UA_Boolean(mon[0].lastSampledValue.data == nil || int((int((noarch.NotUA_Boolean(UA_String_equal(encoding, (*[100000000]UA_ByteString)(unsafe.Pointer(&mon[0].lastSampledValue))[:])))))) != 0)
}
// detectValueChange - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28679
// Has this sample changed from the last one? The method may allocate additional
// * space for the encoding buffer. Detect the change in encoding->data.
func detectValueChange(mon []UA_MonitoredItem, value []UA_DataValue, encoding []UA_ByteString) UA_Boolean {
	var hasValue UA_Boolean = UA_Boolean(value[0].hasValue)
	if uint32(mon[0].filter.trigger) == uint32(UA_DATACHANGETRIGGER_STATUS) {
		// Apply Filter
		value[0].hasValue = 0
	}
	var hasServerTimestamp UA_Boolean = UA_Boolean(value[0].hasServerTimestamp)
	var hasServerPicoseconds UA_Boolean = UA_Boolean(value[0].hasServerPicoseconds)
	value[0].hasServerTimestamp = 0
	value[0].hasServerPicoseconds = 0
	var hasSourceTimestamp UA_Boolean = UA_Boolean(value[0].hasSourceTimestamp)
	var hasSourcePicoseconds UA_Boolean = UA_Boolean(value[0].hasSourcePicoseconds)
	if uint32(mon[0].filter.trigger) < uint32(UA_DATACHANGETRIGGER_STATUSVALUETIMESTAMP) {
		value[0].hasSourceTimestamp = 0
		value[0].hasSourcePicoseconds = 0
	}
	var res UA_Boolean = detectValueChangeWithFilter(mon, value, encoding)
	// Detect the Value Change
	// Reset the filter
	value[0].hasValue = hasValue
	value[0].hasServerTimestamp = hasServerTimestamp
	value[0].hasServerPicoseconds = hasServerPicoseconds
	value[0].hasSourceTimestamp = hasSourceTimestamp
	value[0].hasSourcePicoseconds = hasSourcePicoseconds
	return UA_Boolean(res)
}
// sampleCallbackWithValue - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28711
// Returns whether a new sample was created
func sampleCallbackWithValue(server []UA_Server, sub []UA_Subscription, monitoredItem []UA_MonitoredItem, value []UA_DataValue, valueEncoding []UA_ByteString) UA_Boolean {
	var stackValueEncoding []UA_Byte = valueEncoding[0].data
	var changed UA_Boolean = detectValueChange(monitoredItem, value, valueEncoding)
	if int((int((noarch.NotUA_Boolean(UA_Boolean(changed)))))) != 0 {
		// Store the pointer to the stack-allocated bytestring to see if a heap-allocation
		//     * was necessary
		// Has the value changed?
		return 0
	}
	var newNotification []UA_Notification = make([]UA_Notification, 280/280)
	if newNotification == nil {
		// Allocate the entry for the publish queue
		UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | MonitoredItem %i | Item for the publishing queue could not be allocated%.0s\x00"), (func() int {
			if (sub[0].session)[0].header.channel != nil {
				return (func() int {
					if (sub[0].session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (sub[0].session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), UA_UInt32(monitoredItem[0].monitoredItemId), []byte("\x00"))
		return 0
	}
	if valueEncoding[0].data == stackValueEncoding {
		var cbs UA_ByteString
		if UA_ByteString_copy(valueEncoding, (*[100000000]UA_ByteString)(unsafe.Pointer(&cbs))[:]) != UA_StatusCode((uint32_t((uint32((0)))))) {
			// Copy valueEncoding on the heap for the next comparison (if not already done)
			UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | MonitoredItem %i | ByteString to compare values could not be created%.0s\x00"), (func() int {
				if (sub[0].session)[0].header.channel != nil {
					return (func() int {
						if (sub[0].session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (sub[0].session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), UA_UInt32(monitoredItem[0].monitoredItemId), []byte("\x00"))
			_ = newNotification
			return 0
		}
		valueEncoding[0] = cbs
	}
	if int((int((UA_Boolean(value[0].hasValue))))) != 0 && uint32(value[0].value.storageType) == uint32(UA_VARIANT_DATA_NODELETE) {
		var retval UA_StatusCode = UA_DataValue_copy(value, (*[100000000]UA_DataValue)(unsafe.Pointer(&(*newNotification[0].data.value())))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			// Prepare the newQueueItem
			// Make a deep copy of the value
			UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | MonitoredItem %i | Item for the publishing queue could not be prepared%.0s\x00"), (func() int {
				if (sub[0].session)[0].header.channel != nil {
					return (func() int {
						if (sub[0].session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (sub[0].session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), UA_UInt32(monitoredItem[0].monitoredItemId), []byte("\x00"))
			_ = newNotification
			return 0
		}
	} else {
		// Just copy the value and do not release it
		(*newNotification[0].data.value()) = value[0]
	}
	// <-- Point of no return -->
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | MonitoredItem %d | Sampled a new value%.0s\x00"), (func() int {
		if (sub[0].session)[0].header.channel != nil {
			return (func() int {
				if (sub[0].session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (sub[0].session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), UA_UInt32(monitoredItem[0].monitoredItemId), []byte("\x00"))
	newNotification[0].mon = monitoredItem
	// Replace the encoding for comparison
	UA_Variant_deleteMembers((*[100000000]UA_Variant)(unsafe.Pointer(&monitoredItem[0].lastValue))[:])
	UA_Variant_copy((*[100000000]UA_Variant)(unsafe.Pointer(&value[0].value))[:], (*[100000000]UA_Variant)(unsafe.Pointer(&monitoredItem[0].lastValue))[:])
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&monitoredItem[0].lastSampledValue))[:])
	monitoredItem[0].lastSampledValue = valueEncoding[0]
	for {
		// Add the notification to the end of local and global queue
		(newNotification)[0].listEntry.tqe_next = nil
		(newNotification)[0].listEntry.tqe_prev = ((*[100000000]NotificationQueue)(unsafe.Pointer(&monitoredItem[0].queue))[:])[0].tqh_last
		// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28782 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
		(*[100000000]NotificationQueue)(unsafe.Pointer(&monitoredItem[0].queue))[:].tqh_last[0] = newNotification
		((*[100000000]NotificationQueue)(unsafe.Pointer(&monitoredItem[0].queue))[:])[0].tqh_last = (*[100000000][]UA_Notification)(unsafe.Pointer(&(newNotification)[0].listEntry.tqe_next))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	for {
		(newNotification)[0].globalEntry.tqe_next = nil
		(newNotification)[0].globalEntry.tqe_prev = ((*[100000000]NotificationQueue)(unsafe.Pointer(&sub[0].notificationQueue))[:])[0].tqh_last
		// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28783 :cannot determine type for RHS 'tqh_last', will use 'void *' for all fields. Is lvalue = true. n.Name = `tqh_last`
		(*[100000000]NotificationQueue)(unsafe.Pointer(&sub[0].notificationQueue))[:].tqh_last[0] = newNotification
		((*[100000000]NotificationQueue)(unsafe.Pointer(&sub[0].notificationQueue))[:])[0].tqh_last = (*[100000000][]UA_Notification)(unsafe.Pointer(&(newNotification)[0].globalEntry.tqe_next))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	monitoredItem[0].queueSize ++
	sub[0].notificationQueueSize ++
	// Remove some notifications if the queue is beyond maximum capacity
	MonitoredItem_ensureQueueSpace(monitoredItem)
	return 1
}
// UA_MonitoredItem_SampleCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28793
func UA_MonitoredItem_SampleCallback(server []UA_Server, monitoredItem []UA_MonitoredItem) {
	var sub []UA_Subscription = monitoredItem[0].subscription
	if uint32(monitoredItem[0].monitoredItemType) != uint32(UA_MONITOREDITEMTYPE_CHANGENOTIFY) {
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | MonitoredItem %i | Not a data change notification%.0s\x00"), (func() int {
			if (sub[0].session)[0].header.channel != nil {
				return (func() int {
					if (sub[0].session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((sub[0].session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (sub[0].session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((sub[0].session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(sub[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(sub[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(sub[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(sub[0].subscriptionId), UA_UInt32(monitoredItem[0].monitoredItemId), []byte("\x00"))
		return
	}
	var rvid UA_ReadValueId
	// Read the value
	UA_ReadValueId_init((*[100000000]UA_ReadValueId)(unsafe.Pointer(&rvid))[:])
	rvid.nodeId = monitoredItem[0].monitoredNodeId
	rvid.attributeId = UA_UInt32(monitoredItem[0].attributeId)
	rvid.indexRange = monitoredItem[0].indexRange
	var value UA_DataValue = UA_Server_readWithSession(server, sub[0].session, (*[100000000]UA_ReadValueId)(unsafe.Pointer(&rvid))[:], monitoredItem[0].timestampsToReturn)
	var stackValueEncoding []UA_Byte = make([]UA_Byte, 512)
	var valueEncoding UA_ByteString
	// Stack-allocate some memory for the value encoding. We might heap-allocate
	//     * more memory if needed. This is just enough for scalars and small
	//     * structures.
	valueEncoding.data = stackValueEncoding
	valueEncoding.length = 512
	var newNotification UA_Boolean = sampleCallbackWithValue(server, sub, monitoredItem, (*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&valueEncoding))[:])
	if int((int((noarch.NotUA_Boolean(UA_Boolean(newNotification)))))) != 0 {
		if valueEncoding.data != stackValueEncoding {
			// Create a sample and compare with the last value
			// Clean up
			UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&valueEncoding))[:])
		}
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
	}
}
// MonitoredItem_registerSampleCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28835
func MonitoredItem_registerSampleCallback(server []UA_Server, mon []UA_MonitoredItem) UA_StatusCode {
	if int((int((UA_Boolean(mon[0].sampleCallbackIsRegistered))))) != 0 {
		return 0
	}
	var retval UA_StatusCode = UA_Server_addRepeatedCallback(server, UA_ServerCallback(UA_MonitoredItem_SampleCallback), mon, UA_UInt32(UA_Double(mon[0].samplingInterval)), (*[100000000]UA_UInt64)(unsafe.Pointer(&mon[0].sampleCallbackId))[:])
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		mon[0].sampleCallbackIsRegistered = 1
	}
	return UA_StatusCode(retval)
}
// MonitoredItem_unregisterSampleCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28847
func MonitoredItem_unregisterSampleCallback(server []UA_Server, mon []UA_MonitoredItem) UA_StatusCode {
	if int((int((noarch.NotUA_Boolean(UA_Boolean(mon[0].sampleCallbackIsRegistered)))))) != 0 {
		return 0
	}
	mon[0].sampleCallbackIsRegistered = 0
	return UA_Server_removeRepeatedCallback(server, UA_UInt64(mon[0].sampleCallbackId))
}
// fillReferenceDescription - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28879
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_services_view.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014-2017 (c) Florian Palm
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015 (c) LEvertz
// *    Copyright 2015 (c) Chris Iatrou
// *    Copyright 2015 (c) Ecosmos
// *    Copyright 2015-2016 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2016 (c) Lorenz Haas
// *    Copyright 2017 (c) pschoppe
// *    Copyright 2017 (c) Julian Grothoff
// *    Copyright 2017 (c) Henrik Norrman
//
// Target node on top of the stack
func fillReferenceDescription(server []UA_Server, curr []UA_Node, ref []UA_NodeReferenceKind, mask UA_UInt32, descr []UA_ReferenceDescription) UA_StatusCode {
	UA_ReferenceDescription_init(descr)
	var retval UA_StatusCode = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&curr[0].nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&descr[0].nodeId.nodeId))[:])
	if uint32((uint32((uint32_t((mask & UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_REFERENCETYPEID))))))))))))) != 0 {
		retval |= UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&ref[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&descr[0].referenceTypeId))[:])
	}
	if uint32((uint32((uint32_t((mask & UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_ISFORWARD))))))))))))) != 0 {
		descr[0].isForward = noarch.NotUA_Boolean(UA_Boolean(ref[0].isInverse))
	}
	if uint32((uint32((uint32_t((mask & UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_NODECLASS))))))))))))) != 0 {
		retval |= UA_NodeClass_copy((*[100000000]int)(unsafe.Pointer(&curr[0].nodeClass))[:], (*[100000000]int)(unsafe.Pointer(&descr[0].nodeClass))[:])
	}
	if uint32((uint32((uint32_t((mask & UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_BROWSENAME))))))))))))) != 0 {
		retval |= UA_QualifiedName_copy((*[100000000]UA_QualifiedName)(unsafe.Pointer(&curr[0].browseName))[:], (*[100000000]UA_QualifiedName)(unsafe.Pointer(&descr[0].browseName))[:])
	}
	if uint32((uint32((uint32_t((mask & UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_DISPLAYNAME))))))))))))) != 0 {
		retval |= UA_LocalizedText_copy((*[100000000]UA_LocalizedText)(unsafe.Pointer(&curr[0].displayName))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&descr[0].displayName))[:])
	}
	if uint32((uint32((uint32_t((mask & UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_TYPEDEFINITION))))))))))))) != 0 {
		if uint32(curr[0].nodeClass) == uint32(UA_NODECLASS_OBJECT) || uint32(curr[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) {
			var type_ []UA_Node = getNodeType(server, curr)
			if type_ != nil {
				retval |= UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&type_[0].nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&descr[0].typeDefinition.nodeId))[:])
				server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
			}
		}
	}
	return UA_StatusCode(retval)
}
// removeCp - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28908
func removeCp(cp []ContinuationPointEntry, session []UA_Session) {
	for {
		if (cp)[0].pointers.le_next != nil {
			(cp)[0].pointers.le_next[0].pointers.le_prev = (cp)[0].pointers.le_prev
		}
		(cp)[0].pointers.le_prev[0] = (cp)[0].pointers.le_next
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&cp[0].identifier))[:])
	UA_BrowseDescription_deleteMembers((*[100000000]UA_BrowseDescription)(unsafe.Pointer(&cp[0].browseDescription))[:])
	_ = cp
	session[0].availableContinuationPoints ++
}
// relevantReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28917
func relevantReference(server []UA_Server, includeSubtypes UA_Boolean, rootRef []UA_NodeId, testRef []UA_NodeId) UA_Boolean {
	if int((int((noarch.NotUA_Boolean(UA_Boolean(includeSubtypes)))))) != 0 {
		return UA_NodeId_equal(rootRef, testRef)
	}
	var hasSubType UA_NodeId = UA_NODEID_NUMERIC(0, 45)
	return isNodeInTree((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], testRef, rootRef, (*[100000000]UA_NodeId)(unsafe.Pointer(&hasSubType))[:], 1)
}
// browseReferences - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:28928
// Returns whether the node / continuationpoint is done
func browseReferences(server []UA_Server, node []UA_Node, cp []ContinuationPointEntry, result []UA_BrowseResult) UA_Boolean {
	var descr []UA_BrowseDescription = (*[100000000]UA_BrowseDescription)(unsafe.Pointer(&cp[0].browseDescription))[:]
	if uint(node[0].referencesSize) == uint((0)) {
		// If the node has no references, just return
		result[0].referencesSize = 0
		return 1
	}
	var browseAll UA_Boolean = UA_NodeId_isNull((*[100000000]UA_NodeId)(unsafe.Pointer(&descr[0].referenceTypeId))[:])
	var maxrefs uint = uint((uint32((uint32((uint32_t((UA_UInt32(cp[0].maxReferences)))))))))
	if maxrefs == uint((0)) {
		if UA_UInt32(server[0].config.maxReferencesPerNode) != UA_UInt32((uint32_t((uint32((0)))))) {
			// Follow all references?
			// How many references can we return at most?
			maxrefs = uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxReferencesPerNode)))))))))
		} else {
			maxrefs = 2147483647
		}
	} else {
		if UA_UInt32(server[0].config.maxReferencesPerNode) != UA_UInt32((uint32_t((uint32((0)))))) && maxrefs > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxReferencesPerNode))))))))) {
			maxrefs = uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxReferencesPerNode)))))))))
		}
	}
	var refs_size uint = 2
	// Allocate the results array
	// True size of the array
	result[0].references = UA_Array_new(uint(refs_size), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[146]))[:]).([]UA_ReferenceDescription)
	if result[0].references == nil {
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		return 0
	}
	var referenceKindIndex uint = uint(cp[0].referenceKindIndex)
	var targetIndex uint = uint(cp[0].targetIndex)
	for ; referenceKindIndex < uint(node[0].referencesSize); referenceKindIndex++ {
		var rk []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&node[0].references[referenceKindIndex]))[:]
		if int((int((UA_Boolean(rk[0].isInverse))))) != 0 && uint32(descr[0].browseDirection) == uint32(UA_BROWSEDIRECTION_FORWARD) {
			// Loop over the node's references
			// Reference in the right direction?
			continue
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(rk[0].isInverse)))))) != 0 && uint32(descr[0].browseDirection) == uint32(UA_BROWSEDIRECTION_INVERSE) {
			continue
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(browseAll)))))) != 0 && int((int((noarch.NotUA_Boolean(relevantReference(server, UA_Boolean(descr[0].includeSubtypes), (*[100000000]UA_NodeId)(unsafe.Pointer(&descr[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&rk[0].referenceTypeId))[:])))))) != 0 {
			// Is the reference part of the hierarchy of references we look for?
			continue
		}
		for ; targetIndex < uint(rk[0].targetIdsSize); targetIndex++ {
			var target []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&rk[0].targetIds[targetIndex].nodeId))[:])
			if target == nil {
				// Loop over the targets
				// Get the node
				continue
			}
			if UA_UInt32(descr[0].nodeClassMask) != UA_UInt32((uint32_t((uint32((0)))))) && uint32(target[0].nodeClass)&uint32((uint32((uint32_t((UA_UInt32(descr[0].nodeClassMask))))))) == 0 {
				// Test if the node class matches
				server.config.nodestore.releaseNode((server)[0].config.nodestore.context, target)
				continue
			}
			if uint(result[0].referencesSize) >= maxrefs {
				// A match! Can we return it?
				// There are references we could not return
				cp[0].referenceKindIndex = referenceKindIndex
				cp[0].targetIndex = targetIndex
				server.config.nodestore.releaseNode((server)[0].config.nodestore.context, target)
				return 0
			}
			if uint(result[0].referencesSize) >= refs_size {
				// Make enough space in the array
				refs_size *= uint((2))
				if refs_size > maxrefs {
					refs_size = maxrefs
				}
				var rd []UA_ReferenceDescription = make([]UA_ReferenceDescription, 472*uint32((refs_size))/472)
				if rd == nil {
					result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
					server.config.nodestore.releaseNode((server)[0].config.nodestore.context, target)
					goto error_recovery
				}
				result[0].references = rd
			}
			// Copy the node description. Target is on top of the stack
			result[0].statusCode = fillReferenceDescription(server, target, rk, UA_UInt32(descr[0].resultMask), (*[100000000]UA_ReferenceDescription)(unsafe.Pointer(&result[0].references[uint(result[0].referencesSize)]))[:])
			server.config.nodestore.releaseNode((server)[0].config.nodestore.context, target)
			if UA_StatusCode(result[0].statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
				goto error_recovery
			}
			// Increase the counter
			result[0].referencesSize ++
		}
		// Start at index 0 for the next reference kind
		targetIndex = 0
	}
	if uint(result[0].referencesSize) == uint((0)) {
		_ = result[0].references
		// No relevant references, return array of length zero
		result[0].references = (1).([]UA_ReferenceDescription)
	}
	// The node is done
	return 1
error_recovery:
	;
	if uint(result[0].referencesSize) == uint((0)) {
		_ = result[0].references
	} else {
		UA_Array_delete(result[0].references, uint(result[0].referencesSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[146]))[:])
	}
	result[0].references = nil
	result[0].referencesSize = 0
	return 0
}
// browseWithContinuation - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29062
// Results for a single browsedescription. This is the inner loop for both
// * Browse and BrowseNext. The ContinuationPoint contains all the data used.
// * Including the BrowseDescription. Returns whether there are remaining
// * references.
func browseWithContinuation(server []UA_Server, session []UA_Session, cp []ContinuationPointEntry, result []UA_BrowseResult) UA_Boolean {
	var descr []UA_BrowseDescription = (*[100000000]UA_BrowseDescription)(unsafe.Pointer(&cp[0].browseDescription))[:]
	if uint32(descr[0].browseDirection) != uint32(UA_BROWSEDIRECTION_BOTH) && uint32(descr[0].browseDirection) != uint32(UA_BROWSEDIRECTION_FORWARD) && uint32(descr[0].browseDirection) != uint32(UA_BROWSEDIRECTION_INVERSE) {
		// Is the browsedirection valid?
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2152529920)))))))
		return 1
	}
	if int((int((noarch.NotUA_Boolean(UA_NodeId_isNull((*[100000000]UA_NodeId)(unsafe.Pointer(&descr[0].referenceTypeId))[:])))))) != 0 {
		var reftype []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&descr[0].referenceTypeId))[:])
		if reftype == nil {
			// Is the reference type valid?
			result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2152464384)))))))
			return 1
		}
		var isRef UA_Boolean = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(reftype[0].nodeClass) == uint32(UA_NODECLASS_REFERENCETYPE)]))))
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, reftype)
		if int((int((noarch.NotUA_Boolean(UA_Boolean(isRef)))))) != 0 {
			result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2152464384)))))))
			return 1
		}
	}
	var node []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&descr[0].nodeId))[:])
	if node == nil {
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
		return 1
	}
	var done UA_Boolean = browseReferences(server, node, cp, result)
	// Browse the references
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
	return UA_Boolean(done)
}
// Operation_Browse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29105
// Start to browse with no previous cp
func Operation_Browse(server []UA_Server, session []UA_Session, maxrefs []UA_UInt32, descr []UA_BrowseDescription, result []UA_BrowseResult) {
	var cp []ContinuationPointEntry = make([]ContinuationPointEntry, 1)
	// Stack-allocate a temporary cp
	noarch.Memset(cp, byte(0), 328)
	cp[0].maxReferences = maxrefs[0]
	// Shallow copy. Deep-copy later if we persist the cp.
	cp[0].browseDescription = descr[0]
	var done UA_Boolean = browseWithContinuation(server, session, cp, result)
	if int((int((done)))) != 0 || UA_StatusCode(result[0].statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Exit early if done or an error occurred
		return
	}
	var cp2 []ContinuationPointEntry
	var retval UA_StatusCode
	if int(uint16((uint16((uint16_t((UA_UInt16(session[0].availableContinuationPoints)))))))) <= 0 || (func() []ContinuationPointEntry {
		cp2 = make([]ContinuationPointEntry, 328*1/328)
		return cp2
	}()) == nil {
		// Persist the new continuation point
		retval = UA_StatusCode((uint32_t((uint32((uint32(2152398848)))))))
		goto cleanup
	}
	noarch.Memset(cp2, byte(0), 328)
	cp2[0].referenceKindIndex = uint(cp[0].referenceKindIndex)
	cp2[0].targetIndex = uint(cp[0].targetIndex)
	cp2[0].maxReferences = UA_UInt32(cp[0].maxReferences)
	retval = UA_BrowseDescription_copy(descr, (*[100000000]UA_BrowseDescription)(unsafe.Pointer(&cp2[0].browseDescription))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		goto cleanup
	}
	var ident []UA_Guid = UA_Guid_new()
	if ident == nil {
		// Create a random bytestring via a Guid
		retval = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		goto cleanup
	}
	ident[0] = UA_Guid_random()
	cp2[0].identifier.data = ident
	cp2[0].identifier.length = uint((16))
	// Return the cp identifier
	retval = UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&cp2[0].identifier))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&result[0].continuationPoint))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		goto cleanup
	}
	for {
		if ((cp2)[0].pointers.le_next = ((*[100000000]ContinuationPointList)(unsafe.Pointer(&session[0].continuationPoints))[:])[0].lh_first) != nil {
			// Attach the cp to the session
			((*[100000000]ContinuationPointList)(unsafe.Pointer(&session[0].continuationPoints))[:])[0].lh_first[0].pointers.le_prev = (*[100000000][]ContinuationPointEntry)(unsafe.Pointer(&(cp2)[0].pointers.le_next))[:]
		}
		((*[100000000]ContinuationPointList)(unsafe.Pointer(&session[0].continuationPoints))[:])[0].lh_first = cp2
		(cp2)[0].pointers.le_prev = (*[100000000][]ContinuationPointEntry)(unsafe.Pointer(&((*[100000000]ContinuationPointList)(unsafe.Pointer(&session[0].continuationPoints))[:])[0].lh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	session[0].availableContinuationPoints --
	return
cleanup:
	;
	if cp2 != nil {
		UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&cp2[0].identifier))[:])
		UA_BrowseDescription_deleteMembers((*[100000000]UA_BrowseDescription)(unsafe.Pointer(&cp2[0].browseDescription))[:])
		_ = cp2
	}
	UA_BrowseResult_deleteMembers(result)
	result[0].statusCode = retval
}
// Service_Browse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29166
func Service_Browse(server []UA_Server, session []UA_Session, request []UA_BrowseRequest, response []UA_BrowseResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing BrowseRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if int((int((noarch.NotUA_Boolean(UA_NodeId_isNull((*[100000000]UA_NodeId)(unsafe.Pointer(&request[0].view.viewId))[:])))))) != 0 {
		// No views supported at the moment
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2154496000)))))))
		return
	}
	var requestedMaxReferencesPerNode UA_UInt32 = UA_UInt32(request[0].requestedMaxReferencesPerNode)
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_Browse), (*[100000000]UA_UInt32)(unsafe.Pointer(&requestedMaxReferencesPerNode))[:], (*[100000000]uint)(unsafe.Pointer(&request[0].nodesToBrowseSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[133]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[189]))[:])
}
// UA_Server_browse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29184
func UA_Server_browse(server []UA_Server, maxrefs UA_UInt32, descr []UA_BrowseDescription) UA_BrowseResult {
	var result UA_BrowseResult
	UA_BrowseResult_init((*[100000000]UA_BrowseResult)(unsafe.Pointer(&result))[:])
	Operation_Browse(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_UInt32)(unsafe.Pointer(&maxrefs))[:], descr, (*[100000000]UA_BrowseResult)(unsafe.Pointer(&result))[:])
	return result
}
// Operation_BrowseNext - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29192
func Operation_BrowseNext(server []UA_Server, session []UA_Session, releaseContinuationPoints []UA_Boolean, continuationPoint []UA_ByteString, result []UA_BrowseResult) {
	var cp []ContinuationPointEntry
	{
		// Find the continuation point
		for cp = ((*[100000000]ContinuationPointList)(unsafe.Pointer(&session[0].continuationPoints))[:])[0].lh_first; cp != nil; cp = (cp)[0].pointers.le_next {
			if int((int((UA_ByteString_equal((*[100000000]UA_ByteString)(unsafe.Pointer(&cp[0].identifier))[:], continuationPoint))))) != 0 {
				break
			}
		}
	}
	if cp == nil {
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2152333312)))))))
		return
	}
	if int((int((UA_Boolean(releaseContinuationPoints[0]))))) != 0 {
		// Remove the cp
		removeCp(cp, session)
		return
	}
	var done UA_Boolean = browseWithContinuation(server, session, cp, result)
	if int((int((UA_Boolean(done))))) != 0 {
		// Continue browsing
		// Remove the cp if there are no references left
		removeCp(cp, session)
	} else {
		var retval UA_StatusCode = UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&cp[0].identifier))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&result[0].continuationPoint))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			// Return the cp identifier
			UA_BrowseResult_deleteMembers(result)
			result[0].statusCode = retval
		}
	}
}
// Service_BrowseNext - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29228
func Service_BrowseNext(server []UA_Server, session []UA_Session, request []UA_BrowseNextRequest, response []UA_BrowseNextResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing BrowseNextRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	var releaseContinuationPoints UA_Boolean = UA_Boolean(request[0].releaseContinuationPoints)
	// request is const
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_BrowseNext), (*[100000000]UA_Boolean)(unsafe.Pointer(&releaseContinuationPoints))[:], (*[100000000]uint)(unsafe.Pointer(&request[0].continuationPointsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[189]))[:])
}
// UA_Server_browseNext - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29242
func UA_Server_browseNext(server []UA_Server, releaseContinuationPoint UA_Boolean, continuationPoint []UA_ByteString) UA_BrowseResult {
	var result UA_BrowseResult
	UA_BrowseResult_init((*[100000000]UA_BrowseResult)(unsafe.Pointer(&result))[:])
	Operation_BrowseNext(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_Boolean)(unsafe.Pointer(&releaseContinuationPoint))[:], continuationPoint, (*[100000000]UA_BrowseResult)(unsafe.Pointer(&result))[:])
	return result
}
// walkBrowsePathElementReferenceTargets - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29256
//
// TranslateBrowsePath
//
func walkBrowsePathElementReferenceTargets(result []UA_BrowsePathResult, targetsSize []uint, next [][]UA_NodeId, nextSize []uint, nextCount []uint, elemDepth UA_UInt32, rk []UA_NodeReferenceKind) {
	{
		var i uint
		for ; i < uint(rk[0].targetIdsSize); i++ {
			var targetId []UA_ExpandedNodeId = (*[100000000]UA_ExpandedNodeId)(unsafe.Pointer(&rk[0].targetIds[i]))[:]
			if UA_UInt32(targetId[0].serverIndex) != UA_UInt32((uint32_t((uint32((0)))))) {
				var tempTargets []UA_BrowsePathTarget = make([]UA_BrowsePathTarget, 152*uint32((targetsSize[0]))*2/152)
				if tempTargets == nil {
					// Loop over the targets
					// Does the reference point to an external server? Then add to the
					//         * targets with the right path depth.
					result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
					return
				}
				result[0].targets = tempTargets
				(targetsSize[0]) *= uint((2))
				result[0].statusCode = UA_ExpandedNodeId_copy(targetId, (*[100000000]UA_ExpandedNodeId)(unsafe.Pointer(&result[0].targets[uint(result[0].targetsSize)].targetId))[:])
				result[0].targets[uint(result[0].targetsSize)].remainingPathIndex = elemDepth
				continue
			}
			if nextSize[0] <= nextCount[0] {
				var tempNext []UA_NodeId = make([]UA_NodeId, 120*uint32((nextSize[0]))*2/120)
				if tempNext == nil {
					// Can we store the node in the array of candidates for deep-search?
					result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
					return
				}
				next[0] = tempNext
				(nextSize[0]) *= uint((2))
			}
			// Add the node to the next array for the following path element
			result[0].statusCode = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&targetId[0].nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&(next[0])[nextCount[0]]))[:])
			if UA_StatusCode(result[0].statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
				return
			}
			nextCount[0] ++
		}
	}
}
// walkBrowsePathElement - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29303
func walkBrowsePathElement(server []UA_Server, session []UA_Session, result []UA_BrowsePathResult, targetsSize []uint, elem []UA_RelativePathElement, elemDepth UA_UInt32, targetName []UA_QualifiedName, current []UA_NodeId, currentCount uint, next [][]UA_NodeId, nextSize []uint, nextCount []uint) {
	var all_refs UA_Boolean = UA_NodeId_isNull((*[100000000]UA_NodeId)(unsafe.Pointer(&elem[0].referenceTypeId))[:])
	if int((int((noarch.NotUA_Boolean(UA_Boolean(all_refs)))))) != 0 {
		var rootRef []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&elem[0].referenceTypeId))[:])
		if rootRef == nil {
			// Return all references?
			return
		}
		var match UA_Boolean = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(rootRef[0].nodeClass) == uint32(UA_NODECLASS_REFERENCETYPE)]))))
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, rootRef)
		if int((int((noarch.NotUA_Boolean(UA_Boolean(match)))))) != 0 {
			return
		}
	}
	{
		var i uint
		for ; i < currentCount; i++ {
			var node []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&current[i]))[:])
			if node == nil {
				if elemDepth == UA_UInt32((uint32_t((uint32((0)))))) {
					// Iterate over all nodes at the current depth-level
					// Get the node
					// If we cannot find the node at depth 0, the starting node does not exist
					result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
				}
				continue
			}
			if targetName != nil && (int(uint16((uint16((uint16_t((UA_UInt16(targetName[0].namespaceIndex)))))))) != int(uint16((uint16((uint16_t((UA_UInt16(node[0].browseName.namespaceIndex)))))))) || int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&targetName[0].name))[:], (*[100000000]UA_String)(unsafe.Pointer(&node[0].browseName.name))[:])))))) != 0) {
				// Test whether the current node has the target name required in the
				//         * previous path element
				server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
				continue
			}
			{
				var r uint
				for ; r < uint(node[0].referencesSize) && UA_StatusCode(result[0].statusCode) == UA_StatusCode((uint32_t((uint32((0)))))); r++ {
					var rk []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&node[0].references[r]))[:]
					if int((int((UA_Boolean(rk[0].isInverse))))) != int((int((UA_Boolean(elem[0].isInverse))))) {
						// Loop over the nodes references
						// Does the direction of the reference match?
						continue
					}
					if int((int((noarch.NotUA_Boolean(UA_Boolean(all_refs)))))) != 0 && int((int((noarch.NotUA_Boolean(relevantReference(server, UA_Boolean(elem[0].includeSubtypes), (*[100000000]UA_NodeId)(unsafe.Pointer(&elem[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&rk[0].referenceTypeId))[:])))))) != 0 {
						// Is the node relevant?
						continue
					}
					// Walk over the reference targets
					walkBrowsePathElementReferenceTargets(result, targetsSize, next, nextSize, nextCount, UA_UInt32(elemDepth), rk)
				}
			}
			server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
		}
	}
}
// addBrowsePathTargets - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29365
// This assumes that result->targets has enough room for all currentCount elements
func addBrowsePathTargets(server []UA_Server, session []UA_Session, result []UA_BrowsePathResult, targetName []UA_QualifiedName, current []UA_NodeId, currentCount uint) {
	{
		var i uint
		for ; i < currentCount; i++ {
			var node []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&current[i]))[:])
			if node == nil {
				UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&current[i]))[:])
				continue
			}
			var valid UA_Boolean = UA_Boolean((int((map[bool]int{false: 0, true: 1}[int(uint16((uint16((uint16_t((UA_UInt16(targetName[0].namespaceIndex)))))))) == int(uint16((uint16((uint16_t((UA_UInt16(node[0].browseName.namespaceIndex)))))))) && int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&targetName[0].name))[:], (*[100000000]UA_String)(unsafe.Pointer(&node[0].browseName.name))[:]))))) != 0]))))
			// Test whether the current node has the target name required in the
			//         * previous path element
			server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
			if int((int((noarch.NotUA_Boolean(UA_Boolean(valid)))))) != 0 {
				UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&current[i]))[:])
				continue
			}
			// Move the nodeid to the target array
			UA_BrowsePathTarget_init((*[100000000]UA_BrowsePathTarget)(unsafe.Pointer(&result[0].targets[uint(result[0].targetsSize)]))[:])
			result[0].targets[uint(result[0].targetsSize)].targetId.nodeId = current[i]
			result[0].targets[uint(result[0].targetsSize)].remainingPathIndex = UA_UInt32(4294967295)
			result[0].targetsSize ++
		}
	}
}
// walkBrowsePath - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29396
func walkBrowsePath(server []UA_Server, session []UA_Session, path []UA_BrowsePath, result []UA_BrowsePathResult, targetsSize uint, current [][]UA_NodeId, currentSize []uint, currentCount []uint, next [][]UA_NodeId, nextSize []uint, nextCount []uint) {
	var targetName []UA_QualifiedName
	{
		var i UA_UInt32
		for ; uint32((uint32((uint32_t((i)))))) < uint32((uint(path[0].relativePath.elementsSize))); i++ {
			// Points to the targetName of the _previous_ path element
			// Iterate over path elements
			walkBrowsePathElement(server, session, result, (*[100000000]uint)(unsafe.Pointer(&targetsSize))[:], (*[100000000]UA_RelativePathElement)(unsafe.Pointer(&path[0].relativePath.elements[i]))[:], UA_UInt32(i), targetName, current[0], uint(currentCount[0]), next, nextSize, nextCount)
			{
				var j uint
				for ; j < currentCount[0]; j++ {
					// Clean members of current
					UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&(current[0])[j]))[:])
				}
			}
			currentCount[0] = 0
			if nextCount[0] == uint((0)) || UA_StatusCode(result[0].statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
				// When no targets are left or an error occurred. None of next's
				//         * elements will be copied to result->targets
				return
			}
			var tSize uint = currentSize[0]
			var tCount uint = currentCount[0]
			var tT []UA_NodeId = current[0]
			// Exchange current and next for the next depth
			currentSize[0] = nextSize[0]
			currentCount[0] = nextCount[0]
			current[0] = next[0]
			nextSize[0] = tSize
			nextCount[0] = tCount
			next[0] = tT
			// Store the target name of the previous path element
			targetName = (*[100000000]UA_QualifiedName)(unsafe.Pointer(&path[0].relativePath.elements[i].targetName))[:]
		}
	}
	if targetsSize < uint(result[0].targetsSize)+currentCount[0] {
		var newTargets []UA_BrowsePathTarget = make([]UA_BrowsePathTarget, 152*uint32((uint(result[0].targetsSize)+currentCount[0]))/152)
		if newTargets == nil {
			// After the last BrowsePathElement, move members from current to the
			//     * result targets
			// Realloc if more space is needed
			result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
			{
				var i uint
				for ; i < currentCount[0]; i++ {
					UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&(current[0])[i]))[:])
				}
			}
			currentCount[0] = 0
			return
		}
		result[0].targets = newTargets
	}
	// Move the elements of current to the targets
	addBrowsePathTargets(server, session, result, targetName, current[0], uint(currentCount[0]))
	currentCount[0] = 0
}
// Operation_TranslateBrowsePathToNodeIds - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29462
func Operation_TranslateBrowsePathToNodeIds(server []UA_Server, session []UA_Session, context interface{}, path []UA_BrowsePath, result []UA_BrowsePathResult) {
	if uint(path[0].relativePath.elementsSize) <= 0 {
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2148466688)))))))
		return
	}
	{
		var i uint
		for ; i < uint(path[0].relativePath.elementsSize); i++ {
			if int((int((UA_QualifiedName_isNull((*[100000000]UA_QualifiedName)(unsafe.Pointer(&path[0].relativePath.elements[i].targetName))[:]))))) != 0 {
				// RelativePath elements must not have an empty targetName
				result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2153775104)))))))
				return
			}
		}
	}
	var targetsSize uint = 10
	// Allocate memory for the targets
	// When to realloc; the member count is stored in
	//                              * result->targetsSize
	result[0].targets = make([]UA_BrowsePathTarget, 152*uint32((targetsSize))*1/152)
	if result[0].targets == nil {
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		return
	}
	var currentSize uint = 10
	var currentCount uint
	var current []UA_NodeId = make([]UA_NodeId, 120*uint32((currentSize))/120)
	if current == nil {
		// Allocate memory for two temporary arrays. One with the results for the
		//     * previous depth of the path. The other for the new results at the current
		//     * depth. The two arrays alternate as we descend down the tree.
		// When to realloc
		// Current elements
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		_ = result[0].targets
		return
	}
	var nextSize uint = 10
	var nextCount uint
	var next []UA_NodeId = make([]UA_NodeId, 120*uint32((nextSize))/120)
	if next == nil {
		// When to realloc
		// Current elements
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		_ = result[0].targets
		_ = current
		return
	}
	// Copy the starting node into current
	result[0].statusCode = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&path[0].startingNode))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&current[0]))[:])
	if UA_StatusCode(result[0].statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
		_ = result[0].targets
		_ = current
		_ = next
		return
	}
	currentCount = 1
	// Walk the path elements
	walkBrowsePath(server, session, path, result, uint(targetsSize), (*[100000000][]UA_NodeId)(unsafe.Pointer(&current))[:], (*[100000000]uint)(unsafe.Pointer(&currentSize))[:], (*[100000000]uint)(unsafe.Pointer(&currentCount))[:], (*[100000000][]UA_NodeId)(unsafe.Pointer(&next))[:], (*[100000000]uint)(unsafe.Pointer(&nextSize))[:], (*[100000000]uint)(unsafe.Pointer(&nextCount))[:])
	if uint(result[0].targetsSize) == uint((0)) && UA_StatusCode(result[0].statusCode) == UA_StatusCode((uint32_t((uint32((0)))))) {
		// No results => BadNoMatch status code
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2154758144)))))))
	}
	_ = current
	// Clean up the temporary arrays and the targets
	_ = next
	if UA_StatusCode(result[0].statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
		{
			var i uint
			for ; i < uint(result[0].targetsSize); i++ {
				UA_BrowsePathTarget_deleteMembers((*[100000000]UA_BrowsePathTarget)(unsafe.Pointer(&result[0].targets[i]))[:])
			}
		}
		_ = result[0].targets
		result[0].targets = nil
		result[0].targetsSize = 0
	}
}
// UA_Server_translateBrowsePathToNodeIds - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29544
func UA_Server_translateBrowsePathToNodeIds(server []UA_Server, browsePath []UA_BrowsePath) UA_BrowsePathResult {
	var result UA_BrowsePathResult
	UA_BrowsePathResult_init((*[100000000]UA_BrowsePathResult)(unsafe.Pointer(&result))[:])
	Operation_TranslateBrowsePathToNodeIds(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], nil, browsePath, (*[100000000]UA_BrowsePathResult)(unsafe.Pointer(&result))[:])
	return result
}
// Service_TranslateBrowsePathsToNodeIds - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29553
func Service_TranslateBrowsePathsToNodeIds(server []UA_Server, session []UA_Session, request []UA_TranslateBrowsePathsToNodeIdsRequest, response []UA_TranslateBrowsePathsToNodeIdsResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing TranslateBrowsePathsToNodeIdsRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxNodesPerTranslateBrowsePathsToNodeIds) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].browsePathsSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxNodesPerTranslateBrowsePathsToNodeIds))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_TranslateBrowsePathToNodeIds), nil, (*[100000000]uint)(unsafe.Pointer(&request[0].browsePathsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[127]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[117]))[:])
}
// Service_RegisterNodes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29573
func Service_RegisterNodes(server []UA_Server, session []UA_Session, request []UA_RegisterNodesRequest, response []UA_RegisterNodesResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing RegisterNodesRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if uint(request[0].nodesToRegisterSize) == uint((0)) {
		//TODO: hang the nodeids to the session if really needed
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148466688)))))))
		return
	}
	if UA_UInt32(server[0].config.maxNodesPerRegisterNodes) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].nodesToRegisterSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxNodesPerRegisterNodes))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	response[0].responseHeader.serviceResult = UA_Array_copy(request[0].nodesToRegister, uint(request[0].nodesToRegisterSize), (*[100000000][]UA_NodeId)(unsafe.Pointer(&response[0].registeredNodeIds))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
	if UA_StatusCode(response[0].responseHeader.serviceResult) == UA_StatusCode((uint32_t((uint32((0)))))) {
		response[0].registeredNodeIdsSize = uint(request[0].nodesToRegisterSize)
	}
}
// Service_UnregisterNodes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29598
func Service_UnregisterNodes(server []UA_Server, session []UA_Session, request []UA_UnregisterNodesRequest, response []UA_UnregisterNodesResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing UnRegisterNodesRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if uint(request[0].nodesToUnregisterSize) == uint((0)) {
		//TODO: remove the nodeids from the session if really needed
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148466688)))))))
	}
	if UA_UInt32(server[0].config.maxNodesPerRegisterNodes) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].nodesToUnregisterSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxNodesPerRegisterNodes))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
}
// getArgumentsVariableNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29634
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_services_call.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2015 (c) Chris Iatrou
// *    Copyright 2015-2017 (c) Florian Palm
// *    Copyright 2015-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2016 (c) LEvertz
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Julian Grothoff
//
func getArgumentsVariableNode(server []UA_Server, ofMethod []UA_MethodNode, withBrowseName UA_String) []UA_VariableNode {
	var hasProperty UA_NodeId = UA_NODEID_NUMERIC(0, 46)
	{
		var i uint
		for ; i < uint(ofMethod[0].referencesSize); i++ {
			var rk []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&ofMethod[0].references[i]))[:]
			if int((int((UA_Boolean(rk[0].isInverse))))) != 0 {
				continue
			}
			if int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&hasProperty))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&rk[0].referenceTypeId))[:])))))) != 0 {
				continue
			}
			{
				var j uint
				for ; j < uint(rk[0].targetIdsSize); j++ {
					var refTarget []UA_Node = server.config.nodestore.getNode(server[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&rk[0].targetIds[j].nodeId))[:])
					if refTarget == nil {
						continue
					}
					if uint32(refTarget[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) && int(uint16((uint16((uint16_t((UA_UInt16(refTarget[0].browseName.namespaceIndex)))))))) == 0 && int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&withBrowseName))[:], (*[100000000]UA_String)(unsafe.Pointer(&refTarget[0].browseName.name))[:]))))) != 0 {
						return refTarget
					}
					server.config.nodestore.releaseNode(server[0].config.nodestore.context, refTarget)
				}
			}
		}
	}
	return nil
}
// typeCheckArguments - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29665
func typeCheckArguments(server []UA_Server, argRequirements []UA_VariableNode, argsSize uint, args []UA_Variant) UA_StatusCode {
	if uint32(argRequirements[0].valueSource) != uint32(UA_VALUESOURCE_DATA) {
		// Verify that we have a Variant containing UA_Argument (scalar or array) in
		//     * the "InputArguments" node
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean((*argRequirements[0].value.data()).value.hasValue)))))) != 0 {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if (*argRequirements[0].value.data()).value.value.type_ != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[65]))[:] {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var argReqsSize uint = uint((*argRequirements[0].value.data()).value.value.arrayLength)
	if int((int((UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&(*argRequirements[0].value.data()).value.value))[:]))))) != 0 {
		// Verify the number of arguments. A scalar argument value is interpreted as
		//     * an array of length 1.
		argReqsSize = 1
	}
	if argReqsSize > argsSize {
		return UA_StatusCode((uint32_t((uint32((uint32(2155216896)))))))
	}
	if argReqsSize < argsSize {
		return UA_StatusCode((uint32_t((uint32((uint32(2162491392)))))))
	}
	var argReqs []UA_Argument = (*argRequirements[0].value.data()).value.value.data.([]UA_Argument)
	{
		var i uint
		for ; i < argReqsSize; i++ {
			if int((int((noarch.NotUA_Boolean(compatibleValue(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&argReqs[i].dataType))[:], UA_Int32(argReqs[i].valueRank), uint(argReqs[i].arrayDimensionsSize), argReqs[i].arrayDimensions, (*[100000000]UA_Variant)(unsafe.Pointer(&args[i]))[:], nil)))))) != 0 {
				// Type-check every argument against the definition
				return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			}
		}
	}
	return 0
}
// validMethodArguments - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29698
func validMethodArguments(server []UA_Server, method []UA_MethodNode, request []UA_CallMethodRequest) UA_StatusCode {
	var inputArguments []UA_VariableNode = getArgumentsVariableNode(server, method, UA_STRING([]byte("InputArguments\x00")))
	var retval UA_StatusCode
	if inputArguments == nil {
		if uint(request[0].inputArgumentsSize) > uint((0)) {
			// Get the input arguments node
			retval = UA_StatusCode((uint32_t((uint32((uint32(2158690304)))))))
		}
		return UA_StatusCode(retval)
	}
	// Verify the request
	retval = typeCheckArguments(server, inputArguments, uint(request[0].inputArgumentsSize), request[0].inputArguments)
	// Release the input arguments node
	server.config.nodestore.releaseNode(server[0].config.nodestore.context, inputArguments)
	return UA_StatusCode(retval)
}

var hasComponentNodeId UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{47}}
var hasSubTypeNodeId UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{45}}
// callWithMethodAndObject - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29725
func callWithMethodAndObject(server []UA_Server, session []UA_Session, request []UA_CallMethodRequest, result []UA_CallMethodResult, method []UA_MethodNode, object []UA_ObjectNode) {
	if uint32(object[0].nodeClass) != uint32(UA_NODECLASS_OBJECT) && uint32(object[0].nodeClass) != uint32(UA_NODECLASS_OBJECTTYPE) {
		// Verify the object's NodeClass
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
		return
	}
	if uint32(method[0].nodeClass) != uint32(UA_NODECLASS_METHOD) {
		// Verify the method's NodeClass
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
		return
	}
	if func([]UA_Server , []UA_NodeId , interface{} , []UA_NodeId , interface_{} , []UA_NodeId , interface_{} , uint , []UA_Variant , uint , []UA_Variant)(UA_StatusCode)((noarch.NotUA_MethodCallback(UA_MethodCallback(method[0].method)))) != nil {
		// Is there a method to execute?
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		return
	}
	var found UA_Boolean
	{
		var i uint
		for ; i < uint(object[0].referencesSize) && int((int((noarch.NotUA_Boolean(UA_Boolean(found)))))) != 0; i++ {
			var rk []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&object[0].references[i]))[:]
			if int((int((UA_Boolean(rk[0].isInverse))))) != 0 {
				// Verify method/object relations. Object must have a hasComponent or a
				//     * subtype of hasComponent reference to the method node. Therefore, check
				//     * every reference between the parent object and the method node if there is
				//     * a hasComponent (or subtype) reference
				continue
			}
			if int((int((noarch.NotUA_Boolean(isNodeInTree((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&rk[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&hasComponentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&hasSubTypeNodeId))[:], 1)))))) != 0 {
				continue
			}
			{
				var j uint
				for ; j < uint(rk[0].targetIdsSize); j++ {
					if int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&rk[0].targetIds[j].nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&request[0].methodId))[:]))))) != 0 {
						found = 1
						break
					}
				}
			}
		}
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(found)))))) != 0 {
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2155151360)))))))
		return
	}
	var executable UA_Boolean = UA_Boolean(method[0].executable)
	if session != (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:] {
		// Verify access rights
		executable = UA_Boolean((int((map[bool]int{false: 0, true: 1}[int((int((executable)))) != 0 && int((int((server.config.accessControl.getUserExecutableOnObject(server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&request[0].methodId))[:], method[0].context, (*[100000000]UA_NodeId)(unsafe.Pointer(&request[0].objectId))[:], object[0].context))))) != 0]))))
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(executable)))))) != 0 {
		// There is no NOTEXECUTABLE?
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2151350272)))))))
		return
	}
	// Verify Input Arguments
	result[0].statusCode = validMethodArguments(server, method, request)
	if UA_StatusCode(result[0].statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
		return
	}
	var outputArguments []UA_VariableNode = getArgumentsVariableNode(server, method, UA_STRING([]byte("OutputArguments\x00")))
	if outputArguments != nil {
		if uint((*outputArguments[0].value.data()).value.value.arrayLength) > uint((0)) {
			// Get the output arguments node
			// Allocate the output arguments array
			result[0].outputArguments = UA_Array_new(uint((*outputArguments[0].value.data()).value.value.arrayLength), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:]).([]UA_Variant)
			if result[0].outputArguments == nil {
				result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
				return
			}
			result[0].outputArgumentsSize = uint((*outputArguments[0].value.data()).value.value.arrayLength)
		}
		// Release the output arguments node
		server.config.nodestore.releaseNode(server[0].config.nodestore.context, outputArguments)
	}
	// Call the method
	result[0].statusCode = method.method(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&method[0].nodeId))[:], uint32((uintptr_t(method[0].context))), (*[100000000]UA_NodeId)(unsafe.Pointer(&object[0].nodeId))[:], uint32((uintptr_t((*[100000000]interface{})(unsafe.Pointer(&object[0].context))[:]))), uint(request[0].inputArgumentsSize), request[0].inputArguments, uint(result[0].outputArgumentsSize), result[0].outputArguments)
}
// Operation_CallMethod - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29821
// TODO: Verify Output matches the argument definition
func Operation_CallMethod(server []UA_Server, session []UA_Session, context interface{}, request []UA_CallMethodRequest, result []UA_CallMethodResult) {
	var method []UA_MethodNode = server.config.nodestore.getNode(server[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&request[0].methodId))[:])
	if method == nil {
		// Get the method node
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2155151360)))))))
		return
	}
	var object []UA_ObjectNode = server.config.nodestore.getNode(server[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&request[0].objectId))[:])
	if object == nil {
		// Get the object node
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2150825984)))))))
		server.config.nodestore.releaseNode(server[0].config.nodestore.context, method)
		return
	}
	// Continue with method and object as context
	callWithMethodAndObject(server, session, request, result, method, object)
	// Release the method and object node
	server.config.nodestore.releaseNode(server[0].config.nodestore.context, method)
	server.config.nodestore.releaseNode(server[0].config.nodestore.context, object)
}
// Service_Call - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29854
func Service_Call(server []UA_Server, session []UA_Session, request []UA_CallRequest, response []UA_CallResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing CallRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxNodesPerMethodCall) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].methodsToCallSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxNodesPerMethodCall))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_CallMethod), nil, (*[100000000]uint)(unsafe.Pointer(&request[0].methodsToCallSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[45]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[41]))[:])
}
// UA_Server_call - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29872
func UA_Server_call(server []UA_Server, request []UA_CallMethodRequest) UA_CallMethodResult {
	var result UA_CallMethodResult
	UA_CallMethodResult_init((*[100000000]UA_CallMethodResult)(unsafe.Pointer(&result))[:])
	Operation_CallMethod(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], nil, request, (*[100000000]UA_CallMethodResult)(unsafe.Pointer(&result))[:])
	return result
}
// signCreateSessionResponse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29898
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_services_session.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2018 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014, 2017 (c) Florian Palm
// *    Copyright 2014-2016 (c) Sten Grüner
// *    Copyright 2015 (c) Chris Iatrou
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017-2018 (c) Mark Giraud, Fraunhofer IOSB
//
func signCreateSessionResponse(server []UA_Server, channel []UA_SecureChannel, request []UA_CreateSessionRequest, response []UA_CreateSessionResponse) UA_StatusCode {
	if uint32(channel[0].securityMode) != uint32(UA_MESSAGESECURITYMODE_SIGN) && uint32(channel[0].securityMode) != uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		return 0
	}
	var securityPolicy []UA_SecurityPolicy = channel[0].securityPolicy
	var signatureData []UA_SignatureData = (*[100000000]UA_SignatureData)(unsafe.Pointer(&response[0].serverSignature))[:]
	var signatureSize uint = securityPolicy.certificateSigningAlgorithm.getLocalSignatureSize(securityPolicy, channel[0].channelContext)
	var retval UA_StatusCode = UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&securityPolicy[0].certificateSigningAlgorithm.uri))[:], (*[100000000]UA_String)(unsafe.Pointer(&signatureData[0].algorithm))[:])
	// Prepare the signature
	retval |= UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&signatureData[0].signature))[:], uint(signatureSize))
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	var dataToSignSize uint = uint(request[0].clientCertificate.length) + uint(request[0].clientNonce.length)
	var dataToSign UA_ByteString
	// Allocate a temp buffer
	retval = UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&dataToSign))[:], uint(dataToSignSize))
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// signatureData->signature is cleaned up with the response
		return UA_StatusCode(retval)
	}
	// Sign the signature
	memcpy(dataToSign.data, request[0].clientCertificate.data, uint32((uint(request[0].clientCertificate.length))))
	memcpy((*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&dataToSign.data[0])) + (uintptr)(int(uint32((uint(request[0].clientCertificate.length)))))*unsafe.Sizeof(dataToSign.data[0]))))[:], request[0].clientNonce.data, uint32((uint(request[0].clientNonce.length))))
	retval = securityPolicy.certificateSigningAlgorithm.sign(securityPolicy, channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&dataToSign))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&signatureData[0].signature))[:])
	// Clean up
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&dataToSign))[:])
	return UA_StatusCode(retval)
}
// Service_CreateSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:29937
func Service_CreateSession(server []UA_Server, channel []UA_SecureChannel, request []UA_CreateSessionRequest, response []UA_CreateSessionResponse) {
	if channel == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		return
	}
	if channel[0].connection == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		return
	}
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Trying to create session%.0s\x00"), (func() int {
		if (channel)[0].connection != nil {
			return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
		}
		return 0
	}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
	if uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGN) || uint32(channel[0].securityMode) == uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		if int((int((noarch.NotUA_Boolean(UA_ByteString_equal((*[100000000]UA_ByteString)(unsafe.Pointer(&request[0].clientCertificate))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].remoteCertificate))[:])))))) != 0 {
			response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148663296)))))))
			return
		}
	}
	if UA_UInt32(channel[0].securityToken.channelId) == UA_UInt32((uint32_t((uint32((0)))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2149711872)))))))
		return
	}
	if int((int((noarch.NotUA_Boolean(UA_ByteString_equal((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].securityPolicy[0].policyUri))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&UA_SECURITY_POLICY_NONE_URI))[:])))))) != 0 && uint(request[0].clientNonce.length) < uint((32)) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2149842944)))))))
		return
	}
	// TODO: Compare application URI with certificate uri (decode certificate)
	// Allocate the response
	response[0].serverEndpoints = UA_Array_new(uint(server[0].config.endpointsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[183]))[:]).([]UA_EndpointDescription)
	if response[0].serverEndpoints == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		return
	}
	response[0].serverEndpointsSize = uint(server[0].config.endpointsSize)
	{
		var i uint
		for ; i < uint(server[0].config.endpointsSize); i++ {
			// Copy the server's endpointdescriptions into the response
			response[0].responseHeader.serviceResult |= UA_EndpointDescription_copy((*[100000000]UA_EndpointDescription)(unsafe.Pointer(&server[0].config.endpoints[i].endpointDescription))[:], (*[100000000]UA_EndpointDescription)(unsafe.Pointer(&response[0].serverEndpoints[i]))[:])
		}
	}
	if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		return
	}
	{
		var i uint
		for ; i < uint(response[0].serverEndpointsSize); i++ {
			// Mirror back the endpointUrl
			UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&response[0].serverEndpoints[i].endpointUrl))[:])
			UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&request[0].endpointUrl))[:], (*[100000000]UA_String)(unsafe.Pointer(&response[0].serverEndpoints[i].endpointUrl))[:])
		}
	}
	var newSession []UA_Session
	response[0].responseHeader.serviceResult = UA_SessionManager_createSession((*[100000000]UA_SessionManager)(unsafe.Pointer(&server[0].sessionManager))[:], channel, request, (*[100000000][]UA_Session)(unsafe.Pointer(&newSession))[:])
	if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Processing CreateSessionRequest failed%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		return
	}
	// Attach the session to the channel. But don't activate for now.
	UA_Session_attachToSecureChannel(newSession, channel)
	// Fill the session information
	newSession[0].maxResponseMessageSize = UA_UInt32(request[0].maxResponseMessageSize)
	newSession[0].maxRequestMessageSize = UA_UInt32(channel[0].connection[0].localConf.maxMessageSize)
	response[0].responseHeader.serviceResult |= UA_ApplicationDescription_copy((*[100000000]UA_ApplicationDescription)(unsafe.Pointer(&request[0].clientDescription))[:], (*[100000000]UA_ApplicationDescription)(unsafe.Pointer(&newSession[0].clientDescription))[:])
	// Prepare the response
	response[0].sessionId = newSession[0].sessionId
	response[0].revisedSessionTimeout = UA_Double(UA_Double(newSession[0].timeout))
	response[0].authenticationToken = newSession[0].header.authenticationToken
	response[0].responseHeader.serviceResult = UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&request[0].sessionName))[:], (*[100000000]UA_String)(unsafe.Pointer(&newSession[0].sessionName))[:])
	if uint(server[0].config.endpointsSize) > uint((0)) {
		response[0].responseHeader.serviceResult |= UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&channel[0].securityPolicy[0].localCertificate))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&response[0].serverCertificate))[:])
	}
	// Create a session nonce
	response[0].responseHeader.serviceResult = UA_Session_generateNonce(newSession)
	response[0].responseHeader.serviceResult |= UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&newSession[0].serverNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&response[0].serverNonce))[:])
	// Sign the signature
	response[0].responseHeader.serviceResult |= signCreateSessionResponse(server, channel, request, response)
	if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Failure -> remove the session
		UA_SessionManager_removeSession((*[100000000]UA_SessionManager)(unsafe.Pointer(&server[0].sessionManager))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&newSession[0].header.authenticationToken))[:])
		return
	}
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x created%.0s\x00"), (func() int {
		if (channel)[0].connection != nil {
			return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
		}
		return 0
	}()), UA_UInt32((channel)[0].securityToken.channelId), UA_UInt32((*newSession[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*newSession[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*newSession[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*newSession[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*newSession[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*newSession[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*newSession[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*newSession[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*newSession[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*newSession[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*newSession[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
}
// checkSignature - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30056
func checkSignature(server []UA_Server, channel []UA_SecureChannel, session []UA_Session, request []UA_ActivateSessionRequest) UA_StatusCode {
	if uint32(channel[0].securityMode) != uint32(UA_MESSAGESECURITYMODE_SIGN) && uint32(channel[0].securityMode) != uint32(UA_MESSAGESECURITYMODE_SIGNANDENCRYPT) {
		return 0
	}
	if channel[0].securityPolicy == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var securityPolicy []UA_SecurityPolicy = channel[0].securityPolicy
	var localCertificate []UA_ByteString = (*[100000000]UA_ByteString)(unsafe.Pointer(&securityPolicy[0].localCertificate))[:]
	var dataToVerifySize uint = uint(localCertificate[0].length) + uint(session[0].serverNonce.length)
	var dataToVerify UA_ByteString
	var retval UA_StatusCode = UA_ByteString_allocBuffer((*[100000000]UA_ByteString)(unsafe.Pointer(&dataToVerify))[:], uint(dataToVerifySize))
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	memcpy(dataToVerify.data, localCertificate[0].data, uint32((uint(localCertificate[0].length))))
	memcpy((*(*[1000000000]UA_Byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&dataToVerify.data[0])) + (uintptr)(int(uint32((uint(localCertificate[0].length)))))*unsafe.Sizeof(dataToVerify.data[0]))))[:], session[0].serverNonce.data, uint32((uint(session[0].serverNonce.length))))
	retval = securityPolicy.certificateSigningAlgorithm.verify(securityPolicy, channel[0].channelContext, (*[100000000]UA_ByteString)(unsafe.Pointer(&dataToVerify))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&request[0].clientSignature.signature))[:])
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&dataToVerify))[:])
	return UA_StatusCode(retval)
}
// Service_ActivateSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30098
// TODO: Check all of the following:
// *
// * Part 4, §5.6.3: When the ActivateSession Service is called for the first time
// * then the Server shall reject the request if the SecureChannel is not same as
// * the one associated with the CreateSession request. Subsequent calls to
// * ActivateSession may be associated with different SecureChannels. If this is
// * the case then the Server shall verify that the Certificate the Client used to
// * create the new SecureChannel is the same as the Certificate used to create
// * the original SecureChannel. In addition, the Server shall verify that the
// * Client supplied a UserIdentityToken that is identical to the token currently
// * associated with the Session. Once the Server accepts the new SecureChannel it
// * shall reject requests sent via the old SecureChannel.
func Service_ActivateSession(server []UA_Server, channel []UA_SecureChannel, session []UA_Session, request []UA_ActivateSessionRequest, response []UA_ActivateSessionResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Execute ActivateSession%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_DateTime(session[0].validTill) < UA_DateTime_nowMonotonic() {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | ActivateSession: SecureChannel %i wants to activate, but the session has timed out%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(channel[0].securityToken.channelId), []byte("\x00"))
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2149908480)))))))
		return
	}
	// Check if the signature corresponds to the ServerNonce that was last sent
	//     * to the client
	response[0].responseHeader.serviceResult = checkSignature(server, channel, session, request)
	if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Signature check failed with status code %s%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(response[0].responseHeader.serviceResult)), []byte("\x00"))
		return
	}
	// Callback into userland access control
	response[0].responseHeader.serviceResult = server.config.accessControl.activateSession(server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], (*[100000000]UA_ExtensionObject)(unsafe.Pointer(&request[0].userIdentityToken))[:], (*[100000000]interface{})(unsafe.Pointer(&session[0].sessionHandle))[:])
	if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | ActivateSession: Could not generate a server nonce%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		return
	}
	if session[0].header.channel != nil && session[0].header.channel != channel {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | ActivateSession: Detach from old channel%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		// Detach the old SecureChannel and attach the new
		UA_Session_detachFromSecureChannel(session)
		UA_Session_attachToSecureChannel(session, channel)
	}
	// Activate the session
	session[0].activated = 1
	UA_Session_updateLifetime(session)
	// Generate a new session nonce for the next time ActivateSession is called
	response[0].responseHeader.serviceResult = UA_Session_generateNonce(session)
	response[0].responseHeader.serviceResult |= UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&session[0].serverNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&response[0].serverNonce))[:])
	if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_Session_detachFromSecureChannel(session)
		session[0].activated = 0
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | ActivateSession: Could not generate a server nonce%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		return
	}
	UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | ActivateSession: Session activated%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
}
// Service_CloseSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30163
func Service_CloseSession(server []UA_Server, session []UA_Session, request []UA_CloseSessionRequest, response []UA_CloseSessionResponse) {
	UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | CloseSession%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	// Callback into userland access control
	server.config.accessControl.closeSession(server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle)
	response[0].responseHeader.serviceResult = UA_SessionManager_removeSession((*[100000000]UA_SessionManager)(unsafe.Pointer(&server[0].sessionManager))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].header.authenticationToken))[:])
}
// getUserWriteMask - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30204
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_services_attribute.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2018 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2014-2017 (c) Florian Palm
// *    Copyright 2015 (c) Christian Fimmers
// *    Copyright 2015-2016 (c) Chris Iatrou
// *    Copyright 2015-2016 (c) Oleksiy Vasylyev
// *    Copyright 2015 (c) wuyangtang
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2016 (c) Lorenz Haas
// *    Copyright 2017 (c) frax2222
// *    Copyright 2017 (c) Thomas Bender
// *    Copyright 2017 (c) Julian Grothoff
// *    Copyright 2017 (c) Jonas Green
// *    Copyright 2017 (c) Henrik Norrman
//
//
// Access Control
//
func getUserWriteMask(server []UA_Server, session []UA_Session, node []UA_Node) UA_UInt32 {
	if session == (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:] {
		// the local admin user has all rights
		return UA_UInt32((uint32_t((uint32((uint32(4294967295)))))))
	}
	return UA_UInt32(node[0].writeMask) & server.config.accessControl.getUserRightsMask(server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], node[0].context)
}
// getAccessLevel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30215
func getAccessLevel(server []UA_Server, session []UA_Session, node []UA_VariableNode) UA_Byte {
	if session == (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:] {
		// the local admin user has all rights
		return UA_Byte(255)
	}
	return UA_Byte(node[0].accessLevel)
}
// getUserAccessLevel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30223
func getUserAccessLevel(server []UA_Server, session []UA_Session, node []UA_VariableNode) UA_Byte {
	if session == (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:] {
		// the local admin user has all rights
		return UA_Byte(255)
	}
	return UA_Byte(int(uint8((__uint8_t((uint8_t((UA_Byte(node[0].accessLevel)))))))) & int(uint8((__uint8_t((uint8_t((server.config.accessControl.getUserAccessLevel(server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], node[0].context)))))))))
}
// getUserExecutable - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30234
func getUserExecutable(server []UA_Server, session []UA_Session, node []UA_MethodNode) UA_Boolean {
	if session == (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:] {
		// the local admin user has all rights
		return 1
	}
	return UA_Boolean(int((int((UA_Boolean(node[0].executable))))) & int((int((server.config.accessControl.getUserExecutable(server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], node[0].context))))))
}
// readArrayDimensionsAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30249
//
// Read Service
//
func readArrayDimensionsAttribute(vn []UA_VariableNode, v []UA_DataValue) UA_StatusCode {
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], vn[0].arrayDimensions, uint(vn[0].arrayDimensionsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	v[0].value.storageType = UA_VARIANT_DATA_NODELETE
	return 0
}
// setScalarNoDelete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30257
func setScalarNoDelete(v []UA_Variant, p interface{}, type_ []UA_DataType) {
	UA_Variant_setScalar(v, uint32((uintptr_t(p))), type_)
	v[0].storageType = UA_VARIANT_DATA_NODELETE
}
// readIsAbstractAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30264
func readIsAbstractAttribute(node []UA_Node, v []UA_Variant) UA_StatusCode {
	var isAbstract []UA_Boolean
	switch uint32(node[0].nodeClass) {
	case uint32(UA_NODECLASS_REFERENCETYPE):
		isAbstract = (*[100000000]UA_Boolean)(unsafe.Pointer(&(node)[0].isAbstract))[:]
	case uint32(UA_NODECLASS_OBJECTTYPE):
		isAbstract = (*[100000000]UA_Boolean)(unsafe.Pointer(&(node)[0].isAbstract))[:]
	case uint32(UA_NODECLASS_VARIABLETYPE):
		isAbstract = (*[100000000]UA_Boolean)(unsafe.Pointer(&(node)[0].isAbstract))[:]
	case uint32(UA_NODECLASS_DATATYPE):
		isAbstract = (*[100000000]UA_Boolean)(unsafe.Pointer(&(node)[0].isAbstract))[:]
	default:
		{
			return UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
		}
	}
	setScalarNoDelete(v, isAbstract, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	v[0].storageType = UA_VARIANT_DATA_NODELETE
	return 0
}
// readValueAttributeFromNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30289
func readValueAttributeFromNode(server []UA_Server, session []UA_Session, vn []UA_VariableNode, v []UA_DataValue, rangeptr []UA_NumericRange) UA_StatusCode {
	if (*vn[0].value.data()).callback.onRead != nil {
		(*vn[0].value.data()).callback.onRead(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&vn[0].nodeId))[:], vn[0].context, rangeptr, (*[100000000]UA_DataValue)(unsafe.Pointer(&(*vn[0].value.data()).value))[:])
		var old []UA_Node = vn
		// Reopen the node to see the changes from onRead
		vn = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&vn[0].nodeId))[:])
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, old)
	}
	if rangeptr != nil {
		return UA_Variant_copyRange((*[100000000]UA_Variant)(unsafe.Pointer(&(*vn[0].value.data()).value.value))[:], (*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], rangeptr[0])
	}
	v[0] = (*vn[0].value.data()).value
	v[0].value.storageType = UA_VARIANT_DATA_NODELETE
	return 0
}
// readValueAttributeFromDataSource - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30309
func readValueAttributeFromDataSource(server []UA_Server, session []UA_Session, vn []UA_VariableNode, v []UA_DataValue, timestamps int, rangeptr []UA_NumericRange) UA_StatusCode {
	if (*vn[0].value.dataSource()).read == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var sourceTimeStamp UA_Boolean = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(timestamps) == uint32(UA_TIMESTAMPSTORETURN_SOURCE) || uint32(timestamps) == uint32(UA_TIMESTAMPSTORETURN_BOTH)]))))
	return (*vn[0].value.dataSource()).read(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&vn[0].nodeId))[:], vn[0].context, UA_Boolean(sourceTimeStamp), rangeptr, v)
}
// readValueAttributeComplete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30322
func readValueAttributeComplete(server []UA_Server, session []UA_Session, vn []UA_VariableNode, timestamps int, indexRange []UA_String, v []UA_DataValue) UA_StatusCode {
	var range_ UA_NumericRange
	var rangeptr []UA_NumericRange
	var retval UA_StatusCode
	if indexRange != nil && uint(indexRange[0].length) > uint((0)) {
		// Compute the index range
		retval = UA_NumericRange_parseFromString((*[100000000]UA_NumericRange)(unsafe.Pointer(&range_))[:], indexRange)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		rangeptr = (*[100000000]UA_NumericRange)(unsafe.Pointer(&range_))[:]
	}
	if uint32(vn[0].valueSource) == uint32(UA_VALUESOURCE_DATA) {
		// Read the value
		retval = readValueAttributeFromNode(server, session, vn, v, rangeptr)
	} else {
		retval = readValueAttributeFromDataSource(server, session, vn, v, timestamps, rangeptr)
	}
	if rangeptr != nil {
		_ = range_.dimensions
		// Clean up
	}
	return UA_StatusCode(retval)
}
// readValueAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30349
func readValueAttribute(server []UA_Server, session []UA_Session, vn []UA_VariableNode, v []UA_DataValue) UA_StatusCode {
	return readValueAttributeComplete(server, session, vn, UA_TIMESTAMPSTORETURN_NEITHER, nil, v)
}

var binEncoding UA_String = UA_String{15 - 1, []byte("Default Binary\x00")}
var xmlEncoding UA_String = UA_String{12 - 1, []byte("Default XML\x00")}
var jsonEncoding UA_String = UA_String{13 - 1, []byte("Default JSON\x00")}
// Read - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30368
// Returns a datavalue that may point into the node via the
// * UA_VARIANT_DATA_NODELETE tag. Don't access the returned DataValue once the
// * node has been released!
func Read(node []UA_Node, server []UA_Server, session []UA_Session, timestampsToReturn int, id []UA_ReadValueId, v []UA_DataValue) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Read the attribute %i%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(id[0].attributeId), []byte("\x00"))
	if uint(id[0].dataEncoding.name.length) > uint((0)) && int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&binEncoding))[:], (*[100000000]UA_String)(unsafe.Pointer(&id[0].dataEncoding.name))[:])))))) != 0 {
		if int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&xmlEncoding))[:], (*[100000000]UA_String)(unsafe.Pointer(&id[0].dataEncoding.name))[:]))))) != 0 || int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&jsonEncoding))[:], (*[100000000]UA_String)(unsafe.Pointer(&id[0].dataEncoding.name))[:]))))) != 0 {
			// Only Binary Encoding is supported
			v[0].status = UA_StatusCode((uint32_t((uint32((uint32(2151219200)))))))
		} else {
			v[0].status = UA_StatusCode((uint32_t((uint32((uint32(2151153664)))))))
		}
		v[0].hasStatus = 1
		return
	}
	if uint(id[0].indexRange.length) > uint((0)) && UA_UInt32(id[0].attributeId) != UA_UInt32((uint32_t((uint32((uint32(UA_ATTRIBUTEID_VALUE))))))) {
		// Index range for an attribute other than value
		v[0].hasStatus = 1
		v[0].status = UA_StatusCode((uint32_t((uint32((uint32(2151088128)))))))
		return
	}
	var retval UA_StatusCode
	switch UA_UInt32(id[0].attributeId) {
	case UA_UInt32(UA_ATTRIBUTEID_NODEID):
		// Read the attribute
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_NODECLASS):
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]int)(unsafe.Pointer(&node[0].nodeClass))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[75]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_BROWSENAME):
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_QualifiedName)(unsafe.Pointer(&node[0].browseName))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_DISPLAYNAME):
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&node[0].displayName))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_DESCRIPTION):
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&node[0].description))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_WRITEMASK):
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_UInt32)(unsafe.Pointer(&node[0].writeMask))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_USERWRITEMASK):
		var userWriteMask UA_UInt32 = getUserWriteMask(server, session, node)
		retval = UA_Variant_setScalarCopy((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_UInt32)(unsafe.Pointer(&userWriteMask))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_ISABSTRACT):
		retval = readIsAbstractAttribute(node, (*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:])
	case UA_UInt32(UA_ATTRIBUTEID_SYMMETRIC):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_REFERENCETYPE))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_Boolean)(unsafe.Pointer(&(node)[0].symmetric))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_INVERSENAME):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_REFERENCETYPE))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&(node)[0].inverseName))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_CONTAINSNOLOOPS):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_VIEW))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_Boolean)(unsafe.Pointer(&(node)[0].containsNoLoops))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_EVENTNOTIFIER):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_VIEW|UA_NODECLASS_OBJECT))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_Byte)(unsafe.Pointer(&(node)[0].eventNotifier))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_VALUE):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_VARIABLE|UA_NODECLASS_VARIABLETYPE))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) {
			var accessLevel UA_Byte = getAccessLevel(server, session, node)
			if noarch.NotInt((int(uint8((__uint8_t((uint8_t((accessLevel))))))) & (1 << uint64(0)))) != 0 {
				// VariableTypes don't have the AccessLevel concept. Always allow reading the value.
				// The access to a value variable is granted via the AccessLevel
				//             * and UserAccessLevel attributes
				retval = UA_StatusCode((uint32_t((uint32((uint32(2151284736)))))))
				break
			}
			accessLevel = getUserAccessLevel(server, session, node)
			if noarch.NotInt((int(uint8((__uint8_t((uint8_t((accessLevel))))))) & (1 << uint64(0)))) != 0 {
				retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
				break
			}
		}
		retval = readValueAttributeComplete(server, session, node, timestampsToReturn, (*[100000000]UA_String)(unsafe.Pointer(&id[0].indexRange))[:], v)
	case UA_UInt32(UA_ATTRIBUTEID_DATATYPE):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_VARIABLE|UA_NODECLASS_VARIABLETYPE))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&(node)[0].dataType))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_VALUERANK):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_VARIABLE|UA_NODECLASS_VARIABLETYPE))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_Int32)(unsafe.Pointer(&(node)[0].valueRank))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_ARRAYDIMENSIONS):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_VARIABLE|UA_NODECLASS_VARIABLETYPE))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		retval = readArrayDimensionsAttribute(node, v)
	case UA_UInt32(UA_ATTRIBUTEID_ACCESSLEVEL):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_VARIABLE))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_Byte)(unsafe.Pointer(&(node)[0].accessLevel))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_USERACCESSLEVEL):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_VARIABLE))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		var userAccessLevel UA_Byte = getUserAccessLevel(server, session, node)
		retval = UA_Variant_setScalarCopy((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_Byte)(unsafe.Pointer(&userAccessLevel))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_VARIABLE))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_Double)(unsafe.Pointer(&(node)[0].minimumSamplingInterval))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_HISTORIZING):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_VARIABLE))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_Boolean)(unsafe.Pointer(&(node)[0].historizing))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_EXECUTABLE):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_METHOD))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		setScalarNoDelete((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_Boolean)(unsafe.Pointer(&(node)[0].executable))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	case UA_UInt32(UA_ATTRIBUTEID_USEREXECUTABLE):
		if noarch.NotUint32((uint32(node[0].nodeClass) & uint32(UA_NODECLASS_METHOD))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
		var userExecutable UA_Boolean = getUserExecutable(server, session, node)
		retval = UA_Variant_setScalarCopy((*[100000000]UA_Variant)(unsafe.Pointer(&v[0].value))[:], (*[100000000]UA_Boolean)(unsafe.Pointer(&userExecutable))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:])
	default:
		{
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
		}
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Return error code when reading has failed
		v[0].hasStatus = 1
		v[0].status = retval
		return
	}
	v[0].hasValue = 1
	if uint32(timestampsToReturn) == uint32(UA_TIMESTAMPSTORETURN_SERVER) || uint32(timestampsToReturn) == uint32(UA_TIMESTAMPSTORETURN_BOTH) {
		// Create server timestamp
		v[0].serverTimestamp = UA_DateTime_now()
		v[0].hasServerTimestamp = 1
	}
	if UA_UInt32(id[0].attributeId) == UA_UInt32((uint32_t((uint32((uint32(UA_ATTRIBUTEID_VALUE))))))) {
		if uint32(timestampsToReturn) == uint32(UA_TIMESTAMPSTORETURN_SERVER) || uint32(timestampsToReturn) == uint32(UA_TIMESTAMPSTORETURN_NEITHER) {
			// Handle source time stamp
			v[0].hasSourceTimestamp = 0
			v[0].hasSourcePicoseconds = 0
		} else if int((int((noarch.NotUA_Boolean(UA_Boolean(v[0].hasSourceTimestamp)))))) != 0 {
			v[0].sourceTimestamp = UA_DateTime_now()
			v[0].hasSourceTimestamp = 1
		}
	}
}
// Operation_Read - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30543
func Operation_Read(server []UA_Server, session []UA_Session, mc []UA_MessageContext, timestampsToReturn int, id []UA_ReadValueId) UA_StatusCode {
	var dv UA_DataValue
	UA_DataValue_init((*[100000000]UA_DataValue)(unsafe.Pointer(&dv))[:])
	var node []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&id[0].nodeId))[:])
	if node != nil {
		// Get the node
		// Perform the read operation
		Read(node, server, session, timestampsToReturn, id, (*[100000000]UA_DataValue)(unsafe.Pointer(&dv))[:])
	} else {
		dv.hasStatus = 1
		dv.status = UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
	}
	var retval UA_StatusCode = UA_MessageContext_encode(mc, (*[100000000]UA_DataValue)(unsafe.Pointer(&dv))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[22]))[:])
	// Encode (and send) the results
	// Free copied data and release the node
	UA_Variant_deleteMembers((*[100000000]UA_Variant)(unsafe.Pointer(&dv.value))[:])
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
	return UA_StatusCode(retval)
}
// Service_Read - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30569
func Service_Read(server []UA_Server, session []UA_Session, mc []UA_MessageContext, request []UA_ReadRequest, responseHeader []UA_ResponseHeader) UA_StatusCode {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing ReadRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if uint32(request[0].timestampsToReturn) > uint32(UA_TIMESTAMPSTORETURN_NEITHER) {
		// Check if the timestampstoreturn is valid
		responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150301696)))))))
	}
	if uint(request[0].nodesToReadSize) == uint((0)) {
		responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148466688)))))))
	}
	if UA_Double(request[0].maxAge) < UA_Double((0)) {
		// Check if maxAge is valid
		responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2154823680)))))))
	}
	if UA_UInt32(server[0].config.maxNodesPerRead) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].nodesToReadSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxNodesPerRead))))))))) {
		// Check if there are too many operations
		responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
	}
	var retval UA_StatusCode = UA_MessageContext_encode(mc, responseHeader, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[84]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Encode the response header
		return UA_StatusCode(retval)
	}
	var arraySize UA_Int32 = UA_Int32(uint(request[0].nodesToReadSize))
	if UA_StatusCode(responseHeader[0].serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Process nothing if we return an error code for the entire service
		arraySize = UA_Int32((int32_t((__int32_t((0))))))
	}
	// Process all ReadValueIds
	retval = UA_MessageContext_encode(mc, (*[100000000]UA_Int32)(unsafe.Pointer(&arraySize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	{
		var i UA_Int32 = UA_Int32((int32_t((__int32_t((0))))))
		for ; i < arraySize; i++ {
			retval = Operation_Read(server, session, mc, request[0].timestampsToReturn, (*[100000000]UA_ReadValueId)(unsafe.Pointer(&request[0].nodesToRead[i]))[:])
			if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
				return UA_StatusCode(retval)
			}
		}
	}
	// Don't return any DiagnosticInfo
	arraySize = UA_Int32((int32_t((__int32_t((-1))))))
	return UA_MessageContext_encode(mc, (*[100000000]UA_Int32)(unsafe.Pointer(&arraySize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:])
}
// UA_Server_readWithSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30618
func UA_Server_readWithSession(server []UA_Server, session []UA_Session, item []UA_ReadValueId, timestampsToReturn int) UA_DataValue {
	var dv UA_DataValue
	UA_DataValue_init((*[100000000]UA_DataValue)(unsafe.Pointer(&dv))[:])
	var node []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].nodeId))[:])
	if node == nil {
		// Get the node
		dv.hasStatus = 1
		dv.status = UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
		return dv
	}
	// Perform the read operation
	Read(node, server, session, timestampsToReturn, item, (*[100000000]UA_DataValue)(unsafe.Pointer(&dv))[:])
	if int((int((UA_Boolean(dv.hasValue))))) != 0 && uint32(dv.value.storageType) == uint32(UA_VARIANT_DATA_NODELETE) {
		var dv2 UA_DataValue
		var retval UA_StatusCode = UA_DataValue_copy((*[100000000]UA_DataValue)(unsafe.Pointer(&dv))[:], (*[100000000]UA_DataValue)(unsafe.Pointer(&dv2))[:])
		if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
			// Do we have to copy the result before releasing the node?
			dv = dv2
		} else {
			UA_DataValue_init((*[100000000]UA_DataValue)(unsafe.Pointer(&dv))[:])
			dv.hasStatus = 1
			dv.status = retval
		}
	}
	// Release the node and return
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
	return dv
}
// UA_Server_read - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30655
// Exposes the Read service to local users
func UA_Server_read(server []UA_Server, item []UA_ReadValueId, timestamps int) UA_DataValue {
	return UA_Server_readWithSession(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], item, timestamps)
}
// __UA_Server_read - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30663
// Used in inline functions exposing the Read service with more syntactic sugar
// * for individual attributes
func __UA_Server_read(server []UA_Server, nodeId []UA_NodeId, attributeId int, v interface{}) UA_StatusCode {
	var item UA_ReadValueId
	// Call the read service
	UA_ReadValueId_init((*[100000000]UA_ReadValueId)(unsafe.Pointer(&item))[:])
	item.nodeId = nodeId[0]
	item.attributeId = UA_UInt32((uint32_t((uint32((uint32(attributeId)))))))
	var dv UA_DataValue = UA_Server_read(server, (*[100000000]UA_ReadValueId)(unsafe.Pointer(&item))[:], UA_TIMESTAMPSTORETURN_NEITHER)
	var retval UA_StatusCode
	if int((int((UA_Boolean(dv.hasStatus))))) != 0 {
		// Check the return value
		retval = UA_StatusCode(dv.status)
	} else if int((int((noarch.NotUA_Boolean(UA_Boolean(dv.hasValue)))))) != 0 {
		retval = UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&dv))[:])
		return UA_StatusCode(retval)
	}
	if uint32(attributeId) == uint32(UA_ATTRIBUTEID_VALUE) || uint32(attributeId) == uint32(UA_ATTRIBUTEID_ARRAYDIMENSIONS) {
		// Return the entire variant
		memcpy(v, (*[100000000]UA_Variant)(unsafe.Pointer(&dv.value))[:], 48)
	} else {
		// Return the variant content only
		memcpy(v, dv.value.data, uint32(uint16((uint16((uint16_t((UA_UInt16(dv.value.type_[0].memSize)))))))))
		_ = dv.value.data
	}
	return UA_StatusCode(retval)
}

type type_equivalence int

const (
	TYPE_EQUIVALENCE_NONE   type_equivalence = 0
	TYPE_EQUIVALENCE_ENUM                    = 1
	TYPE_EQUIVALENCE_OPAQUE                  = 2
)
// typeEquivalence - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30706
//
// Type Checking
//
func typeEquivalence(t []UA_DataType) type_equivalence {
	if int(uint8((__uint8_t((uint8_t((UA_Byte(t[0].membersSize)))))))) != 1 || int((int((noarch.NotUA_Boolean(UA_Boolean(t[0].members[0].namespaceZero)))))) != 0 {
		return TYPE_EQUIVALENCE_NONE
	}
	if int(uint16((uint16((uint16_t((UA_UInt16(t[0].members[0].memberTypeIndex)))))))) == 5 {
		return TYPE_EQUIVALENCE_ENUM
	}
	if int(uint16((uint16((uint16_t((UA_UInt16(t[0].members[0].memberTypeIndex)))))))) == 2 && int((int((UA_Boolean(t[0].members[0].isArray))))) != 0 {
		return TYPE_EQUIVALENCE_OPAQUE
	}
	return TYPE_EQUIVALENCE_NONE
}

var subtypeId UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{45}}
var enumNodeId UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{29}}
// compatibleDataType - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30720
func compatibleDataType(server []UA_Server, dataType []UA_NodeId, constraintDataType []UA_NodeId, isValue UA_Boolean) UA_Boolean {
	if int((int((UA_NodeId_isNull(dataType))))) != 0 {
		// Do not allow empty datatypes
		return 0
	}
	if int((int((UA_NodeId_isNull(constraintDataType))))) != 0 {
		// No constraint (TODO: use variant instead)
		return 1
	}
	if int((int((UA_NodeId_equal(dataType, constraintDataType))))) != 0 {
		// Same datatypes
		return 1
	}
	if int((int((UA_NodeId_equal(constraintDataType, (*[100000000]UA_NodeId)(unsafe.Pointer(&UA_TYPES[23].typeId))[:]))))) != 0 {
		// Variant allows any subtype
		return 1
	}
	if int((int((isNodeInTree((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], dataType, constraintDataType, (*[100000000]UA_NodeId)(unsafe.Pointer(&subtypeId))[:], 1))))) != 0 {
		// Is the value-type a subtype of the required type?
		return 1
	}
	if int((int((UA_NodeId_equal(dataType, (*[100000000]UA_NodeId)(unsafe.Pointer(&UA_TYPES[5].typeId))[:]))))) != 0 && int((int((isNodeInTree((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], constraintDataType, (*[100000000]UA_NodeId)(unsafe.Pointer(&enumNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&subtypeId))[:], 1))))) != 0 {
		// Enum allows Int32 (only)
		return 1
	}
	if int((int((UA_Boolean(isValue))))) != 0 {
		if int(uint16((uint16((uint16_t((UA_UInt16(dataType[0].namespaceIndex)))))))) == 0 && uint32(int((dataType[0].identifierType))) == uint32(int((UA_NODEIDTYPE_NUMERIC))) && UA_UInt32((*dataType[0].identifier.numeric())) <= 25 && int((int((isNodeInTree((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], constraintDataType, dataType, (*[100000000]UA_NodeId)(unsafe.Pointer(&subtypeId))[:], 1))))) != 0 {
			// More checks for the data type of real values (variants)
			// If value is a built-in type: The target data type may be a sub type of
			//         * the built-in type. (e.g. UtcTime is sub-type of DateTime and has a
			//         * DateTime value). A type is builtin if its NodeId is in Namespace 0 and
			//         * has a numeric identifier <= 25 (DiagnosticInfo)
			return 1
		}
	}
	return 0
}
// compatibleValueRankArrayDimensions - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30767
// Test whether a valurank and the given arraydimensions are compatible. zero
// * array dimensions indicate a scalar
func compatibleValueRankArrayDimensions(valueRank UA_Int32, arrayDimensionsSize uint) UA_Boolean {
	switch UA_Int32(valueRank) {
	case -3:
		if arrayDimensionsSize > uint((1)) {
			// the value can be a scalar or a one dimensional array
			return 0
		}
	case -2:
		// the value can be a scalar or an array with any number of dimensions
	case -1:
		if arrayDimensionsSize > uint((0)) {
			// the value is a scalar
			return 0
		}
	case 0:
		if arrayDimensionsSize < uint((1)) {
			// the value is an array with one or more dimensions
			return 0
		}
	default:
		{
			if valueRank < UA_Int32(0) {
				// >= 1: the value is an array with the specified number of dimensions
				return 0
			}
			if arrayDimensionsSize != uint(UA_Int32(valueRank)) {
				// Must hold if the array has a defined length. Null arrays (length -1)
				//         * need to be caught before.
				return 0
			}
		}
	}
	return 1
}
// compatibleValueRanks - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30795
func compatibleValueRanks(valueRank UA_Int32, constraintValueRank UA_Int32) UA_Boolean {
	switch UA_Int32(constraintValueRank) {
	case -3:
		if valueRank != UA_Int32((int32_t((__int32_t((-1)))))) && valueRank != UA_Int32((int32_t((__int32_t((1)))))) {
			// Check if the valuerank of the variabletype allows the change.
			// the value can be a scalar or a one dimensional array
			return 0
		}
	case -2:
		// the value can be a scalar or an array with any number of dimensions
	case -1:
		if valueRank != UA_Int32((int32_t((__int32_t((-1)))))) {
			// the value is a scalar
			return 0
		}
	case 0:
		if valueRank < UA_Int32(0) {
			// the value is an array with one or more dimensions
			return 0
		}
	default:
		{
			if valueRank != constraintValueRank {
				// >= 1: the value is an array with the specified number of dimensions
				return 0
			}
			break
		}
	}
	return 1
}
// compatibleValueRankValue - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30822
// Check if the valuerank allows for the value dimension
func compatibleValueRankValue(valueRank UA_Int32, value []UA_Variant) UA_Boolean {
	if value[0].data == nil {
		// empty arrays (-1) always match
		return 0
	}
	var arrayDims uint = uint(value[0].arrayDimensionsSize)
	if int((int((noarch.NotUA_Boolean(UA_Variant_isScalar(value)))))) != 0 {
		// array but no arraydimensions -> implicit array dimension 1
		arrayDims = 1
	}
	return compatibleValueRankArrayDimensions(UA_Int32(valueRank), uint(arrayDims))
}
// compatibleArrayDimensions - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30834
func compatibleArrayDimensions(constraintArrayDimensionsSize uint, constraintArrayDimensions []UA_UInt32, testArrayDimensionsSize uint, testArrayDimensions []UA_UInt32) UA_Boolean {
	if constraintArrayDimensionsSize == uint((0)) {
		// No array dimensions defined -> everything is permitted if the value rank fits
		return 1
	}
	if testArrayDimensionsSize != constraintArrayDimensionsSize {
		// Dimension count must match
		return 0
	}
	{
		var i uint
		for ; i < constraintArrayDimensionsSize; i++ {
			if constraintArrayDimensions[i] != testArrayDimensions[i] && constraintArrayDimensions[i] != UA_UInt32((uint32_t((uint32((0)))))) {
				// Dimension lengths must match; zero in the constraint is a wildcard
				return 0
			}
		}
	}
	return 1
}
// compatibleValueArrayDimensions - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30856
func compatibleValueArrayDimensions(value []UA_Variant, targetArrayDimensionsSize uint, targetArrayDimensions []UA_UInt32) UA_Boolean {
	var valueArrayDimensionsSize uint = uint(value[0].arrayDimensionsSize)
	var valueArrayDimensions []UA_UInt32 = value[0].arrayDimensions
	var tempArrayDimensions UA_UInt32
	if valueArrayDimensions == nil && int((int((noarch.NotUA_Boolean(UA_Variant_isScalar(value)))))) != 0 {
		valueArrayDimensionsSize = 1
		tempArrayDimensions = UA_UInt32(uint(value[0].arrayLength))
		valueArrayDimensions = (*[100000000]UA_UInt32)(unsafe.Pointer(&tempArrayDimensions))[:]
	}
	return compatibleArrayDimensions(uint(targetArrayDimensionsSize), targetArrayDimensions, uint(valueArrayDimensionsSize), valueArrayDimensions)
}
// compatibleValue - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30871
func compatibleValue(server []UA_Server, targetDataTypeId []UA_NodeId, targetValueRank UA_Int32, targetArrayDimensionsSize uint, targetArrayDimensions []UA_UInt32, value []UA_Variant, range_ []UA_NumericRange) UA_Boolean {
	if value[0].type_ == nil {
		if int((int((UA_NodeId_equal(targetDataTypeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&UA_TYPES[23].typeId))[:]))))) != 0 || int((int((UA_NodeId_equal(targetDataTypeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&UA_NODEID_NULL))[:]))))) != 0 {
			// Empty variant is only allowed for BaseDataType
			return 1
		}
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("Only Variables with data type BaseDataType may contain a null (empty) value\x00"))
		return 0
	}
	if int((int((noarch.NotUA_Boolean(compatibleDataType(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&value[0].type_[0].typeId))[:], targetDataTypeId, 1)))))) != 0 {
		// Has the value a subtype of the required type? BaseDataType (Variant) can
		//     * be anything...
		return 0
	}
	if range_ != nil {
		// Array dimensions are checked later when writing the range
		return 1
	}
	if int((int((noarch.NotUA_Boolean(compatibleValueArrayDimensions(value, uint(targetArrayDimensionsSize), targetArrayDimensions)))))) != 0 {
		// See if the array dimensions match.
		return 0
	}
	// Check if the valuerank allows for the value dimension
	return compatibleValueRankValue(UA_Int32(targetValueRank), value)
}
// adjustValue - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30908
//
// Write Service
//
func adjustValue(server []UA_Server, value []UA_Variant, targetDataTypeId []UA_NodeId) {
	var targetDataType []UA_DataType = UA_findDataType(targetDataTypeId)
	if targetDataType == nil {
		return
	}
	if targetDataType == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:] && value[0].type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[14]))[:] && int((int((UA_Variant_isScalar(value))))) != 0 {
		var str []UA_ByteString = value[0].data.([]UA_ByteString)
		// A string is written to a byte array. the valuerank and array dimensions
		//     * are checked later
		value[0].type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:]
		value[0].arrayLength = uint(str[0].length)
		value[0].data = str[0].data
		return
	}
	var te1 type_equivalence = typeEquivalence(targetDataType)
	var te2 type_equivalence = typeEquivalence(value[0].type_)
	if uint32(int((te1))) != uint32(int((TYPE_EQUIVALENCE_NONE))) && uint32(int((te1))) == uint32(int((te2))) {
		// An enum was sent as an int32, or an opaque type as a bytestring. This
		//     * is detected with the typeIndex indicating the "true" datatype.
		value[0].type_ = targetDataType
		return
	}
}
// writeArrayDimensionsAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:30940
// No more possible equivalencies
// Stack layout: ... | node | type
func writeArrayDimensionsAttribute(server []UA_Server, session []UA_Session, node []UA_VariableNode, type_ []UA_VariableTypeNode, arrayDimensionsSize uint, arrayDimensions []UA_UInt32) UA_StatusCode {
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE) && int((int((UA_Node_hasSubTypeOrInstances(node))))) != 0 {
		// If this is a variabletype, there must be no instances or subtypes of it
		//     * when we do the change
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("Cannot change a variable type with existing instances\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if int((int((noarch.NotUA_Boolean(compatibleValueRankArrayDimensions(UA_Int32(node[0].valueRank), uint(arrayDimensionsSize))))))) != 0 {
		// Check that the array dimensions match with the valuerank
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("The current value rank does not match the new array dimensions\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	if type_[0].arrayDimensions != nil && int((int((noarch.NotUA_Boolean(compatibleArrayDimensions(uint(type_[0].arrayDimensionsSize), type_[0].arrayDimensions, uint(arrayDimensionsSize), arrayDimensions)))))) != 0 {
		// Check if the array dimensions match with the wildcards in the
		//     * variabletype (dimension length 0)
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("Array dimensions in the variable type do not match\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	var value UA_DataValue
	// Check if the current value is compatible with the array dimensions
	UA_DataValue_init((*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
	var retval UA_StatusCode = readValueAttribute(server, session, node, (*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	if int((int((UA_Boolean(value.hasValue))))) != 0 {
		if int((int((noarch.NotUA_Boolean(compatibleValueArrayDimensions((*[100000000]UA_Variant)(unsafe.Pointer(&value.value))[:], uint(arrayDimensionsSize), arrayDimensions)))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
		}
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("Array dimensions in the current value do not match\x00"))
			return UA_StatusCode(retval)
		}
	}
	var oldArrayDimensions []UA_UInt32 = node[0].arrayDimensions
	var oldArrayDimensionsSize uint = uint(node[0].arrayDimensionsSize)
	// Ok, apply
	retval = UA_Array_copy(arrayDimensions, uint(arrayDimensionsSize), (*[100000000][]UA_UInt32)(unsafe.Pointer(&node[0].arrayDimensions))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	UA_Array_delete(oldArrayDimensions, uint(oldArrayDimensionsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	node[0].arrayDimensionsSize = arrayDimensionsSize
	return 0
}
// writeValueRankAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31004
// Stack layout: ... | node | type
func writeValueRankAttribute(server []UA_Server, session []UA_Session, node []UA_VariableNode, type_ []UA_VariableTypeNode, valueRank UA_Int32) UA_StatusCode {
	var raintValueRank UA_Int32 = UA_Int32(type_[0].valueRank)
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE) && int((int((UA_Node_hasSubTypeOrInstances(node))))) != 0 {
		// If this is a variabletype, there must be no instances or subtypes of it
		//     * when we do the change
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if int((int((noarch.NotUA_Boolean(compatibleValueRanks(UA_Int32(valueRank), UA_Int32(constraintValueRank))))))) != 0 {
		// Check if the valuerank of the variabletype allows the change.
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	var arrayDims uint = uint(node[0].arrayDimensionsSize)
	if arrayDims == uint((0)) {
		var value UA_DataValue
		// Check if the new valuerank is compatible with the array dimensions. Use
		//     * the read service to handle data sources.
		// the value could be an array with no arrayDimensions defined.
		//           dimensions zero indicate a scalar for compatibleValueRankArrayDimensions.
		UA_DataValue_init((*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
		var retval UA_StatusCode = readValueAttribute(server, session, node, (*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(value.hasValue)))))) != 0 || value.value.type_ == nil {
			// no value -> apply
			node[0].valueRank = valueRank
			return 0
		}
		if int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&value.value))[:])))))) != 0 {
			arrayDims = 1
		}
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
	}
	if int((int((noarch.NotUA_Boolean(compatibleValueRankArrayDimensions(UA_Int32(valueRank), uint(arrayDims))))))) != 0 {
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	// All good, apply the change
	node[0].valueRank = valueRank
	return 0
}
// writeDataTypeAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31051
func writeDataTypeAttribute(server []UA_Server, session []UA_Session, node []UA_VariableNode, type_ []UA_VariableTypeNode, dataType []UA_NodeId) UA_StatusCode {
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE) && int((int((UA_Node_hasSubTypeOrInstances(node))))) != 0 {
		// If this is a variabletype, there must be no instances or subtypes of it
		//       when we do the change
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if int((int((noarch.NotUA_Boolean(compatibleDataType(server, dataType, (*[100000000]UA_NodeId)(unsafe.Pointer(&type_[0].dataType))[:], 0)))))) != 0 {
		// Does the new type match the constraints of the variabletype?
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	var value UA_DataValue
	// Check if the current value would match the new type
	UA_DataValue_init((*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
	var retval UA_StatusCode = readValueAttribute(server, session, node, (*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	if int((int((UA_Boolean(value.hasValue))))) != 0 {
		if int((int((noarch.NotUA_Boolean(compatibleValue(server, dataType, UA_Int32(node[0].valueRank), uint(node[0].arrayDimensionsSize), node[0].arrayDimensions, (*[100000000]UA_Variant)(unsafe.Pointer(&value.value))[:], nil)))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
		}
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("The current value does not match the new data type\x00"))
			return UA_StatusCode(retval)
		}
	}
	var dtCopy UA_NodeId = node[0].dataType
	// Replace the datatype nodeid
	retval = UA_NodeId_copy(dataType, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].dataType))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		node[0].dataType = dtCopy
		return UA_StatusCode(retval)
	}
	UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&dtCopy))[:])
	return 0
}
// writeValueAttributeWithoutRange - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31098
func writeValueAttributeWithoutRange(node []UA_VariableNode, value []UA_DataValue) UA_StatusCode {
	var new_value UA_DataValue
	var retval UA_StatusCode = UA_DataValue_copy(value, (*[100000000]UA_DataValue)(unsafe.Pointer(&new_value))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&(*node[0].value.data()).value))[:])
	(*node[0].value.data()).value = new_value
	return 0
}
// writeValueAttributeWithRange - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31109
func writeValueAttributeWithRange(node []UA_VariableNode, value []UA_DataValue, rangeptr []UA_NumericRange) UA_StatusCode {
	if UA_StatusCode(value[0].status) != UA_StatusCode((*node[0].value.data()).value.status) || int((int((noarch.NotUA_Boolean(UA_Boolean(value[0].hasValue)))))) != 0 || int((int((noarch.NotUA_Boolean(UA_Boolean((*node[0].value.data()).value.hasValue)))))) != 0 {
		// Value on both sides?
		return UA_StatusCode((uint32_t((uint32((uint32(2151022592)))))))
	}
	var editableValue UA_Variant
	var v []UA_Variant = (*[100000000]UA_Variant)(unsafe.Pointer(&value[0].value))[:]
	if int((int((UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&value[0].value))[:]))))) != 0 {
		// Make scalar a one-entry array for range matching
		editableValue = value[0].value
		editableValue.arrayLength = 1
		v = (*[100000000]UA_Variant)(unsafe.Pointer(&editableValue))[:]
	}
	if (*node[0].value.data()).value.value.type_ == nil || v[0].type_ == nil || int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&(*node[0].value.data()).value.value.type_[0].typeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&v[0].type_[0].typeId))[:])))))) != 0 {
		// Check that the type is an exact match and not only "compatible"
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	var retval UA_StatusCode = UA_Variant_setRangeCopy((*[100000000]UA_Variant)(unsafe.Pointer(&(*node[0].value.data()).value.value))[:], v[0].data, uint(v[0].arrayLength), rangeptr[0])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Write the value
		return UA_StatusCode(retval)
	}
	// Write the status and timestamps
	(*node[0].value.data()).value.hasStatus = UA_Boolean(value[0].hasStatus)
	(*node[0].value.data()).value.status = UA_StatusCode(value[0].status)
	(*node[0].value.data()).value.hasSourceTimestamp = UA_Boolean(value[0].hasSourceTimestamp)
	(*node[0].value.data()).value.sourceTimestamp = UA_DateTime(value[0].sourceTimestamp)
	(*node[0].value.data()).value.hasSourcePicoseconds = UA_Boolean(value[0].hasSourcePicoseconds)
	(*node[0].value.data()).value.sourcePicoseconds = UA_UInt16(value[0].sourcePicoseconds)
	return 0
}
// writeValueAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31149
// Stack layout: ... | node
func writeValueAttribute(server []UA_Server, session []UA_Session, node []UA_VariableNode, value []UA_DataValue, indexRange []UA_String) UA_StatusCode {
	var range_ UA_NumericRange
	var rangeptr []UA_NumericRange
	var retval UA_StatusCode
	if indexRange != nil && uint(indexRange[0].length) > uint((0)) {
		// Parse the range
		retval = UA_NumericRange_parseFromString((*[100000000]UA_NumericRange)(unsafe.Pointer(&range_))[:], indexRange)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		rangeptr = (*[100000000]UA_NumericRange)(unsafe.Pointer(&range_))[:]
	}
	var adjustedValue UA_DataValue = value[0]
	if int((int((UA_Boolean(value[0].hasValue))))) != 0 && value[0].value.type_ != nil {
		// Created an editable version. The data is not touched. Only the variant
		//     * "container".
		// Type checking. May change the type of editableValue
		adjustValue(server, (*[100000000]UA_Variant)(unsafe.Pointer(&adjustedValue.value))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].dataType))[:])
		var compatible UA_Boolean
		if uint32(int((value[0].value.type_[0].typeId.identifierType))) == uint32(int((UA_NODEIDTYPE_NUMERIC))) && UA_UInt32((*value[0].value.type_[0].typeId.identifier.numeric())) == UA_UInt32((uint32_t((uint32((22)))))) {
			var nodeDataType UA_NodeId = UA_NODEID_NUMERIC(0, 22)
			// The value may be an extension object, especially the nodeset compiler
			//         * uses extension objects to write variable values. If value is an
			//         * extension object we check if the current node value is also an
			//         * extension object.
			compatible = compatibleValue(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeDataType))[:], UA_Int32(node[0].valueRank), uint(node[0].arrayDimensionsSize), node[0].arrayDimensions, (*[100000000]UA_Variant)(unsafe.Pointer(&adjustedValue.value))[:], rangeptr)
		} else {
			compatible = compatibleValue(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].dataType))[:], UA_Int32(node[0].valueRank), uint(node[0].arrayDimensionsSize), node[0].arrayDimensions, (*[100000000]UA_Variant)(unsafe.Pointer(&adjustedValue.value))[:], rangeptr)
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(compatible)))))) != 0 {
			if rangeptr != nil {
				_ = range_.dimensions
			}
			return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
		}
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(adjustedValue.hasSourceTimestamp)))))) != 0 {
		// Set the source timestamp if there is none
		adjustedValue.sourceTimestamp = UA_DateTime_now()
		adjustedValue.hasSourceTimestamp = 1
	}
	if uint32(node[0].valueSource) == uint32(UA_VALUESOURCE_DATA) {
		if rangeptr == nil {
			// Ok, do it
			retval = writeValueAttributeWithoutRange(node, (*[100000000]UA_DataValue)(unsafe.Pointer(&adjustedValue))[:])
		} else {
			retval = writeValueAttributeWithRange(node, (*[100000000]UA_DataValue)(unsafe.Pointer(&adjustedValue))[:], rangeptr)
		}
		if retval == UA_StatusCode((uint32_t((uint32((0)))))) && (*node[0].value.data()).callback.onWrite != nil {
			// Callback after writing
			(*node[0].value.data()).callback.onWrite(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], node[0].context, rangeptr, (*[100000000]UA_DataValue)(unsafe.Pointer(&adjustedValue))[:])
		}
	} else {
		if (*node[0].value.dataSource()).write != nil {
			retval = (*node[0].value.dataSource()).write(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], node[0].context, rangeptr, (*[100000000]UA_DataValue)(unsafe.Pointer(&adjustedValue))[:])
		} else {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155020288)))))))
		}
	}
	if rangeptr != nil {
		_ = range_.dimensions
		// Clean up
	}
	return UA_StatusCode(retval)
}
// writeIsAbstractAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31234
func writeIsAbstractAttribute(node []UA_Node, value UA_Boolean) UA_StatusCode {
	switch uint32(node[0].nodeClass) {
	case uint32(UA_NODECLASS_OBJECTTYPE):
		(node)[0].isAbstract = value
	case uint32(UA_NODECLASS_REFERENCETYPE):
		(node)[0].isAbstract = value
	case uint32(UA_NODECLASS_VARIABLETYPE):
		(node)[0].isAbstract = value
	case uint32(UA_NODECLASS_DATATYPE):
		(node)[0].isAbstract = value
	default:
		{
			return UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
		}
	}
	return 0
}
// copyAttributeIntoNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31297
//
// Write Service
//
// This function implements the main part of the write service and operates on a
//   copy of the node (not in single-threaded mode).
func copyAttributeIntoNode(server []UA_Server, session []UA_Session, node []UA_Node, wvalue []UA_WriteValue) UA_StatusCode {
	var value interface{} = wvalue[0].value.value.data
	var userWriteMask UA_UInt32 = getUserWriteMask(server, session, node)
	var retval UA_StatusCode
	var type_ []UA_VariableTypeNode
	switch UA_UInt32(wvalue[0].attributeId) {
	case UA_UInt32(UA_ATTRIBUTEID_NODEID):
		fallthrough
	case UA_UInt32(UA_ATTRIBUTEID_NODECLASS):
		fallthrough
	case UA_UInt32(UA_ATTRIBUTEID_USERWRITEMASK):
		fallthrough
	case UA_UInt32(UA_ATTRIBUTEID_USERACCESSLEVEL):
		fallthrough
	case UA_UInt32(UA_ATTRIBUTEID_USEREXECUTABLE):
		retval = UA_StatusCode((uint32_t((uint32((uint32(2155020288)))))))
	case UA_UInt32(UA_ATTRIBUTEID_BROWSENAME):
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(2)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[19]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		UA_QualifiedName_deleteMembers((*[100000000]UA_QualifiedName)(unsafe.Pointer(&node[0].browseName))[:])
		UA_QualifiedName_copy(value.([]UA_QualifiedName), (*[100000000]UA_QualifiedName)(unsafe.Pointer(&node[0].browseName))[:])
	case UA_UInt32(UA_ATTRIBUTEID_DISPLAYNAME):
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(6)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		UA_LocalizedText_deleteMembers((*[100000000]UA_LocalizedText)(unsafe.Pointer(&node[0].displayName))[:])
		UA_LocalizedText_copy(value.([]UA_LocalizedText), (*[100000000]UA_LocalizedText)(unsafe.Pointer(&node[0].displayName))[:])
	case UA_UInt32(UA_ATTRIBUTEID_DESCRIPTION):
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(5)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		UA_LocalizedText_deleteMembers((*[100000000]UA_LocalizedText)(unsafe.Pointer(&node[0].description))[:])
		UA_LocalizedText_copy(value.([]UA_LocalizedText), (*[100000000]UA_LocalizedText)(unsafe.Pointer(&node[0].description))[:])
	case UA_UInt32(UA_ATTRIBUTEID_WRITEMASK):
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(20)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		node[0].writeMask = (value.([]UA_UInt32))[0]
	case UA_UInt32(UA_ATTRIBUTEID_ISABSTRACT):
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(11)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		retval = writeIsAbstractAttribute(node, UA_Boolean((value.([]UA_Boolean))[0]))
	case UA_UInt32(UA_ATTRIBUTEID_SYMMETRIC):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_REFERENCETYPE) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(15)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		(node)[0].symmetric = (value.([]UA_Boolean))[0]
	case UA_UInt32(UA_ATTRIBUTEID_INVERSENAME):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_REFERENCETYPE) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(10)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[20]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		UA_LocalizedText_deleteMembers((*[100000000]UA_LocalizedText)(unsafe.Pointer(&(node)[0].inverseName))[:])
		UA_LocalizedText_copy(value.([]UA_LocalizedText), (*[100000000]UA_LocalizedText)(unsafe.Pointer(&(node)[0].inverseName))[:])
	case UA_UInt32(UA_ATTRIBUTEID_CONTAINSNOLOOPS):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_VIEW) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(3)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		(node)[0].containsNoLoops = (value.([]UA_Boolean))[0]
	case UA_UInt32(UA_ATTRIBUTEID_EVENTNOTIFIER):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_VIEW|UA_NODECLASS_OBJECT) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(7)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		(node)[0].eventNotifier = (value.([]UA_Byte))[0]
	case UA_UInt32(UA_ATTRIBUTEID_VALUE):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_VARIABLE|UA_NODECLASS_VARIABLETYPE) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) {
			var accessLevel UA_Byte = getAccessLevel(server, session, node)
			if noarch.NotInt((int(uint8((__uint8_t((uint8_t((accessLevel))))))) & (1 << uint64(1)))) != 0 {
				// The access to a value variable is granted via the AccessLevel
				//             * and UserAccessLevel attributes
				retval = UA_StatusCode((uint32_t((uint32((uint32(2151350272)))))))
				break
			}
			accessLevel = getUserAccessLevel(server, session, node)
			if noarch.NotInt((int(uint8((__uint8_t((uint8_t((accessLevel))))))) & (1 << uint64(1)))) != 0 {
				retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
				break
			}
		} else {
			if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(21)))))))))))))))) != 0 {
				// UA_NODECLASS_VARIABLETYPE
				retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
				break
			}
		}
		retval = writeValueAttribute(server, session, node, (*[100000000]UA_DataValue)(unsafe.Pointer(&wvalue[0].value))[:], (*[100000000]UA_String)(unsafe.Pointer(&wvalue[0].indexRange))[:])
	case UA_UInt32(UA_ATTRIBUTEID_DATATYPE):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_VARIABLE|UA_NODECLASS_VARIABLETYPE) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(4)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		type_ = getNodeType(server, node)
		if type_ == nil {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		retval = writeDataTypeAttribute(server, session, node, type_, value.([]UA_NodeId))
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
	case UA_UInt32(UA_ATTRIBUTEID_VALUERANK):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_VARIABLE|UA_NODECLASS_VARIABLETYPE) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(19)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[5]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		type_ = getNodeType(server, node)
		if type_ == nil {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		retval = writeValueRankAttribute(server, session, node, type_, UA_Int32((value.([]UA_Int32))[0]))
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
	case UA_UInt32(UA_ATTRIBUTEID_ARRAYDIMENSIONS):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_VARIABLE|UA_NODECLASS_VARIABLETYPE) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(1)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:] != wvalue[0].value.value.type_ || int((int((UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:]))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		type_ = getNodeType(server, node)
		if type_ == nil {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		retval = writeArrayDimensionsAttribute(server, session, node, type_, uint(wvalue[0].value.value.arrayLength), wvalue[0].value.value.data.([]UA_UInt32))
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
	case UA_UInt32(UA_ATTRIBUTEID_ACCESSLEVEL):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_VARIABLE) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(0)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[2]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		(node)[0].accessLevel = (value.([]UA_Byte))[0]
	case UA_UInt32(UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_VARIABLE) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(12)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[10]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		(node)[0].minimumSamplingInterval = (value.([]UA_Double))[0]
	case UA_UInt32(UA_ATTRIBUTEID_HISTORIZING):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_VARIABLE) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(9)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		(node)[0].historizing = (value.([]UA_Boolean))[0]
	case UA_UInt32(UA_ATTRIBUTEID_EXECUTABLE):
		if uint32(node[0].nodeClass)&uint32(UA_NODECLASS_METHOD) == 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
			break
		}
		if noarch.NotUint32((uint32((uint32((uint32_t((userWriteMask & UA_UInt32((uint32_t((uint32((uint32(1 << uint64(8)))))))))))))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
			break
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(wvalue[0].value.hasValue)))))) != 0 || (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[0]))[:] != wvalue[0].value.value.type_ || int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue[0].value.value))[:])))))) != 0 {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
			break
		}
		(node)[0].executable = (value.([]UA_Boolean))[0]
	default:
		{
			retval = UA_StatusCode((uint32_t((uint32((uint32(2150957056)))))))
			break
		}
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | WriteRequest returned status code %s%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
	}
	return UA_StatusCode(retval)
}
// Operation_Write - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31453
func Operation_Write(server []UA_Server, session []UA_Session, context interface{}, wv []UA_WriteValue, result []UA_StatusCode) {
	result[0] = UA_Server_editNode(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&wv[0].nodeId))[:], UA_EditNodeCallback(copyAttributeIntoNode), wv)
}
// Service_Write - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31460
func Service_Write(server []UA_Server, session []UA_Session, request []UA_WriteRequest, response []UA_WriteResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing WriteRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxNodesPerWrite) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].nodesToWriteSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxNodesPerWrite))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_Write), nil, (*[100000000]uint)(unsafe.Pointer(&request[0].nodesToWriteSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[60]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:])
}
// UA_Server_write - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31479
func UA_Server_write(server []UA_Server, value []UA_WriteValue) UA_StatusCode {
	var retval UA_StatusCode = UA_Server_editNode(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&value[0].nodeId))[:], UA_EditNodeCallback(copyAttributeIntoNode), nil)
	// casting away const qualifier because callback uses const anyway
	return UA_StatusCode(retval)
}
// __UA_Server_write - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31490
// Convenience function to be wrapped into inline functions
func __UA_Server_write(server []UA_Server, nodeId []UA_NodeId, attributeId int, attr_type []UA_DataType, attr interface{}) UA_StatusCode {
	var wvalue UA_WriteValue
	UA_WriteValue_init((*[100000000]UA_WriteValue)(unsafe.Pointer(&wvalue))[:])
	wvalue.nodeId = nodeId[0]
	wvalue.attributeId = UA_UInt32((uint32_t((uint32((uint32(attributeId)))))))
	wvalue.value.hasValue = 1
	if attr_type != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[23]))[:] {
		// hacked cast. the target WriteValue is used as const anyway
		UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wvalue.value.value))[:], uint32((uintptr_t(attr))), attr_type)
	} else {
		wvalue.value.value = (attr.([]UA_Variant))[0]
	}
	return UA_Server_write(server, (*[100000000]UA_WriteValue)(unsafe.Pointer(&wvalue))[:])
}

type socklen_t = __socklen_t
// setApplicationDescriptionFromRegisteredServer - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31537
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_services_discovery.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014-2016 (c) Sten Grüner
// *    Copyright 2014, 2017 (c) Florian Palm
// *    Copyright 2016 (c) Oleksiy Vasylyev
// *    Copyright 2016-2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) frax2222
// *    Copyright 2017 (c) Mark Giraud, Fraunhofer IOSB
//
func setApplicationDescriptionFromRegisteredServer(request []UA_FindServersRequest, target []UA_ApplicationDescription, registeredServer []UA_RegisteredServer) UA_StatusCode {
	var retval UA_StatusCode
	UA_ApplicationDescription_init(target)
	retval |= UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&registeredServer[0].serverUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&target[0].applicationUri))[:])
	retval |= UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&registeredServer[0].productUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&target[0].productUri))[:])
	if uint32((uint(request[0].localeIdsSize))) != 0 {
		var appNameFound UA_Boolean
		{
			var i uint
			for ; i < uint(request[0].localeIdsSize) && int((int((noarch.NotUA_Boolean(UA_Boolean(appNameFound)))))) != 0; i++ {
				{
					var j uint
					for ; j < uint(registeredServer[0].serverNamesSize); j++ {
						if int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&request[0].localeIds[i]))[:], (*[100000000]UA_String)(unsafe.Pointer(&registeredServer[0].serverNames[j].locale))[:]))))) != 0 {
							// if the client requests a specific locale, select the corresponding server name
							retval |= UA_LocalizedText_copy((*[100000000]UA_LocalizedText)(unsafe.Pointer(&registeredServer[0].serverNames[j]))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&target[0].applicationName))[:])
							appNameFound = 1
							break
						}
					}
				}
			}
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(appNameFound)))))) != 0 && uint32((uint(registeredServer[0].serverNamesSize))) != 0 {
			// server does not have the requested local, therefore we can select the
			// most suitable one
			retval |= UA_LocalizedText_copy((*[100000000]UA_LocalizedText)(unsafe.Pointer(&registeredServer[0].serverNames[0]))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&target[0].applicationName))[:])
		}
	} else if uint32((uint(registeredServer[0].serverNamesSize))) != 0 {
		// just take the first name
		retval |= UA_LocalizedText_copy((*[100000000]UA_LocalizedText)(unsafe.Pointer(&registeredServer[0].serverNames[0]))[:], (*[100000000]UA_LocalizedText)(unsafe.Pointer(&target[0].applicationName))[:])
	}
	target[0].applicationType = registeredServer[0].serverType
	retval |= UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&registeredServer[0].gatewayServerUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&target[0].gatewayServerUri))[:])
	// TODO where do we get the discoveryProfileUri for application data?
	target[0].discoveryUrlsSize = uint(registeredServer[0].discoveryUrlsSize)
	if uint32((uint(registeredServer[0].discoveryUrlsSize))) != 0 {
		var duSize uint = uint((16 * uint32((uint(registeredServer[0].discoveryUrlsSize)))))
		target[0].discoveryUrls = make([]UA_String, duSize*uint((1))/16)
		if target[0].discoveryUrls == nil {
			return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		}
		{
			var i uint
			for ; i < uint(registeredServer[0].discoveryUrlsSize); i++ {
				retval |= UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&registeredServer[0].discoveryUrls[i]))[:], (*[100000000]UA_String)(unsafe.Pointer(&target[0].discoveryUrls[i]))[:])
			}
		}
	}
	return UA_StatusCode(retval)
}
// setApplicationDescriptionFromServer - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31589
func setApplicationDescriptionFromServer(target []UA_ApplicationDescription, server []UA_Server) UA_StatusCode {
	var result UA_StatusCode = UA_ApplicationDescription_copy((*[100000000]UA_ApplicationDescription)(unsafe.Pointer(&server[0].config.applicationDescription))[:], target)
	if result != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Copy ApplicationDescription from the config
		return UA_StatusCode(result)
	}
	if uint32(target[0].applicationType) == uint32(UA_APPLICATIONTYPE_DISCOVERYSERVER) {
		// UaExpert does not list DiscoveryServer, thus set it to Server
		// See http://forum.unified-automation.com/topic1987.html
		target[0].applicationType = UA_APPLICATIONTYPE_SERVER
	}
	var discSize uint = uint((16 * uint32((uint(target[0].discoveryUrlsSize) + uint(server[0].config.networkLayersSize)))))
	var disc []UA_String = make([]UA_String, uint(discSize)/16)
	if disc == nil {
		// add the discoveryUrls from the networklayers
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var existing uint = uint(target[0].discoveryUrlsSize)
	target[0].discoveryUrls = disc
	target[0].discoveryUrlsSize += uint(server[0].config.networkLayersSize)
	{
		var i uint
		for ; i < uint(server[0].config.networkLayersSize); i++ {
			var nl []UA_ServerNetworkLayer = (*[100000000]UA_ServerNetworkLayer)(unsafe.Pointer(&server[0].config.networkLayers[i]))[:]
			// TODO: Add nl only if discoveryUrl not already present
			UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&nl[0].discoveryUrl))[:], (*[100000000]UA_String)(unsafe.Pointer(&target[0].discoveryUrls[existing+i]))[:])
		}
	}
	return 0
}
// Service_FindServers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31621
func Service_FindServers(server []UA_Server, session []UA_Session, request []UA_FindServersRequest, response []UA_FindServersResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing FindServersRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	var foundServersSize uint
	var foundServers []UA_ApplicationDescription
	var addSelf UA_Boolean
	var foundServerFilteredPointer [][]UA_RegisteredServer
	if uint32((uint(request[0].serverUrisSize))) != 0 {
		var fsfpSize uint = uint((8 * uint32((uint(server[0].registeredServersSize)))))
		// temporarily store all the pointers which we found to avoid reiterating
		// through the list
		// check if client only requested a specific set of servers
		foundServerFilteredPointer = make([][]UA_RegisteredServer, fsfpSize*uint((1))/8)
		if foundServerFilteredPointer == nil {
			response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
			return
		}
		{
			var i uint
			for ; i < uint(request[0].serverUrisSize); i++ {
				if int((int((noarch.NotUA_Boolean(UA_Boolean(addSelf)))))) != 0 && int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&request[0].serverUris[i]))[:], (*[100000000]UA_String)(unsafe.Pointer(&server[0].config.applicationDescription.applicationUri))[:]))))) != 0 {
					addSelf = 1
				} else {
					var current []registeredServer_list_entry
					for current = ((*[100000000]registeredServer_list)(unsafe.Pointer(&server[0].registeredServers))[:])[0].lh_first; current != nil; current = (current)[0].pointers.le_next {
						if int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&current[0].registeredServer.serverUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&request[0].serverUris[i]))[:]))))) != 0 {
							var existing UA_Boolean
							{
								var j uint
								for ; j < foundServersSize; j++ {
									if int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&foundServerFilteredPointer[j][0].serverUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&request[0].serverUris[i]))[:]))))) != 0 {
										// check if entry already in list:
										existing = 1
										break
									}
								}
							}
							if int((int((noarch.NotUA_Boolean(UA_Boolean(existing)))))) != 0 {
								foundServerFilteredPointer[func() uint {
									defer func() {
										foundServersSize ++
									}()
									return foundServersSize
								}()] = (*[100000000]UA_RegisteredServer)(unsafe.Pointer(&current[0].registeredServer))[:]
							}
							break
						}
					}
				}
			}
		}
		if int((int((UA_Boolean(addSelf))))) != 0 {
			foundServersSize ++
		}
	} else {
		addSelf = 1
		// self + registered servers
		foundServersSize = uint((1 + uint32((uint(server[0].registeredServersSize)))))
	}
	if uint32((uint(foundServersSize))) != 0 {
		var fsSize uint = uint((120 * uint32((foundServersSize))))
		foundServers = make([]UA_ApplicationDescription, fsSize*uint((1))/120)
		if foundServers == nil {
			if foundServerFilteredPointer != nil {
				_ = foundServerFilteredPointer
			}
			response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
			return
		}
		if int((int((UA_Boolean(addSelf))))) != 0 {
			response[0].responseHeader.serviceResult = setApplicationDescriptionFromServer((*[100000000]UA_ApplicationDescription)(unsafe.Pointer(&foundServers[0]))[:], server)
			if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
				_ = foundServers
				if foundServerFilteredPointer != nil {
					_ = foundServerFilteredPointer
				}
				return
			}
		}
		var currentIndex uint
		if int((int((UA_Boolean(addSelf))))) != 0 {
			currentIndex ++
		}
		if foundServerFilteredPointer != nil {
			var iterCount uint = uint((func() uint32 {
				if int((int((UA_Boolean(addSelf))))) != 0 {
					return uint32((foundServersSize - uint((1))))
				}
				return uint32((uint(foundServersSize)))
			}()))
			{
				var i uint
				for ; i < iterCount; i++ {
					// add all the registered servers to the list
					// use filtered list because client only requested specific uris
					// -1 because foundServersSize also includes this self server
					response[0].responseHeader.serviceResult = setApplicationDescriptionFromRegisteredServer(request, (*[100000000]UA_ApplicationDescription)(unsafe.Pointer(&foundServers[func() uint {
						defer func() {
							currentIndex ++
						}()
						return currentIndex
					}()]))[:], foundServerFilteredPointer[i])
					if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
						_ = foundServers
						_ = foundServerFilteredPointer
						return
					}
				}
			}
			_ = foundServerFilteredPointer
			foundServerFilteredPointer = nil
		} else {
			var current []registeredServer_list_entry
			for current = ((*[100000000]registeredServer_list)(unsafe.Pointer(&server[0].registeredServers))[:])[0].lh_first; current != nil; current = (current)[0].pointers.le_next {
				response[0].responseHeader.serviceResult = setApplicationDescriptionFromRegisteredServer(request, (*[100000000]UA_ApplicationDescription)(unsafe.Pointer(&foundServers[func() uint {
					defer func() {
						currentIndex ++
					}()
					return currentIndex
				}()]))[:], (*[100000000]UA_RegisteredServer)(unsafe.Pointer(&current[0].registeredServer))[:])
				if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
					_ = foundServers
					return
				}
			}
		}
	}
	if foundServerFilteredPointer != nil {
		_ = foundServerFilteredPointer
	}
	response[0].servers = foundServers
	response[0].serversSize = foundServersSize
}
// Service_GetEndpoints - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31759
func Service_GetEndpoints(server []UA_Server, session []UA_Session, request []UA_GetEndpointsRequest, response []UA_GetEndpointsResponse) {
	var endpointUrl []UA_String = (*[100000000]UA_String)(unsafe.Pointer(&request[0].endpointUrl))[:]
	if uint(endpointUrl[0].length) > uint((0)) {
		// If the client expects to see a specific endpointurl, mirror it back. If
		//       not, clone the endpoints with the discovery url of all networklayers.
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing GetEndpointsRequest with endpointUrl \"%.*s\"%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), int(uint32((uint((endpointUrl[0]).length)))), (endpointUrl[0]).data, []byte("\x00"))
	} else {
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing GetEndpointsRequest with an empty endpointUrl%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	}
	var reSize uint = uint((4 * uint32((uint(server[0].config.endpointsSize)))))
	var relevant_endpoints []UA_Boolean
	// test if the supported binary profile shall be returned
	noarch.Memset(relevant_endpoints, byte(0), uint32((uint(reSize))))
	var relevant_count uint
	if uint(request[0].profileUrisSize) == uint((0)) {
		{
			var j uint
			for ; j < uint(server[0].config.endpointsSize); j++ {
				relevant_endpoints[j] = 1
			}
		}
		relevant_count = uint(server[0].config.endpointsSize)
	} else {
		{
			var j uint
			for ; j < uint(server[0].config.endpointsSize); j++ {
				{
					var i uint
					for ; i < uint(request[0].profileUrisSize); i++ {
						if int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&request[0].profileUris[i]))[:], (*[100000000]UA_String)(unsafe.Pointer(&server[0].config.endpoints[j].endpointDescription.transportProfileUri))[:])))))) != 0 {
							continue
						}
						relevant_endpoints[j] = 1
						relevant_count ++
						break
					}
				}
			}
		}
	}
	if relevant_count == uint((0)) {
		response[0].endpointsSize = 0
		return
	}
	var clone_times uint = 1
	var nl_endpointurl UA_Boolean
	if uint(endpointUrl[0].length) == uint((0)) {
		// Clone the endpoint for each networklayer?
		clone_times = uint(server[0].config.networkLayersSize)
		nl_endpointurl = 1
	}
	response[0].endpoints = UA_Array_new(relevant_count*clone_times, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[183]))[:]).([]UA_EndpointDescription)
	if response[0].endpoints == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		return
	}
	response[0].endpointsSize = relevant_count*clone_times
	var k uint
	var retval UA_StatusCode
	{
		var i uint
		for ; i < clone_times; i++ {
			if int((int((UA_Boolean(nl_endpointurl))))) != 0 {
				endpointUrl = (*[100000000]UA_String)(unsafe.Pointer(&server[0].config.networkLayers[i].discoveryUrl))[:]
			}
			{
				var j uint
				for ; j < uint(server[0].config.endpointsSize); j++ {
					if int((int((noarch.NotUA_Boolean(UA_Boolean(relevant_endpoints[j])))))) != 0 {
						continue
					}
					retval |= UA_EndpointDescription_copy((*[100000000]UA_EndpointDescription)(unsafe.Pointer(&server[0].config.endpoints[j].endpointDescription))[:], (*[100000000]UA_EndpointDescription)(unsafe.Pointer(&response[0].endpoints[k]))[:])
					retval |= UA_String_copy(endpointUrl, (*[100000000]UA_String)(unsafe.Pointer(&response[0].endpoints[k].endpointUrl))[:])
					k ++
				}
			}
		}
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		response[0].responseHeader.serviceResult = retval
		UA_Array_delete(response[0].endpoints, uint(response[0].endpointsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[183]))[:])
		response[0].endpoints = nil
		response[0].endpointsSize = 0
		return
	}
}
// process_RegisterServer - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:31852
func process_RegisterServer(server []UA_Server, session []UA_Session, requestHeader []UA_RequestHeader, requestServer []UA_RegisteredServer, requestDiscoveryConfigurationSize uint, requestDiscoveryConfiguration []UA_ExtensionObject, responseHeader []UA_ResponseHeader, responseConfigurationResultsSize []uint, responseConfigurationResults [][]UA_StatusCode, responseDiagnosticInfosSize []uint, responseDiagnosticInfos []UA_DiagnosticInfo) {
	var current []registeredServer_list_entry
	var registeredServer_entry []registeredServer_list_entry
	{
		// Find the server from the request in the registered list
		for current = ((*[100000000]registeredServer_list)(unsafe.Pointer(&server[0].registeredServers))[:])[0].lh_first; current != nil; current = (current)[0].pointers.le_next {
			if int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&current[0].registeredServer.serverUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&requestServer[0].serverUri))[:]))))) != 0 {
				registeredServer_entry = current
				break
			}
		}
	}
	var mdnsConfig []UA_MdnsDiscoveryConfiguration
	var mdnsServerName []UA_String
	if uint32((uint(requestDiscoveryConfigurationSize))) != 0 {
		responseConfigurationResults[0] = UA_Array_new(uint(requestDiscoveryConfigurationSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:]).([]UA_StatusCode)
		if (responseConfigurationResults[0]) == nil {
			responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
			return
		}
		responseConfigurationResultsSize[0] = requestDiscoveryConfigurationSize
		{
			var i uint
			for ; i < requestDiscoveryConfigurationSize; i++ {
				var object []UA_ExtensionObject = (*[100000000]UA_ExtensionObject)(unsafe.Pointer(&requestDiscoveryConfiguration[i]))[:]
				if mdnsConfig == nil && (uint32(object[0].encoding) == uint32(UA_EXTENSIONOBJECT_DECODED) || uint32(object[0].encoding) == uint32(UA_EXTENSIONOBJECT_DECODED_NODELETE)) && (*object[0].content.decoded()).type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[40]))[:] {
					mdnsConfig = (*object[0].content.decoded()).data.([]UA_MdnsDiscoveryConfiguration)
					mdnsServerName = (*[100000000]UA_String)(unsafe.Pointer(&mdnsConfig[0].mdnsServerName))[:]
					(responseConfigurationResults[0])[i] = 0
				} else {
					(responseConfigurationResults[0])[i] = UA_StatusCode((uint32_t((uint32((uint32(2151481344)))))))
				}
			}
		}
	}
	if mdnsServerName == nil && uint32((uint(requestServer[0].serverNamesSize))) != 0 {
		mdnsServerName = (*[100000000]UA_String)(unsafe.Pointer(&requestServer[0].serverNames[0].text))[:]
	}
	if mdnsServerName == nil {
		responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2152726528)))))))
		return
	}
	if uint(requestServer[0].discoveryUrlsSize) == uint((0)) {
		responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2152792064)))))))
		return
	}
	if uint32((uint(requestServer[0].semaphoreFilePath.length))) != 0 {
		var filePath []byte = make([]byte, (1*uint32((uint(requestServer[0].semaphoreFilePath.length)))+1)/1)
		if filePath == nil {
			UA_LOG_ERROR(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Cannot allocate memory for semaphore path. Out of memory.%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
			return
		}
		memcpy(filePath, requestServer[0].semaphoreFilePath.data, uint32((uint(requestServer[0].semaphoreFilePath.length))))
		filePath[uint(requestServer[0].semaphoreFilePath.length)] = '\x00'
		if access(filePath, 0) == -1 {
			responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2152857600)))))))
			_ = filePath
			return
		}
		_ = filePath
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(requestServer[0].isOnline)))))) != 0 {
		if registeredServer_entry == nil {
			// server is shutting down. Remove it from the registered servers list
			// server not found, show warning
			UA_LOG_WARNING(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Could not unregister server %.*s. Not registered.%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), int(uint32((uint(requestServer[0].serverUri.length)))), requestServer[0].serverUri.data, []byte("\x00"))
			responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148466688)))))))
			return
		}
		if func([]UA_RegisteredServer , interface{})()((UA_Server_registerServerCallback(server[0].registerServerCallback))) != nil {
			server.registerServerCallback(requestServer, server[0].registerServerCallbackData)
		}
		for {
			if (registeredServer_entry)[0].pointers.le_next != nil {
				// server found, remove from list
				(registeredServer_entry)[0].pointers.le_next[0].pointers.le_prev = (registeredServer_entry)[0].pointers.le_prev
			}
			(registeredServer_entry)[0].pointers.le_prev[0] = (registeredServer_entry)[0].pointers.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		UA_RegisteredServer_deleteMembers((*[100000000]UA_RegisteredServer)(unsafe.Pointer(&registeredServer_entry[0].registeredServer))[:])
		_ = registeredServer_entry
		server[0].registeredServersSize --
		responseHeader[0].serviceResult = 0
		return
	}
	var retval UA_StatusCode
	if registeredServer_entry == nil {
		// server not yet registered, register it by adding it to the list
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Registering new server: %.*s%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), int(uint32((uint(requestServer[0].serverUri.length)))), requestServer[0].serverUri.data, []byte("\x00"))
		registeredServer_entry = make([]registeredServer_list_entry, 144*1/144)
		if registeredServer_entry == nil {
			responseHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
			return
		}
		for {
			if ((registeredServer_entry)[0].pointers.le_next = ((*[100000000]registeredServer_list)(unsafe.Pointer(&server[0].registeredServers))[:])[0].lh_first) != nil {
				((*[100000000]registeredServer_list)(unsafe.Pointer(&server[0].registeredServers))[:])[0].lh_first[0].pointers.le_prev = (*[100000000][]registeredServer_list_entry)(unsafe.Pointer(&(registeredServer_entry)[0].pointers.le_next))[:]
			}
			((*[100000000]registeredServer_list)(unsafe.Pointer(&server[0].registeredServers))[:])[0].lh_first = registeredServer_entry
			(registeredServer_entry)[0].pointers.le_prev = (*[100000000][]registeredServer_list_entry)(unsafe.Pointer(&((*[100000000]registeredServer_list)(unsafe.Pointer(&server[0].registeredServers))[:])[0].lh_first))[:]
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		server[0].registeredServersSize ++
		if func([]UA_RegisteredServer , interface{})()((UA_Server_registerServerCallback(server[0].registerServerCallback))) != nil {
			server.registerServerCallback(requestServer, server[0].registerServerCallbackData)
		}
	} else {
		UA_RegisteredServer_deleteMembers((*[100000000]UA_RegisteredServer)(unsafe.Pointer(&registeredServer_entry[0].registeredServer))[:])
	}
	// copy the data from the request into the list
	UA_RegisteredServer_copy(requestServer, (*[100000000]UA_RegisteredServer)(unsafe.Pointer(&registeredServer_entry[0].registeredServer))[:])
	registeredServer_entry[0].lastSeen = UA_DateTime_nowMonotonic()
	responseHeader[0].serviceResult = retval
}
// Service_RegisterServer - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32011
func Service_RegisterServer(server []UA_Server, session []UA_Session, request []UA_RegisterServerRequest, response []UA_RegisterServerResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing RegisterServerRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	process_RegisterServer(server, session, (*[100000000]UA_RequestHeader)(unsafe.Pointer(&request[0].requestHeader))[:], (*[100000000]UA_RegisteredServer)(unsafe.Pointer(&request[0].server))[:], 0, nil, (*[100000000]UA_ResponseHeader)(unsafe.Pointer(&response[0].responseHeader))[:], nil, nil, nil, nil)
}
// Service_RegisterServer2 - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32020
func Service_RegisterServer2(server []UA_Server, session []UA_Session, request []UA_RegisterServer2Request, response []UA_RegisterServer2Response) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing RegisterServer2Request%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	process_RegisterServer(server, session, (*[100000000]UA_RequestHeader)(unsafe.Pointer(&request[0].requestHeader))[:], (*[100000000]UA_RegisteredServer)(unsafe.Pointer(&request[0].server))[:], uint(request[0].discoveryConfigurationSize), request[0].discoveryConfiguration, (*[100000000]UA_ResponseHeader)(unsafe.Pointer(&response[0].responseHeader))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].configurationResultsSize))[:], (*[100000000][]UA_StatusCode)(unsafe.Pointer(&response[0].configurationResults))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].diagnosticInfosSize))[:], response[0].diagnosticInfos)
}
// UA_Discovery_cleanupTimedOut - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32036
// Cleanup server registration: If the semaphore file path is set, then it just
// * checks the existence of the file. When it is deleted, the registration is
// * removed. If there is no semaphore file, then the registration will be removed
// * if it is older than 60 minutes.
func UA_Discovery_cleanupTimedOut(server []UA_Server, nowMonotonic UA_DateTime) {
	var timedOut UA_DateTime = nowMonotonic
	if uint32((uint32((uint32_t((UA_UInt32(server[0].config.discoveryCleanupTimeout))))))) != 0 {
		// registration is timed out if lastSeen is older than 60 minutes (default
		// value, can be modified by user).
		timedOut -= UA_DateTime((int64_t((__int64_t((int32(int64(uint32((uint32((uint32_t((UA_UInt32(server[0].config.discoveryCleanupTimeout)))))))) * int64(10*1000*1000))))))))
	}
	var current []registeredServer_list_entry
	var temp []registeredServer_list_entry
	for current = ((*[100000000]registeredServer_list)(unsafe.Pointer(&server[0].registeredServers))[:])[0].lh_first; current != nil && func() int {
		temp = (current)[0].pointers.le_next
		tempVar := &1
		return *tempVar
	}() != 0; current = temp {
		var semaphoreDeleted UA_Boolean
		if uint32((uint(current[0].registeredServer.semaphoreFilePath.length))) != 0 {
			var fpSize uint = uint((1*uint32((uint(current[0].registeredServer.semaphoreFilePath.length))) + 1))
			var filePath []byte = make([]byte, uint(fpSize)/1)
			if filePath != nil {
				// todo: malloc may fail: return a statuscode
				memcpy(filePath, current[0].registeredServer.semaphoreFilePath.data, uint32((uint(current[0].registeredServer.semaphoreFilePath.length))))
				filePath[uint(current[0].registeredServer.semaphoreFilePath.length)] = '\x00'
				semaphoreDeleted = UA_Boolean((int((map[bool]int{false: 0, true: 1}[access(filePath, 0) == -1]))))
				_ = filePath
			} else {
				UA_LOG_ERROR(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("Cannot check registration semaphore. Out of memory\x00"))
			}
		}
		if int((int((semaphoreDeleted)))) != 0 || uint32((uint32((uint32_t((UA_UInt32(server[0].config.discoveryCleanupTimeout))))))) != 0 && UA_DateTime(current[0].lastSeen) < timedOut {
			if int((int((UA_Boolean(semaphoreDeleted))))) != 0 {
				UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("Registration of server with URI %.*s is removed because the semaphore file '%.*s' was deleted.\x00"), int(uint32((uint(current[0].registeredServer.serverUri.length)))), current[0].registeredServer.serverUri.data, int(uint32((uint(current[0].registeredServer.semaphoreFilePath.length)))), current[0].registeredServer.semaphoreFilePath.data)
			} else {
				// cppcheck-suppress unreadVariable
				UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("Registration of server with URI %.*s has timed out and is removed.\x00"), int(uint32((uint(current[0].registeredServer.serverUri.length)))), current[0].registeredServer.serverUri.data)
			}
			for {
				if (current)[0].pointers.le_next != nil {
					(current)[0].pointers.le_next[0].pointers.le_prev = (current)[0].pointers.le_prev
				}
				(current)[0].pointers.le_prev[0] = (current)[0].pointers.le_next
				if noarch.NotInt((0)) != 0 {
					break
				}
			}
			UA_RegisteredServer_deleteMembers((*[100000000]UA_RegisteredServer)(unsafe.Pointer(&current[0].registeredServer))[:])
			_ = current
			server[0].registeredServersSize --
		}
	}
}

type PeriodicServerRegisterCallback struct {
	id                   UA_UInt64
	this_interval        UA_UInt32
	default_interval     UA_UInt32
	registered           UA_Boolean
	discovery_server_url []byte
}
// periodicServerRegister - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32118
// Called by the UA_Server callback. The OPC UA specification says:
// *
// * > If an error occurs during registration (e.g. the Discovery Server is not running) then the Server
// * > must periodically re-attempt registration. The frequency of these attempts should start at 1 second
// * > but gradually increase until the registration frequency is the same as what it would be if not
// * > errors occurred. The recommended approach would double the period each attempt until reaching the maximum.
// *
// * We will do so by using the additional data parameter which holds information
// * if the next interval is default or if it is a repeaded call.
func periodicServerRegister(server []UA_Server, data interface{}) {
	var cb []PeriodicServerRegisterCallback = data.([]PeriodicServerRegisterCallback)
	var server_url []byte
	if cb[0].discovery_server_url != nil {
		// Which URL to register on
		// fixme: remove magic url
		server_url = cb[0].discovery_server_url
	} else {
		//localhost:4840";
		server_url = []byte("opc.tcp://localhost:4840\x00")
	}
	var retval UA_StatusCode = UA_Server_register_discovery(server, server_url, nil)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Register
		//       You can also use a semaphore file. That file must exist. When the file is
		//       deleted, the server is automatically unregistered. The semaphore file has
		//       to be accessible by the discovery server
		//
		//       UA_StatusCode retval = UA_Server_register_discovery(server,
		//       "opc.tcp://localhost:4840", "/path/to/some/file");
		//
		// Registering failed
		UA_LOG_ERROR(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("Could not register server with discovery server. Is the discovery server started? StatusCode %s\x00"), UA_StatusCode_name(UA_StatusCode(retval)))
		var nextInterval UA_UInt32 = 1000
		if int((int((noarch.NotUA_Boolean(UA_Boolean(cb[0].registered)))))) != 0 {
			// If the server was previously registered, retry in one second,
			//         * else, double the previous interval
			nextInterval = UA_UInt32(cb[0].this_interval)*UA_UInt32((uint32_t((uint32((2))))))
		}
		if nextInterval > UA_UInt32(cb[0].default_interval) {
			// The interval should be smaller than the default interval
			nextInterval = UA_UInt32(cb[0].default_interval)
		}
		cb[0].this_interval = nextInterval
		UA_Server_changeRepeatedCallbackInterval(server, UA_UInt64(cb[0].id), UA_UInt32(nextInterval))
		return
	}
	// Registering succeeded
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("Server successfully registered. Next periodical register will be in %d seconds\x00"), int((uint32((uint32((uint32_t((UA_UInt32(cb[0].default_interval) / UA_UInt32((uint32_t((uint32((1000)))))))))))))))
	if int((int((noarch.NotUA_Boolean(UA_Boolean(cb[0].registered)))))) != 0 {
		retval = UA_Server_changeRepeatedCallbackInterval(server, UA_UInt64(cb[0].id), UA_UInt32(cb[0].default_interval))
		if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
			// If changing the interval fails, try again after the next registering
			cb[0].registered = 1
		}
	}
}
// UA_Server_addPeriodicServerRegisterCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32177
func UA_Server_addPeriodicServerRegisterCallback(server []UA_Server, discoveryServerUrl []byte, intervalMs UA_UInt32, delayFirstRegisterMs UA_UInt32, periodicCallbackId []UA_UInt64) UA_StatusCode {
	if discoveryServerUrl == nil {
		// No valid server URL
		UA_LOG_ERROR(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("No discovery server URL provided\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	{
		var rs []periodicServerRegisterCallback_entry
		var rs_tmp []periodicServerRegisterCallback_entry
		{
			// check if we are already registering with the given discovery url and remove the old periodic call
			for rs = ((*[100000000]periodicServerRegisterCallback_list)(unsafe.Pointer(&server[0].periodicServerRegisterCallbacks))[:])[0].lh_first; rs != nil && func() int {
				rs_tmp = (rs)[0].pointers.le_next
				tempVar := &1
				return *tempVar
			}() != 0; rs = rs_tmp {
				if noarch.Strcmp(rs[0].callback[0].discovery_server_url, discoveryServerUrl) == 0 {
					UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("There is already a register callback for '%s' in place. Removing the older one.\x00"), discoveryServerUrl)
					UA_Server_removeRepeatedCallback(server, UA_UInt64(rs[0].callback[0].id))
					for {
						if (rs)[0].pointers.le_next != nil {
							(rs)[0].pointers.le_next[0].pointers.le_prev = (rs)[0].pointers.le_prev
						}
						(rs)[0].pointers.le_prev[0] = (rs)[0].pointers.le_next
						if noarch.NotInt((0)) != 0 {
							break
						}
					}
					_ = rs[0].callback
					_ = rs
					break
				}
			}
		}
	}
	var cb []PeriodicServerRegisterCallback = make([]PeriodicServerRegisterCallback, 32/32)
	if cb == nil {
		// Allocate and initialize
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	// Start repeating a failed register after 1s, then increase the delay. Set
	//     * to 500ms, as the delay is doubled before changing the callback
	//     * interval.
	cb[0].this_interval = 500
	cb[0].default_interval = intervalMs
	cb[0].registered = 0
	cb[0].discovery_server_url = discoveryServerUrl
	var retval UA_StatusCode = UA_Server_addRepeatedCallback(server, periodicServerRegister, cb, UA_UInt32(delayFirstRegisterMs), (*[100000000]UA_UInt64)(unsafe.Pointer(&cb[0].id))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Add the callback
		UA_LOG_ERROR(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SERVER, []byte("Could not create periodic job for server register. StatusCode %s\x00"), UA_StatusCode_name(UA_StatusCode(retval)))
		_ = cb
		return UA_StatusCode(retval)
	}
	var newEntry []periodicServerRegisterCallback_entry = make([]periodicServerRegisterCallback_entry, 72/72)
	if newEntry == nil {
		// the analyzer reports on LIST_INSERT_HEAD a use after free false positive
		UA_Server_removeRepeatedCallback(server, UA_UInt64(cb[0].id))
		_ = cb
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	newEntry[0].callback = cb
	for {
		if ((newEntry)[0].pointers.le_next = ((*[100000000]periodicServerRegisterCallback_list)(unsafe.Pointer(&server[0].periodicServerRegisterCallbacks))[:])[0].lh_first) != nil {
			((*[100000000]periodicServerRegisterCallback_list)(unsafe.Pointer(&server[0].periodicServerRegisterCallbacks))[:])[0].lh_first[0].pointers.le_prev = (*[100000000][]periodicServerRegisterCallback_entry)(unsafe.Pointer(&(newEntry)[0].pointers.le_next))[:]
		}
		((*[100000000]periodicServerRegisterCallback_list)(unsafe.Pointer(&server[0].periodicServerRegisterCallbacks))[:])[0].lh_first = newEntry
		(newEntry)[0].pointers.le_prev = (*[100000000][]periodicServerRegisterCallback_entry)(unsafe.Pointer(&((*[100000000]periodicServerRegisterCallback_list)(unsafe.Pointer(&server[0].periodicServerRegisterCallbacks))[:])[0].lh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	if periodicCallbackId != nil {
		periodicCallbackId[0] = UA_UInt64(cb[0].id)
	}
	return 0
}
// UA_Server_setRegisterServerCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32255
func UA_Server_setRegisterServerCallback(server []UA_Server, cb UA_Server_registerServerCallback, data interface{}) {
	server[0].registerServerCallback = cb
	server[0].registerServerCallbackData = data
}
// setSubscriptionSettings - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32291
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_services_subscription.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2016-2017 (c) Florian Palm
// *    Copyright 2015 (c) Chris Iatrou
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015-2016 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Mattias Bornhager
// *    Copyright 2017 (c) Henrik Norrman
// *    Copyright 2017-2018 (c) Thomas Stalder, Blue Time Concept SA
//
func setSubscriptionSettings(server []UA_Server, subscription []UA_Subscription, requestedPublishingInterval UA_Double, requestedLifetimeCount UA_UInt32, requestedMaxKeepAliveCount UA_UInt32, maxNotificationsPerPublish UA_UInt32, priority UA_Byte) {
	var retval UA_StatusCode = Subscription_unregisterPublishCallback(server, subscription)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// deregister the callback if required
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Could not unregister publish callback with error code %s%.0s\x00"), (func() int {
			if (subscription[0].session)[0].header.channel != nil {
				return (func() int {
					if (subscription[0].session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((subscription[0].session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (subscription[0].session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((subscription[0].session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(subscription[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(subscription[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(subscription[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(subscription[0].subscriptionId), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
	}
	// re-parameterize the subscription
	subscription[0].publishingInterval = requestedPublishingInterval
	{
		if requestedPublishingInterval > UA_Double((float64((UA_Double((UA_Duration(server[0].config.publishingIntervalLimits.max))))))) {
			subscription[0].publishingInterval = UA_Double((float64((UA_Double((UA_Duration(server[0].config.publishingIntervalLimits.max)))))))
		} else if requestedPublishingInterval < UA_Double((float64((UA_Double((UA_Duration(server[0].config.publishingIntervalLimits.min))))))) {
			subscription[0].publishingInterval = UA_Double((float64((UA_Double((UA_Duration(server[0].config.publishingIntervalLimits.min)))))))
		} else {
			subscription[0].publishingInterval = requestedPublishingInterval
		}
	}
	if requestedPublishingInterval != requestedPublishingInterval {
		// check for nan
		subscription[0].publishingInterval = UA_Double((float64((UA_Double((UA_Duration(server[0].config.publishingIntervalLimits.min)))))))
	}
	{
		if requestedMaxKeepAliveCount > UA_UInt32(server[0].config.keepAliveCountLimits.max) {
			subscription[0].maxKeepAliveCount = UA_UInt32(server[0].config.keepAliveCountLimits.max)
		} else if requestedMaxKeepAliveCount < UA_UInt32(server[0].config.keepAliveCountLimits.min) {
			subscription[0].maxKeepAliveCount = UA_UInt32(server[0].config.keepAliveCountLimits.min)
		} else {
			subscription[0].maxKeepAliveCount = requestedMaxKeepAliveCount
		}
	}
	{
		if requestedLifetimeCount > UA_UInt32(server[0].config.lifeTimeCountLimits.max) {
			subscription[0].lifeTimeCount = UA_UInt32(server[0].config.lifeTimeCountLimits.max)
		} else if requestedLifetimeCount < UA_UInt32(server[0].config.lifeTimeCountLimits.min) {
			subscription[0].lifeTimeCount = UA_UInt32(server[0].config.lifeTimeCountLimits.min)
		} else {
			subscription[0].lifeTimeCount = requestedLifetimeCount
		}
	}
	if UA_UInt32(subscription[0].lifeTimeCount) < UA_UInt32((uint32_t((uint32((3 * uint32((uint32((uint32_t((UA_UInt32(subscription[0].maxKeepAliveCount))))))))))))) {
		subscription[0].lifeTimeCount = UA_UInt32((uint32_t((uint32((3 * uint32((uint32((uint32_t((UA_UInt32(subscription[0].maxKeepAliveCount)))))))))))))
	}
	subscription[0].notificationsPerPublish = maxNotificationsPerPublish
	if maxNotificationsPerPublish == UA_UInt32((uint32_t((uint32((0)))))) || maxNotificationsPerPublish > UA_UInt32(server[0].config.maxNotificationsPerPublish) {
		subscription[0].notificationsPerPublish = UA_UInt32(server[0].config.maxNotificationsPerPublish)
	}
	subscription[0].priority = UA_UInt32((uint32_t((uint32((uint32(uint8((__uint8_t((uint8_t((priority)))))))))))))
	retval = Subscription_registerPublishCallback(server, subscription)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Could not register publish callback with error code %s%.0s\x00"), (func() int {
			if (subscription[0].session)[0].header.channel != nil {
				return (func() int {
					if (subscription[0].session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((subscription[0].session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (subscription[0].session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((subscription[0].session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(subscription[0].session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(subscription[0].session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(subscription[0].session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(subscription[0].session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(subscription[0].subscriptionId), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
	}
}
// Service_CreateSubscription - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32330
func Service_CreateSubscription(server []UA_Server, session []UA_Session, request []UA_CreateSubscriptionRequest, response []UA_CreateSubscriptionResponse) {
	if UA_UInt32(server[0].config.maxSubscriptionsPerSession) != UA_UInt32((uint32_t((uint32((0)))))) && UA_UInt32(session[0].numPublishReq) >= UA_UInt32(server[0].config.maxSubscriptionsPerSession) {
		// Check limits for the number of subscriptions
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2155282432)))))))
		return
	}
	var newSubscription []UA_Subscription = UA_Subscription_new(session, UA_UInt32(response[0].subscriptionId))
	if newSubscription == nil {
		// Create the subscription
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing CreateSubscriptionRequest failed%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		return
	}
	// Also assigns the subscription id
	UA_Session_addSubscription(session, newSubscription)
	// Set the subscription parameters
	newSubscription[0].publishingEnabled = UA_Boolean(request[0].publishingEnabled)
	setSubscriptionSettings(server, newSubscription, UA_Double(request[0].requestedPublishingInterval), UA_UInt32(request[0].requestedLifetimeCount), UA_UInt32(request[0].requestedMaxKeepAliveCount), UA_UInt32(request[0].maxNotificationsPerPublish), UA_Byte(request[0].priority))
	// set settings first
	newSubscription[0].currentKeepAliveCount = UA_UInt32(newSubscription[0].maxKeepAliveCount)
	// Prepare the response
	response[0].subscriptionId = UA_UInt32(newSubscription[0].subscriptionId)
	response[0].revisedPublishingInterval = UA_Double(newSubscription[0].publishingInterval)
	response[0].revisedLifetimeCount = UA_UInt32(newSubscription[0].lifeTimeCount)
	response[0].revisedMaxKeepAliveCount = UA_UInt32(newSubscription[0].maxKeepAliveCount)
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | CreateSubscriptionRequest: Created Subscription %d with a publishing interval of %f ms%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(response[0].subscriptionId), UA_Double(newSubscription[0].publishingInterval), []byte("\x00"))
}
// Service_ModifySubscription - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32371
func Service_ModifySubscription(server []UA_Server, session []UA_Session, request []UA_ModifySubscriptionRequest, response []UA_ModifySubscriptionResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing ModifySubscriptionRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	var sub []UA_Subscription = UA_Session_getSubscriptionById(session, UA_UInt32(request[0].subscriptionId))
	if sub == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
		return
	}
	setSubscriptionSettings(server, sub, UA_Double(request[0].requestedPublishingInterval), UA_UInt32(request[0].requestedLifetimeCount), UA_UInt32(request[0].requestedMaxKeepAliveCount), UA_UInt32(request[0].maxNotificationsPerPublish), UA_Byte(request[0].priority))
	// Reset the subscription lifetime
	sub[0].currentLifetimeCount = 0
	response[0].revisedPublishingInterval = UA_Double(sub[0].publishingInterval)
	response[0].revisedLifetimeCount = UA_UInt32(sub[0].lifeTimeCount)
	response[0].revisedMaxKeepAliveCount = UA_UInt32(sub[0].maxKeepAliveCount)
}
// Operation_SetPublishingMode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32392
func Operation_SetPublishingMode(Server []UA_Server, session []UA_Session, publishingEnabled []UA_Boolean, subscriptionId []UA_UInt32, result []UA_StatusCode) {
	var sub []UA_Subscription = UA_Session_getSubscriptionById(session, UA_UInt32(subscriptionId[0]))
	if sub == nil {
		result[0] = UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
		return
	}
	// Reset the subscription lifetime
	sub[0].currentLifetimeCount = 0
	// Set the publishing mode
	sub[0].publishingEnabled = publishingEnabled[0]
}
// Service_SetPublishingMode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32406
func Service_SetPublishingMode(server []UA_Server, session []UA_Session, request []UA_SetPublishingModeRequest, response []UA_SetPublishingModeResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing SetPublishingModeRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	var publishingEnabled UA_Boolean = UA_Boolean(request[0].publishingEnabled)
	// request is const
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_SetPublishingMode), (*[100000000]UA_Boolean)(unsafe.Pointer(&publishingEnabled))[:], (*[100000000]uint)(unsafe.Pointer(&request[0].subscriptionIdsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:])
}
// setMonitoredItemSettings - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32419
func setMonitoredItemSettings(server []UA_Server, mon []UA_MonitoredItem, monitoringMode int, params []UA_MonitoringParameters, dataType []UA_DataType) UA_StatusCode {
	if uint32(params[0].filter.encoding) != uint32(UA_EXTENSIONOBJECT_DECODED) {
		// This parameter is optional and used only if mon->lastValue is not set yet.
		// Then numeric type will be detected from this value. Set null as defaut.
		// Filter
		UA_DataChangeFilter_init((*[100000000]UA_DataChangeFilter)(unsafe.Pointer(&(mon[0].filter)))[:])
		mon[0].filter.trigger = UA_DATACHANGETRIGGER_STATUSVALUE
	} else if (*params[0].filter.content.decoded()).type_ != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[173]))[:] {
		return UA_StatusCode((uint32_t((uint32((uint32(2151874560)))))))
	} else {
		var filter []UA_DataChangeFilter = (*params[0].filter.content.decoded()).data.([]UA_DataChangeFilter)
		if UA_UInt32(filter[0].deadbandType) == UA_UInt32((uint32_t((uint32((uint32(UA_DEADBANDTYPE_PERCENT))))))) {
			// TODO implement EURange to support UA_DEADBANDTYPE_PERCENT
			return UA_StatusCode((uint32_t((uint32((uint32(2151940096)))))))
		}
		if int((int((UA_Variant_isEmpty((*[100000000]UA_Variant)(unsafe.Pointer(&mon[0].lastValue))[:]))))) != 0 {
			if dataType == nil || int((int((noarch.NotUA_Boolean(isDataTypeNumeric(dataType)))))) != 0 {
				return UA_StatusCode((uint32_t((uint32((uint32(2152005632)))))))
			}
		} else if int((int((noarch.NotUA_Boolean(isDataTypeNumeric(mon[0].lastValue.type_)))))) != 0 {
			return UA_StatusCode((uint32_t((uint32((uint32(2152005632)))))))
		}
		UA_DataChangeFilter_copy(filter, (*[100000000]UA_DataChangeFilter)(unsafe.Pointer(&(mon[0].filter)))[:])
	}
	MonitoredItem_unregisterSampleCallback(server, mon)
	mon[0].monitoringMode = monitoringMode
	// ClientHandle
	mon[0].clientHandle = UA_UInt32(params[0].clientHandle)
	var samplingInterval UA_Double = UA_Double(params[0].samplingInterval)
	if UA_UInt32(mon[0].attributeId) == UA_UInt32((uint32_t((uint32((uint32(UA_ATTRIBUTEID_VALUE))))))) {
		var vn []UA_VariableNode = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&mon[0].monitoredNodeId))[:])
		if vn != nil {
			if uint32(vn[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) && samplingInterval < UA_Double(vn[0].minimumSamplingInterval) {
				// SamplingInterval
				samplingInterval = UA_Double(vn[0].minimumSamplingInterval)
			}
			server.config.nodestore.releaseNode((server)[0].config.nodestore.context, vn)
		}
	} else if UA_UInt32(mon[0].attributeId) == UA_UInt32((uint32_t((uint32((uint32(UA_ATTRIBUTEID_EVENTNOTIFIER))))))) {
		// TODO: events should not need a samplinginterval
		// 10 seconds to reduce the load
		samplingInterval = UA_Double((10000))
	}
	mon[0].samplingInterval = samplingInterval
	{
		if samplingInterval > UA_Double((float64((UA_Double((UA_Duration(server[0].config.samplingIntervalLimits.max))))))) {
			mon[0].samplingInterval = UA_Double((float64((UA_Double((UA_Duration(server[0].config.samplingIntervalLimits.max)))))))
		} else if samplingInterval < UA_Double((float64((UA_Double((UA_Duration(server[0].config.samplingIntervalLimits.min))))))) {
			mon[0].samplingInterval = UA_Double((float64((UA_Double((UA_Duration(server[0].config.samplingIntervalLimits.min)))))))
		} else {
			mon[0].samplingInterval = samplingInterval
		}
	}
	if samplingInterval != samplingInterval {
		// Check for nan
		mon[0].samplingInterval = UA_Double((float64((UA_Double((UA_Duration(server[0].config.samplingIntervalLimits.min)))))))
	}
	{
		if UA_UInt32(params[0].queueSize) > UA_UInt32(server[0].config.queueSizeLimits.max) {
			// QueueSize
			mon[0].maxQueueSize = UA_UInt32(server[0].config.queueSizeLimits.max)
		} else if UA_UInt32(params[0].queueSize) < UA_UInt32(server[0].config.queueSizeLimits.min) {
			mon[0].maxQueueSize = UA_UInt32(server[0].config.queueSizeLimits.min)
		} else {
			mon[0].maxQueueSize = UA_UInt32(params[0].queueSize)
		}
	}
	// DiscardOldest
	mon[0].discardOldest = UA_Boolean(params[0].discardOldest)
	if uint32(monitoringMode) == uint32(UA_MONITORINGMODE_REPORTING) {
		// Register sample callback if reporting is enabled
		MonitoredItem_registerSampleCallback(server, mon)
	}
	return 0
}

var binaryEncoding UA_String = UA_String{15 - 1, []byte("Default Binary\x00")}

type createMonContext struct {
	sub                []UA_Subscription
	timestampsToReturn int
}
// Operation_CreateMonitoredItem - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32498
// Thread-local variables to pass additional arguments into the operation
func Operation_CreateMonitoredItem(server []UA_Server, session []UA_Session, cmc []createMonContext, request []UA_MonitoredItemCreateRequest, result []UA_MonitoredItemCreateResult) {
	if UA_UInt32(server[0].config.maxMonitoredItemsPerSubscription) != UA_UInt32((uint32_t((uint32((0)))))) && UA_UInt32(cmc[0].sub[0].monitoredItemsSize) >= UA_UInt32(server[0].config.maxMonitoredItemsPerSubscription) {
		// Check available capacity
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2161836032)))))))
		return
	}
	var v UA_DataValue = UA_Server_readWithSession(server, session, (*[100000000]UA_ReadValueId)(unsafe.Pointer(&request[0].itemToMonitor))[:], cmc[0].timestampsToReturn)
	if int((int((UA_Boolean(v.hasStatus))))) != 0 && UA_StatusCode(v.status)>>uint64(30) > UA_StatusCode((uint32_t((uint32((1)))))) && UA_StatusCode(v.status) != UA_StatusCode((uint32_t((uint32((uint32(2147745792))))))) && UA_StatusCode(v.status) != UA_StatusCode((uint32_t((uint32((uint32(2147811328))))))) && UA_StatusCode(v.status) != UA_StatusCode((uint32_t((uint32((uint32(2150760448))))))) && UA_StatusCode(v.status) != UA_StatusCode((uint32_t((uint32((uint32(2149515264))))))) && UA_StatusCode(v.status) != UA_StatusCode((uint32_t((uint32((uint32(2151284736))))))) && UA_StatusCode(v.status) != UA_StatusCode((uint32_t((uint32((uint32(2151088128))))))) {
		// Make an example read to get errors in the itemToMonitor. Allow return
		//     * codes "good" and "uncertain", as well as a list of statuscodes that might
		//     * be repaired inside the data source.
		result[0].statusCode = UA_StatusCode(v.status)
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&v))[:])
		return
	}
	if uint(request[0].itemToMonitor.dataEncoding.name.length) > uint((0)) && (int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&binaryEncoding))[:], (*[100000000]UA_String)(unsafe.Pointer(&request[0].itemToMonitor.dataEncoding.name))[:])))))) != 0 || int(uint16((uint16((uint16_t((UA_UInt16(request[0].itemToMonitor.dataEncoding.namespaceIndex)))))))) != 0) {
		// Check if the encoding is supported
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2151219200)))))))
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&v))[:])
		return
	}
	if UA_UInt32(request[0].itemToMonitor.attributeId) != UA_UInt32((uint32_t((uint32((uint32(UA_ATTRIBUTEID_VALUE))))))) && uint(request[0].itemToMonitor.dataEncoding.name.length) > uint((0)) {
		// Check if the encoding is set for a value
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2151153664)))))))
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&v))[:])
		return
	}
	var newMon []UA_MonitoredItem = UA_MonitoredItem_new(UA_MONITOREDITEMTYPE_CHANGENOTIFY)
	if newMon == nil {
		// Create the monitoreditem
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&v))[:])
		return
	}
	var retval UA_StatusCode = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&request[0].itemToMonitor.nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&newMon[0].monitoredNodeId))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		result[0].statusCode = retval
		MonitoredItem_delete(server, newMon)
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&v))[:])
		return
	}
	newMon[0].subscription = cmc[0].sub
	newMon[0].attributeId = UA_UInt32(request[0].itemToMonitor.attributeId)
	UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&request[0].itemToMonitor.indexRange))[:], (*[100000000]UA_String)(unsafe.Pointer(&newMon[0].indexRange))[:])
	newMon[0].monitoredItemId = func() UA_UInt32 {
		tempVar := &cmc[0].sub[0].lastMonitoredItemId
		*tempVar ++
		return *tempVar
	}()
	newMon[0].timestampsToReturn = cmc[0].timestampsToReturn
	retval = setMonitoredItemSettings(server, newMon, request[0].monitoringMode, (*[100000000]UA_MonitoringParameters)(unsafe.Pointer(&request[0].requestedParameters))[:], v.value.type_)
	UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&v))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		result[0].statusCode = retval
		MonitoredItem_delete(server, newMon)
		cmc[0].sub[0].lastMonitoredItemId --
		return
	}
	UA_Subscription_addMonitoredItem(cmc[0].sub, newMon)
	if uint32(request[0].monitoringMode) == uint32(UA_MONITORINGMODE_REPORTING) {
		// Create the first sample
		UA_MonitoredItem_SampleCallback(server, newMon)
	}
	// Prepare the response
	result[0].revisedSamplingInterval = UA_Double(newMon[0].samplingInterval)
	result[0].revisedQueueSize = UA_UInt32(newMon[0].maxQueueSize)
	result[0].monitoredItemId = UA_UInt32(newMon[0].monitoredItemId)
}
// Service_CreateMonitoredItems - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32585
func Service_CreateMonitoredItems(server []UA_Server, session []UA_Session, request []UA_CreateMonitoredItemsRequest, response []UA_CreateMonitoredItemsResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing CreateMonitoredItemsRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxMonitoredItemsPerCall) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].itemsToCreateSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxMonitoredItemsPerCall))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	var cmc createMonContext
	// Check if the timestampstoreturn is valid
	cmc.timestampsToReturn = request[0].timestampsToReturn
	if uint32(cmc.timestampsToReturn) > uint32(UA_TIMESTAMPSTORETURN_NEITHER) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150301696)))))))
		return
	}
	// Find the subscription
	cmc.sub = UA_Session_getSubscriptionById(session, UA_UInt32(request[0].subscriptionId))
	if cmc.sub == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
		return
	}
	// Reset the subscription lifetime
	cmc.sub[0].currentLifetimeCount = 0
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_CreateMonitoredItem), (*[100000000]createMonContext)(unsafe.Pointer(&cmc))[:], (*[100000000]uint)(unsafe.Pointer(&request[0].itemsToCreateSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[159]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[55]))[:])
}
// Operation_ModifyMonitoredItem - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32621
func Operation_ModifyMonitoredItem(server []UA_Server, session []UA_Session, sub []UA_Subscription, request []UA_MonitoredItemModifyRequest, result []UA_MonitoredItemModifyResult) {
	var mon []UA_MonitoredItem = UA_Subscription_getMonitoredItem(sub, UA_UInt32(request[0].monitoredItemId))
	if mon == nil {
		// Get the MonitoredItem
		result[0].statusCode = UA_StatusCode((uint32_t((uint32((uint32(2151809024)))))))
		return
	}
	var retval UA_StatusCode
	retval = setMonitoredItemSettings(server, mon, mon[0].monitoringMode, (*[100000000]UA_MonitoringParameters)(unsafe.Pointer(&request[0].requestedParameters))[:], nil)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		result[0].statusCode = retval
		return
	}
	result[0].revisedSamplingInterval = UA_Double(mon[0].samplingInterval)
	result[0].revisedQueueSize = UA_UInt32(mon[0].maxQueueSize)
	// Remove some notifications if the queue is now too small
	MonitoredItem_ensureQueueSpace(mon)
}
// Service_ModifyMonitoredItems - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32645
func Service_ModifyMonitoredItems(server []UA_Server, session []UA_Session, request []UA_ModifyMonitoredItemsRequest, response []UA_ModifyMonitoredItemsResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing ModifyMonitoredItemsRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxMonitoredItemsPerCall) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].itemsToModifySize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxMonitoredItemsPerCall))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	if uint32(request[0].timestampsToReturn) > uint32(UA_TIMESTAMPSTORETURN_NEITHER) {
		// Check if the timestampstoreturn is valid
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150301696)))))))
		return
	}
	var sub []UA_Subscription = UA_Session_getSubscriptionById(session, UA_UInt32(request[0].subscriptionId))
	if sub == nil {
		// Get the subscription
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
		return
	}
	// Reset the subscription lifetime
	sub[0].currentLifetimeCount = 0
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_ModifyMonitoredItem), sub, (*[100000000]uint)(unsafe.Pointer(&request[0].itemsToModifySize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[95]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[31]))[:])
}

type setMonitoringContext struct {
	sub            []UA_Subscription
	monitoringMode int
}
// Operation_SetMonitoringMode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32684
func Operation_SetMonitoringMode(server []UA_Server, session []UA_Session, smc []setMonitoringContext, monitoredItemId []UA_UInt32, result []UA_StatusCode) {
	var mon []UA_MonitoredItem = UA_Subscription_getMonitoredItem(smc[0].sub, UA_UInt32(monitoredItemId[0]))
	if mon == nil {
		result[0] = UA_StatusCode((uint32_t((uint32((uint32(2151809024)))))))
		return
	}
	if uint32(mon[0].monitoredItemType) != uint32(UA_MONITOREDITEMTYPE_CHANGENOTIFY) {
		result[0] = UA_StatusCode((uint32_t((uint32((uint32(2151677952)))))))
		return
	}
	if uint32(smc[0].monitoringMode) > uint32(UA_MONITORINGMODE_REPORTING) {
		// Check if the MonitoringMode is valid or not
		result[0] = UA_StatusCode((uint32_t((uint32((uint32(2151743488)))))))
		return
	}
	if uint32(mon[0].monitoringMode) == uint32(smc[0].monitoringMode) {
		return
	}
	mon[0].monitoringMode = smc[0].monitoringMode
	if uint32(mon[0].monitoringMode) == uint32(UA_MONITORINGMODE_REPORTING) {
		MonitoredItem_registerSampleCallback(server, mon)
	} else {
		MonitoredItem_unregisterSampleCallback(server, mon)
		var notification []UA_Notification
		var notification_tmp []UA_Notification
		{
			// TODO correctly implement SAMPLING
			//  Setting the mode to DISABLED or SAMPLING causes all queued Notifications to be deleted
			for notification = ((*[100000000]NotificationQueue)(unsafe.Pointer(&mon[0].queue))[:])[0].tqh_first; notification != nil && func() int {
				notification_tmp = (notification)[0].listEntry.tqe_next
				tempVar := &1
				return *tempVar
			}() != 0; notification = notification_tmp {
				for {
					if (notification)[0].listEntry.tqe_next != nil {
						(notification)[0].listEntry.tqe_next[0].listEntry.tqe_prev = (notification)[0].listEntry.tqe_prev
					} else {
						((*[100000000]NotificationQueue)(unsafe.Pointer(&mon[0].queue))[:])[0].tqh_last = (notification)[0].listEntry.tqe_prev
					}
					(notification)[0].listEntry.tqe_prev[0] = (notification)[0].listEntry.tqe_next
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
				for {
					if (notification)[0].globalEntry.tqe_next != nil {
						(notification)[0].globalEntry.tqe_next[0].globalEntry.tqe_prev = (notification)[0].globalEntry.tqe_prev
					} else {
						((*[100000000]NotificationQueue)(unsafe.Pointer(&smc[0].sub[0].notificationQueue))[:])[0].tqh_last = (notification)[0].globalEntry.tqe_prev
					}
					(notification)[0].globalEntry.tqe_prev[0] = (notification)[0].globalEntry.tqe_next
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
				smc[0].sub[0].notificationQueueSize --
				UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&(*notification[0].data.value())))[:])
				_ = notification
			}
		}
		mon[0].queueSize = 0
		// Initialize lastSampledValue
		UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&mon[0].lastSampledValue))[:])
		UA_Variant_deleteMembers((*[100000000]UA_Variant)(unsafe.Pointer(&mon[0].lastValue))[:])
	}
}
// Service_SetMonitoringMode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32733
func Service_SetMonitoringMode(server []UA_Server, session []UA_Session, request []UA_SetMonitoringModeRequest, response []UA_SetMonitoringModeResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing SetMonitoringMode%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxMonitoredItemsPerCall) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].monitoredItemIdsSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxMonitoredItemsPerCall))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	var smc setMonitoringContext
	// Get the subscription
	smc.sub = UA_Session_getSubscriptionById(session, UA_UInt32(request[0].subscriptionId))
	if smc.sub == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
		return
	}
	// Reset the subscription lifetime
	smc.sub[0].currentLifetimeCount = 0
	smc.monitoringMode = request[0].monitoringMode
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_SetMonitoringMode), (*[100000000]setMonitoringContext)(unsafe.Pointer(&smc))[:], (*[100000000]uint)(unsafe.Pointer(&request[0].monitoredItemIdsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:])
}
// subscriptionSendError - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32764
// TODO: Unify with senderror in ua_server_binary.c
func subscriptionSendError(channel []UA_SecureChannel, requestHandle UA_UInt32, requestId UA_UInt32, error UA_StatusCode) {
	var err_response UA_PublishResponse
	UA_PublishResponse_init((*[100000000]UA_PublishResponse)(unsafe.Pointer(&err_response))[:])
	err_response.responseHeader.requestHandle = requestHandle
	err_response.responseHeader.timestamp = UA_DateTime_now()
	err_response.responseHeader.serviceResult = error
	UA_SecureChannel_sendSymmetricMessage(channel, UA_UInt32(requestId), UA_MESSAGETYPE_MSG, (*[100000000]UA_PublishResponse)(unsafe.Pointer(&err_response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:])
}
// Service_Publish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32776
func Service_Publish(server []UA_Server, session []UA_Session, request []UA_PublishRequest, requestId UA_UInt32) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing PublishRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if ((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first == nil {
		// Return an error if the session has no subscription
		subscriptionSendError(session[0].header.channel, UA_UInt32(request[0].requestHeader.requestHandle), UA_UInt32(requestId), UA_StatusCode((uint32_t((uint32((uint32(2155413504))))))))
		return
	}
	if UA_UInt32(server[0].config.maxPublishReqPerSession) != UA_UInt32((uint32_t((uint32((0)))))) && UA_UInt32(session[0].numPublishReq) >= UA_UInt32(server[0].config.maxPublishReqPerSession) {
		if int((int((noarch.NotUA_Boolean(UA_Subscription_reachedPublishReqLimit(server, session)))))) != 0 {
			// Handle too many subscriptions to free resources before trying to allocate
			//     * resources for the new publish request. If the limit has been reached the
			//     * oldest publish request shall be responded
			subscriptionSendError(session[0].header.channel, UA_UInt32(requestId), UA_UInt32(request[0].requestHeader.requestHandle), UA_StatusCode((uint32_t((uint32((uint32(2147614720))))))))
			return
		}
	}
	var entry []UA_PublishResponseEntry = make([]UA_PublishResponseEntry, 832/832)
	if entry == nil {
		// Allocate the response to store it in the retransmission queue
		subscriptionSendError(session[0].header.channel, UA_UInt32(requestId), UA_UInt32(request[0].requestHeader.requestHandle), UA_StatusCode((uint32_t((uint32((uint32(2147680256))))))))
		return
	}
	// Prepare the response
	entry[0].requestId = requestId
	var response []UA_PublishResponse = (*[100000000]UA_PublishResponse)(unsafe.Pointer(&entry[0].response))[:]
	UA_PublishResponse_init(response)
	response[0].responseHeader.requestHandle = UA_UInt32(request[0].requestHeader.requestHandle)
	if uint(request[0].subscriptionAcknowledgementsSize) > uint((0)) {
		// Allocate the results array to acknowledge the acknowledge
		response[0].results = UA_Array_new(uint(request[0].subscriptionAcknowledgementsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:]).([]UA_StatusCode)
		if response[0].results == nil {
			_ = entry
			subscriptionSendError(session[0].header.channel, UA_UInt32(requestId), UA_UInt32(request[0].requestHeader.requestHandle), UA_StatusCode((uint32_t((uint32((uint32(2147680256))))))))
			return
		}
		response[0].resultsSize = uint(request[0].subscriptionAcknowledgementsSize)
	}
	{
		var i uint
		for ; i < uint(request[0].subscriptionAcknowledgementsSize); i++ {
			var ack []UA_SubscriptionAcknowledgement = (*[100000000]UA_SubscriptionAcknowledgement)(unsafe.Pointer(&request[0].subscriptionAcknowledgements[i]))[:]
			var sub []UA_Subscription = UA_Session_getSubscriptionById(session, UA_UInt32(ack[0].subscriptionId))
			if sub == nil {
				// Delete Acknowledged Subscription Messages
				response[0].results[i] = UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
				UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Cannot process acknowledgements subscription %d%.0s\x00"), (func() int {
					if (session)[0].header.channel != nil {
						return (func() int {
							if (session)[0].header.channel[0].connection != nil {
								return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
							}
							return 0
						}())
					}
					return 0
				}()), (func() uint32 {
					if (session)[0].header.channel != nil {
						return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
					}
					return 0
				}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(ack[0].subscriptionId), []byte("\x00"))
				continue
			}
			// Remove the acked transmission from the retransmission queue
			response[0].results[i] = UA_Subscription_removeRetransmissionMessage(sub, UA_UInt32(ack[0].sequenceNumber))
		}
	}
	// Queue the publish response. It will be dequeued in a repeated publish
	//     * callback. This can also be triggered right now for a late
	//     * subscription.
	UA_Session_queuePublishReq(session, entry, 0)
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Queued a publication message%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	var immediate []UA_Subscription
	if UA_UInt32(session[0].lastSeenSubscriptionId) > UA_UInt32((uint32_t((uint32((0)))))) {
		{
			// If there are late subscriptions, the new publish request is used to
			//     * answer them immediately. However, a single subscription that generates
			//     * many notifications must not "starve" other late subscriptions. Therefore
			//     * we keep track of the last subscription that got preferential treatment.
			//     * We start searching for late subscriptions **after** the last one.
			for immediate = ((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first; immediate != nil; immediate = (immediate)[0].listEntry.le_next {
				if UA_UInt32(immediate[0].subscriptionId) == UA_UInt32(session[0].lastSeenSubscriptionId) {
					immediate = (immediate)[0].listEntry.le_next
					break
				}
			}
		}
	}
	var found UA_Boolean
	if immediate == nil {
		// If no entry was found, start at the beginning and don't restart
		immediate = ((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first
	} else {
		found = 1
	}
repeat:
	;
	for immediate != nil {
		if uint32(immediate[0].state) == uint32(UA_SUBSCRIPTIONSTATE_LATE) {
			session[0].lastSeenSubscriptionId = UA_UInt32(immediate[0].subscriptionId)
			UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Response on a late subscription%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(immediate[0].subscriptionId), []byte("\x00"))
			UA_Subscription_publish(server, immediate)
			return
		}
		immediate = (immediate)[0].listEntry.le_next
	}
	if int((int((UA_Boolean(found))))) != 0 {
		// Restart at the beginning of the list
		immediate = ((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first
		found = 0
		goto repeat
	}
	// No late subscription this time
	session[0].lastSeenSubscriptionId = 0
}
// Operation_DeleteSubscription - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32900
func Operation_DeleteSubscription(server []UA_Server, session []UA_Session, __ interface{}, subscriptionId []UA_UInt32, result []UA_StatusCode) {
	result[0] = UA_Session_deleteSubscription(server, session, UA_UInt32(subscriptionId[0]))
	if result[0] == UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Subscription %d | Subscription deleted%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(subscriptionId[0]), []byte("\x00"))
	} else {
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Deleting Subscription with Id %d failed with error code %s%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_UInt32(subscriptionId[0]), UA_StatusCode_name(UA_StatusCode(result[0])), []byte("\x00"))
	}
}
// Service_DeleteSubscriptions - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32915
func Service_DeleteSubscriptions(server []UA_Server, session []UA_Session, request []UA_DeleteSubscriptionsRequest, response []UA_DeleteSubscriptionsResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing DeleteSubscriptionsRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_DeleteSubscription), nil, (*[100000000]uint)(unsafe.Pointer(&request[0].subscriptionIdsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:])
	if (((*[100000000]UA_ListOfUASubscriptions)(unsafe.Pointer(&session[0].serverSubscriptions))[:])[0].lh_first) != nil {
		// The session has at least one subscription
		return
	}
	// Send remaining publish responses if the last subscription was removed
	UA_Subscription_answerPublishRequestsNoSubscription(server, session)
}
// Operation_DeleteMonitoredItem - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32935
func Operation_DeleteMonitoredItem(server []UA_Server, session []UA_Session, sub []UA_Subscription, monitoredItemId []UA_UInt32, result []UA_StatusCode) {
	result[0] = UA_Subscription_deleteMonitoredItem(server, sub, UA_UInt32(monitoredItemId[0]))
}
// Service_DeleteMonitoredItems - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32941
func Service_DeleteMonitoredItems(server []UA_Server, session []UA_Session, request []UA_DeleteMonitoredItemsRequest, response []UA_DeleteMonitoredItemsResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing DeleteMonitoredItemsRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxMonitoredItemsPerCall) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].monitoredItemIdsSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxMonitoredItemsPerCall))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	var sub []UA_Subscription = UA_Session_getSubscriptionById(session, UA_UInt32(request[0].subscriptionId))
	if sub == nil {
		// Get the subscription
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
		return
	}
	// Reset the subscription lifetime
	sub[0].currentLifetimeCount = 0
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_DeleteMonitoredItem), sub, (*[100000000]uint)(unsafe.Pointer(&request[0].monitoredItemIdsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:])
}
// Service_Republish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:32970
func Service_Republish(server []UA_Server, session []UA_Session, request []UA_RepublishRequest, response []UA_RepublishResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing RepublishRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	var sub []UA_Subscription = UA_Session_getSubscriptionById(session, UA_UInt32(request[0].subscriptionId))
	if sub == nil {
		// Get the subscription
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
		return
	}
	// Reset the subscription lifetime
	sub[0].currentLifetimeCount = 0
	var entry []UA_NotificationMessageEntry
	{
		// Find the notification in the retransmission queue
		for entry = ((*[100000000]ListOfNotificationMessages)(unsafe.Pointer(&sub[0].retransmissionQueue))[:])[0].tqh_first; entry != nil; entry = (entry)[0].listEntry.tqe_next {
			if UA_UInt32(entry[0].message.sequenceNumber) == UA_UInt32(request[0].retransmitSequenceNumber) {
				break
			}
		}
	}
	if entry == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2155544576)))))))
		return
	}
	response[0].responseHeader.serviceResult = UA_NotificationMessage_copy((*[100000000]UA_NotificationMessage)(unsafe.Pointer(&entry[0].message))[:], (*[100000000]UA_NotificationMessage)(unsafe.Pointer(&response[0].notificationMessage))[:])
}
// Service_OpenSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33016
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_services_securechannel.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014, 2017 (c) Florian Palm
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Mark Giraud, Fraunhofer IOSB
//
func Service_OpenSecureChannel(server []UA_Server, channel []UA_SecureChannel, request []UA_OpenSecureChannelRequest, response []UA_OpenSecureChannelResponse) {
	if uint32(request[0].requestType) == uint32(UA_SECURITYTOKENREQUESTTYPE_RENEW) {
		// Renew the channel
		response[0].responseHeader.serviceResult = UA_SecureChannelManager_renew((*[100000000]UA_SecureChannelManager)(unsafe.Pointer(&server[0].secureChannelManager))[:], channel, request, response)
		if UA_StatusCode(response[0].responseHeader.serviceResult) == UA_StatusCode((uint32_t((uint32((0)))))) {
			// Logging
			UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | SecureChannel renewed%.0s\x00"), (func() int {
				if (channel)[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
				}
				return 0
			}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		} else {
			UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Renewing SecureChannel failed%.0s\x00"), (func() int {
				if (channel)[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
				}
				return 0
			}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		}
		return
	}
	if uint32(request[0].requestType) != uint32(UA_SECURITYTOKENREQUESTTYPE_ISSUE) {
		// Must be ISSUE or RENEW
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		return
	}
	// Open the channel
	response[0].responseHeader.serviceResult = UA_SecureChannelManager_open((*[100000000]UA_SecureChannelManager)(unsafe.Pointer(&server[0].secureChannelManager))[:], channel, request, response)
	if UA_StatusCode(response[0].responseHeader.serviceResult) == UA_StatusCode((uint32_t((uint32((0)))))) {
		// Logging
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Opened SecureChannel%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
	} else {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Opening a SecureChannel failed%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
	}
}
// Service_CloseSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33059
// The server does not send a CloseSecureChannel response
func Service_CloseSecureChannel(server []UA_Server, channel []UA_SecureChannel) {
	UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | CloseSecureChannel%.0s\x00"), (func() int {
		if (channel)[0].connection != nil {
			return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
		}
		return 0
	}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
	UA_SecureChannelManager_close((*[100000000]UA_SecureChannelManager)(unsafe.Pointer(&server[0].secureChannelManager))[:], UA_UInt32(channel[0].securityToken.channelId))
}
// UA_Server_getNodeContext - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33091
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_services_nodemanagement.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2014-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2014-2017 (c) Florian Palm
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015-2016 (c) Chris Iatrou
// *    Copyright 2015-2016 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) Julian Grothoff
// *    Copyright 2016 (c) LEvertz
// *    Copyright 2016 (c) Lorenz Haas
// *    Copyright 2017 (c) frax2222
// *    Copyright 2017-2018 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Christian von Arnim
// *    Copyright 2017 (c) Henrik Norrman
//
//
// Edit Node Context
//
func UA_Server_getNodeContext(server []UA_Server, nodeId UA_NodeId, nodeContext []interface{}) UA_StatusCode {
	var node []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:])
	if node == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
	}
	nodeContext[0] = node[0].context
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
	return 0
}
// editNodeContext - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33103
func editNodeContext(server []UA_Server, session []UA_Session, node []UA_Node, context interface{}) UA_StatusCode {
	node[0].context = context
	return 0
}
// UA_Server_setNodeContext - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33110
func UA_Server_setNodeContext(server []UA_Server, nodeId UA_NodeId, nodeContext interface{}) UA_StatusCode {
	var retval UA_StatusCode = UA_Server_editNode(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_EditNodeCallback(editNodeContext), nodeContext)
	return UA_StatusCode(retval)
}

var parentReferences []UA_NodeId = []UA_NodeId{UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{45}}, UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{47}}}
// checkParentReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33139
//
// Consistency Checks
//
// Check if the requested parent node exists, has the right node class and is
// * referenced with an allowed (hierarchical) reference type. For "type" nodes,
// * only hasSubType references are allowed.
func checkParentReference(server []UA_Server, session []UA_Session, nodeClass int, parentNodeId []UA_NodeId, referenceTypeId []UA_NodeId) UA_StatusCode {
	if uint32(nodeClass) == uint32(UA_NODECLASS_OBJECT) && int((int((UA_NodeId_isNull(parentNodeId))))) != 0 && int((int((UA_NodeId_isNull(referenceTypeId))))) != 0 {
		// Objects do not need a parent (e.g. mandatory/optional modellingrules)
		return 0
	}
	if int((int((UA_Boolean(server[0].bootstrapNS0))))) != 0 {
		// Omit checks during bootstrap
		return 0
	}
	var parent []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, parentNodeId)
	if parent == nil {
		// See if the parent exists
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Parent node not found%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2153447424)))))))
	}
	var parentNodeClass int = parent[0].nodeClass
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, parent)
	var referenceType []UA_ReferenceTypeNode = server.config.nodestore.getNode((server)[0].config.nodestore.context, referenceTypeId)
	if referenceType == nil {
		// Check the referencetype exists
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Reference type to the parent not found%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2152464384)))))))
	}
	if uint32(referenceType[0].nodeClass) != uint32(UA_NODECLASS_REFERENCETYPE) {
		// Check if the referencetype is a reference type node
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Reference type to the parent invalid%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, referenceType)
		return UA_StatusCode((uint32_t((uint32((uint32(2152464384)))))))
	}
	var referenceTypeIsAbstract UA_Boolean = UA_Boolean(referenceType[0].isAbstract)
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, referenceType)
	if int((int((referenceTypeIsAbstract)))) == 1 {
		// Check that the reference type is not abstract
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Abstract reference type to the parent not allowed%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2153512960)))))))
	}
	if uint32(nodeClass) == uint32(UA_NODECLASS_DATATYPE) || uint32(nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE) || uint32(nodeClass) == uint32(UA_NODECLASS_OBJECTTYPE) || uint32(nodeClass) == uint32(UA_NODECLASS_REFERENCETYPE) {
		if int((int((noarch.NotUA_Boolean(UA_NodeId_equal(referenceTypeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&subtypeId))[:])))))) != 0 {
			// Check hassubtype relation for type nodes
			// type needs hassubtype reference to the supertype
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: New type node need to have a HasSubType reference%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			return UA_StatusCode((uint32_t((uint32((uint32(2153512960)))))))
		}
		if uint32(parentNodeClass) != uint32(nodeClass) {
			// supertype needs to be of the same node type
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: New type node needs to be of the same node type as the parent%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			return UA_StatusCode((uint32_t((uint32((uint32(2153447424)))))))
		}
		return 0
	}
	var hierarchicalReference UA_NodeId = UA_NODEID_NUMERIC(0, 33)
	if int((int((noarch.NotUA_Boolean(isNodeInTree((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], referenceTypeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&hierarchicalReference))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&subtypeId))[:], 1)))))) != 0 {
		// Test if the referencetype is hierarchical
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Reference type is not hierarchical%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2152464384)))))))
	}
	return 0
}
// typeCheckVariableNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33223
func typeCheckVariableNode(server []UA_Server, session []UA_Session, node []UA_VariableNode, vt []UA_VariableTypeNode, parentNodeId []UA_NodeId) UA_StatusCode {
	var value UA_DataValue
	// The value might come from a datasource, so we perform a
	//     * regular read.
	UA_DataValue_init((*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
	var retval UA_StatusCode = readValueAttribute(server, session, node, (*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	if int((int((noarch.NotUA_Boolean(compatibleDataType(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].dataType))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&vt[0].dataType))[:], 0)))))) != 0 {
		// Check the datatype against the vt
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	var arrayDims uint = uint(node[0].arrayDimensionsSize)
	if arrayDims == uint((0)) && int((int((UA_Boolean(value.hasValue))))) != 0 && value.value.type_ != nil && int((int((noarch.NotUA_Boolean(UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&value.value))[:])))))) != 0 {
		// Get the array dimensions
		// No array dimensions on an array implies one dimension
		arrayDims = 1
	}
	if !(uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE) && int((int((UA_Boolean((node)[0].isAbstract))))) != 0 && UA_Int32(node[0].valueRank) == UA_Int32((int32_t((__int32_t((0))))))) && int((int((noarch.NotUA_Boolean(compatibleValueRankArrayDimensions(UA_Int32(node[0].valueRank), uint(arrayDims))))))) != 0 {
		// Check valueRank against array dimensions
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	var objectTypes UA_NodeId = UA_NODEID_NUMERIC(0, 58)
	if UA_Int32(node[0].valueRank) != UA_Int32(vt[0].valueRank) && UA_Int32(node[0].valueRank) != UA_Int32(UA_VariableAttributes_default.valueRank) && int((int((noarch.NotUA_Boolean(isNodeInTree((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], parentNodeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&objectTypes))[:], parentReferences, 2)))))) != 0 {
		if int((int((noarch.NotUA_Boolean(compatibleValueRanks(UA_Int32(node[0].valueRank), UA_Int32(vt[0].valueRank))))))) != 0 {
			// If variable node is created below BaseObjectType and has its default valueRank of -2,
			//     * skip the test
			// TODO handle subtypes of parent reference types
			// Check valueRank against the vt
			return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
		}
	}
	if int((int((noarch.NotUA_Boolean(compatibleArrayDimensions(uint(vt[0].arrayDimensionsSize), vt[0].arrayDimensions, uint(node[0].arrayDimensionsSize), node[0].arrayDimensions)))))) != 0 {
		// Check array dimensions against the vt
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(server[0].bootstrapNS0)))))) != 0 && int((int((UA_Boolean(value.hasValue))))) != 0 {
		if int((int((noarch.NotUA_Boolean(compatibleValue(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].dataType))[:], UA_Int32(node[0].valueRank), uint(node[0].arrayDimensionsSize), node[0].arrayDimensions, (*[100000000]UA_Variant)(unsafe.Pointer(&value.value))[:], nil)))))) != 0 {
			// Typecheck the value
			// If the type-check failed write the same value again. The
			//         * write-service tries to convert to the correct type...
			retval = UA_Server_writeValue(server, node[0].nodeId, value.value)
		}
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&value))[:])
	}
	return UA_StatusCode(retval)
}

var baseDataVariableType UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{63}}
var baseObjectType UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{58}}
// useVariableTypeAttributes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33295
//
// Instantiate Node
//
// Use attributes from the variable type wherever required
func useVariableTypeAttributes(server []UA_Server, session []UA_Session, node []UA_VariableNode, item []UA_AddNodesItem) UA_StatusCode {
	var attributes []UA_VariableAttributes = (*item[0].nodeAttributes.content.decoded()).data.([]UA_VariableAttributes)
	var typeDefinition []UA_NodeId
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) {
		// Select the type definition
		typeDefinition = (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].typeDefinition.nodeId))[:]
	} else {
		// UA_NODECLASS_VARIABLETYPE
		typeDefinition = (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].parentNodeId.nodeId))[:]
	}
	if int((int((UA_NodeId_isNull(typeDefinition))))) != 0 {
		// Replace an empty typeDefinition with the most permissive default
		typeDefinition = (*[100000000]UA_NodeId)(unsafe.Pointer(&baseDataVariableType))[:]
	}
	var vt []UA_VariableTypeNode = server.config.nodestore.getNode((server)[0].config.nodestore.context, typeDefinition)
	if vt == nil || uint32(vt[0].nodeClass) != uint32(UA_NODECLASS_VARIABLETYPE) {
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, vt)
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	var retval UA_StatusCode
	if attributes[0].value.type_ == nil {
		// If no value is set, see if the vt provides one and copy it. This needs to
		//     * be done before copying the datatype from the vt, as setting the datatype
		//     * triggers a typecheck.
		UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: No value given; Copy the valuefrom the TypeDefinition%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		var vt_value UA_DataValue
		UA_DataValue_init((*[100000000]UA_DataValue)(unsafe.Pointer(&vt_value))[:])
		retval = readValueAttribute(server, session, vt, (*[100000000]UA_DataValue)(unsafe.Pointer(&vt_value))[:])
		if retval == UA_StatusCode((uint32_t((uint32((0)))))) && int((int((UA_Boolean(vt_value.hasValue))))) != 0 {
			retval = UA_Variant_copy((*[100000000]UA_Variant)(unsafe.Pointer(&vt_value.value))[:], (*[100000000]UA_Variant)(unsafe.Pointer(&(*node[0].value.data()).value.value))[:])
			(*node[0].value.data()).value.hasValue = 1
		}
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&vt_value))[:])
	}
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) && int((int((UA_NodeId_isNull((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].dataType))[:]))))) != 0 {
		// If no datatype is given, use the datatype of the vt
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: No datatype given; Copy the datatype attribute from the TypeDefinition%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		retval = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&vt[0].dataType))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].dataType))[:])
	}
	// TODO: If the vt has arraydimensions but this variable does not, copy
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, vt)
	return UA_StatusCode(retval)
}
// findChildByBrowsename - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33355
// Search for an instance of "browseName" in node searchInstance. Used during
// * copyChildNodes to find overwritable/mergable nodes. Does not touch
// * outInstanceNodeId if no child is found.
func findChildByBrowsename(server []UA_Server, session []UA_Session, searchInstance []UA_NodeId, browseName []UA_QualifiedName, outInstanceNodeId []UA_NodeId) UA_StatusCode {
	var bd UA_BrowseDescription
	UA_BrowseDescription_init((*[100000000]UA_BrowseDescription)(unsafe.Pointer(&bd))[:])
	bd.nodeId = searchInstance[0]
	bd.referenceTypeId = UA_NODEID_NUMERIC(0, 44)
	bd.includeSubtypes = 1
	bd.browseDirection = UA_BROWSEDIRECTION_FORWARD
	bd.nodeClassMask = UA_UInt32((uint32_t((uint32((uint32(UA_NODECLASS_OBJECT | UA_NODECLASS_VARIABLE | UA_NODECLASS_METHOD)))))))
	bd.resultMask = UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_NODECLASS | UA_BROWSERESULTMASK_BROWSENAME)))))))
	var br UA_BrowseResult
	UA_BrowseResult_init((*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	var maxrefs UA_UInt32
	Operation_Browse(server, session, (*[100000000]UA_UInt32)(unsafe.Pointer(&maxrefs))[:], (*[100000000]UA_BrowseDescription)(unsafe.Pointer(&bd))[:], (*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	if UA_StatusCode(br.statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(br.statusCode)
	}
	var retval UA_StatusCode
	{
		var i uint
		for ; i < uint(br.referencesSize); i++ {
			var rd []UA_ReferenceDescription = (*[100000000]UA_ReferenceDescription)(unsafe.Pointer(&br.references[i]))[:]
			if int(uint16((uint16((uint16_t((UA_UInt16(rd[0].browseName.namespaceIndex)))))))) == int(uint16((uint16((uint16_t((UA_UInt16(browseName[0].namespaceIndex)))))))) && int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&rd[0].browseName.name))[:], (*[100000000]UA_String)(unsafe.Pointer(&browseName[0].name))[:]))))) != 0 {
				retval = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&rd[0].nodeId.nodeId))[:], outInstanceNodeId)
				break
			}
		}
	}
	UA_BrowseResult_deleteMembers((*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	return UA_StatusCode(retval)
}

var mandatoryId UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{78}}
var hasModellingRuleId UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{37}}
// isMandatoryChild - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33395
func isMandatoryChild(server []UA_Server, session []UA_Session, childNodeId []UA_NodeId) UA_Boolean {
	var child []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, childNodeId)
	if child == nil {
		// Get the child
		return 0
	}
	{
		var i uint
		for ; i < uint(child[0].referencesSize); i++ {
			var refs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&child[0].references[i]))[:]
			if int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&hasModellingRuleId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].referenceTypeId))[:])))))) != 0 {
				// Look for the reference making the child mandatory
				continue
			}
			if int((int((UA_Boolean(refs[0].isInverse))))) != 0 {
				continue
			}
			{
				var j uint
				for ; j < uint(refs[0].targetIdsSize); j++ {
					if int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&mandatoryId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].targetIds[j].nodeId))[:]))))) != 0 {
						server.config.nodestore.releaseNode((server)[0].config.nodestore.context, child)
						return 1
					}
				}
			}
		}
	}
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, child)
	return 0
}
// deleteReferencesSubset - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33436
//
// * This method only deletes references from the node which are not matching any type in the given array.
// * Could be used to e.g. delete all the references, except 'HASMODELINGRULE'
//
func deleteReferencesSubset(node []UA_Node, referencesSkipSize uint, referencesSkip []UA_NodeId) {
	if referencesSkipSize == uint((0)) {
		UA_Node_deleteReferences(node)
		return
	}
	var newSize uint
	{
		var i uint
		for ; i < uint(node[0].referencesSize); i++ {
			{
				var j uint
				for ; j < referencesSkipSize; j++ {
					if int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].references[i].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referencesSkip[j]))[:]))))) != 0 {
						// Let's count if there are references left. If not just delete all the references.
						//     * It's faster
						newSize ++
					}
				}
			}
		}
	}
	if newSize == uint((0)) {
		UA_Node_deleteReferences(node)
		return
	}
	var newReferences []UA_NodeReferenceKind = make([]UA_NodeReferenceKind, 144*uint32((newSize))/144)
	var curr uint
	var retval UA_StatusCode
	{
		var i uint
		for ; i < uint(node[0].referencesSize) && retval == UA_StatusCode((uint32_t((uint32((0)))))); i++ {
			{
				var j uint
				for ; j < referencesSkipSize; j++ {
					if int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].references[i].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referencesSkip[j]))[:])))))) != 0 {
						// Now copy the remaining references to a new array
						continue
					}
					var srefs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&node[0].references[i]))[:]
					var drefs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&newReferences[func() uint {
						defer func() {
							curr ++
						}()
						return curr
					}()]))[:]
					// copy the reference
					drefs[0].isInverse = UA_Boolean(srefs[0].isInverse)
					retval = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&srefs[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&drefs[0].referenceTypeId))[:])
					if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
						break
					}
					retval = UA_Array_copy(srefs[0].targetIds, uint(srefs[0].targetIdsSize), (*[100000000][]UA_ExpandedNodeId)(unsafe.Pointer(&drefs[0].targetIds))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[17]))[:])
					if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
						break
					}
					drefs[0].targetIdsSize = uint(srefs[0].targetIdsSize)
					break
				}
			}
			if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
				{
					var k uint
					for ; k < i; k++ {
						var refs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&newReferences[i]))[:]
						{
							var j uint
							for ; j < uint(refs[0].targetIdsSize); j++ {
								UA_ExpandedNodeId_deleteMembers((*[100000000]UA_ExpandedNodeId)(unsafe.Pointer(&refs[0].targetIds[j]))[:])
							}
						}
						UA_Array_delete(refs[0].targetIds, uint(refs[0].targetIdsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[17]))[:])
						UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&refs[0].referenceTypeId))[:])
					}
				}
			}
		}
	}
	UA_Node_deleteReferences(node)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		node[0].references = newReferences
		node[0].referencesSize = newSize
	} else {
		_ = newReferences
	}
}
// copyChildNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33506
func copyChildNode(server []UA_Server, session []UA_Session, destinationNodeId []UA_NodeId, rd []UA_ReferenceDescription) UA_StatusCode {
	var existingChild UA_NodeId = UA_NODEID_NULL
	var retval UA_StatusCode = findChildByBrowsename(server, session, destinationNodeId, (*[100000000]UA_QualifiedName)(unsafe.Pointer(&rd[0].browseName))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&existingChild))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	if int((int((noarch.NotUA_Boolean(UA_NodeId_isNull((*[100000000]UA_NodeId)(unsafe.Pointer(&existingChild))[:])))))) != 0 {
		if uint32(rd[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) || uint32(rd[0].nodeClass) == uint32(UA_NODECLASS_OBJECT) {
			// Have a child with that browseName. Try to deep-copy missing members.
			retval = copyChildNodes(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&rd[0].nodeId.nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&existingChild))[:])
		}
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&existingChild))[:])
		return UA_StatusCode(retval)
	}
	if int((int((noarch.NotUA_Boolean(isMandatoryChild(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&rd[0].nodeId.nodeId))[:])))))) != 0 {
		// Is the child mandatory? If not, skip
		return 0
	}
	if uint32(rd[0].nodeClass) == uint32(UA_NODECLASS_METHOD) {
		var newItem UA_AddReferencesItem
		// No existing child with that browsename. Create it.
		// Add a reference to the method in the objecttype
		UA_AddReferencesItem_init((*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&newItem))[:])
		newItem.sourceNodeId = destinationNodeId[0]
		newItem.referenceTypeId = rd[0].referenceTypeId
		newItem.isForward = 1
		newItem.targetNodeId = rd[0].nodeId
		newItem.targetNodeClass = UA_NODECLASS_METHOD
		Operation_addReference(server, session, nil, (*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&newItem))[:], (*[100000000]UA_StatusCode)(unsafe.Pointer(&retval))[:])
		return UA_StatusCode(retval)
	}
	if uint32(rd[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) || uint32(rd[0].nodeClass) == uint32(UA_NODECLASS_OBJECT) {
		var node []UA_Node
		// Node exists and is a variable or object. Instantiate missing mandatory
		//     * children
		// Get the node
		retval = server.config.nodestore.getNodeCopy((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&rd[0].nodeId.nodeId))[:], (*[100000000][]UA_Node)(unsafe.Pointer(&node))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		var type_ []UA_Node = getNodeType(server, node)
		var typeId []UA_NodeId
		if type_ != nil {
			// Get the type
			typeId = (*[100000000]UA_NodeId)(unsafe.Pointer(&type_[0].nodeId))[:]
		} else {
			typeId = (*[100000000]UA_NodeId)(unsafe.Pointer(&UA_NODEID_NULL))[:]
		}
		// Reset the NodeId (random numeric id will be assigned in the nodestore)
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:])
		node[0].nodeId.namespaceIndex = UA_UInt16(destinationNodeId[0].namespaceIndex)
		var modellingRuleReferenceId UA_NodeId = UA_NODEID_NUMERIC(0, 37)
		// Remove references, they are re-created from scratch in addnode_finish
		// TODO: Be more clever in removing references that are re-added during
		//         * addnode_finish. That way, we can call addnode_finish also on children that were
		//         * manually added by the user during addnode_begin and addnode_finish.
		// For now we keep all the modelling rule references and delete all others
		deleteReferencesSubset(node, 1, (*[100000000]UA_NodeId)(unsafe.Pointer(&modellingRuleReferenceId))[:])
		var newNodeId UA_NodeId
		// Add the node to the nodestore
		retval = server.config.nodestore.insertNode((server)[0].config.nodestore.context, node, (*[100000000]UA_NodeId)(unsafe.Pointer(&newNodeId))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
			return UA_StatusCode(retval)
		}
		// Add all the children of this child to the new child node to make sure we take
		//         * the values from the nearest inherited object first.
		//         * The call to addNode_finish will then only add the children from the type and
		//         * thus skip the direct children of rd->nodeId.nodeId
		copyChildNodes(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&rd[0].nodeId.nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&newNodeId))[:])
		// Add the parent reference
		retval = AddNode_typeCheckAddRefs(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&newNodeId))[:], destinationNodeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&rd[0].referenceTypeId))[:], typeId)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			server.config.nodestore.deleteNode((server)[0].config.nodestore.context, node)
			server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
			return UA_StatusCode(retval)
		}
		// Call addnode_finish, this recursively adds additional members, the type
		//         * definition and so on of the base type of this child, if they are not yet
		//         * in the destination
		retval |= Operation_addNode_finish(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&newNodeId))[:])
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&newNodeId))[:])
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
	}
	return UA_StatusCode(retval)
}
// copyChildNodes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33608
// Copy any children of Node sourceNodeId to another node destinationNodeId.
func copyChildNodes(server []UA_Server, session []UA_Session, sourceNodeId []UA_NodeId, destinationNodeId []UA_NodeId) UA_StatusCode {
	var bd UA_BrowseDescription
	// Browse to get all children of the source
	UA_BrowseDescription_init((*[100000000]UA_BrowseDescription)(unsafe.Pointer(&bd))[:])
	bd.nodeId = sourceNodeId[0]
	bd.referenceTypeId = UA_NODEID_NUMERIC(0, 44)
	bd.includeSubtypes = 1
	bd.browseDirection = UA_BROWSEDIRECTION_FORWARD
	bd.nodeClassMask = UA_UInt32((uint32_t((uint32((uint32(UA_NODECLASS_OBJECT | UA_NODECLASS_VARIABLE | UA_NODECLASS_METHOD)))))))
	bd.resultMask = UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_REFERENCETYPEID | UA_BROWSERESULTMASK_NODECLASS | UA_BROWSERESULTMASK_BROWSENAME)))))))
	var br UA_BrowseResult
	UA_BrowseResult_init((*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	var maxrefs UA_UInt32
	Operation_Browse(server, session, (*[100000000]UA_UInt32)(unsafe.Pointer(&maxrefs))[:], (*[100000000]UA_BrowseDescription)(unsafe.Pointer(&bd))[:], (*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	if UA_StatusCode(br.statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(br.statusCode)
	}
	var retval UA_StatusCode
	{
		var i uint
		for ; i < uint(br.referencesSize); i++ {
			var rd []UA_ReferenceDescription = (*[100000000]UA_ReferenceDescription)(unsafe.Pointer(&br.references[i]))[:]
			retval |= copyChildNode(server, session, destinationNodeId, rd)
		}
	}
	UA_BrowseResult_deleteMembers((*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	return UA_StatusCode(retval)
}
// addChildren - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33639
func addChildren(server []UA_Server, session []UA_Session, node []UA_Node, type_ []UA_Node) UA_StatusCode {
	var hierarchy []UA_NodeId
	var hierarchySize uint
	var retval UA_StatusCode = getTypeHierarchy((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&type_[0].nodeId))[:], (*[100000000][]UA_NodeId)(unsafe.Pointer(&hierarchy))[:], (*[100000000]uint)(unsafe.Pointer(&hierarchySize))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Get the hierarchy of the type and all its supertypes
		return UA_StatusCode(retval)
	}
	{
		var i uint
		for ; i < hierarchySize; i++ {
			// Copy members of the type and supertypes (and instantiate them)
			retval |= copyChildNodes(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&hierarchy[i]))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:])
		}
	}
	UA_Array_delete(hierarchy, uint(hierarchySize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[16]))[:])
	return UA_StatusCode(retval)
}
// callConstructors - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33659
// Calls the global destructor internally of the global constructor succeeds and
// * the type-level constructor fails.
func callConstructors(server []UA_Server, session []UA_Session, node []UA_Node, type_ []UA_Node) UA_StatusCode {
	var lifecycle []UA_NodeTypeLifecycle
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_OBJECT) {
		var ot []UA_ObjectTypeNode = type_
		// Get the node type constructor
		lifecycle = (*[100000000]UA_NodeTypeLifecycle)(unsafe.Pointer(&ot[0].lifecycle))[:]
	} else if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) {
		var vt []UA_VariableTypeNode = type_
		lifecycle = (*[100000000]UA_NodeTypeLifecycle)(unsafe.Pointer(&vt[0].lifecycle))[:]
	}
	var context interface{} = node[0].context
	var retval UA_StatusCode
	if server[0].config.nodeLifecycle.constructor != nil {
		// Call the global constructor
		retval = server.config.nodeLifecycle.constructor(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], (*[100000000]interface{})(unsafe.Pointer(&context))[:])
	}
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) && lifecycle != nil && lifecycle[0].constructor != nil {
		// Call the type constructor
		retval = lifecycle.constructor(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&type_[0].nodeId))[:], type_[0].context, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], (*[100000000]interface{})(unsafe.Pointer(&context))[:])
	}
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		// Set the context *and* mark the node as constructed
		retval = UA_Server_editNode(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], UA_EditNodeCallback(editNodeContext), context)
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) && server[0].config.nodeLifecycle.destructor != nil {
		// Fail. Call the global destructor.
		server.config.nodeLifecycle.destructor(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], context)
	}
	return UA_StatusCode(retval)
}
// addTypeDefRef - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33700
func addTypeDefRef(server []UA_Server, session []UA_Session, node []UA_Node, type_ []UA_Node) UA_StatusCode {
	var retval UA_StatusCode
	var addref UA_AddReferencesItem
	UA_AddReferencesItem_init((*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&addref))[:])
	addref.sourceNodeId = node[0].nodeId
	addref.referenceTypeId = UA_NODEID_NUMERIC(0, 40)
	addref.isForward = 1
	addref.targetNodeId.nodeId = type_[0].nodeId
	Operation_addReference(server, session, nil, (*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&addref))[:], (*[100000000]UA_StatusCode)(unsafe.Pointer(&retval))[:])
	return UA_StatusCode(retval)
}
// getTypeDef - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33714
func getTypeDef(server []UA_Server, node []UA_Node, typeDefinitionId [][]UA_NodeId) UA_StatusCode {
	var hasTypeDef UA_NodeId = UA_NODEID_NUMERIC(0, 40)
	{
		var i uint
		for ; i < uint(node[0].referencesSize); i++ {
			if int((int((UA_Boolean(node[0].references[i].isInverse))))) == 0 && int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].references[i].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&hasTypeDef))[:]))))) != 0 && uint(node[0].references[i].targetIdsSize) > uint((0)) {
				typeDefinitionId[0] = (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].references[i].targetIds[0].nodeId))[:]
				return 0
			}
		}
	}
	return UA_StatusCode((uint32_t((uint32((uint32(2151546880)))))))
}
// addParentRef - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33728
func addParentRef(server []UA_Server, session []UA_Session, nodeId []UA_NodeId, referenceTypeId []UA_NodeId, parentNodeId []UA_NodeId) UA_StatusCode {
	var retval UA_StatusCode
	var ref_item UA_AddReferencesItem
	UA_AddReferencesItem_init((*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&ref_item))[:])
	ref_item.sourceNodeId = nodeId[0]
	ref_item.referenceTypeId = referenceTypeId[0]
	ref_item.isForward = 0
	ref_item.targetNodeId.nodeId = parentNodeId[0]
	Operation_addReference(server, session, nil, (*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&ref_item))[:], (*[100000000]UA_StatusCode)(unsafe.Pointer(&retval))[:])
	return UA_StatusCode(retval)
}

var hasSubtype UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{45}}
// AddNode_typeCheckAddRefs - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33754
func AddNode_typeCheckAddRefs(server []UA_Server, session []UA_Session, nodeId []UA_NodeId, parentNodeId []UA_NodeId, referenceTypeId []UA_NodeId, typeDefinitionId []UA_NodeId) UA_StatusCode {
	var node []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, nodeId)
	if node == nil {
		// Get the node
		return UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
	}
	var retval UA_StatusCode
	var type_ []UA_Node
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE) || uint32(node[0].nodeClass) == uint32(UA_NODECLASS_OBJECTTYPE) || uint32(node[0].nodeClass) == uint32(UA_NODECLASS_REFERENCETYPE) || uint32(node[0].nodeClass) == uint32(UA_NODECLASS_DATATYPE) {
		if int((int((UA_NodeId_equal(referenceTypeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&UA_NODEID_NULL))[:]))))) != 0 {
			// Use the typeDefinition as parent for type-nodes
			referenceTypeId = (*[100000000]UA_NodeId)(unsafe.Pointer(&hasSubtype))[:]
		}
		var parentNode []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, parentNodeId)
		if parentNode != nil {
			if uint32(parentNode[0].nodeClass) == uint32(node[0].nodeClass) {
				typeDefinitionId = parentNodeId
			}
			server.config.nodestore.releaseNode((server)[0].config.nodestore.context, parentNode)
		}
	}
	if int((int((UA_Boolean(server[0].bootstrapNS0))))) != 0 {
		goto get_type
	}
	// Check parent reference. Objects may have no parent.
	retval = checkParentReference(server, session, node[0].nodeClass, parentNodeId, referenceTypeId)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: The parent reference is invalid%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		goto cleanup
	}
	if (uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) || uint32(node[0].nodeClass) == uint32(UA_NODECLASS_OBJECT)) && int((int((UA_NodeId_isNull(typeDefinitionId))))) != 0 {
		// Replace empty typeDefinition with the most permissive default
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: No TypeDefinition; Use the default TypeDefinition for the Variable/Object%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) {
			typeDefinitionId = (*[100000000]UA_NodeId)(unsafe.Pointer(&baseDataVariableType))[:]
		} else {
			typeDefinitionId = (*[100000000]UA_NodeId)(unsafe.Pointer(&baseObjectType))[:]
		}
	}
get_type:
	;
	if int((int((noarch.NotUA_Boolean(UA_NodeId_isNull(typeDefinitionId)))))) != 0 {
		// Get the node type. There must be a typedefinition for variables, objects
		//     * and type-nodes. See the above checks.
		// Get the type node
		type_ = server.config.nodestore.getNode((server)[0].config.nodestore.context, typeDefinitionId)
		if type_ == nil {
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Node type not found in nodestore%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153971712)))))))
			goto cleanup
		}
		var typeOk UA_Boolean
		switch uint32(node[0].nodeClass) {
		case uint32(UA_NODECLASS_DATATYPE):
			typeOk = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(type_[0].nodeClass) == uint32(UA_NODECLASS_DATATYPE)]))))
		case uint32(UA_NODECLASS_METHOD):
			typeOk = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(type_[0].nodeClass) == uint32(UA_NODECLASS_METHOD)]))))
		case uint32(UA_NODECLASS_OBJECT):
			typeOk = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(type_[0].nodeClass) == uint32(UA_NODECLASS_OBJECTTYPE)]))))
		case uint32(UA_NODECLASS_OBJECTTYPE):
			typeOk = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(type_[0].nodeClass) == uint32(UA_NODECLASS_OBJECTTYPE)]))))
		case uint32(UA_NODECLASS_REFERENCETYPE):
			typeOk = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(type_[0].nodeClass) == uint32(UA_NODECLASS_REFERENCETYPE)]))))
		case uint32(UA_NODECLASS_VARIABLE):
			typeOk = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(type_[0].nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE)]))))
		case uint32(UA_NODECLASS_VARIABLETYPE):
			typeOk = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(type_[0].nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE)]))))
		case uint32(UA_NODECLASS_VIEW):
			typeOk = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(type_[0].nodeClass) == uint32(UA_NODECLASS_VIEW)]))))
		default:
			{
				typeOk = 0
			}
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(typeOk)))))) != 0 {
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Type does not match node class%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153971712)))))))
			goto cleanup
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(server[0].bootstrapNS0)))))) != 0 && uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) {
			if int((int((UA_Boolean((type_)[0].isAbstract))))) != 0 {
				var variableTypes UA_NodeId = UA_NODEID_NUMERIC(0, 63)
				var objectTypes UA_NodeId = UA_NODEID_NUMERIC(0, 58)
				if int((int((noarch.NotUA_Boolean(isNodeInTree((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], parentNodeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&variableTypes))[:], parentReferences, 2)))))) != 0 && int((int((noarch.NotUA_Boolean(isNodeInTree((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], parentNodeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&objectTypes))[:], parentReferences, 2)))))) != 0 {
					// See if the type has the correct node class. For type-nodes, we know
					//         * that type has the same nodeClass from checkParentReference.
					// Abstract variable is allowed if parent is a children of a base data variable
					// A variable may be of an object type which again is below BaseObjectType
					// TODO handle subtypes of parent reference types
					UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Type of variable node must be VariableType and not cannot be abstract%.0s\x00"), (func() int {
						if (session)[0].header.channel != nil {
							return (func() int {
								if (session)[0].header.channel[0].connection != nil {
									return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
								}
								return 0
							}())
						}
						return 0
					}()), (func() uint32 {
						if (session)[0].header.channel != nil {
							return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
						}
						return 0
					}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
					retval = UA_StatusCode((uint32_t((uint32((uint32(2153971712)))))))
					goto cleanup
				}
			}
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(server[0].bootstrapNS0)))))) != 0 && uint32(node[0].nodeClass) == uint32(UA_NODECLASS_OBJECT) {
			if int((int((UA_Boolean((type_)[0].isAbstract))))) != 0 {
				var objectTypes UA_NodeId = UA_NODEID_NUMERIC(0, 58)
				if int((int((noarch.NotUA_Boolean(isNodeInTree((*[100000000]UA_Nodestore)(unsafe.Pointer(&server[0].config.nodestore))[:], parentNodeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&objectTypes))[:], parentReferences, 2)))))) != 0 {
					// Object node created of an abstract ObjectType. Only allowed
					//                 * if within BaseObjectType folder
					// TODO handle subtypes of parent reference types
					UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Type of object node must be ObjectType and not be abstract%.0s\x00"), (func() int {
						if (session)[0].header.channel != nil {
							return (func() int {
								if (session)[0].header.channel[0].connection != nil {
									return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
								}
								return 0
							}())
						}
						return 0
					}()), (func() uint32 {
						if (session)[0].header.channel != nil {
							return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
						}
						return 0
					}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
					retval = UA_StatusCode((uint32_t((uint32((uint32(2153971712)))))))
					goto cleanup
				}
			}
		}
	}
	if type_ != nil && (uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) || uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE)) {
		// Check if all attributes hold the constraints of the type now. The initial
		//     * attributes must type-check. The constructor might change the attributes
		//     * again. Then, the changes are type-checked by the normal write service.
		retval = typeCheckVariableNode(server, session, node, type_, parentNodeId)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Type-checking the variable node failed with error code %s%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
			goto cleanup
		}
	}
	if int((int((noarch.NotUA_Boolean(UA_NodeId_isNull(parentNodeId)))))) != 0 {
		if int((int((UA_NodeId_isNull(referenceTypeId))))) != 0 {
			// Add reference to the parent
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Reference to parent cannot be null%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153971712)))))))
			goto cleanup
		}
		retval = addParentRef(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], referenceTypeId, parentNodeId)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Adding reference to parent failed%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			goto cleanup
		}
	}
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) || uint32(node[0].nodeClass) == uint32(UA_NODECLASS_OBJECT) {
		// Add a hasTypeDefinition reference
		// see above
		retval = addTypeDefRef(server, session, node, type_)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Adding a reference to the type definition failed with error code %s%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
		}
	}
cleanup:
	;
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
	if type_ != nil {
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_Server_deleteNode(server, nodeId[0], 1)
	}
	return UA_StatusCode(retval)
}
// AddNode_raw - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:33950
// Create the node and add it to the nodestore. But don't typecheck and add
// * references so far
func AddNode_raw(server []UA_Server, session []UA_Session, nodeContext interface{}, item []UA_AddNodesItem, outNewNodeId []UA_NodeId) UA_StatusCode {
	if session != (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:] && server[0].config.accessControl.allowAddNode != nil && int((int((noarch.NotUA_Boolean(server.config.accessControl.allowAddNode(server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, item)))))) != 0 {
		// Do not check access for server
		return UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
	}
	if uint32(uint16((uint16((uint16_t((UA_UInt16(item[0].requestedNewNodeId.nodeId.namespaceIndex)))))))) >= uint(server[0].namespacesSize) {
		// Check the namespaceindex
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Namespace invalid%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2150825984)))))))
	}
	if uint32(item[0].nodeAttributes.encoding) != uint32(UA_EXTENSIONOBJECT_DECODED) && uint32(item[0].nodeAttributes.encoding) != uint32(UA_EXTENSIONOBJECT_DECODED_NODELETE) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Node attributes invalid%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var node []UA_Node = server.config.nodestore.newNode((server)[0].config.nodestore.context, item[0].nodeClass)
	if node == nil {
		// Create a node
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Node could not create a node in the nodestore%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	// Fill the node attributes
	node[0].context = nodeContext
	var retval UA_StatusCode
	retval |= UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].requestedNewNodeId.nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:])
	retval |= UA_QualifiedName_copy((*[100000000]UA_QualifiedName)(unsafe.Pointer(&item[0].browseName))[:], (*[100000000]UA_QualifiedName)(unsafe.Pointer(&node[0].browseName))[:])
	retval |= UA_Node_setAttributes(node, (*item[0].nodeAttributes.content.decoded()).data, (*item[0].nodeAttributes.content.decoded()).type_)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Node could not create a node with error code %s%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
		server.config.nodestore.deleteNode((server)[0].config.nodestore.context, node)
		return UA_StatusCode(retval)
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(server[0].bootstrapNS0)))))) != 0 && (uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) || uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE)) {
		// Use attributes from the typedefinition
		// Use attributes from the type. The value and value constraints are the
		//         * same for the variable and variabletype attribute structs.
		retval = useVariableTypeAttributes(server, session, node, item)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Using attributes from the variable type failed with error code %s%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
			server.config.nodestore.deleteNode((server)[0].config.nodestore.context, node)
			return UA_StatusCode(retval)
		}
	}
	// Add the node to the nodestore
	retval = server.config.nodestore.insertNode((server)[0].config.nodestore.context, node, outNewNodeId)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Node could not add the new node to the nodestore with error code %s%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
	}
	return UA_StatusCode(retval)
}
// Operation_addNode_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34028
// Prepare the node, then add it to the nodestore
func Operation_addNode_begin(server []UA_Server, session []UA_Session, nodeContext interface{}, item []UA_AddNodesItem, parentNodeId []UA_NodeId, referenceTypeId []UA_NodeId, outNewNodeId []UA_NodeId) UA_StatusCode {
	var newId UA_NodeId
	if outNewNodeId == nil {
		// Create a temporary NodeId if none is returned
		UA_NodeId_init((*[100000000]UA_NodeId)(unsafe.Pointer(&newId))[:])
		outNewNodeId = (*[100000000]UA_NodeId)(unsafe.Pointer(&newId))[:]
	}
	var retval UA_StatusCode = AddNode_raw(server, session, nodeContext, item, outNewNodeId)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Create the node and add it to the nodestore
		return UA_StatusCode(retval)
	}
	// Typecheck and add references to parent and type definition
	retval = AddNode_typeCheckAddRefs(server, session, outNewNodeId, parentNodeId, referenceTypeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].typeDefinition.nodeId))[:])
	if outNewNodeId == (*[100000000]UA_NodeId)(unsafe.Pointer(&newId))[:] {
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&newId))[:])
	}
	return UA_StatusCode(retval)
}
// Operation_addNode_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34053
// Children, references, type-checking, constructors.
func Operation_addNode_finish(server []UA_Server, session []UA_Session, nodeId []UA_NodeId) UA_StatusCode {
	var retval UA_StatusCode
	var node []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, nodeId)
	if node == nil {
		// Get the node
		return UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
	}
	var type_ []UA_Node
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) || uint32(node[0].nodeClass) == uint32(UA_NODECLASS_OBJECT) {
		var typeDefId []UA_NodeId
		// Instantiate variables and objects
		retval = getTypeDef(server, node, (*[100000000][]UA_NodeId)(unsafe.Pointer(&typeDefId))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Can not get type definition of node since it has no 'hasTypeDef' reference%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			goto cleanup
		}
		// Get the type node
		type_ = server.config.nodestore.getNode((server)[0].config.nodestore.context, typeDefId)
		if type_ == nil {
			UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Node type not found in nodestore%.0s\x00"), (func() int {
				if (session)[0].header.channel != nil {
					return (func() int {
						if (session)[0].header.channel[0].connection != nil {
							return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
						}
						return 0
					}())
				}
				return 0
			}()), (func() uint32 {
				if (session)[0].header.channel != nil {
					return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
				}
				return 0
			}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
			retval = UA_StatusCode((uint32_t((uint32((uint32(2153971712)))))))
			goto cleanup
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(server[0].bootstrapNS0)))))) != 0 {
			// Add (mandatory) child nodes from the type definition
			retval = addChildren(server, session, node, type_)
			if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
				UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Adding child nodes failed with error code %s%.0s\x00"), (func() int {
					if (session)[0].header.channel != nil {
						return (func() int {
							if (session)[0].header.channel[0].connection != nil {
								return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
							}
							return 0
						}())
					}
					return 0
				}()), (func() uint32 {
					if (session)[0].header.channel != nil {
						return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
					}
					return 0
				}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
				goto cleanup
			}
		}
	}
	// Call the constructor(s)
	retval = callConstructors(server, session, node, type_)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | AddNodes: Calling the node constructor(s) failed with status code %s%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), UA_StatusCode_name(UA_StatusCode(retval)), []byte("\x00"))
	}
cleanup:
	;
	if type_ != nil {
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		removeDeconstructedNode(server, session, node, 1)
	}
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
	return UA_StatusCode(retval)
}
// Operation_addNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34114
func Operation_addNode(server []UA_Server, session []UA_Session, nodeContext interface{}, item []UA_AddNodesItem, result []UA_AddNodesResult) {
	result[0].statusCode = Operation_addNode_begin(server, session, nodeContext, item, (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].parentNodeId.nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&result[0].addedNodeId))[:])
	if UA_StatusCode(result[0].statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
		return
	}
	// AddNodes_finish
	result[0].statusCode = Operation_addNode_finish(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&result[0].addedNodeId))[:])
	if UA_StatusCode(result[0].statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
		// If finishing failed, the node was deleted
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&result[0].addedNodeId))[:])
	}
}
// Service_AddNodes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34132
func Service_AddNodes(server []UA_Server, session []UA_Session, request []UA_AddNodesRequest, response []UA_AddNodesResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing AddNodesRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxNodesPerNodeManagement) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].nodesToAddSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxNodesPerNodeManagement))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_addNode), nil, (*[100000000]uint)(unsafe.Pointer(&request[0].nodesToAddSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[166]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[34]))[:])
}
// __UA_Server_addNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34150
func __UA_Server_addNode(server []UA_Server, nodeClass int, requestedNewNodeId []UA_NodeId, parentNodeId []UA_NodeId, referenceTypeId []UA_NodeId, browseName UA_QualifiedName, typeDefinition []UA_NodeId, attr []UA_NodeAttributes, attributeType []UA_DataType, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	var item UA_AddNodesItem
	// Create the AddNodesItem
	UA_AddNodesItem_init((*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:])
	item.nodeClass = nodeClass
	item.requestedNewNodeId.nodeId = requestedNewNodeId[0]
	item.browseName = browseName
	item.parentNodeId.nodeId = parentNodeId[0]
	item.referenceTypeId = referenceTypeId[0]
	item.typeDefinition.nodeId = typeDefinition[0]
	item.nodeAttributes.encoding = UA_EXTENSIONOBJECT_DECODED_NODELETE
	(*item.nodeAttributes.content.decoded()).type_ = attributeType
	(*item.nodeAttributes.content.decoded()).data = uint32((uintptr_t(attr)))
	var result UA_AddNodesResult
	// Call the normal addnodes service
	UA_AddNodesResult_init((*[100000000]UA_AddNodesResult)(unsafe.Pointer(&result))[:])
	Operation_addNode(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], nodeContext, (*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:], (*[100000000]UA_AddNodesResult)(unsafe.Pointer(&result))[:])
	if outNewNodeId != nil {
		outNewNodeId[0] = result.addedNodeId
	} else {
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&result.addedNodeId))[:])
	}
	return UA_StatusCode(result.statusCode)
}
// UA_Server_addNode_begin - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34184
func UA_Server_addNode_begin(server []UA_Server, nodeClass int, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, typeDefinition UA_NodeId, attr interface{}, attributeType []UA_DataType, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	var item UA_AddNodesItem
	UA_AddNodesItem_init((*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:])
	item.nodeClass = nodeClass
	item.requestedNewNodeId.nodeId = requestedNewNodeId
	item.browseName = browseName
	item.typeDefinition.nodeId = typeDefinition
	item.nodeAttributes.encoding = UA_EXTENSIONOBJECT_DECODED_NODELETE
	(*item.nodeAttributes.content.decoded()).type_ = attributeType
	(*item.nodeAttributes.content.decoded()).data = uint32((uintptr_t(attr)))
	return Operation_addNode_begin(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], nodeContext, (*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeId))[:], outNewNodeId)
}
// UA_Server_addNode_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34206
func UA_Server_addNode_finish(server []UA_Server, nodeId UA_NodeId) UA_StatusCode {
	return Operation_addNode_finish(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:])
}
// removeIncomingReferences - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34220
// Remove references to this node (in the other nodes)
func removeIncomingReferences(server []UA_Server, session []UA_Session, node []UA_Node) {
	var item UA_DeleteReferencesItem
	UA_DeleteReferencesItem_init((*[100000000]UA_DeleteReferencesItem)(unsafe.Pointer(&item))[:])
	item.targetNodeId.nodeId = node[0].nodeId
	item.deleteBidirectional = 0
	var dummy UA_StatusCode
	{
		var i uint
		for ; i < uint(node[0].referencesSize); i++ {
			var refs []UA_NodeReferenceKind = (*[100000000]UA_NodeReferenceKind)(unsafe.Pointer(&node[0].references[i]))[:]
			item.isForward = UA_Boolean(refs[0].isInverse)
			item.referenceTypeId = refs[0].referenceTypeId
			{
				var j uint
				for ; j < uint(refs[0].targetIdsSize); j++ {
					item.sourceNodeId = refs[0].targetIds[j].nodeId
					Operation_deleteReference(server, session, nil, (*[100000000]UA_DeleteReferencesItem)(unsafe.Pointer(&item))[:], (*[100000000]UA_StatusCode)(unsafe.Pointer(&dummy))[:])
				}
			}
		}
	}
}
// deconstructNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34239
func deconstructNode(server []UA_Server, session []UA_Session, node []UA_Node) {
	var context interface{} = node[0].context
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_OBJECT) || uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLE) {
		var type_ []UA_Node = getNodeType(server, node)
		if type_ != nil {
			var lifecycle []UA_NodeTypeLifecycle
			if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_OBJECT) {
				// Call the type-level destructor
				// No longer needed after this function
				lifecycle = (*[100000000]UA_NodeTypeLifecycle)(unsafe.Pointer(&(type_)[0].lifecycle))[:]
			} else {
				lifecycle = (*[100000000]UA_NodeTypeLifecycle)(unsafe.Pointer(&(type_)[0].lifecycle))[:]
			}
			if lifecycle[0].destructor != nil {
				lifecycle.destructor(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&type_[0].nodeId))[:], type_[0].context, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], (*[100000000]interface{})(unsafe.Pointer(&context))[:])
			}
			server.config.nodestore.releaseNode((server)[0].config.nodestore.context, type_)
		}
	}
	if server[0].config.nodeLifecycle.destructor != nil {
		// Call the global destructor
		server.config.nodeLifecycle.destructor(server, (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], context)
	}
}
// removeChildren - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34273
func removeChildren(server []UA_Server, session []UA_Session, node []UA_Node) {
	var bd UA_BrowseDescription
	// Browse to get all children of the node
	UA_BrowseDescription_init((*[100000000]UA_BrowseDescription)(unsafe.Pointer(&bd))[:])
	bd.nodeId = node[0].nodeId
	bd.referenceTypeId = UA_NODEID_NUMERIC(0, 44)
	bd.includeSubtypes = 1
	bd.browseDirection = UA_BROWSEDIRECTION_FORWARD
	bd.nodeClassMask = UA_UInt32((uint32_t((uint32((uint32(UA_NODECLASS_OBJECT | UA_NODECLASS_VARIABLE | UA_NODECLASS_METHOD)))))))
	bd.resultMask = UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_NONE)))))))
	var br UA_BrowseResult
	UA_BrowseResult_init((*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	var maxrefs UA_UInt32
	Operation_Browse(server, session, (*[100000000]UA_UInt32)(unsafe.Pointer(&maxrefs))[:], (*[100000000]UA_BrowseDescription)(unsafe.Pointer(&bd))[:], (*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	if UA_StatusCode(br.statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
		return
	}
	var item UA_DeleteNodesItem
	item.deleteTargetReferences = 1
	{
		var i uint
		for ; i < uint(br.referencesSize); i++ {
			var rd []UA_ReferenceDescription = (*[100000000]UA_ReferenceDescription)(unsafe.Pointer(&br.references[i]))[:]
			if int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&rd[0].nodeId.nodeId))[:]))))) != 0 {
				// Remove every child
				// check for self-reference to avoid endless loop
				continue
			}
			item.nodeId = rd[0].nodeId.nodeId
			var retval UA_StatusCode
			deleteNodeOperation(server, session, nil, (*[100000000]UA_DeleteNodesItem)(unsafe.Pointer(&item))[:], (*[100000000]UA_StatusCode)(unsafe.Pointer(&retval))[:])
		}
	}
	UA_BrowseResult_deleteMembers((*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
}
// removeDeconstructedNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34310
func removeDeconstructedNode(server []UA_Server, session []UA_Session, node []UA_Node, removeTargetRefs UA_Boolean) {
	// Remove all children of the node
	removeChildren(server, session, node)
	if int((int((UA_Boolean(removeTargetRefs))))) != 0 {
		// Remove references to the node (not the references going out, as the node
		//     * will be deleted anyway)
		removeIncomingReferences(server, session, node)
	}
	// Remove the node in the nodestore
	server.config.nodestore.removeNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:])
}
// deleteNodeOperation - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34325
func deleteNodeOperation(server []UA_Server, session []UA_Session, context interface{}, item []UA_DeleteNodesItem, result []UA_StatusCode) {
	if session != (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:] && server[0].config.accessControl.allowDeleteNode != nil && int((int((noarch.NotUA_Boolean(server.config.accessControl.allowDeleteNode(server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, item)))))) != 0 {
		// Do not check access for server
		result[0] = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
		return
	}
	var node []UA_Node = server.config.nodestore.getNode((server)[0].config.nodestore.context, (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].nodeId))[:])
	if node == nil {
		result[0] = UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
		return
	}
	if int((int((UA_Node_hasSubTypeOrInstances(node))))) != 0 {
		UA_LOG_INFO(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Delete Nodes: Cannot delete a type node with active instances or subtypes%.0s\x00"), (func() int {
			if (session)[0].header.channel != nil {
				return (func() int {
					if (session)[0].header.channel[0].connection != nil {
						return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
					}
					return 0
				}())
			}
			return 0
		}()), (func() uint32 {
			if (session)[0].header.channel != nil {
				return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
			}
			return 0
		}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
		server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
		result[0] = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		return
	}
	// TODO: Check if the information model consistency is violated
	// TODO: Check if the node is a mandatory child of a parent
	deconstructNode(server, session, node)
	removeDeconstructedNode(server, session, node, UA_Boolean(item[0].deleteTargetReferences))
	server.config.nodestore.releaseNode((server)[0].config.nodestore.context, node)
}
// Service_DeleteNodes - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34359
func Service_DeleteNodes(server []UA_Server, session []UA_Session, request []UA_DeleteNodesRequest, response []UA_DeleteNodesResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing DeleteNodesRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxNodesPerNodeManagement) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].nodesToDeleteSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxNodesPerNodeManagement))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(deleteNodeOperation), nil, (*[100000000]uint)(unsafe.Pointer(&request[0].nodesToDeleteSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[79]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:])
}
// UA_Server_deleteNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34377
func UA_Server_deleteNode(server []UA_Server, nodeId UA_NodeId, deleteReferences UA_Boolean) UA_StatusCode {
	var item UA_DeleteNodesItem
	item.deleteTargetReferences = deleteReferences
	item.nodeId = nodeId
	var retval UA_StatusCode
	deleteNodeOperation(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], nil, (*[100000000]UA_DeleteNodesItem)(unsafe.Pointer(&item))[:], (*[100000000]UA_StatusCode)(unsafe.Pointer(&retval))[:])
	return UA_StatusCode(retval)
}
// addOneWayReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34392
//
// Add References
//
func addOneWayReference(server []UA_Server, session []UA_Session, node []UA_Node, item []UA_AddReferencesItem) UA_StatusCode {
	return UA_Node_addReference(node, item)
}
// deleteOneWayReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34398
func deleteOneWayReference(server []UA_Server, session []UA_Session, node []UA_Node, item []UA_DeleteReferencesItem) UA_StatusCode {
	return UA_Node_deleteReference(node, item)
}
// Operation_addReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34404
func Operation_addReference(server []UA_Server, session []UA_Session, context interface{}, item []UA_AddReferencesItem, retval []UA_StatusCode) {
	if session != (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:] && server[0].config.accessControl.allowAddReference != nil && int((int((noarch.NotUA_Boolean(server.config.accessControl.allowAddReference(server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, item)))))) != 0 {
		// Do not check access for server
		retval[0] = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
		return
	}
	if uint(item[0].targetServerUri.length) > uint((0)) {
		// Currently no expandednodeids are allowed
		retval[0] = UA_StatusCode((uint32_t((uint32((uint32(2151677952)))))))
		return
	}
	// Add the first direction
	retval[0] = UA_Server_editNode(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].sourceNodeId))[:], UA_EditNodeCallback(addOneWayReference), nil)
	var firstExisted UA_Boolean
	if retval[0] == UA_StatusCode((uint32_t((uint32((uint32(2154168320))))))) {
		// cast away const because callback uses const anyway
		retval[0] = 0
		firstExisted = 1
	} else if retval[0] != UA_StatusCode((uint32_t((uint32((0)))))) {
		return
	}
	var secondItem UA_AddReferencesItem
	// Add the second direction
	UA_AddReferencesItem_init((*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&secondItem))[:])
	secondItem.sourceNodeId = item[0].targetNodeId.nodeId
	secondItem.referenceTypeId = item[0].referenceTypeId
	secondItem.isForward = noarch.NotUA_Boolean(UA_Boolean(item[0].isForward))
	secondItem.targetNodeId.nodeId = item[0].sourceNodeId
	// keep default secondItem.targetNodeClass = UA_NODECLASS_UNSPECIFIED
	retval[0] = UA_Server_editNode(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&secondItem.sourceNodeId))[:], UA_EditNodeCallback(addOneWayReference), (*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&secondItem))[:])
	var secondExisted UA_Boolean
	if retval[0] == UA_StatusCode((uint32_t((uint32((uint32(2154168320))))))) {
		// remove reference if the second direction failed
		retval[0] = 0
		secondExisted = 1
	} else if retval[0] != UA_StatusCode((uint32_t((uint32((0)))))) && int((int((noarch.NotUA_Boolean(UA_Boolean(firstExisted)))))) != 0 {
		var deleteItem UA_DeleteReferencesItem
		deleteItem.sourceNodeId = item[0].sourceNodeId
		deleteItem.referenceTypeId = item[0].referenceTypeId
		deleteItem.isForward = UA_Boolean(item[0].isForward)
		deleteItem.targetNodeId = item[0].targetNodeId
		deleteItem.deleteBidirectional = 0
		// ignore returned status code
		UA_Server_editNode(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].sourceNodeId))[:], UA_EditNodeCallback(deleteOneWayReference), (*[100000000]UA_DeleteReferencesItem)(unsafe.Pointer(&deleteItem))[:])
	}
	if int((int((firstExisted)))) != 0 && int((int((secondExisted)))) != 0 {
		// Calculate common duplicate reference not allowed result and set bad result
		//     * if BOTH directions already existed
		retval[0] = UA_StatusCode((uint32_t((uint32((uint32(2154168320)))))))
	}
}
// Service_AddReferences - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34467
func Service_AddReferences(server []UA_Server, session []UA_Session, request []UA_AddReferencesRequest, response []UA_AddReferencesResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing AddReferencesRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxNodesPerNodeManagement) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].referencesToAddSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxNodesPerNodeManagement))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_addReference), nil, (*[100000000]uint)(unsafe.Pointer(&request[0].referencesToAddSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[150]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:])
}
// UA_Server_addReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34485
func UA_Server_addReference(server []UA_Server, sourceId UA_NodeId, refTypeId UA_NodeId, targetId UA_ExpandedNodeId, isForward UA_Boolean) UA_StatusCode {
	var item UA_AddReferencesItem
	UA_AddReferencesItem_init((*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&item))[:])
	item.sourceNodeId = sourceId
	item.referenceTypeId = refTypeId
	item.isForward = isForward
	item.targetNodeId = targetId
	var retval UA_StatusCode
	Operation_addReference(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], nil, (*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&item))[:], (*[100000000]UA_StatusCode)(unsafe.Pointer(&retval))[:])
	return UA_StatusCode(retval)
}
// Operation_deleteReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34506
//
// Delete References
//
func Operation_deleteReference(server []UA_Server, session []UA_Session, context interface{}, item []UA_DeleteReferencesItem, retval []UA_StatusCode) {
	if session != (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:] && server[0].config.accessControl.allowDeleteReference != nil && int((int((noarch.NotUA_Boolean(server.config.accessControl.allowDeleteReference(server, (*[100000000]UA_AccessControl)(unsafe.Pointer(&server[0].config.accessControl))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&session[0].sessionId))[:], session[0].sessionHandle, item)))))) != 0 {
		// Do not check access for server
		retval[0] = UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
		return
	}
	// TODO: Check consistency constraints, remove the references.
	retval[0] = UA_Server_editNode(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&item[0].sourceNodeId))[:], UA_EditNodeCallback(deleteOneWayReference), nil)
	if retval[0] != UA_StatusCode((uint32_t((uint32((0)))))) {
		// cast away const qualifier because callback uses it anyway
		return
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(item[0].deleteBidirectional)))))) != 0 || UA_UInt32(item[0].targetNodeId.serverIndex) != UA_UInt32((uint32_t((uint32((0)))))) {
		return
	}
	var secondItem UA_DeleteReferencesItem
	UA_DeleteReferencesItem_init((*[100000000]UA_DeleteReferencesItem)(unsafe.Pointer(&secondItem))[:])
	secondItem.isForward = noarch.NotUA_Boolean(UA_Boolean(item[0].isForward))
	secondItem.sourceNodeId = item[0].targetNodeId.nodeId
	secondItem.targetNodeId.nodeId = item[0].sourceNodeId
	secondItem.referenceTypeId = item[0].referenceTypeId
	retval[0] = UA_Server_editNode(server, session, (*[100000000]UA_NodeId)(unsafe.Pointer(&secondItem.sourceNodeId))[:], UA_EditNodeCallback(deleteOneWayReference), (*[100000000]UA_DeleteReferencesItem)(unsafe.Pointer(&secondItem))[:])
}
// Service_DeleteReferences - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34539
func Service_DeleteReferences(server []UA_Server, session []UA_Session, request []UA_DeleteReferencesRequest, response []UA_DeleteReferencesResponse) {
	UA_LOG_DEBUG(UA_Logger(server[0].config.logger), UA_LOGCATEGORY_SESSION, []byte("Connection %i | SecureChannel %i | Session %08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x | Processing DeleteReferencesRequest%.0s\x00"), (func() int {
		if (session)[0].header.channel != nil {
			return (func() int {
				if (session)[0].header.channel[0].connection != nil {
					return int((__int32_t((int32_t((UA_Int32((session)[0].header.channel[0].connection[0].sockfd)))))))
				}
				return 0
			}())
		}
		return 0
	}()), (func() uint32 {
		if (session)[0].header.channel != nil {
			return uint32((uint32((uint32_t((UA_UInt32((session)[0].header.channel[0].securityToken.channelId)))))))
		}
		return 0
	}()), UA_UInt32((*(session)[0].sessionId.identifier.guid()).data1), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data2)))))))), int(uint16((uint16((uint16_t((UA_UInt16((*(session)[0].sessionId.identifier.guid()).data3)))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][0])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][1])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][2])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][3])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][4])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][5])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][6])))))))), int(uint8((__uint8_t((uint8_t((UA_Byte((*(session)[0].sessionId.identifier.guid()).data4[:][7])))))))), []byte("\x00"))
	if UA_UInt32(server[0].config.maxNodesPerNodeManagement) != UA_UInt32((uint32_t((uint32((0)))))) && uint(request[0].referencesToDeleteSize) > uint((uint32((uint32((uint32_t((UA_UInt32(server[0].config.maxNodesPerNodeManagement))))))))) {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2148532224)))))))
		return
	}
	response[0].responseHeader.serviceResult = UA_Server_processServiceOperations(server, session, UA_ServiceOperation(Operation_deleteReference), nil, (*[100000000]uint)(unsafe.Pointer(&request[0].referencesToDeleteSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[59]))[:], (*[100000000]uint)(unsafe.Pointer(&response[0].resultsSize))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[18]))[:])
}
// UA_Server_deleteReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34558
func UA_Server_deleteReference(server []UA_Server, sourceNodeId UA_NodeId, referenceTypeId UA_NodeId, isForward UA_Boolean, targetNodeId UA_ExpandedNodeId, deleteBidirectional UA_Boolean) UA_StatusCode {
	var item UA_DeleteReferencesItem
	item.sourceNodeId = sourceNodeId
	item.referenceTypeId = referenceTypeId
	item.isForward = isForward
	item.targetNodeId = targetNodeId
	item.deleteBidirectional = deleteBidirectional
	var retval UA_StatusCode
	Operation_deleteReference(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], nil, (*[100000000]UA_DeleteReferencesItem)(unsafe.Pointer(&item))[:], (*[100000000]UA_StatusCode)(unsafe.Pointer(&retval))[:])
	return UA_StatusCode(retval)
}
// setValueCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34579
//
// Set Value Callback
//
func setValueCallback(server []UA_Server, session []UA_Session, node []UA_VariableNode, callback []UA_ValueCallback) UA_StatusCode {
	if uint32(node[0].nodeClass) != uint32(UA_NODECLASS_VARIABLE) {
		return UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
	}
	(*node[0].value.data()).callback = callback[0]
	return 0
}
// UA_Server_setVariableNode_valueCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34588
func UA_Server_setVariableNode_valueCallback(server []UA_Server, nodeId UA_NodeId, callback UA_ValueCallback) UA_StatusCode {
	return UA_Server_editNode(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_EditNodeCallback(setValueCallback), nil)
}
// UA_Server_addDataSourceVariableNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34602
// cast away const because callback uses const anyway
//
// Special Handling of Variables with Data Sources
//
func UA_Server_addDataSourceVariableNode(server []UA_Server, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, typeDefinition UA_NodeId, attr UA_VariableAttributes, dataSource UA_DataSource, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	var item UA_AddNodesItem
	UA_AddNodesItem_init((*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:])
	item.nodeClass = UA_NODECLASS_VARIABLE
	item.requestedNewNodeId.nodeId = requestedNewNodeId
	item.browseName = browseName
	var typeDefinitionId UA_ExpandedNodeId
	UA_ExpandedNodeId_init((*[100000000]UA_ExpandedNodeId)(unsafe.Pointer(&typeDefinitionId))[:])
	typeDefinitionId.nodeId = typeDefinition
	item.typeDefinition = typeDefinitionId
	item.nodeAttributes.encoding = UA_EXTENSIONOBJECT_DECODED_NODELETE
	(*item.nodeAttributes.content.decoded()).data = uint32((uintptr_t((*[100000000]UA_VariableAttributes)(unsafe.Pointer(&attr))[:])))
	(*item.nodeAttributes.content.decoded()).type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[35]))[:]
	var newNodeId UA_NodeId
	if outNewNodeId == nil {
		newNodeId = UA_NODEID_NULL
		outNewNodeId = (*[100000000]UA_NodeId)(unsafe.Pointer(&newNodeId))[:]
	}
	var retval UA_StatusCode = AddNode_raw(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], nodeContext, (*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:], outNewNodeId)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Create the node and add it to the nodestore
		goto cleanup
	}
	// Set the data source
	retval = UA_Server_setVariableNode_dataSource(server, outNewNodeId[0], dataSource)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		goto cleanup
	}
	// Typecheck and add references to parent and type definition
	retval = AddNode_typeCheckAddRefs(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], outNewNodeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&typeDefinition))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		goto cleanup
	}
	// Call the constructors
	retval = Operation_addNode_finish(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], outNewNodeId)
cleanup:
	;
	if outNewNodeId == (*[100000000]UA_NodeId)(unsafe.Pointer(&newNodeId))[:] {
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&newNodeId))[:])
	}
	return UA_StatusCode(retval)
}
// setDataSource - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34652
func setDataSource(server []UA_Server, session []UA_Session, node []UA_VariableNode, dataSource []UA_DataSource) UA_StatusCode {
	if uint32(node[0].nodeClass) != uint32(UA_NODECLASS_VARIABLE) {
		return UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
	}
	if uint32(node[0].valueSource) == uint32(UA_VALUESOURCE_DATA) {
		UA_DataValue_deleteMembers((*[100000000]UA_DataValue)(unsafe.Pointer(&(*node[0].value.data()).value))[:])
	}
	(*node[0].value.dataSource()) = dataSource[0]
	node[0].valueSource = UA_VALUESOURCE_DATASOURCE
	return 0
}
// UA_Server_setVariableNode_dataSource - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34664
func UA_Server_setVariableNode_dataSource(server []UA_Server, nodeId UA_NodeId, dataSource UA_DataSource) UA_StatusCode {
	return UA_Server_editNode(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_EditNodeCallback(setDataSource), nil)
}

var hasproperty UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{46}}
var propertytype UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{68}}
// UA_Server_addMethodNodeEx_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34682
// casting away const because callback casts it back anyway
//
// Special Handling of Method Nodes
//
func UA_Server_addMethodNodeEx_finish(server []UA_Server, nodeId UA_NodeId, method UA_MethodCallback, inputArgumentsSize uint, inputArguments []UA_Argument, inputArgumentsRequestedNewNodeId UA_NodeId, inputArgumentsOutNewNodeId []UA_NodeId, outputArgumentsSize uint, outputArguments []UA_Argument, outputArgumentsRequestedNewNodeId UA_NodeId, outputArgumentsOutNewNodeId []UA_NodeId) UA_StatusCode {
	var bd UA_BrowseDescription
	// Browse to see which argument nodes exist
	UA_BrowseDescription_init((*[100000000]UA_BrowseDescription)(unsafe.Pointer(&bd))[:])
	bd.nodeId = nodeId
	bd.referenceTypeId = UA_NODEID_NUMERIC(0, 46)
	bd.includeSubtypes = 0
	bd.browseDirection = UA_BROWSEDIRECTION_FORWARD
	bd.nodeClassMask = UA_UInt32((uint32_t((uint32((uint32(UA_NODECLASS_VARIABLE)))))))
	bd.resultMask = UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_BROWSENAME)))))))
	var br UA_BrowseResult
	UA_BrowseResult_init((*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	var maxrefs UA_UInt32
	Operation_Browse(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_UInt32)(unsafe.Pointer(&maxrefs))[:], (*[100000000]UA_BrowseDescription)(unsafe.Pointer(&bd))[:], (*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	var retval UA_StatusCode = UA_StatusCode(br.statusCode)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_Server_deleteNode(server, nodeId, 1)
		UA_BrowseResult_deleteMembers((*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
		return UA_StatusCode(retval)
	}
	var inputArgsId UA_NodeId = UA_NODEID_NULL
	var outputArgsId UA_NodeId = UA_NODEID_NULL
	var inputArgsName UA_QualifiedName = UA_QUALIFIEDNAME(0, []byte("InputArguments\x00"))
	var outputArgsName UA_QualifiedName = UA_QUALIFIEDNAME(0, []byte("OutputArguments\x00"))
	{
		var i uint
		for ; i < uint(br.referencesSize); i++ {
			var rd []UA_ReferenceDescription = (*[100000000]UA_ReferenceDescription)(unsafe.Pointer(&br.references[i]))[:]
			if int(uint16((uint16((uint16_t((UA_UInt16(rd[0].browseName.namespaceIndex)))))))) == 0 && int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&rd[0].browseName.name))[:], (*[100000000]UA_String)(unsafe.Pointer(&inputArgsName.name))[:]))))) != 0 {
				// Filter out the argument nodes
				inputArgsId = rd[0].nodeId.nodeId
			} else if int(uint16((uint16((uint16_t((UA_UInt16(rd[0].browseName.namespaceIndex)))))))) == 0 && int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&rd[0].browseName.name))[:], (*[100000000]UA_String)(unsafe.Pointer(&outputArgsName.name))[:]))))) != 0 {
				outputArgsId = rd[0].nodeId.nodeId
			}
		}
	}
	if inputArgumentsSize > uint((0)) && int((int((UA_NodeId_isNull((*[100000000]UA_NodeId)(unsafe.Pointer(&inputArgsId))[:]))))) != 0 {
		var attr UA_VariableAttributes = UA_VariableAttributes_default
		var name []byte = []byte("InputArguments\x00")
		// Add the Input Arguments VariableNode
		attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), name)
		attr.dataType = UA_TYPES[65].typeId
		attr.valueRank = UA_Int32((int32_t((__int32_t((1))))))
		UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], uint32((uintptr_t(inputArguments))), uint(inputArgumentsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[65]))[:])
		retval |= UA_Server_addVariableNode(server, inputArgumentsRequestedNewNodeId, nodeId, hasproperty, UA_QUALIFIEDNAME(0, name), propertytype, attr, nil, (*[100000000]UA_NodeId)(unsafe.Pointer(&inputArgsId))[:])
	}
	if outputArgumentsSize > uint((0)) && int((int((UA_NodeId_isNull((*[100000000]UA_NodeId)(unsafe.Pointer(&outputArgsId))[:]))))) != 0 {
		var attr UA_VariableAttributes = UA_VariableAttributes_default
		var name []byte = []byte("OutputArguments\x00")
		// Add the Output Arguments VariableNode
		attr.displayName = UA_LOCALIZEDTEXT([]byte("\x00"), name)
		attr.dataType = UA_TYPES[65].typeId
		attr.valueRank = UA_Int32((int32_t((__int32_t((1))))))
		UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&attr.value))[:], uint32((uintptr_t(outputArguments))), uint(outputArgumentsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[65]))[:])
		retval |= UA_Server_addVariableNode(server, outputArgumentsRequestedNewNodeId, nodeId, hasproperty, UA_QUALIFIEDNAME(0, name), propertytype, attr, nil, (*[100000000]UA_NodeId)(unsafe.Pointer(&outputArgsId))[:])
	}
	retval |= UA_Server_setMethodNode_callback(server, nodeId, UA_MethodCallback(method))
	// Call finish to add the parent reference
	retval |= Operation_addNode_finish(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_Server_deleteNode(server, nodeId, 1)
		UA_Server_deleteNode(server, inputArgsId, 1)
		UA_Server_deleteNode(server, outputArgsId, 1)
	} else {
		if inputArgumentsOutNewNodeId != nil {
			UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&inputArgsId))[:], inputArgumentsOutNewNodeId)
		}
		if outputArgumentsOutNewNodeId != nil {
			UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&outputArgsId))[:], outputArgumentsOutNewNodeId)
		}
	}
	UA_BrowseResult_deleteMembers((*[100000000]UA_BrowseResult)(unsafe.Pointer(&br))[:])
	return UA_StatusCode(retval)
}
// UA_Server_addMethodNode_finish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34777
func UA_Server_addMethodNode_finish(server []UA_Server, nodeId UA_NodeId, method UA_MethodCallback, inputArgumentsSize uint, inputArguments []UA_Argument, outputArgumentsSize uint, outputArguments []UA_Argument) UA_StatusCode {
	return UA_Server_addMethodNodeEx_finish(server, nodeId, UA_MethodCallback(method), uint(inputArgumentsSize), inputArguments, UA_NODEID_NULL, nil, uint(outputArgumentsSize), outputArguments, UA_NODEID_NULL, nil)
}
// UA_Server_addMethodNodeEx - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34787
func UA_Server_addMethodNodeEx(server []UA_Server, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, attr UA_MethodAttributes, method UA_MethodCallback, inputArgumentsSize uint, inputArguments []UA_Argument, inputArgumentsRequestedNewNodeId UA_NodeId, inputArgumentsOutNewNodeId []UA_NodeId, outputArgumentsSize uint, outputArguments []UA_Argument, outputArgumentsRequestedNewNodeId UA_NodeId, outputArgumentsOutNewNodeId []UA_NodeId, nodeContext interface{}, outNewNodeId []UA_NodeId) UA_StatusCode {
	var item UA_AddNodesItem
	UA_AddNodesItem_init((*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:])
	item.nodeClass = UA_NODECLASS_METHOD
	item.requestedNewNodeId.nodeId = requestedNewNodeId
	item.browseName = browseName
	item.nodeAttributes.encoding = UA_EXTENSIONOBJECT_DECODED_NODELETE
	(*item.nodeAttributes.content.decoded()).data = uint32((uintptr_t((*[100000000]UA_MethodAttributes)(unsafe.Pointer(&attr))[:])))
	(*item.nodeAttributes.content.decoded()).type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[58]))[:]
	var newId UA_NodeId
	if outNewNodeId == nil {
		UA_NodeId_init((*[100000000]UA_NodeId)(unsafe.Pointer(&newId))[:])
		outNewNodeId = (*[100000000]UA_NodeId)(unsafe.Pointer(&newId))[:]
	}
	var retval UA_StatusCode = Operation_addNode_begin(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], nodeContext, (*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&referenceTypeId))[:], outNewNodeId)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	retval = UA_Server_addMethodNodeEx_finish(server, outNewNodeId[0], UA_MethodCallback(method), uint(inputArgumentsSize), inputArguments, inputArgumentsRequestedNewNodeId, inputArgumentsOutNewNodeId, uint(outputArgumentsSize), outputArguments, outputArgumentsRequestedNewNodeId, outputArgumentsOutNewNodeId)
	if outNewNodeId == (*[100000000]UA_NodeId)(unsafe.Pointer(&newId))[:] {
		UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&newId))[:])
	}
	return UA_StatusCode(retval)
}
// editMethodCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34833
func editMethodCallback(server []UA_Server, session []UA_Session, node []UA_Node, handle interface{}) UA_StatusCode {
	if uint32(node[0].nodeClass) != uint32(UA_NODECLASS_METHOD) {
		return UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
	}
	var mnode []UA_MethodNode = node
	mnode[0].method = UA_MethodCallback(uintptr_t(handle))
	return 0
}
// UA_Server_setMethodNode_callback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34843
func UA_Server_setMethodNode_callback(server []UA_Server, methodNodeId UA_NodeId, methodCallback UA_MethodCallback) UA_StatusCode {
	return UA_Server_editNode(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&methodNodeId))[:], UA_EditNodeCallback(editMethodCallback), uint32((uintptr_t(UA_MethodCallback(methodCallback)))))
}
// setNodeTypeLifecycle - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34858
//
// Lifecycle Management
//
func setNodeTypeLifecycle(server []UA_Server, session []UA_Session, node []UA_Node, lifecycle []UA_NodeTypeLifecycle) UA_StatusCode {
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_OBJECTTYPE) {
		var ot []UA_ObjectTypeNode = node
		ot[0].lifecycle = lifecycle[0]
		return 0
	}
	if uint32(node[0].nodeClass) == uint32(UA_NODECLASS_VARIABLETYPE) {
		var vt []UA_VariableTypeNode = node
		vt[0].lifecycle = lifecycle[0]
		return 0
	}
	return UA_StatusCode((uint32_t((uint32((uint32(2153709568)))))))
}
// UA_Server_setNodeTypeLifecycle - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:34876
func UA_Server_setNodeTypeLifecycle(server []UA_Server, nodeId UA_NodeId, lifecycle UA_NodeTypeLifecycle) UA_StatusCode {
	return UA_Server_editNode(server, (*[100000000]UA_Session)(unsafe.Pointer(&adminSession))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&nodeId))[:], UA_EditNodeCallback(setNodeTypeLifecycle), (*[100000000]UA_NodeTypeLifecycle)(unsafe.Pointer(&lifecycle))[:])
}
// UA_Client_init - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35559
// amalgamated original file "/home/travis/build/open62541/open62541/src/server/ua_services_discovery_multicast.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Thomas Stalder, Blue Time Concept SA
//
// Enable POSIX features
// On older systems we need to define _BSD_SOURCE.
// * _DEFAULT_SOURCE is an alias for that.
// amalgamated original file "/home/travis/build/open62541/open62541/src/client/ua_client.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2015-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2015-2016 (c) Sten Grüner
// *    Copyright 2015-2016 (c) Chris Iatrou
// *    Copyright 2015 (c) hfaham
// *    Copyright 2015-2017 (c) Florian Palm
// *    Copyright 2017-2018 (c) Thomas Stalder, Blue Time Concept SA
// *    Copyright 2015 (c) Holger Jeromin
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2016 (c) TorbenD
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2016 (c) Lykurg
// *    Copyright 2017 (c) Mark Giraud, Fraunhofer IOSB
//
//
// Client Lifecycle
//
func UA_Client_init(client []UA_Client, config UA_ClientConfig) {
	noarch.Memset(client, byte(0), 896)
	// TODO: Select policy according to the endpoint
	UA_SecurityPolicy_None((*[100000000]UA_SecurityPolicy)(unsafe.Pointer(&client[0].securityPolicy))[:], nil, UA_ByteString(UA_BYTESTRING_NULL), UA_Logger(config.logger))
	client[0].channel.securityPolicy = (*[100000000]UA_SecurityPolicy)(unsafe.Pointer(&client[0].securityPolicy))[:]
	client[0].channel.securityMode = UA_MESSAGESECURITYMODE_NONE
	client[0].config = config
	if func([]UA_Client , int)()((UA_ClientStateCallback(client[0].config.stateCallback))) != nil {
		client.config.stateCallback(client, client[0].state)
	}
}
// UA_Client_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35571
func UA_Client_new(config UA_ClientConfig) []UA_Client {
	var client []UA_Client = make([]UA_Client, 896/896)
	if client == nil {
		return nil
	}
	UA_Client_init(client, UA_ClientConfig(config))
	return client
}
// UA_Client_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35580
func UA_Client_deleteMembers(client []UA_Client) {
	UA_Client_disconnect(client)
	client.securityPolicy.deleteMembers((*[100000000]UA_SecurityPolicy)(unsafe.Pointer(&client[0].securityPolicy))[:])
	UA_SecureChannel_deleteMembersCleanup((*[100000000]UA_SecureChannel)(unsafe.Pointer(&client[0].channel))[:])
	UA_Connection_deleteMembers((*[100000000]UA_Connection)(unsafe.Pointer(&client[0].connection))[:])
	if client[0].endpointUrl.data != nil {
		UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&client[0].endpointUrl))[:])
	}
	UA_UserTokenPolicy_deleteMembers((*[100000000]UA_UserTokenPolicy)(unsafe.Pointer(&client[0].token))[:])
	UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&client[0].authenticationToken))[:])
	if client[0].username.data != nil {
		UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&client[0].username))[:])
	}
	if client[0].password.data != nil {
		UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&client[0].password))[:])
	}
	// Delete the async service calls
	UA_Client_AsyncService_removeAll(client, UA_StatusCode((uint32_t((uint32((uint32(2148270080))))))))
	// Delete the subscriptions
	UA_Client_Subscriptions_clean(client)
}
// UA_Client_reset - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35604
func UA_Client_reset(client []UA_Client) {
	UA_Client_deleteMembers(client)
	UA_Client_init(client, UA_ClientConfig(client[0].config))
}
// UA_Client_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35610
func UA_Client_delete(client []UA_Client) {
	UA_Client_deleteMembers(client)
	_ = client
}
// UA_Client_getState - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35616
func UA_Client_getState(client []UA_Client) int {
	return client[0].state
}
// UA_Client_getContext - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35621
func UA_Client_getContext(client []UA_Client) interface{} {
	if client == nil {
		return nil
	}
	return client[0].config.clientContext
}

type SyncResponseDescription struct {
	client       []UA_Client
	received     UA_Boolean
	requestId    UA_UInt32
	response     interface{}
	responseType []UA_DataType
}
// sendSymmetricServiceRequest - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35644
//
// Raw Services
//
// For synchronous service calls. Execute async responses with a callback. When
// * the response with the correct requestId turns up, return it via the
// * SyncResponseDescription pointer.
// For both synchronous and asynchronous service calls
func sendSymmetricServiceRequest(client []UA_Client, request interface{}, requestType []UA_DataType, requestId []UA_UInt32) UA_StatusCode {
	var retval UA_StatusCode = UA_Client_manuallyRenewSecureChannel(client)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Make sure we have a valid session
		return UA_StatusCode(retval)
	}
	var rr []UA_RequestHeader
	// Adjusting the request header. The const attribute is violated, but we
	//     * only touch the following members:
	// cleaned up at the end
	rr[0].authenticationToken = client[0].authenticationToken
	rr[0].timestamp = UA_DateTime_now()
	rr[0].requestHandle = func() UA_UInt32 {
		tempVar := &client[0].requestHandle
		*tempVar ++
		return *tempVar
	}()
	var rqId UA_UInt32 = func() UA_UInt32 {
		tempVar := &client[0].requestId
		*tempVar ++
		return *tempVar
	}()
	// Send the request
	UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Sending a request of type %i\x00"), UA_UInt32((*requestType[0].typeId.identifier.numeric())))
	if UA_UInt32(client[0].channel.nextSecurityToken.tokenId) != UA_UInt32((uint32_t((uint32((0)))))) {
		// Change to the new security token if the secure channel has been renewed.
		UA_SecureChannel_revolveTokens((*[100000000]UA_SecureChannel)(unsafe.Pointer(&client[0].channel))[:])
	}
	retval = UA_SecureChannel_sendSymmetricMessage((*[100000000]UA_SecureChannel)(unsafe.Pointer(&client[0].channel))[:], UA_UInt32(rqId), UA_MESSAGETYPE_MSG, rr, requestType)
	// Do not return the token to the user
	UA_NodeId_init((*[100000000]UA_NodeId)(unsafe.Pointer(&rr[0].authenticationToken))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	requestId[0] = rqId
	return 0
}

var serviceFaultId UA_NodeId = UA_NodeId{0, UA_NODEIDTYPE_NUMERIC, __union_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_h_2547_5_{397}}
// processAsyncResponse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35680
// Look for the async callback in the linked list, execute and delete it
func processAsyncResponse(client []UA_Client, requestId UA_UInt32, responseTypeId []UA_NodeId, responseMessage []UA_ByteString, offset []uint) UA_StatusCode {
	var ac []AsyncServiceCall
	{
		// Find the callback
		for ac = ((*[100000000]ListOfAsyncServiceCall)(unsafe.Pointer(&client[0].asyncServiceCalls))[:])[0].lh_first; ac != nil; ac = (ac)[0].pointers.le_next {
			if UA_UInt32(ac[0].requestId) == requestId {
				break
			}
		}
	}
	if ac == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2150236160)))))))
	}
	var responseBuf []UA_Byte
	var response interface{} = uint32((uintptr_t((*[100000000]UA_Byte)(unsafe.Pointer(&responseBuf[0]))[:])))
	var responseType []UA_DataType = ac[0].responseType
	var expectedNodeId UA_NodeId = UA_NODEID_NUMERIC(0, UA_UInt32(UA_UInt16(ac[0].responseType[0].binaryEncodingId)))
	var retval UA_StatusCode
	if int((int((noarch.NotUA_Boolean(UA_NodeId_equal(responseTypeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&expectedNodeId))[:])))))) != 0 {
		// Allocate the response
		// workaround aliasing rules
		// Verify the type of the response
		UA_init(response, ac[0].responseType)
		if int((int((UA_NodeId_equal(responseTypeId, (*[100000000]UA_NodeId)(unsafe.Pointer(&serviceFaultId))[:]))))) != 0 {
			// Decode as a ServiceFault, i.e. only the response header
			UA_LOG_INFO(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Received a ServiceFault response\x00"))
			responseType = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[179]))[:]
		} else {
			// Close the connection
			UA_LOG_ERROR(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Reply contains the wrong service response\x00"))
			retval = UA_StatusCode((uint32_t((uint32((uint32(2147811328)))))))
			goto process
		}
	}
	// Decode the response
	retval = UA_decodeBinary(responseMessage, offset, response, responseType, 0, nil)
process:
	;
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Could not decode the response with id %d due to %s\x00"), UA_UInt32(requestId), UA_StatusCode_name(UA_StatusCode(retval)))
		(response.([]UA_ResponseHeader))[0].serviceResult = retval
	}
	// Call the callback
	ac.callback(client, ac[0].userdata, UA_UInt32(requestId), response, ac[0].responseType)
	UA_deleteMembers(response, ac[0].responseType)
	for {
		if (ac)[0].pointers.le_next != nil {
			// Remove the callback
			(ac)[0].pointers.le_next[0].pointers.le_prev = (ac)[0].pointers.le_prev
		}
		(ac)[0].pointers.le_prev[0] = (ac)[0].pointers.le_next
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	_ = ac
	return UA_StatusCode(retval)
}
// processServiceResponse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35741
// Processes the received service response. Either with an async callback or by
// * decoding the message and returning it "upwards" in the
// * SyncResponseDescription.
func processServiceResponse(application interface{}, channel []UA_SecureChannel, messageType int, requestId UA_UInt32, message []UA_ByteString) UA_StatusCode {
	var rd []SyncResponseDescription = application.([]SyncResponseDescription)
	if uint32(messageType) != uint32(UA_MESSAGETYPE_OPN) && uint32(messageType) != uint32(UA_MESSAGETYPE_MSG) {
		// Must be OPN or MSG
		UA_LOG_TRACE(UA_Logger(rd[0].client[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Connection %i | SecureChannel %i | Invalid message type%.0s\x00"), (func() int {
			if (channel)[0].connection != nil {
				return int((__int32_t((int32_t((UA_Int32((channel)[0].connection[0].sockfd)))))))
			}
			return 0
		}()), UA_UInt32((channel)[0].securityToken.channelId), []byte("\x00"))
		return UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
	}
	if uint32(rd[0].client[0].state) >= uint32(UA_CLIENTSTATE_SECURECHANNEL) && int64(int32((__int64_t((int64_t((UA_DateTime(channel[0].securityToken.createdAt))))))))+int64(uint32((uint32((uint32_t((UA_UInt32(channel[0].securityToken.revisedLifetime))))))))*int64(10*1000) < int64(int32((__int64_t((int64_t((UA_DateTime_nowMonotonic()))))))) {
		// Has the SecureChannel timed out?
		//     * TODO: Solve this for client and server together
		return UA_StatusCode((uint32_t((uint32((uint32(2156265472)))))))
	}
	var offset uint
	var responseId UA_NodeId
	var retval UA_StatusCode = UA_NodeId_decodeBinary(message, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&responseId))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Decode the data type identifier of the response
		goto finish
	}
	if rd[0].responseType == nil || requestId != UA_UInt32(rd[0].requestId) {
		// Got an asynchronous response. Don't expected a synchronous response
		//     * (responseType NULL) or the id does not match.
		retval = processAsyncResponse(rd[0].client, UA_UInt32(requestId), (*[100000000]UA_NodeId)(unsafe.Pointer(&responseId))[:], message, (*[100000000]uint)(unsafe.Pointer(&offset))[:])
		goto finish
	}
	// Got the synchronous response
	rd[0].received = 1
	var expectedNodeId UA_NodeId = UA_NODEID_NUMERIC(0, UA_UInt32(UA_UInt16(rd[0].responseType[0].binaryEncodingId)))
	if int((int((noarch.NotUA_Boolean(UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&responseId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&expectedNodeId))[:])))))) != 0 {
		if int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&responseId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&serviceFaultId))[:]))))) != 0 {
			// Forward declaration for the goto
			// Check that the response type matches
			UA_LOG_INFO(UA_Logger(rd[0].client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Received a ServiceFault response\x00"))
			UA_init(rd[0].response, rd[0].responseType)
			retval = UA_decodeBinary(message, (*[100000000]uint)(unsafe.Pointer(&offset))[:], rd[0].response, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[179]))[:], 0, nil)
		} else {
			// Close the connection
			UA_LOG_ERROR(UA_Logger(rd[0].client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Reply contains the wrong service response\x00"))
			retval = UA_StatusCode((uint32_t((uint32((uint32(2147811328)))))))
		}
		goto finish
	}
	UA_LOG_DEBUG(UA_Logger(rd[0].client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Decode a message of type %d\x00"), UA_UInt32((*responseId.identifier.numeric())))
	// Decode the response
	retval = UA_decodeBinary(message, (*[100000000]uint)(unsafe.Pointer(&offset))[:], rd[0].response, rd[0].responseType, uint(rd[0].client[0].config.customDataTypesSize), rd[0].client[0].config.customDataTypes)
finish:
	;
	UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&responseId))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		if retval == UA_StatusCode((uint32_t((uint32((uint32(2148007936))))))) {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2159607808)))))))
		}
		UA_LOG_INFO(UA_Logger(rd[0].client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Error receiving the response with status code %s\x00"), UA_StatusCode_name(UA_StatusCode(retval)))
		if rd[0].response != nil {
			var respHeader []UA_ResponseHeader = rd[0].response.([]UA_ResponseHeader)
			respHeader[0].serviceResult = retval
		}
	}
	return UA_StatusCode(retval)
}
// client_processChunk - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35826
// Forward complete chunks directly to the securechannel
func client_processChunk(application interface{}, connection []UA_Connection, chunk []UA_ByteString) UA_StatusCode {
	var rd []SyncResponseDescription = application.([]SyncResponseDescription)
	return UA_SecureChannel_processChunk((*[100000000]UA_SecureChannel)(unsafe.Pointer(&rd[0].client[0].channel))[:], chunk, processServiceResponse, rd)
}
// receiveServiceResponse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35836
// Receive and process messages until a synchronous message arrives or the
// * timout finishes
func receiveServiceResponse(client []UA_Client, response interface{}, responseType []UA_DataType, maxDate UA_DateTime, synchronousRequestId []UA_UInt32) UA_StatusCode {
	var rd SyncResponseDescription = SyncResponseDescription{client, 0, 0, response, responseType}
	if synchronousRequestId != nil {
		// Prepare the response and the structure we give into processServiceResponse
		// Return upon receiving the synchronized response. All other responses are
		//     * processed with a callback "in the background".
		rd.requestId = synchronousRequestId[0]
	}
	var retval UA_StatusCode
	for {
		var now UA_DateTime = UA_DateTime_nowMonotonic()
		if now >= maxDate {
			// >= avoid timeout to be set to 0
			return 11141120
		}
		var timeout UA_UInt32 = UA_UInt32(((int64(int32((__int64_t((int64_t((maxDate - now))))))) + int64(10*1000-int(1))) / int64(10*1000)))
		// round always to upper value to avoid timeout to be set to 0
		//         * if(maxDate - now) < (UA_DATETIME_MSEC/2)
		retval = UA_Connection_receiveChunksBlocking((*[100000000]UA_Connection)(unsafe.Pointer(&client[0].connection))[:], (*[100000000]SyncResponseDescription)(unsafe.Pointer(&rd))[:], client_processChunk, UA_UInt32(timeout))
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) && retval != UA_StatusCode((uint32_t((uint32((11141120)))))) {
			if retval == UA_StatusCode((uint32_t((uint32((uint32(2158886912))))))) {
				setClientState(client, UA_CLIENTSTATE_DISCONNECTED)
			}
			UA_Client_close(client)
			break
		}
		if noarch.NotInt((int((int((noarch.NotUA_Boolean(UA_Boolean(rd.received)))))))) != 0 {
			break
		}
	}
	return UA_StatusCode(retval)
}
// __UA_Client_Service - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35871
func __UA_Client_Service(client []UA_Client, request interface{}, requestType []UA_DataType, response interface{}, responseType []UA_DataType) {
	UA_init(response, responseType)
	var respHeader []UA_ResponseHeader = response.([]UA_ResponseHeader)
	var requestId UA_UInt32
	var retval UA_StatusCode = sendSymmetricServiceRequest(client, request, requestType, (*[100000000]UA_UInt32)(unsafe.Pointer(&requestId))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		if retval == UA_StatusCode((uint32_t((uint32((uint32(2148007936))))))) {
			// Send the request
			respHeader[0].serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2159542272)))))))
		} else {
			respHeader[0].serviceResult = retval
		}
		UA_Client_close(client)
		return
	}
	var maxDate UA_DateTime = UA_DateTime((int64_t((__int64_t((int32(int64(int32((__int64_t((int64_t((UA_DateTime_nowMonotonic()))))))) + int64(uint32((uint32((uint32_t((UA_UInt32(client[0].config.timeout))))))))*int64(10*1000))))))))
	// Retrieve the response
	retval = receiveServiceResponse(client, response, responseType, UA_DateTime(maxDate), (*[100000000]UA_UInt32)(unsafe.Pointer(&requestId))[:])
	if retval == UA_StatusCode((uint32_t((uint32((11141120)))))) {
		// In synchronous service, if we have don't have a reply we need to close the connection
		UA_Client_close(client)
		retval = UA_StatusCode((uint32_t((uint32((uint32(2158886912)))))))
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		respHeader[0].serviceResult = retval
	}
}
// UA_Client_AsyncService_cancel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35903
func UA_Client_AsyncService_cancel(client []UA_Client, ac []AsyncServiceCall, statusCode UA_StatusCode) {
	var responseBuf []UA_Byte
	var resp interface{} = uint32((uintptr_t((*[100000000]UA_Byte)(unsafe.Pointer(&responseBuf[0]))[:])))
	// Create an empty response with the statuscode
	// workaround aliasing rules
	UA_init(resp, ac[0].responseType)
	(resp.([]UA_ResponseHeader))[0].serviceResult = statusCode
	ac.callback(client, ac[0].userdata, UA_UInt32(ac[0].requestId), resp, ac[0].responseType)
	// Clean up the response. Users might move data into it. For whatever reasons.
	UA_deleteMembers(resp, ac[0].responseType)
}
// UA_Client_AsyncService_removeAll - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35918
func UA_Client_AsyncService_removeAll(client []UA_Client, statusCode UA_StatusCode) {
	var ac []AsyncServiceCall
	var ac_tmp []AsyncServiceCall
	for ac = ((*[100000000]ListOfAsyncServiceCall)(unsafe.Pointer(&client[0].asyncServiceCalls))[:])[0].lh_first; ac != nil && func() int {
		ac_tmp = (ac)[0].pointers.le_next
		tempVar := &1
		return *tempVar
	}() != 0; ac = ac_tmp {
		for {
			if (ac)[0].pointers.le_next != nil {
				(ac)[0].pointers.le_next[0].pointers.le_prev = (ac)[0].pointers.le_prev
			}
			(ac)[0].pointers.le_prev[0] = (ac)[0].pointers.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		UA_Client_AsyncService_cancel(client, ac, UA_StatusCode(statusCode))
		_ = ac
	}
}
// __UA_Client_AsyncService - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35927
func __UA_Client_AsyncService(client []UA_Client, request interface{}, requestType []UA_DataType, callback UA_ClientAsyncServiceCallback, responseType []UA_DataType, userdata interface{}, requestId []UA_UInt32) UA_StatusCode {
	var ac []AsyncServiceCall = make([]AsyncServiceCall, 56/56)
	if ac == nil {
		// Prepare the entry for the linked list
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	ac[0].callback = callback
	ac[0].responseType = responseType
	ac[0].userdata = userdata
	var retval UA_StatusCode = sendSymmetricServiceRequest(client, request, requestType, (*[100000000]UA_UInt32)(unsafe.Pointer(&ac[0].requestId))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		_ = ac
		// Call the service and set the requestId
		return UA_StatusCode(retval)
	}
	for {
		if ((ac)[0].pointers.le_next = ((*[100000000]ListOfAsyncServiceCall)(unsafe.Pointer(&client[0].asyncServiceCalls))[:])[0].lh_first) != nil {
			// Store the entry for async processing
			((*[100000000]ListOfAsyncServiceCall)(unsafe.Pointer(&client[0].asyncServiceCalls))[:])[0].lh_first[0].pointers.le_prev = (*[100000000][]AsyncServiceCall)(unsafe.Pointer(&(ac)[0].pointers.le_next))[:]
		}
		((*[100000000]ListOfAsyncServiceCall)(unsafe.Pointer(&client[0].asyncServiceCalls))[:])[0].lh_first = ac
		(ac)[0].pointers.le_prev = (*[100000000][]AsyncServiceCall)(unsafe.Pointer(&((*[100000000]ListOfAsyncServiceCall)(unsafe.Pointer(&client[0].asyncServiceCalls))[:])[0].lh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	if requestId != nil {
		requestId[0] = UA_UInt32(ac[0].requestId)
	}
	return 0
}
// UA_Client_runAsync - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35955
func UA_Client_runAsync(client []UA_Client, timeout UA_UInt16) UA_StatusCode {
	var retvalPublish UA_StatusCode = UA_Client_Subscriptions_backgroundPublish(client)
	if retvalPublish != UA_StatusCode((uint32_t((uint32((0)))))) {
		// TODO: Call repeated jobs that are scheduled
		return UA_StatusCode(retvalPublish)
	}
	var retval UA_StatusCode = UA_Client_manuallyRenewSecureChannel(client)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	var maxDate UA_DateTime = UA_DateTime((int64_t((__int64_t((int32(int64(int32((__int64_t((int64_t((UA_DateTime_nowMonotonic()))))))) + int64(uint16((uint16((uint16_t((timeout)))))))*int64(10*1000))))))))
	retval = receiveServiceResponse(client, nil, nil, UA_DateTime(maxDate), nil)
	if retval == UA_StatusCode((uint32_t((uint32((11141120)))))) {
		retval = 0
	}
	// The inactivity check must be done after receiveServiceResponse
	UA_Client_Subscriptions_backgroundPublishInactivityCheck(client)
	return UA_StatusCode(retval)
}
// setClientState - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:35997
// amalgamated original file "/home/travis/build/open62541/open62541/src/client/ua_client_connect.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2017 (c) Mark Giraud, Fraunhofer IOSB
// *    Copyright 2017-2018 (c) Thomas Stalder, Blue Time Concept SA
// *    Copyright 2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
//
// Set client state
//
func setClientState(client []UA_Client, state int) {
	if uint32(client[0].state) != uint32(state) {
		client[0].state = state
		if func([]UA_Client , int)()((UA_ClientStateCallback(client[0].config.stateCallback))) != nil {
			client.config.stateCallback(client, client[0].state)
		}
	}
}
// processACKResponse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36013
//
// Open the Connection
//
func processACKResponse(application interface{}, connection []UA_Connection, chunk []UA_ByteString) UA_StatusCode {
	var client []UA_Client = application.([]UA_Client)
	var offset uint
	var retval UA_StatusCode
	var messageHeader UA_TcpMessageHeader
	var ackMessage UA_TcpAcknowledgeMessage
	// Decode the message
	retval = UA_TcpMessageHeader_decodeBinary(chunk, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_TcpMessageHeader)(unsafe.Pointer(&messageHeader))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Decoding ACK message failed\x00"))
		return UA_StatusCode(retval)
	}
	var messageType int = int((uint32((uint32((uint32_t((UA_UInt32(messageHeader.messageTypeAndChunkType) & UA_UInt32((uint32_t((uint32((16777215))))))))))))))
	var chunkType int = int((uint32((uint32((uint32_t((UA_UInt32(messageHeader.messageTypeAndChunkType) & UA_UInt32((uint32_t((uint32((uint32(4278190080)))))))))))))))
	if uint32(messageType) == uint32(UA_MESSAGETYPE_ERR) {
		var error UA_StatusCode = ((*[100000000]UA_Byte)(unsafe.Pointer(&chunk[0].data[offset]))[:])[0]
		var len UA_UInt32 = ((*[100000000]UA_Byte)(unsafe.Pointer(&chunk[0].data[offset+uint((4))]))[:])[(0)]
		var data []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&chunk[0].data[offset+uint((4))+uint((4))]))[:]
		// check if we got an error response from the server
		// Header + ErrorMessage (error + reasonLength_field + length)
		UA_LOG_ERROR(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Received ERR response. %s - %.*s\x00"), UA_StatusCode_name(UA_StatusCode(error)), UA_UInt32(len), data)
		return UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
	}
	if uint32(chunkType) != uint32(UA_CHUNKTYPE_FINAL) {
		return UA_StatusCode((uint32_t((uint32((uint32(2155741184)))))))
	}
	retval |= UA_TcpAcknowledgeMessage_decodeBinary(chunk, (*[100000000]uint)(unsafe.Pointer(&offset))[:], (*[100000000]UA_TcpAcknowledgeMessage)(unsafe.Pointer(&ackMessage))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Decoding ACK message failed\x00"))
		return UA_StatusCode(retval)
	}
	// Store remote connection settings and adjust local configuration to not
	//     * exceed the limits
	UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Received ACK message\x00"))
	// may be zero -> unlimited
	connection[0].remoteConf.maxChunkCount = UA_UInt32(ackMessage.maxChunkCount)
	// may be zero -> unlimited
	connection[0].remoteConf.maxMessageSize = UA_UInt32(ackMessage.maxMessageSize)
	connection[0].remoteConf.protocolVersion = UA_UInt32(ackMessage.protocolVersion)
	connection[0].remoteConf.sendBufferSize = UA_UInt32(ackMessage.sendBufferSize)
	connection[0].remoteConf.recvBufferSize = UA_UInt32(ackMessage.receiveBufferSize)
	if UA_UInt32(connection[0].remoteConf.recvBufferSize) < UA_UInt32(connection[0].localConf.sendBufferSize) {
		connection[0].localConf.sendBufferSize = UA_UInt32(connection[0].remoteConf.recvBufferSize)
	}
	if UA_UInt32(connection[0].remoteConf.sendBufferSize) < UA_UInt32(connection[0].localConf.recvBufferSize) {
		connection[0].localConf.recvBufferSize = UA_UInt32(connection[0].remoteConf.sendBufferSize)
	}
	connection[0].state = UA_CONNECTION_ESTABLISHED
	return 0
}
// HelAckHandshake - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36070
func HelAckHandshake(client []UA_Client) UA_StatusCode {
	var message UA_ByteString
	var conn []UA_Connection = (*[100000000]UA_Connection)(unsafe.Pointer(&client[0].connection))[:]
	var retval UA_StatusCode = conn.getSendBuffer(conn, 8192, (*[100000000]UA_ByteString)(unsafe.Pointer(&message))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Get a buffer
		return UA_StatusCode(retval)
	}
	var hello UA_TcpHelloMessage
	// Prepare the HEL message and encode at offset 8
	// must be less than 4096 bytes
	UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&client[0].endpointUrl))[:], (*[100000000]UA_String)(unsafe.Pointer(&hello.endpointUrl))[:])
	hello.maxChunkCount = UA_UInt32(conn[0].localConf.maxChunkCount)
	hello.maxMessageSize = UA_UInt32(conn[0].localConf.maxMessageSize)
	hello.protocolVersion = UA_UInt32(conn[0].localConf.protocolVersion)
	hello.receiveBufferSize = UA_UInt32(conn[0].localConf.recvBufferSize)
	hello.sendBufferSize = UA_UInt32(conn[0].localConf.sendBufferSize)
	var bufPos []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&message.data[8]))[:]
	var bufEnd []UA_Byte = (*[100000000]UA_Byte)(unsafe.Pointer(&message.data[uint(message.length)]))[:]
	// skip the header
	retval = UA_TcpHelloMessage_encodeBinary((*[100000000]UA_TcpHelloMessage)(unsafe.Pointer(&hello))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufPos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufEnd))[:])
	UA_TcpHelloMessage_deleteMembers((*[100000000]UA_TcpHelloMessage)(unsafe.Pointer(&hello))[:])
	var messageHeader UA_TcpMessageHeader
	// Encode the message header at offset 0
	messageHeader.messageTypeAndChunkType = UA_UInt32((uint32_t((uint32((uint32(UA_CHUNKTYPE_FINAL + UA_MESSAGETYPE_HEL)))))))
	messageHeader.messageSize = UA_UInt32((uint32((uintptr_t(bufPos) - uintptr_t(message.data)))))
	bufPos = message.data
	retval |= UA_TcpMessageHeader_encodeBinary((*[100000000]UA_TcpMessageHeader)(unsafe.Pointer(&messageHeader))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufPos))[:], (*[100000000][]UA_Byte)(unsafe.Pointer(&bufEnd))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		conn.releaseSendBuffer(conn, (*[100000000]UA_ByteString)(unsafe.Pointer(&message))[:])
		return UA_StatusCode(retval)
	}
	// Send the HEL message
	message.length = uint((uint32((uint32((uint32_t((UA_UInt32(messageHeader.messageSize)))))))))
	retval = conn.send(conn, (*[100000000]UA_ByteString)(unsafe.Pointer(&message))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Sending HEL failed\x00"))
		return UA_StatusCode(retval)
	}
	UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Sent HEL message\x00"))
	// Loop until we have a complete chunk
	retval = UA_Connection_receiveChunksBlocking(conn, client, processACKResponse, UA_UInt32(client[0].config.timeout))
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_INFO(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_NETWORK, []byte("Receiving ACK message failed\x00"))
		if retval == UA_StatusCode((uint32_t((uint32((uint32(2158886912))))))) {
			client[0].state = UA_CLIENTSTATE_DISCONNECTED
		}
		UA_Client_close(client)
	}
	return UA_StatusCode(retval)
}
// processDecodedOPNResponse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36128
func processDecodedOPNResponse(client []UA_Client, response []UA_OpenSecureChannelResponse, renew UA_Boolean) {
	if int((int((UA_Boolean(renew))))) != 0 {
		// Replace the token
		// Set the next token
		client[0].channel.nextSecurityToken = response[0].securityToken
	} else {
		// Set initial token
		client[0].channel.securityToken = response[0].securityToken
	}
	// Replace the nonce
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&client[0].channel.remoteNonce))[:])
	client[0].channel.remoteNonce = UA_ByteString(response[0].serverNonce)
	UA_ByteString_init((*[100000000]UA_ByteString)(unsafe.Pointer(&response[0].serverNonce))[:])
	if uint32(client[0].channel.state) == uint32(UA_SECURECHANNELSTATE_OPEN) {
		UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("SecureChannel in the server renewed\x00"))
	} else {
		UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Opened SecureChannel acknowledged by the server\x00"))
	}
	// Response.securityToken.revisedLifetime is UInt32 we need to cast it to
	//     * DateTime=Int64 we take 75% of lifetime to start renewing as described in
	//     * standard
	client[0].channel.state = UA_SECURECHANNELSTATE_OPEN
	client[0].nextChannelRenewal = UA_DateTime_nowMonotonic()+UA_DateTime((float64(uint32((uint32((uint32_t((UA_UInt32(client[0].channel.securityToken.revisedLifetime))))))))*float64((UA_Double((int64(10 * 1000)))))*0.75))
}
// openSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36156
func openSecureChannel(client []UA_Client, renew UA_Boolean) UA_StatusCode {
	if int((int((renew)))) != 0 && UA_DateTime(client[0].nextChannelRenewal) > UA_DateTime_nowMonotonic() {
		// Check if sc is still valid
		return 0
	}
	var conn []UA_Connection = (*[100000000]UA_Connection)(unsafe.Pointer(&client[0].connection))[:]
	if uint32(conn[0].state) != uint32(UA_CONNECTION_ESTABLISHED) {
		return UA_StatusCode((uint32_t((uint32((uint32(2148335616)))))))
	}
	var opnSecRq UA_OpenSecureChannelRequest
	// Prepare the OpenSecureChannelRequest
	UA_OpenSecureChannelRequest_init((*[100000000]UA_OpenSecureChannelRequest)(unsafe.Pointer(&opnSecRq))[:])
	opnSecRq.requestHeader.timestamp = UA_DateTime_now()
	opnSecRq.requestHeader.authenticationToken = client[0].authenticationToken
	if int((int((UA_Boolean(renew))))) != 0 {
		opnSecRq.requestType = UA_SECURITYTOKENREQUESTTYPE_RENEW
		UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Requesting to renew the SecureChannel\x00"))
	} else {
		opnSecRq.requestType = UA_SECURITYTOKENREQUESTTYPE_ISSUE
		UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Requesting to open a SecureChannel\x00"))
	}
	opnSecRq.securityMode = UA_MESSAGESECURITYMODE_NONE
	opnSecRq.clientNonce = UA_ByteString(client[0].channel.localNonce)
	opnSecRq.requestedLifetime = UA_UInt32(client[0].config.secureChannelLifeTime)
	var requestId UA_UInt32 = func() UA_UInt32 {
		tempVar := &client[0].requestId
		*tempVar ++
		return *tempVar
	}()
	var retval UA_StatusCode = UA_SecureChannel_sendAsymmetricOPNMessage((*[100000000]UA_SecureChannel)(unsafe.Pointer(&client[0].channel))[:], UA_UInt32(requestId), (*[100000000]UA_OpenSecureChannelRequest)(unsafe.Pointer(&opnSecRq))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[164]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		// Send the OPN message
		UA_LOG_ERROR(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("Sending OPN message failed with error %s\x00"), UA_StatusCode_name(UA_StatusCode(retval)))
		UA_Client_close(client)
		return UA_StatusCode(retval)
	}
	UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_SECURECHANNEL, []byte("OPN message sent\x00"))
	// Increase nextChannelRenewal to avoid that we re-start renewal when
	//     * publish responses are received before the OPN response arrives.
	client[0].nextChannelRenewal = UA_DateTime((int64_t((__int64_t((int32(int64(int32((__int64_t((int64_t((UA_DateTime_nowMonotonic()))))))) + 2*(int64(int32((__int64_t((int64_t((UA_DateTime(UA_UInt32(client[0].config.timeout)))))))))*int64(10*1000)))))))))
	var response UA_OpenSecureChannelResponse
	// Receive / decrypt / decode the OPN response. Process async services in
	//     * the background until the OPN response arrives.
	retval = receiveServiceResponse(client, (*[100000000]UA_OpenSecureChannelResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[104]))[:], UA_DateTime(int64(int32((__int64_t((int64_t((UA_DateTime_nowMonotonic())))))))+int64(int32((__int64_t((int64_t((UA_DateTime(UA_UInt32(client[0].config.timeout)))))))))*int64(10*1000)), (*[100000000]UA_UInt32)(unsafe.Pointer(&requestId))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_Client_close(client)
		return UA_StatusCode(retval)
	}
	processDecodedOPNResponse(client, (*[100000000]UA_OpenSecureChannelResponse)(unsafe.Pointer(&response))[:], UA_Boolean(renew))
	UA_OpenSecureChannelResponse_deleteMembers((*[100000000]UA_OpenSecureChannelResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// activateSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36222
func activateSession(client []UA_Client) UA_StatusCode {
	var request UA_ActivateSessionRequest
	UA_ActivateSessionRequest_init((*[100000000]UA_ActivateSessionRequest)(unsafe.Pointer(&request))[:])
	request.requestHeader.requestHandle = func() UA_UInt32 {
		tempVar := &client[0].requestHandle
		*tempVar ++
		return *tempVar
	}()
	request.requestHeader.timestamp = UA_DateTime_now()
	request.requestHeader.timeoutHint = 600000
	if uint32(client[0].authenticationMethod) == uint32(UA_CLIENTAUTHENTICATION_NONE) {
		var identityToken []UA_AnonymousIdentityToken = UA_AnonymousIdentityToken_new()
		//manual ExtensionObject encoding of the identityToken
		UA_AnonymousIdentityToken_init(identityToken)
		UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&client[0].token.policyId))[:], (*[100000000]UA_String)(unsafe.Pointer(&identityToken[0].policyId))[:])
		request.userIdentityToken.encoding = UA_EXTENSIONOBJECT_DECODED
		(*request.userIdentityToken.content.decoded()).type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[53]))[:]
		(*request.userIdentityToken.content.decoded()).data = identityToken
	} else {
		var identityToken []UA_UserNameIdentityToken = UA_UserNameIdentityToken_new()
		UA_UserNameIdentityToken_init(identityToken)
		UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&client[0].token.policyId))[:], (*[100000000]UA_String)(unsafe.Pointer(&identityToken[0].policyId))[:])
		UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&client[0].username))[:], (*[100000000]UA_String)(unsafe.Pointer(&identityToken[0].userName))[:])
		UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&client[0].password))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&identityToken[0].password))[:])
		request.userIdentityToken.encoding = UA_EXTENSIONOBJECT_DECODED
		(*request.userIdentityToken.content.decoded()).type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[98]))[:]
		(*request.userIdentityToken.content.decoded()).data = identityToken
	}
	var response UA_ActivateSessionResponse
	__UA_Client_Service(client, (*[100000000]UA_ActivateSessionRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[103]))[:], (*[100000000]UA_ActivateSessionResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[109]))[:])
	if UA_StatusCode(response.responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_ERROR(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("ActivateSession failed with error code %s\x00"), UA_StatusCode_name(UA_StatusCode(response.responseHeader.serviceResult)))
	}
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	UA_ActivateSessionRequest_deleteMembers((*[100000000]UA_ActivateSessionRequest)(unsafe.Pointer(&request))[:])
	UA_ActivateSessionResponse_deleteMembers((*[100000000]UA_ActivateSessionResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_getEndpointsInternal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36266
// Gets a list of endpoints. Memory is allocated for endpointDescription array
func UA_Client_getEndpointsInternal(client []UA_Client, endpointDescriptionsSize []uint, endpointDescriptions [][]UA_EndpointDescription) UA_StatusCode {
	var request UA_GetEndpointsRequest
	UA_GetEndpointsRequest_init((*[100000000]UA_GetEndpointsRequest)(unsafe.Pointer(&request))[:])
	request.requestHeader.timestamp = UA_DateTime_now()
	request.requestHeader.timeoutHint = 10000
	// assume the endpointurl outlives the service call
	request.endpointUrl = client[0].endpointUrl
	var response UA_GetEndpointsResponse
	__UA_Client_Service(client, (*[100000000]UA_GetEndpointsRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[137]))[:], (*[100000000]UA_GetEndpointsResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[193]))[:])
	if UA_StatusCode(response.responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
		UA_LOG_ERROR(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("GetEndpointRequest failed with error code %s\x00"), UA_StatusCode_name(UA_StatusCode(retval)))
		UA_GetEndpointsResponse_deleteMembers((*[100000000]UA_GetEndpointsResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	endpointDescriptions[0] = response.endpoints
	endpointDescriptionsSize[0] = uint(response.endpointsSize)
	response.endpoints = nil
	response.endpointsSize = 0
	UA_GetEndpointsResponse_deleteMembers((*[100000000]UA_GetEndpointsResponse)(unsafe.Pointer(&response))[:])
	return 0
}
// getEndpoints - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36296
func getEndpoints(client []UA_Client) UA_StatusCode {
	var endpointArray []UA_EndpointDescription
	var endpointArraySize uint
	var retval UA_StatusCode = UA_Client_getEndpointsInternal(client, (*[100000000]uint)(unsafe.Pointer(&endpointArraySize))[:], (*[100000000][]UA_EndpointDescription)(unsafe.Pointer(&endpointArray))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	var endpointFound UA_Boolean
	var tokenFound UA_Boolean
	var securityNone UA_String = UA_STRING([]byte("http://opcfoundation.org/UA/SecurityPolicy#None\x00"))
	var binaryTransport UA_String = UA_STRING([]byte("http://opcfoundation.org/UA-Profile/Transport/uatcp-uasc-uabinary\x00"))
	{
		var i uint
		for ; i < endpointArraySize; i++ {
			var endpoint []UA_EndpointDescription = (*[100000000]UA_EndpointDescription)(unsafe.Pointer(&endpointArray[i]))[:]
			if uint(endpoint[0].transportProfileUri.length) != uint((0)) && int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&endpoint[0].transportProfileUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&binaryTransport))[:])))))) != 0 {
				//opcfoundation.org/UA/SecurityPolicy#None");
				//opcfoundation.org/UA-Profile/"
				// TODO: compare endpoint information with client->endpointUri
				// look out for binary transport endpoints
				// Note: Siemens returns empty ProfileUrl, we will accept it as binary
				continue
			}
			if int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&endpoint[0].securityPolicyUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&securityNone))[:])))))) != 0 {
				// look out for an endpoint without security
				continue
			}
			// endpoint with no security found
			endpointFound = 1
			{
				var j uint
				for ; j < uint(endpoint[0].userIdentityTokensSize); j++ {
					var userToken []UA_UserTokenPolicy = (*[100000000]UA_UserTokenPolicy)(unsafe.Pointer(&endpoint[0].userIdentityTokens[j]))[:]
					if uint(userToken[0].securityPolicyUri.length) > uint((0)) && int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&userToken[0].securityPolicyUri))[:], (*[100000000]UA_String)(unsafe.Pointer(&securityNone))[:])))))) != 0 {
						// look for a user token policy with an anonymous token
						// Usertokens also have a security policy...
						continue
					}
					if client[0].authenticationMethod != userToken[0].tokenType {
						// UA_CLIENTAUTHENTICATION_NONE == UA_USERTOKENTYPE_ANONYMOUS
						//             * UA_CLIENTAUTHENTICATION_USERNAME == UA_USERTOKENTYPE_USERNAME
						//             * TODO: Check equivalence for other types when adding the support
						continue
					}
					// Endpoint with matching usertokenpolicy found
					tokenFound = 1
					UA_UserTokenPolicy_deleteMembers((*[100000000]UA_UserTokenPolicy)(unsafe.Pointer(&client[0].token))[:])
					UA_UserTokenPolicy_copy(userToken, (*[100000000]UA_UserTokenPolicy)(unsafe.Pointer(&client[0].token))[:])
					break
				}
			}
		}
	}
	UA_Array_delete(endpointArray, uint(endpointArraySize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[183]))[:])
	if int((int((noarch.NotUA_Boolean(UA_Boolean(endpointFound)))))) != 0 {
		UA_LOG_ERROR(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("No suitable endpoint found\x00"))
		retval = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	} else if int((int((noarch.NotUA_Boolean(UA_Boolean(tokenFound)))))) != 0 {
		UA_LOG_ERROR(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("No suitable UserTokenPolicy found for the possible endpoints\x00"))
		retval = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	return UA_StatusCode(retval)
}
// createSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36364
func createSession(client []UA_Client) UA_StatusCode {
	var request UA_CreateSessionRequest
	UA_CreateSessionRequest_init((*[100000000]UA_CreateSessionRequest)(unsafe.Pointer(&request))[:])
	request.requestHeader.timestamp = UA_DateTime_now()
	request.requestHeader.timeoutHint = 10000
	UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&client[0].channel.localNonce))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&request.clientNonce))[:])
	request.requestedSessionTimeout = 1200000
	request.maxResponseMessageSize = 2147483647
	UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&client[0].endpointUrl))[:], (*[100000000]UA_String)(unsafe.Pointer(&request.endpointUrl))[:])
	var response UA_CreateSessionResponse
	__UA_Client_Service(client, (*[100000000]UA_CreateSessionRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[191]))[:], (*[100000000]UA_CreateSessionResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[197]))[:])
	UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&response.authenticationToken))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&client[0].authenticationToken))[:])
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	UA_CreateSessionRequest_deleteMembers((*[100000000]UA_CreateSessionRequest)(unsafe.Pointer(&request))[:])
	UA_CreateSessionResponse_deleteMembers((*[100000000]UA_CreateSessionResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_connectInternal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36388
func UA_Client_connectInternal(client []UA_Client, endpointUrl []byte, endpointsHandshake UA_Boolean, createNewSession UA_Boolean) UA_StatusCode {
	if uint32(client[0].state) >= uint32(UA_CLIENTSTATE_CONNECTED) {
		return 0
	}
	UA_ChannelSecurityToken_init((*[100000000]UA_ChannelSecurityToken)(unsafe.Pointer(&client[0].channel.securityToken))[:])
	client[0].channel.state = UA_SECURECHANNELSTATE_FRESH
	var retval UA_StatusCode
	client[0].connection = client.config.connectionFunc(client[0].config.localConnectionConfig, endpointUrl, UA_UInt32(client[0].config.timeout), UA_Logger(client[0].config.logger))
	if uint32(client[0].connection.state) != uint32(UA_CONNECTION_OPENING) {
		retval = UA_StatusCode((uint32_t((uint32((uint32(2158886912)))))))
		goto cleanup
	}
	UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&client[0].endpointUrl))[:])
	client[0].endpointUrl = UA_String_fromChars(endpointUrl)
	if client[0].endpointUrl.data == nil {
		retval = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		goto cleanup
	}
	// Open a TCP connection
	client[0].connection.localConf = client[0].config.localConnectionConfig
	retval = HelAckHandshake(client)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		goto cleanup
	}
	setClientState(client, UA_CLIENTSTATE_CONNECTED)
	// Open a SecureChannel. TODO: Select with endpoint
	client[0].channel.connection = (*[100000000]UA_Connection)(unsafe.Pointer(&client[0].connection))[:]
	retval = openSecureChannel(client, 0)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		goto cleanup
	}
	setClientState(client, UA_CLIENTSTATE_SECURECHANNEL)
	// Delete async service. TODO: Move this from connect to the disconnect/cleanup phase
	UA_Client_AsyncService_removeAll(client, UA_StatusCode((uint32_t((uint32((uint32(2148270080))))))))
	client[0].currentlyOutStandingPublishRequests = 0
	// TODO: actually, reactivate an existing session is working, but currently republish is not implemented
	// This option is disabled until we have a good implementation of the subscription recovery.
	UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&client[0].authenticationToken))[:])
	if int((int((UA_Boolean(endpointsHandshake))))) != 0 {
		// Get Endpoints
		retval = getEndpoints(client)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			goto cleanup
		}
	}
	if int((int((UA_Boolean(createNewSession))))) != 0 {
		// Create the Session for this SecureChannel
		retval = createSession(client)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			goto cleanup
		}
		// A new session has been created. We need to clean up the subscriptions
		UA_Client_Subscriptions_clean(client)
		retval = activateSession(client)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			goto cleanup
		}
		setClientState(client, UA_CLIENTSTATE_SESSION)
	}
	return UA_StatusCode(retval)
cleanup:
	;
	UA_Client_close(client)
	return UA_StatusCode(retval)
}
// UA_Client_connect - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36487
func UA_Client_connect(client []UA_Client, endpointUrl []byte) UA_StatusCode {
	return UA_Client_connectInternal(client, endpointUrl, 1, 1)
}
// UA_Client_connect_username - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36492
func UA_Client_connect_username(client []UA_Client, endpointUrl []byte, username []byte, password []byte) UA_StatusCode {
	client[0].authenticationMethod = UA_CLIENTAUTHENTICATION_USERNAME
	client[0].username = UA_String_fromChars(username)
	client[0].password = UA_String_fromChars(password)
	return UA_Client_connect(client, endpointUrl)
}
// UA_Client_manuallyRenewSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36501
func UA_Client_manuallyRenewSecureChannel(client []UA_Client) UA_StatusCode {
	var retval UA_StatusCode = openSecureChannel(client, 1)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_Client_close(client)
	}
	return UA_StatusCode(retval)
}
// sendCloseSession - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36514
//
// Close the Connection
//
func sendCloseSession(client []UA_Client) {
	var request UA_CloseSessionRequest
	UA_CloseSessionRequest_init((*[100000000]UA_CloseSessionRequest)(unsafe.Pointer(&request))[:])
	request.requestHeader.timestamp = UA_DateTime_now()
	request.requestHeader.timeoutHint = 10000
	request.deleteSubscriptions = 1
	var response UA_CloseSessionResponse
	__UA_Client_Service(client, (*[100000000]UA_CloseSessionRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[121]))[:], (*[100000000]UA_CloseSessionResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[176]))[:])
	UA_CloseSessionRequest_deleteMembers((*[100000000]UA_CloseSessionRequest)(unsafe.Pointer(&request))[:])
	UA_CloseSessionResponse_deleteMembers((*[100000000]UA_CloseSessionResponse)(unsafe.Pointer(&response))[:])
}
// sendCloseSecureChannel - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36529
func sendCloseSecureChannel(client []UA_Client) {
	var channel []UA_SecureChannel = (*[100000000]UA_SecureChannel)(unsafe.Pointer(&client[0].channel))[:]
	var request UA_CloseSecureChannelRequest
	UA_CloseSecureChannelRequest_init((*[100000000]UA_CloseSecureChannelRequest)(unsafe.Pointer(&request))[:])
	request.requestHeader.requestHandle = func() UA_UInt32 {
		tempVar := &client[0].requestHandle
		*tempVar ++
		return *tempVar
	}()
	request.requestHeader.timestamp = UA_DateTime_now()
	request.requestHeader.timeoutHint = 10000
	request.requestHeader.authenticationToken = client[0].authenticationToken
	UA_SecureChannel_sendSymmetricMessage(channel, client[0].requestId += 1, UA_MESSAGETYPE_CLO, (*[100000000]UA_CloseSecureChannelRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[33]))[:])
	UA_CloseSecureChannelRequest_deleteMembers((*[100000000]UA_CloseSecureChannelRequest)(unsafe.Pointer(&request))[:])
	UA_SecureChannel_deleteMembersCleanup((*[100000000]UA_SecureChannel)(unsafe.Pointer(&client[0].channel))[:])
}
// UA_Client_disconnect - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36545
func UA_Client_disconnect(client []UA_Client) UA_StatusCode {
	if uint32(client[0].state) >= uint32(UA_CLIENTSTATE_SESSION) {
		// Is a session established?
		client[0].state = UA_CLIENTSTATE_SECURECHANNEL
		sendCloseSession(client)
	}
	UA_NodeId_deleteMembers((*[100000000]UA_NodeId)(unsafe.Pointer(&client[0].authenticationToken))[:])
	client[0].requestHandle = 0
	if uint32(client[0].state) >= uint32(UA_CLIENTSTATE_SECURECHANNEL) {
		// Is a secure channel established?
		client[0].state = UA_CLIENTSTATE_CONNECTED
		sendCloseSecureChannel(client)
	}
	if uint32(client[0].connection.state) != uint32(UA_CONNECTION_CLOSED) {
		// Close the TCP connection
		client.connection.close((*[100000000]UA_Connection)(unsafe.Pointer(&client[0].connection))[:])
	}
	// TODO REMOVE WHEN UA_SESSION_RECOVERY IS READY
	// We need to clean up the subscriptions
	UA_Client_Subscriptions_clean(client)
	setClientState(client, UA_CLIENTSTATE_DISCONNECTED)
	return 0
}
// UA_Client_close - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36575
func UA_Client_close(client []UA_Client) UA_StatusCode {
	client[0].requestHandle = 0
	if uint32(client[0].state) >= uint32(UA_CLIENTSTATE_SECURECHANNEL) {
		UA_SecureChannel_deleteMembersCleanup((*[100000000]UA_SecureChannel)(unsafe.Pointer(&client[0].channel))[:])
	}
	if uint32(client[0].connection.state) != uint32(UA_CONNECTION_CLOSED) {
		// Close the TCP connection
		client.connection.close((*[100000000]UA_Connection)(unsafe.Pointer(&client[0].connection))[:])
	}
	// TODO REMOVE WHEN UA_SESSION_RECOVERY IS READY
	// We need to clean up the subscriptions
	UA_Client_Subscriptions_clean(client)
	setClientState(client, UA_CLIENTSTATE_DISCONNECTED)
	return 0
}
// UA_Client_getEndpoints - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36608
// amalgamated original file "/home/travis/build/open62541/open62541/src/client/ua_client_discovery.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Mark Giraud, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
func UA_Client_getEndpoints(client []UA_Client, serverUrl []byte, endpointDescriptionsSize []uint, endpointDescriptions [][]UA_EndpointDescription) UA_StatusCode {
	var connected UA_Boolean = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(client[0].state) > uint32(UA_CLIENTSTATE_DISCONNECTED)]))))
	if int((int((connected)))) != 0 && strncmp(client[0].endpointUrl.data, serverUrl, uint32((uint(client[0].endpointUrl.length)))) != 0 {
		// Client is already connected to a different server
		return UA_StatusCode((uint32_t((uint32((uint32(2158690304)))))))
	}
	var retval UA_StatusCode
	if int((int((noarch.NotUA_Boolean(UA_Boolean(connected)))))) != 0 {
		retval = UA_Client_connectInternal(client, serverUrl, 0, 0)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
	}
	retval = UA_Client_getEndpointsInternal(client, endpointDescriptionsSize, endpointDescriptions)
	if int((int((noarch.NotUA_Boolean(UA_Boolean(connected)))))) != 0 {
		UA_Client_disconnect(client)
	}
	return UA_StatusCode(retval)
}
// UA_Client_findServers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36632
func UA_Client_findServers(client []UA_Client, serverUrl []byte, serverUrisSize uint, serverUris []UA_String, localeIdsSize uint, localeIds []UA_String, registeredServersSize []uint, registeredServers [][]UA_ApplicationDescription) UA_StatusCode {
	var connected UA_Boolean = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(client[0].state) > uint32(UA_CLIENTSTATE_DISCONNECTED)]))))
	if int((int((connected)))) != 0 && strncmp(client[0].endpointUrl.data, serverUrl, uint32((uint(client[0].endpointUrl.length)))) != 0 {
		// Client is already connected to a different server
		return UA_StatusCode((uint32_t((uint32((uint32(2158690304)))))))
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(connected)))))) != 0 {
		var retval UA_StatusCode = UA_Client_connectInternal(client, serverUrl, 1, 0)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
	}
	var request UA_FindServersRequest
	// Prepare the request
	UA_FindServersRequest_init((*[100000000]UA_FindServersRequest)(unsafe.Pointer(&request))[:])
	request.serverUrisSize = serverUrisSize
	request.serverUris = serverUris
	request.localeIdsSize = localeIdsSize
	request.localeIds = localeIds
	var response UA_FindServersResponse
	// Send the request
	__UA_Client_Service(client, (*[100000000]UA_FindServersRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[145]))[:], (*[100000000]UA_FindServersResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[194]))[:])
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		// Process the response
		registeredServersSize[0] = uint(response.serversSize)
		registeredServers[0] = response.servers
		response.serversSize = 0
		response.servers = nil
	} else {
		registeredServersSize[0] = 0
		registeredServers[0] = nil
	}
	// Clean up
	UA_FindServersResponse_deleteMembers((*[100000000]UA_FindServersResponse)(unsafe.Pointer(&response))[:])
	if int((int((noarch.NotUA_Boolean(UA_Boolean(connected)))))) != 0 {
		UA_Client_disconnect(client)
	}
	return UA_StatusCode(retval)
}
// UA_Client_findServersOnNetwork - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36683
func UA_Client_findServersOnNetwork(client []UA_Client, serverUrl []byte, startingRecordId UA_UInt32, maxRecordsToReturn UA_UInt32, serverCapabilityFilterSize uint, serverCapabilityFilter []UA_String, serverOnNetworkSize []uint, serverOnNetwork [][]UA_ServerOnNetwork) UA_StatusCode {
	var connected UA_Boolean = UA_Boolean((int((map[bool]int{false: 0, true: 1}[uint32(client[0].state) > uint32(UA_CLIENTSTATE_DISCONNECTED)]))))
	if int((int((connected)))) != 0 && strncmp(client[0].endpointUrl.data, serverUrl, uint32((uint(client[0].endpointUrl.length)))) != 0 {
		// Client is already connected to a different server
		return UA_StatusCode((uint32_t((uint32((uint32(2158690304)))))))
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(connected)))))) != 0 {
		var retval UA_StatusCode = UA_Client_connectInternal(client, serverUrl, 1, 0)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
	}
	var request UA_FindServersOnNetworkRequest
	// Prepare the request
	UA_FindServersOnNetworkRequest_init((*[100000000]UA_FindServersOnNetworkRequest)(unsafe.Pointer(&request))[:])
	request.startingRecordId = startingRecordId
	request.maxRecordsToReturn = maxRecordsToReturn
	request.serverCapabilityFilterSize = serverCapabilityFilterSize
	request.serverCapabilityFilter = serverCapabilityFilter
	var response UA_FindServersOnNetworkResponse
	// Send the request
	__UA_Client_Service(client, (*[100000000]UA_FindServersOnNetworkRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[37]))[:], (*[100000000]UA_FindServersOnNetworkResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[89]))[:])
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		// Process the response
		serverOnNetworkSize[0] = uint(response.serversSize)
		serverOnNetwork[0] = response.servers
		response.serversSize = 0
		response.servers = nil
	} else {
		serverOnNetworkSize[0] = 0
		serverOnNetwork[0] = nil
	}
	// Clean up
	UA_FindServersOnNetworkResponse_deleteMembers((*[100000000]UA_FindServersOnNetworkResponse)(unsafe.Pointer(&response))[:])
	if int((int((noarch.NotUA_Boolean(UA_Boolean(connected)))))) != 0 {
		UA_Client_disconnect(client)
	}
	return UA_StatusCode(retval)
}
// UA_Client_NamespaceGetIndex - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36747
// amalgamated original file "/home/travis/build/open62541/open62541/src/client/ua_client_highlevel.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2015-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2017 (c) Florian Palm
// *    Copyright 2016 (c) Chris Iatrou
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
func UA_Client_NamespaceGetIndex(client []UA_Client, namespaceUri []UA_String, namespaceIndex []UA_UInt16) UA_StatusCode {
	var request UA_ReadRequest
	UA_ReadRequest_init((*[100000000]UA_ReadRequest)(unsafe.Pointer(&request))[:])
	var id UA_ReadValueId
	UA_ReadValueId_init((*[100000000]UA_ReadValueId)(unsafe.Pointer(&id))[:])
	id.attributeId = UA_UInt32((uint32_t((uint32((uint32(UA_ATTRIBUTEID_VALUE)))))))
	id.nodeId = UA_NODEID_NUMERIC(0, 2255)
	request.nodesToRead = (*[100000000]UA_ReadValueId)(unsafe.Pointer(&id))[:]
	request.nodesToReadSize = 1
	var response UA_ReadResponse = UA_Client_Service_read(client, request)
	var retval UA_StatusCode
	if UA_StatusCode(response.responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		retval = UA_StatusCode(response.responseHeader.serviceResult)
	} else if uint(response.resultsSize) != uint((1)) || int((int((noarch.NotUA_Boolean(UA_Boolean(response.results[0].hasValue)))))) != 0 {
		retval = UA_StatusCode((uint32_t((uint32((uint32(2153906176)))))))
	} else if response.results[0].value.type_ != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:] {
		retval = UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_ReadResponse_deleteMembers((*[100000000]UA_ReadResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	retval = UA_StatusCode((uint32_t((uint32((uint32(2151546880)))))))
	var ns []UA_String = response.results[0].value.data.([]UA_String)
	{
		var i uint
		for ; i < uint(response.results[0].value.arrayLength); i++ {
			if int((int((UA_String_equal(namespaceUri, (*[100000000]UA_String)(unsafe.Pointer(&ns[i]))[:]))))) != 0 {
				namespaceIndex[0] = UA_UInt16(uint(i))
				retval = 0
				break
			}
		}
	}
	UA_ReadResponse_deleteMembers((*[100000000]UA_ReadResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_forEachChildNodeCall - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36788
func UA_Client_forEachChildNodeCall(client []UA_Client, parentNodeId UA_NodeId, callback UA_NodeIteratorCallback, handle interface{}) UA_StatusCode {
	var bReq UA_BrowseRequest
	UA_BrowseRequest_init((*[100000000]UA_BrowseRequest)(unsafe.Pointer(&bReq))[:])
	bReq.requestedMaxReferencesPerNode = 0
	bReq.nodesToBrowse = UA_BrowseDescription_new()
	bReq.nodesToBrowseSize = 1
	UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&parentNodeId))[:], (*[100000000]UA_NodeId)(unsafe.Pointer(&bReq.nodesToBrowse[0].nodeId))[:])
	//return everything
	bReq.nodesToBrowse[0].resultMask = UA_UInt32((uint32_t((uint32((uint32(UA_BROWSERESULTMASK_ALL)))))))
	bReq.nodesToBrowse[0].browseDirection = UA_BROWSEDIRECTION_BOTH
	var bResp UA_BrowseResponse = UA_Client_Service_browse(client, bReq)
	var retval UA_StatusCode = UA_StatusCode(bResp.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		{
			var i uint
			for ; i < uint(bResp.resultsSize); i++ {
				{
					var j uint
					for ; j < uint(bResp.results[i].referencesSize); j++ {
						var ref []UA_ReferenceDescription = (*[100000000]UA_ReferenceDescription)(unsafe.Pointer(&bResp.results[i].references[j]))[:]
						retval |= callback(ref[0].nodeId.nodeId, UA_Boolean(noarch.NotUA_Boolean(UA_Boolean(ref[0].isForward))), ref[0].referenceTypeId, handle)
					}
				}
			}
		}
	}
	UA_BrowseRequest_deleteMembers((*[100000000]UA_BrowseRequest)(unsafe.Pointer(&bReq))[:])
	UA_BrowseResponse_deleteMembers((*[100000000]UA_BrowseResponse)(unsafe.Pointer(&bResp))[:])
	return UA_StatusCode(retval)
}
// UA_Client_addReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36822
//
// Node Management
//
func UA_Client_addReference(client []UA_Client, sourceNodeId UA_NodeId, referenceTypeId UA_NodeId, isForward UA_Boolean, targetServerUri UA_String, targetNodeId UA_ExpandedNodeId, targetNodeClass int) UA_StatusCode {
	var item UA_AddReferencesItem
	UA_AddReferencesItem_init((*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&item))[:])
	item.sourceNodeId = sourceNodeId
	item.referenceTypeId = referenceTypeId
	item.isForward = isForward
	item.targetServerUri = targetServerUri
	item.targetNodeId = targetNodeId
	item.targetNodeClass = targetNodeClass
	var request UA_AddReferencesRequest
	UA_AddReferencesRequest_init((*[100000000]UA_AddReferencesRequest)(unsafe.Pointer(&request))[:])
	request.referencesToAdd = (*[100000000]UA_AddReferencesItem)(unsafe.Pointer(&item))[:]
	request.referencesToAddSize = 1
	var response UA_AddReferencesResponse = UA_Client_Service_addReferences(client, request)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_AddReferencesResponse_deleteMembers((*[100000000]UA_AddReferencesResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	if uint(response.resultsSize) != uint((1)) {
		UA_AddReferencesResponse_deleteMembers((*[100000000]UA_AddReferencesResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
	}
	retval = response.results[0]
	UA_AddReferencesResponse_deleteMembers((*[100000000]UA_AddReferencesResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_deleteReference - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36855
func UA_Client_deleteReference(client []UA_Client, sourceNodeId UA_NodeId, referenceTypeId UA_NodeId, isForward UA_Boolean, targetNodeId UA_ExpandedNodeId, deleteBidirectional UA_Boolean) UA_StatusCode {
	var item UA_DeleteReferencesItem
	UA_DeleteReferencesItem_init((*[100000000]UA_DeleteReferencesItem)(unsafe.Pointer(&item))[:])
	item.sourceNodeId = sourceNodeId
	item.referenceTypeId = referenceTypeId
	item.isForward = isForward
	item.targetNodeId = targetNodeId
	item.deleteBidirectional = deleteBidirectional
	var request UA_DeleteReferencesRequest
	UA_DeleteReferencesRequest_init((*[100000000]UA_DeleteReferencesRequest)(unsafe.Pointer(&request))[:])
	request.referencesToDelete = (*[100000000]UA_DeleteReferencesItem)(unsafe.Pointer(&item))[:]
	request.referencesToDeleteSize = 1
	var response UA_DeleteReferencesResponse = UA_Client_Service_deleteReferences(client, request)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_DeleteReferencesResponse_deleteMembers((*[100000000]UA_DeleteReferencesResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	if uint(response.resultsSize) != uint((1)) {
		UA_DeleteReferencesResponse_deleteMembers((*[100000000]UA_DeleteReferencesResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
	}
	retval = response.results[0]
	UA_DeleteReferencesResponse_deleteMembers((*[100000000]UA_DeleteReferencesResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_deleteNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36886
func UA_Client_deleteNode(client []UA_Client, nodeId UA_NodeId, deleteTargetReferences UA_Boolean) UA_StatusCode {
	var item UA_DeleteNodesItem
	UA_DeleteNodesItem_init((*[100000000]UA_DeleteNodesItem)(unsafe.Pointer(&item))[:])
	item.nodeId = nodeId
	item.deleteTargetReferences = deleteTargetReferences
	var request UA_DeleteNodesRequest
	UA_DeleteNodesRequest_init((*[100000000]UA_DeleteNodesRequest)(unsafe.Pointer(&request))[:])
	request.nodesToDelete = (*[100000000]UA_DeleteNodesItem)(unsafe.Pointer(&item))[:]
	request.nodesToDeleteSize = 1
	var response UA_DeleteNodesResponse = UA_Client_Service_deleteNodes(client, request)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_DeleteNodesResponse_deleteMembers((*[100000000]UA_DeleteNodesResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	if uint(response.resultsSize) != uint((1)) {
		UA_DeleteNodesResponse_deleteMembers((*[100000000]UA_DeleteNodesResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
	}
	retval = response.results[0]
	UA_DeleteNodesResponse_deleteMembers((*[100000000]UA_DeleteNodesResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// __UA_Client_addNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36912
func __UA_Client_addNode(client []UA_Client, nodeClass int, requestedNewNodeId UA_NodeId, parentNodeId UA_NodeId, referenceTypeId UA_NodeId, browseName UA_QualifiedName, typeDefinition UA_NodeId, attr []UA_NodeAttributes, attributeType []UA_DataType, outNewNodeId []UA_NodeId) UA_StatusCode {
	var request UA_AddNodesRequest
	UA_AddNodesRequest_init((*[100000000]UA_AddNodesRequest)(unsafe.Pointer(&request))[:])
	var item UA_AddNodesItem
	UA_AddNodesItem_init((*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:])
	item.parentNodeId.nodeId = parentNodeId
	item.referenceTypeId = referenceTypeId
	item.requestedNewNodeId.nodeId = requestedNewNodeId
	item.browseName = browseName
	item.nodeClass = nodeClass
	item.typeDefinition.nodeId = typeDefinition
	item.nodeAttributes.encoding = UA_EXTENSIONOBJECT_DECODED_NODELETE
	(*item.nodeAttributes.content.decoded()).type_ = attributeType
	// hack. is not written into.
	(*item.nodeAttributes.content.decoded()).data = uint32((uintptr_t(attr)))
	request.nodesToAdd = (*[100000000]UA_AddNodesItem)(unsafe.Pointer(&item))[:]
	request.nodesToAddSize = 1
	var response UA_AddNodesResponse = UA_Client_Service_addNodes(client, request)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_AddNodesResponse_deleteMembers((*[100000000]UA_AddNodesResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	if uint(response.resultsSize) != uint((1)) {
		UA_AddNodesResponse_deleteMembers((*[100000000]UA_AddNodesResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
	}
	// Move the id of the created node
	retval = UA_StatusCode(response.results[0].statusCode)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) && outNewNodeId != nil {
		outNewNodeId[0] = response.results[0].addedNodeId
		UA_NodeId_init((*[100000000]UA_NodeId)(unsafe.Pointer(&response.results[0].addedNodeId))[:])
	}
	UA_AddNodesResponse_deleteMembers((*[100000000]UA_AddNodesResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_call - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:36963
//
// Call
//
func UA_Client_call(client []UA_Client, objectId UA_NodeId, methodId UA_NodeId, inputSize uint, input []UA_Variant, outputSize []uint, output [][]UA_Variant) UA_StatusCode {
	var request UA_CallRequest
	// Set up the request
	UA_CallRequest_init((*[100000000]UA_CallRequest)(unsafe.Pointer(&request))[:])
	var item UA_CallMethodRequest
	UA_CallMethodRequest_init((*[100000000]UA_CallMethodRequest)(unsafe.Pointer(&item))[:])
	item.methodId = methodId
	item.objectId = objectId
	// cast const...
	item.inputArguments = uint32((uintptr_t(input))).([]UA_Variant)
	item.inputArgumentsSize = inputSize
	request.methodsToCall = (*[100000000]UA_CallMethodRequest)(unsafe.Pointer(&item))[:]
	request.methodsToCallSize = 1
	var response UA_CallResponse = UA_Client_Service_call(client, request)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		if uint(response.resultsSize) == uint((1)) {
			// Call the service
			retval = UA_StatusCode(response.results[0].statusCode)
		} else {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
		}
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_CallResponse_deleteMembers((*[100000000]UA_CallResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	if output != nil && outputSize != nil {
		// Move the output arguments
		output[0] = response.results[0].outputArguments
		outputSize[0] = uint(response.results[0].outputArgumentsSize)
		response.results[0].outputArguments = nil
		response.results[0].outputArgumentsSize = 0
	}
	UA_CallResponse_deleteMembers((*[100000000]UA_CallResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// __UA_Client_writeAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37011
//
// Write Attributes
//
func __UA_Client_writeAttribute(client []UA_Client, nodeId []UA_NodeId, attributeId int, in interface{}, inDataType []UA_DataType) UA_StatusCode {
	if in == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	var wValue UA_WriteValue
	UA_WriteValue_init((*[100000000]UA_WriteValue)(unsafe.Pointer(&wValue))[:])
	wValue.nodeId = nodeId[0]
	wValue.attributeId = UA_UInt32((uint32_t((uint32((uint32(attributeId)))))))
	if uint32(attributeId) == uint32(UA_ATTRIBUTEID_VALUE) {
		wValue.value.value = (in.([]UA_Variant))[0]
	} else {
		// hack. is never written into.
		UA_Variant_setScalar((*[100000000]UA_Variant)(unsafe.Pointer(&wValue.value.value))[:], uint32((uintptr_t(in))), inDataType)
	}
	wValue.value.hasValue = 1
	var wReq UA_WriteRequest
	UA_WriteRequest_init((*[100000000]UA_WriteRequest)(unsafe.Pointer(&wReq))[:])
	wReq.nodesToWrite = (*[100000000]UA_WriteValue)(unsafe.Pointer(&wValue))[:]
	wReq.nodesToWriteSize = 1
	var wResp UA_WriteResponse = UA_Client_Service_write(client, wReq)
	var retval UA_StatusCode = UA_StatusCode(wResp.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		if uint(wResp.resultsSize) == uint((1)) {
			retval = wResp.results[0]
		} else {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
		}
	}
	UA_WriteResponse_deleteMembers((*[100000000]UA_WriteResponse)(unsafe.Pointer(&wResp))[:])
	return UA_StatusCode(retval)
}
// UA_Client_writeArrayDimensionsAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37047
func UA_Client_writeArrayDimensionsAttribute(client []UA_Client, nodeId UA_NodeId, newArrayDimensionsSize uint, newArrayDimensions []UA_UInt32) UA_StatusCode {
	if newArrayDimensions == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2155085824)))))))
	}
	var wValue UA_WriteValue
	UA_WriteValue_init((*[100000000]UA_WriteValue)(unsafe.Pointer(&wValue))[:])
	wValue.nodeId = nodeId
	wValue.attributeId = UA_UInt32((uint32_t((uint32((uint32(UA_ATTRIBUTEID_ARRAYDIMENSIONS)))))))
	UA_Variant_setArray((*[100000000]UA_Variant)(unsafe.Pointer(&wValue.value.value))[:], uint32((uintptr_t(newArrayDimensions))), uint(newArrayDimensionsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:])
	wValue.value.hasValue = 1
	var wReq UA_WriteRequest
	UA_WriteRequest_init((*[100000000]UA_WriteRequest)(unsafe.Pointer(&wReq))[:])
	wReq.nodesToWrite = (*[100000000]UA_WriteValue)(unsafe.Pointer(&wValue))[:]
	wReq.nodesToWriteSize = 1
	var wResp UA_WriteResponse = UA_Client_Service_write(client, wReq)
	var retval UA_StatusCode = UA_StatusCode(wResp.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		if uint(wResp.resultsSize) == uint((1)) {
			retval = wResp.results[0]
		} else {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
		}
	}
	UA_WriteResponse_deleteMembers((*[100000000]UA_WriteResponse)(unsafe.Pointer(&wResp))[:])
	return UA_StatusCode(retval)
}
// __UA_Client_readAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37083
//
// Read Attributes
//
func __UA_Client_readAttribute(client []UA_Client, nodeId []UA_NodeId, attributeId int, out interface{}, outDataType []UA_DataType) UA_StatusCode {
	var item UA_ReadValueId
	UA_ReadValueId_init((*[100000000]UA_ReadValueId)(unsafe.Pointer(&item))[:])
	item.nodeId = nodeId[0]
	item.attributeId = UA_UInt32((uint32_t((uint32((uint32(attributeId)))))))
	var request UA_ReadRequest
	UA_ReadRequest_init((*[100000000]UA_ReadRequest)(unsafe.Pointer(&request))[:])
	request.nodesToRead = (*[100000000]UA_ReadValueId)(unsafe.Pointer(&item))[:]
	request.nodesToReadSize = 1
	var response UA_ReadResponse = UA_Client_Service_read(client, request)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		if uint(response.resultsSize) == uint((1)) {
			retval = UA_StatusCode(response.results[0].status)
		} else {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
		}
	}
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_ReadResponse_deleteMembers((*[100000000]UA_ReadResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	var res []UA_DataValue = response.results
	if int((int((UA_Boolean(res[0].hasStatus))))) != 0 {
		// Set the StatusCode
		retval = UA_StatusCode(res[0].status)
	}
	if int((int((noarch.NotUA_Boolean(UA_Boolean(res[0].hasValue)))))) != 0 {
		if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
			// Return early of no value is given
			retval = UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
		}
		UA_ReadResponse_deleteMembers((*[100000000]UA_ReadResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	if uint32(attributeId) == uint32(UA_ATTRIBUTEID_VALUE) {
		// Copy value into out
		memcpy(out, (*[100000000]UA_Variant)(unsafe.Pointer(&res[0].value))[:], 48)
		UA_Variant_init((*[100000000]UA_Variant)(unsafe.Pointer(&res[0].value))[:])
	} else if uint32(attributeId) == uint32(UA_ATTRIBUTEID_NODECLASS) {
		memcpy(out, res[0].value.data.([]int), 4)
	} else if int((int((UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&res[0].value))[:]))))) != 0 && res[0].value.type_ == outDataType {
		memcpy(out, res[0].value.data, uint32(uint16((uint16((uint16_t((UA_UInt16(res[0].value.type_[0].memSize)))))))))
		_ = res[0].value.data
		res[0].value.data = nil
	} else {
		retval = UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
	}
	UA_ReadResponse_deleteMembers((*[100000000]UA_ReadResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// processReadArrayDimensionsResult - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37140
func processReadArrayDimensionsResult(response []UA_ReadResponse, outArrayDimensions [][]UA_UInt32, outArrayDimensionsSize []uint) UA_StatusCode {
	var retval UA_StatusCode = UA_StatusCode(response[0].responseHeader.serviceResult)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	if uint(response[0].resultsSize) != uint((1)) {
		return UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
	}
	retval = UA_StatusCode(response[0].results[0].status)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		return UA_StatusCode(retval)
	}
	var res []UA_DataValue = (*[100000000]UA_DataValue)(unsafe.Pointer(&response[0].results[0]))[:]
	if int((int((noarch.NotUA_Boolean(UA_Boolean(res[0].hasValue)))))) != 0 || int((int((UA_Variant_isScalar((*[100000000]UA_Variant)(unsafe.Pointer(&res[0].value))[:]))))) != 0 || res[0].value.type_ != (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[6]))[:] {
		return UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
	}
	// Move results
	outArrayDimensions[0] = res[0].value.data.([]UA_UInt32)
	outArrayDimensionsSize[0] = uint(res[0].value.arrayLength)
	res[0].value.data = nil
	res[0].value.arrayLength = 0
	return 0
}
// UA_Client_readArrayDimensionsAttribute - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37169
func UA_Client_readArrayDimensionsAttribute(client []UA_Client, nodeId UA_NodeId, outArrayDimensionsSize []uint, outArrayDimensions [][]UA_UInt32) UA_StatusCode {
	var item UA_ReadValueId
	UA_ReadValueId_init((*[100000000]UA_ReadValueId)(unsafe.Pointer(&item))[:])
	item.nodeId = nodeId
	item.attributeId = UA_UInt32((uint32_t((uint32((uint32(UA_ATTRIBUTEID_ARRAYDIMENSIONS)))))))
	var request UA_ReadRequest
	UA_ReadRequest_init((*[100000000]UA_ReadRequest)(unsafe.Pointer(&request))[:])
	request.nodesToRead = (*[100000000]UA_ReadValueId)(unsafe.Pointer(&item))[:]
	request.nodesToReadSize = 1
	var response UA_ReadResponse = UA_Client_Service_read(client, request)
	var retval UA_StatusCode = processReadArrayDimensionsResult((*[100000000]UA_ReadResponse)(unsafe.Pointer(&response))[:], outArrayDimensions, outArrayDimensionsSize)
	UA_ReadResponse_deleteMembers((*[100000000]UA_ReadResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_Subscriptions_create - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37211
// amalgamated original file "/home/travis/build/open62541/open62541/src/client/ua_client_subscriptions.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2015-2018 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2016 (c) Sten Grüner
// *    Copyright 2017-2018 (c) Thomas Stalder, Blue Time Concept SA
// *    Copyright 2016-2017 (c) Florian Palm
// *    Copyright 2017 (c) Frank Meerkötter
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
//
// Subscriptions
//
func UA_Client_Subscriptions_create(client []UA_Client, request UA_CreateSubscriptionRequest, subscriptionContext interface{}, statusChangeCallback UA_Client_StatusChangeNotificationCallback, deleteCallback UA_Client_DeleteSubscriptionCallback) UA_CreateSubscriptionResponse {
	var response UA_CreateSubscriptionResponse
	UA_CreateSubscriptionResponse_init((*[100000000]UA_CreateSubscriptionResponse)(unsafe.Pointer(&response))[:])
	var newSub []UA_Client_Subscription = make([]UA_Client_Subscription, 88/88)
	if newSub == nil {
		// Allocate the internal representation
		response.responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		return response
	}
	// Send the request as a synchronous service call
	__UA_Client_Service(client, (*[100000000]UA_CreateSubscriptionRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[115]))[:], (*[100000000]UA_CreateSubscriptionResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[152]))[:])
	if UA_StatusCode(response.responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		_ = newSub
		return response
	}
	// Prepare the internal representation
	newSub[0].context = subscriptionContext
	newSub[0].subscriptionId = UA_UInt32(response.subscriptionId)
	newSub[0].sequenceNumber = 0
	newSub[0].lastActivity = UA_DateTime_nowMonotonic()
	newSub[0].statusChangeCallback = statusChangeCallback
	newSub[0].deleteCallback = deleteCallback
	newSub[0].publishingInterval = UA_Double(response.revisedPublishingInterval)
	newSub[0].maxKeepAliveCount = UA_UInt32(response.revisedMaxKeepAliveCount)
	for {
		((*[100000000]UA_ListOfClientMonitoredItems)(unsafe.Pointer(&newSub[0].monitoredItems))[:])[0].lh_first = nil
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	for {
		if ((newSub)[0].listEntry.le_next = ((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first) != nil {
			((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first[0].listEntry.le_prev = (*[100000000][]UA_Client_Subscription)(unsafe.Pointer(&(newSub)[0].listEntry.le_next))[:]
		}
		((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first = newSub
		(newSub)[0].listEntry.le_prev = (*[100000000][]UA_Client_Subscription)(unsafe.Pointer(&((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first))[:]
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	return response
}
// findSubscription - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37252
func findSubscription(client []UA_Client, subscriptionId UA_UInt32) []UA_Client_Subscription {
	var sub []UA_Client_Subscription
	for sub = ((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first; sub != nil; sub = (sub)[0].listEntry.le_next {
		if UA_UInt32(sub[0].subscriptionId) == subscriptionId {
			break
		}
	}
	return sub
}
// UA_Client_Subscriptions_modify - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37262
func UA_Client_Subscriptions_modify(client []UA_Client, request UA_ModifySubscriptionRequest) UA_ModifySubscriptionResponse {
	var response UA_ModifySubscriptionResponse
	UA_ModifySubscriptionResponse_init((*[100000000]UA_ModifySubscriptionResponse)(unsafe.Pointer(&response))[:])
	var sub []UA_Client_Subscription = findSubscription(client, UA_UInt32(request.subscriptionId))
	if sub == nil {
		// Find the internal representation
		response.responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
		return response
	}
	// Call the service
	__UA_Client_Service(client, (*[100000000]UA_ModifySubscriptionRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[123]))[:], (*[100000000]UA_ModifySubscriptionResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[118]))[:])
	// Adjust the internal representation
	sub[0].publishingInterval = UA_Double(response.revisedPublishingInterval)
	sub[0].maxKeepAliveCount = UA_UInt32(response.revisedMaxKeepAliveCount)
	return response
}
// UA_Client_Subscription_deleteInternal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37285
func UA_Client_Subscription_deleteInternal(client []UA_Client, sub []UA_Client_Subscription) {
	var mon []UA_Client_MonitoredItem
	var mon_tmp []UA_Client_MonitoredItem
	{
		// Remove the MonitoredItems
		for mon = ((*[100000000]UA_ListOfClientMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first; mon != nil && func() int {
			mon_tmp = (mon)[0].listEntry.le_next
			tempVar := &1
			return *tempVar
		}() != 0; mon = mon_tmp {
			UA_Client_MonitoredItem_remove(client, sub, mon)
		}
	}
	if func([]UA_Client , UA_UInt32 , interface{})()((UA_Client_DeleteSubscriptionCallback(sub[0].deleteCallback))) != nil {
		// Call the delete callback
		sub.deleteCallback(client, UA_UInt32(sub[0].subscriptionId), sub[0].context)
	}
	for {
		if (sub)[0].listEntry.le_next != nil {
			// Remove
			(sub)[0].listEntry.le_next[0].listEntry.le_prev = (sub)[0].listEntry.le_prev
		}
		(sub)[0].listEntry.le_prev[0] = (sub)[0].listEntry.le_next
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	_ = sub
}
// UA_Client_Subscriptions_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37301
func UA_Client_Subscriptions_delete(client []UA_Client, request UA_DeleteSubscriptionsRequest) UA_DeleteSubscriptionsResponse {
	var subs [][]UA_Client_Subscription
	noarch.Memset(subs, byte(0), 8*uint32((uint(request.subscriptionIdsSize))))
	{
		var i uint
		for ; i < uint(request.subscriptionIdsSize); i++ {
			// temporary remove the subscriptions from the list
			subs[i] = findSubscription(client, UA_UInt32(request.subscriptionIds[i]))
			if subs[i] != nil {
				for {
					if (subs[i])[0].listEntry.le_next != nil {
						(subs[i])[0].listEntry.le_next[0].listEntry.le_prev = (subs[i])[0].listEntry.le_prev
					}
					(subs[i])[0].listEntry.le_prev[0] = (subs[i])[0].listEntry.le_next
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
			}
		}
	}
	var response UA_DeleteSubscriptionsResponse
	// Send the request
	__UA_Client_Service(client, (*[100000000]UA_DeleteSubscriptionsRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[80]))[:], (*[100000000]UA_DeleteSubscriptionsResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[139]))[:])
	if UA_StatusCode(response.responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		goto cleanup
	}
	if uint(request.subscriptionIdsSize) != uint(response.resultsSize) {
		response.responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		goto cleanup
	}
	{
		var i uint
		for ; i < uint(request.subscriptionIdsSize); i++ {
			if response.results[i] != UA_StatusCode((uint32_t((uint32((0)))))) && response.results[i] != UA_StatusCode((uint32_t((uint32((uint32(2150105088))))))) {
				if subs[i] != nil {
					for {
						if ((subs[i])[0].listEntry.le_next = ((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first) != nil {
							// Loop over the removed subscriptions and remove internally
							// Something was wrong, reinsert the subscription in the list
							((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first[0].listEntry.le_prev = (*[100000000][]UA_Client_Subscription)(unsafe.Pointer(&(subs[i])[0].listEntry.le_next))[:]
						}
						((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first = subs[i]
						(subs[i])[0].listEntry.le_prev = (*[100000000][]UA_Client_Subscription)(unsafe.Pointer(&((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first))[:]
						if noarch.NotInt((0)) != 0 {
							break
						}
					}
				}
				continue
			}
			if subs[i] == nil {
				UA_LOG_INFO(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("No internal representation of subscription %d\x00"), UA_UInt32(request.subscriptionIds[i]))
				continue
			} else {
				for {
					if ((subs[i])[0].listEntry.le_next = ((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first) != nil {
						((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first[0].listEntry.le_prev = (*[100000000][]UA_Client_Subscription)(unsafe.Pointer(&(subs[i])[0].listEntry.le_next))[:]
					}
					((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first = subs[i]
					(subs[i])[0].listEntry.le_prev = (*[100000000][]UA_Client_Subscription)(unsafe.Pointer(&((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first))[:]
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
			}
			UA_Client_Subscription_deleteInternal(client, subs[i])
		}
	}
	return response
cleanup:
	;
	{
		var i uint
		for ; i < uint(request.subscriptionIdsSize); i++ {
			if subs[i] != nil {
				for {
					if ((subs[i])[0].listEntry.le_next = ((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first) != nil {
						((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first[0].listEntry.le_prev = (*[100000000][]UA_Client_Subscription)(unsafe.Pointer(&(subs[i])[0].listEntry.le_next))[:]
					}
					((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first = subs[i]
					(subs[i])[0].listEntry.le_prev = (*[100000000][]UA_Client_Subscription)(unsafe.Pointer(&((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first))[:]
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
			}
		}
	}
	return response
}
// UA_Client_Subscriptions_deleteSingle - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37358
func UA_Client_Subscriptions_deleteSingle(client []UA_Client, subscriptionId UA_UInt32) UA_StatusCode {
	var request UA_DeleteSubscriptionsRequest
	UA_DeleteSubscriptionsRequest_init((*[100000000]UA_DeleteSubscriptionsRequest)(unsafe.Pointer(&request))[:])
	request.subscriptionIds = (*[100000000]UA_UInt32)(unsafe.Pointer(&subscriptionId))[:]
	request.subscriptionIdsSize = 1
	var response UA_DeleteSubscriptionsResponse = UA_Client_Subscriptions_delete(client, request)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_DeleteSubscriptionsResponse_deleteMembers((*[100000000]UA_DeleteSubscriptionsResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	if uint(response.resultsSize) != uint((1)) {
		UA_DeleteSubscriptionsResponse_deleteMembers((*[100000000]UA_DeleteSubscriptionsResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	retval = response.results[0]
	UA_DeleteSubscriptionsResponse_deleteMembers((*[100000000]UA_DeleteSubscriptionsResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_MonitoredItem_remove - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37388
//
// MonitoredItems
//
func UA_Client_MonitoredItem_remove(client []UA_Client, sub []UA_Client_Subscription, mon []UA_Client_MonitoredItem) {
	for {
		if (mon)[0].listEntry.le_next != nil {
			(mon)[0].listEntry.le_next[0].listEntry.le_prev = (mon)[0].listEntry.le_prev
		}
		(mon)[0].listEntry.le_prev[0] = (mon)[0].listEntry.le_next
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	if func([]UA_Client , UA_UInt32 , interface{} , UA_UInt32 , interface_{})()((UA_Client_DeleteMonitoredItemCallback(mon[0].deleteCallback))) != nil {
		mon.deleteCallback(client, UA_UInt32(sub[0].subscriptionId), sub[0].context, UA_UInt32(mon[0].monitoredItemId), mon[0].context)
	}
	_ = mon
}
// __UA_Client_MonitoredItems_create - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37398
func __UA_Client_MonitoredItems_create(client []UA_Client, request []UA_CreateMonitoredItemsRequest, contexts []interface{}, handlingCallbacks []interface{}, deleteCallbacks UA_Client_DeleteMonitoredItemCallback, response []UA_CreateMonitoredItemsResponse) {
	UA_CreateMonitoredItemsResponse_init(response)
	if uint32((noarch.NotUint(uint(request[0].itemsToCreateSize)))) != 0 {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		return
	}
	var itemsToCreateSize uint = uint(request[0].itemsToCreateSize)
	var sub []UA_Client_Subscription
	var mis [][]UA_Client_MonitoredItem
	// Fix clang warning
	// Allocate the memory for internal representations
	noarch.Memset(mis, byte(0), 8*uint32((itemsToCreateSize)))
	{
		var i uint
		for ; i < itemsToCreateSize; i++ {
			mis[i] = make([]UA_Client_MonitoredItem, 72*1/72)
			if mis[i] == nil {
				response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
				goto cleanup
			}
		}
	}
	// Get the subscription
	sub = findSubscription(client, UA_UInt32(request[0].subscriptionId))
	if sub == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2150105088)))))))
		goto cleanup
	}
	{
		var i uint
		for ; i < itemsToCreateSize; i++ {
			// Set the clientHandle
			request[0].itemsToCreate[i].requestedParameters.clientHandle = func() UA_UInt32 {
				tempVar := &(client[0].monitoredItemHandles)
				*tempVar ++
				return *tempVar
			}()
		}
	}
	// Call the service
	__UA_Client_Service(client, request, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[184]))[:], response, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[155]))[:])
	if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		goto cleanup
	}
	if uint(response[0].resultsSize) != itemsToCreateSize {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		goto cleanup
	}
	{
		var i uint
		for ; i < itemsToCreateSize; i++ {
			if UA_StatusCode(response[0].results[i].statusCode) != UA_StatusCode((uint32_t((uint32((0)))))) {
				if func([]UA_Client , UA_UInt32 , interface{} , UA_UInt32 , interface_{})()((UA_Client_DeleteMonitoredItemCallback(deleteCallbacks[i]))) != nil {
					// Add internally
					deleteCallbacks[i](client, UA_UInt32(sub[0].subscriptionId), sub[0].context, 0, contexts[i])
				}
				_ = mis[i]
				mis[i] = nil
				continue
			}
			var newMon []UA_Client_MonitoredItem = mis[i]
			newMon[0].clientHandle = UA_UInt32(request[0].itemsToCreate[i].requestedParameters.clientHandle)
			newMon[0].monitoredItemId = UA_UInt32(response[0].results[i].monitoredItemId)
			newMon[0].context = contexts[i]
			newMon[0].deleteCallback = deleteCallbacks[i]
			(*newMon[0].handler.dataChangeCallback()) = UA_Client_DataChangeNotificationCallback(uintptr_t(handlingCallbacks[i]))
			newMon[0].isEventMonitoredItem = UA_Boolean((int((map[bool]int{false: 0, true: 1}[UA_UInt32(request[0].itemsToCreate[i].itemToMonitor.attributeId) == UA_UInt32((uint32_t((uint32((uint32(UA_ATTRIBUTEID_EVENTNOTIFIER)))))))]))))
			for {
				if ((newMon)[0].listEntry.le_next = ((*[100000000]UA_ListOfClientMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first) != nil {
					((*[100000000]UA_ListOfClientMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first[0].listEntry.le_prev = (*[100000000][]UA_Client_MonitoredItem)(unsafe.Pointer(&(newMon)[0].listEntry.le_next))[:]
				}
				((*[100000000]UA_ListOfClientMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first = newMon
				(newMon)[0].listEntry.le_prev = (*[100000000][]UA_Client_MonitoredItem)(unsafe.Pointer(&((*[100000000]UA_ListOfClientMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first))[:]
				if noarch.NotInt((0)) != 0 {
					break
				}
			}
		}
	}
	return
cleanup:
	;
	{
		var i uint
		for ; i < itemsToCreateSize; i++ {
			if func([]UA_Client , UA_UInt32 , interface{} , UA_UInt32 , interface_{})()((UA_Client_DeleteMonitoredItemCallback(deleteCallbacks[i]))) != nil {
				if sub != nil {
					deleteCallbacks[i](client, UA_UInt32(sub[0].subscriptionId), sub[0].context, 0, contexts[i])
				} else {
					deleteCallbacks[i](client, 0, nil, 0, contexts[i])
				}
			}
			if mis[i] != nil {
				_ = mis[i]
			}
		}
	}
}
// UA_Client_MonitoredItems_createDataChanges - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37485
func UA_Client_MonitoredItems_createDataChanges(client []UA_Client, request UA_CreateMonitoredItemsRequest, contexts []interface{}, callbacks UA_Client_DataChangeNotificationCallback, deleteCallbacks UA_Client_DeleteMonitoredItemCallback) UA_CreateMonitoredItemsResponse {
	var response UA_CreateMonitoredItemsResponse
	__UA_Client_MonitoredItems_create(client, (*[100000000]UA_CreateMonitoredItemsRequest)(unsafe.Pointer(&request))[:], contexts, nil, deleteCallbacks, (*[100000000]UA_CreateMonitoredItemsResponse)(unsafe.Pointer(&response))[:])
	return response
}
// UA_Client_MonitoredItems_createDataChange - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37496
func UA_Client_MonitoredItems_createDataChange(client []UA_Client, subscriptionId UA_UInt32, timestampsToReturn int, item UA_MonitoredItemCreateRequest, context interface{}, callback UA_Client_DataChangeNotificationCallback, deleteCallback UA_Client_DeleteMonitoredItemCallback) UA_MonitoredItemCreateResult {
	var request UA_CreateMonitoredItemsRequest
	UA_CreateMonitoredItemsRequest_init((*[100000000]UA_CreateMonitoredItemsRequest)(unsafe.Pointer(&request))[:])
	request.subscriptionId = subscriptionId
	request.timestampsToReturn = timestampsToReturn
	request.itemsToCreate = nil
	request.itemsToCreateSize = 1
	var response UA_CreateMonitoredItemsResponse = UA_Client_MonitoredItems_createDataChanges(client, request, (*[100000000]interface{})(unsafe.Pointer(&context))[:], (*[100000000]UA_Client_DataChangeNotificationCallback)(unsafe.Pointer(&callback))[:], (*[100000000]UA_Client_DeleteMonitoredItemCallback)(unsafe.Pointer(&deleteCallback))[:])
	var result UA_MonitoredItemCreateResult
	UA_MonitoredItemCreateResult_init((*[100000000]UA_MonitoredItemCreateResult)(unsafe.Pointer(&result))[:])
	if UA_StatusCode(response.responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		result.statusCode = UA_StatusCode(response.responseHeader.serviceResult)
	}
	if UA_StatusCode(result.statusCode) == UA_StatusCode((uint32_t((uint32((0)))))) && uint(response.resultsSize) != uint((1)) {
		result.statusCode = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if UA_StatusCode(result.statusCode) == UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_MonitoredItemCreateResult_copy((*[100000000]UA_MonitoredItemCreateResult)(unsafe.Pointer(&response.results[0]))[:], (*[100000000]UA_MonitoredItemCreateResult)(unsafe.Pointer(&result))[:])
	}
	UA_CreateMonitoredItemsResponse_deleteMembers((*[100000000]UA_CreateMonitoredItemsResponse)(unsafe.Pointer(&response))[:])
	return result
}
// UA_Client_MonitoredItems_createEvents - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37525
func UA_Client_MonitoredItems_createEvents(client []UA_Client, request UA_CreateMonitoredItemsRequest, contexts []interface{}, callbacks UA_Client_EventNotificationCallback, deleteCallbacks UA_Client_DeleteMonitoredItemCallback) UA_CreateMonitoredItemsResponse {
	var response UA_CreateMonitoredItemsResponse
	__UA_Client_MonitoredItems_create(client, (*[100000000]UA_CreateMonitoredItemsRequest)(unsafe.Pointer(&request))[:], contexts, nil, deleteCallbacks, (*[100000000]UA_CreateMonitoredItemsResponse)(unsafe.Pointer(&response))[:])
	return response
}
// UA_Client_MonitoredItems_createEvent - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37536
func UA_Client_MonitoredItems_createEvent(client []UA_Client, subscriptionId UA_UInt32, timestampsToReturn int, item UA_MonitoredItemCreateRequest, context interface{}, callback UA_Client_EventNotificationCallback, deleteCallback UA_Client_DeleteMonitoredItemCallback) UA_MonitoredItemCreateResult {
	var request UA_CreateMonitoredItemsRequest
	UA_CreateMonitoredItemsRequest_init((*[100000000]UA_CreateMonitoredItemsRequest)(unsafe.Pointer(&request))[:])
	request.subscriptionId = subscriptionId
	request.timestampsToReturn = timestampsToReturn
	request.itemsToCreate = nil
	request.itemsToCreateSize = 1
	var response UA_CreateMonitoredItemsResponse = UA_Client_MonitoredItems_createEvents(client, request, (*[100000000]interface{})(unsafe.Pointer(&context))[:], (*[100000000]UA_Client_EventNotificationCallback)(unsafe.Pointer(&callback))[:], (*[100000000]UA_Client_DeleteMonitoredItemCallback)(unsafe.Pointer(&deleteCallback))[:])
	var result UA_MonitoredItemCreateResult
	UA_MonitoredItemCreateResult_copy(response.results, (*[100000000]UA_MonitoredItemCreateResult)(unsafe.Pointer(&result))[:])
	UA_CreateMonitoredItemsResponse_deleteMembers((*[100000000]UA_CreateMonitoredItemsResponse)(unsafe.Pointer(&response))[:])
	return result
}
// UA_Client_MonitoredItems_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37556
func UA_Client_MonitoredItems_delete(client []UA_Client, request UA_DeleteMonitoredItemsRequest) UA_DeleteMonitoredItemsResponse {
	var response UA_DeleteMonitoredItemsResponse
	// Send the request
	__UA_Client_Service(client, (*[100000000]UA_DeleteMonitoredItemsRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[85]))[:], (*[100000000]UA_DeleteMonitoredItemsResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[88]))[:])
	if UA_StatusCode(response.responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		return response
	}
	var sub []UA_Client_Subscription = findSubscription(client, UA_UInt32(request.subscriptionId))
	if sub == nil {
		UA_LOG_INFO(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("No internal representation of subscription %d\x00"), UA_UInt32(request.subscriptionId))
		return response
	}
	{
		var i uint
		for ; i < uint(response.resultsSize); i++ {
			if response.results[i] != UA_StatusCode((uint32_t((uint32((0)))))) && response.results[i] != UA_StatusCode((uint32_t((uint32((uint32(2151809024))))))) {
				// Loop over deleted MonitoredItems
				continue
			}
			var mon []UA_Client_MonitoredItem
			{
				// Delete the internal representation
				for mon = ((*[100000000]UA_ListOfClientMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first; mon != nil; mon = (mon)[0].listEntry.le_next {
					if UA_UInt32(mon[0].monitoredItemId) == request.monitoredItemIds[i] {
						UA_Client_MonitoredItem_remove(client, sub, mon)
						break
					}
				}
			}
		}
	}
	return response
}
// UA_Client_MonitoredItems_deleteSingle - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37595
func UA_Client_MonitoredItems_deleteSingle(client []UA_Client, subscriptionId UA_UInt32, monitoredItemId UA_UInt32) UA_StatusCode {
	var request UA_DeleteMonitoredItemsRequest
	UA_DeleteMonitoredItemsRequest_init((*[100000000]UA_DeleteMonitoredItemsRequest)(unsafe.Pointer(&request))[:])
	request.subscriptionId = subscriptionId
	request.monitoredItemIds = (*[100000000]UA_UInt32)(unsafe.Pointer(&monitoredItemId))[:]
	request.monitoredItemIdsSize = 1
	var response UA_DeleteMonitoredItemsResponse = UA_Client_MonitoredItems_delete(client, request)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_DeleteMonitoredItemsResponse_deleteMembers((*[100000000]UA_DeleteMonitoredItemsResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode(retval)
	}
	if uint(response.resultsSize) != uint((1)) {
		UA_DeleteMonitoredItemsResponse_deleteMembers((*[100000000]UA_DeleteMonitoredItemsResponse)(unsafe.Pointer(&response))[:])
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	retval = response.results[0]
	UA_DeleteMonitoredItemsResponse_deleteMembers((*[100000000]UA_DeleteMonitoredItemsResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_preparePublishRequest - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37627
//
// Async Processing of Notifications
//
// Assume the request is already initialized
func UA_Client_preparePublishRequest(client []UA_Client, request []UA_PublishRequest) UA_StatusCode {
	var ack []UA_Client_NotificationsAckNumber
	{
		// Count acks
		for ack = ((*[100000000]ListOfUnacknowledgedNotifications)(unsafe.Pointer(&client[0].pendingNotificationsAcks))[:])[0].lh_first; ack != nil; ack = (ack)[0].listEntry.le_next {
			request[0].subscriptionAcknowledgementsSize ++
		}
	}
	// Create the array. Returns a sentinel pointer if the length is zero.
	request[0].subscriptionAcknowledgements = UA_Array_new(uint(request[0].subscriptionAcknowledgementsSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[81]))[:]).([]UA_SubscriptionAcknowledgement)
	if request[0].subscriptionAcknowledgements == nil {
		request[0].subscriptionAcknowledgementsSize = 0
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var i uint
	var ack_tmp []UA_Client_NotificationsAckNumber
	for ack = ((*[100000000]ListOfUnacknowledgedNotifications)(unsafe.Pointer(&client[0].pendingNotificationsAcks))[:])[0].lh_first; ack != nil && func() int {
		ack_tmp = (ack)[0].listEntry.le_next
		tempVar := &1
		return *tempVar
	}() != 0; ack = ack_tmp {
		request[0].subscriptionAcknowledgements[i].sequenceNumber = UA_UInt32(ack[0].subAck.sequenceNumber)
		request[0].subscriptionAcknowledgements[i].subscriptionId = UA_UInt32(ack[0].subAck.subscriptionId)
		i ++
		for {
			if (ack)[0].listEntry.le_next != nil {
				(ack)[0].listEntry.le_next[0].listEntry.le_prev = (ack)[0].listEntry.le_prev
			}
			(ack)[0].listEntry.le_prev[0] = (ack)[0].listEntry.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		_ = ack
	}
	return 0
}
// UA_Client_Subscriptions_nextSequenceNumber - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37657
// According to OPC Unified Architecture, Part 4 5.13.1.1 i)
// The value 0 is never used for the sequence number
func UA_Client_Subscriptions_nextSequenceNumber(sequenceNumber UA_UInt32) UA_UInt32 {
	var nextSequenceNumber UA_UInt32 = sequenceNumber + UA_UInt32((uint32_t((uint32((1))))))
	if nextSequenceNumber == UA_UInt32((uint32_t((uint32((0)))))) {
		nextSequenceNumber = 1
	}
	return UA_UInt32(nextSequenceNumber)
}
// processDataChangeNotification - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37665
func processDataChangeNotification(client []UA_Client, sub []UA_Client_Subscription, dataChangeNotification []UA_DataChangeNotification) {
	{
		var j uint
		for ; j < uint(dataChangeNotification[0].monitoredItemsSize); j++ {
			var min []UA_MonitoredItemNotification = (*[100000000]UA_MonitoredItemNotification)(unsafe.Pointer(&dataChangeNotification[0].monitoredItems[j]))[:]
			var mon []UA_Client_MonitoredItem
			{
				// Find the MonitoredItem
				for mon = ((*[100000000]UA_ListOfClientMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first; mon != nil; mon = (mon)[0].listEntry.le_next {
					if UA_UInt32(mon[0].clientHandle) == UA_UInt32(min[0].clientHandle) {
						break
					}
				}
			}
			if mon == nil {
				UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Could not process a notification with clienthandle %d on subscription %d\x00"), UA_UInt32(min[0].clientHandle), UA_UInt32(sub[0].subscriptionId))
				continue
			}
			if int((int((UA_Boolean(mon[0].isEventMonitoredItem))))) != 0 {
				UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("MonitoredItem is configured for Events. But received a DataChangeNotification.\x00"))
				continue
			}
			(*mon[0].handler.dataChangeCallback())(client, UA_UInt32(sub[0].subscriptionId), sub[0].context, UA_UInt32(mon[0].monitoredItemId), mon[0].context, (*[100000000]UA_DataValue)(unsafe.Pointer(&min[0].value))[:])
		}
	}
}
// processEventNotification - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37698
func processEventNotification(client []UA_Client, sub []UA_Client_Subscription, eventNotificationList []UA_EventNotificationList) {
	{
		var j uint
		for ; j < uint(eventNotificationList[0].eventsSize); j++ {
			var eventFieldList []UA_EventFieldList = (*[100000000]UA_EventFieldList)(unsafe.Pointer(&eventNotificationList[0].events[j]))[:]
			var mon []UA_Client_MonitoredItem
			{
				// Find the MonitoredItem
				for mon = ((*[100000000]UA_ListOfClientMonitoredItems)(unsafe.Pointer(&sub[0].monitoredItems))[:])[0].lh_first; mon != nil; mon = (mon)[0].listEntry.le_next {
					if UA_UInt32(mon[0].monitoredItemId) == UA_UInt32(eventFieldList[0].clientHandle) {
						break
					}
				}
			}
			if mon == nil {
				UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Could not process a notification with clienthandle %d on subscription %d\x00"), UA_UInt32(eventFieldList[0].clientHandle), UA_UInt32(sub[0].subscriptionId))
				continue
			}
			if int((int((noarch.NotUA_Boolean(UA_Boolean(mon[0].isEventMonitoredItem)))))) != 0 {
				UA_LOG_DEBUG(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("MonitoredItem is configured for DataChanges. But received a EventNotification.\x00"))
				continue
			}
			(*mon[0].handler.eventCallback())(client, UA_UInt32(sub[0].subscriptionId), sub[0].context, UA_UInt32(mon[0].monitoredItemId), mon[0].context, uint(eventFieldList[0].eventFieldsSize), eventFieldList[0].eventFields)
		}
	}
}
// processNotificationMessage - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37732
func processNotificationMessage(client []UA_Client, sub []UA_Client_Subscription, msg []UA_ExtensionObject) {
	if uint32(msg[0].encoding) != uint32(UA_EXTENSIONOBJECT_DECODED) {
		return
	}
	if (*msg[0].content.decoded()).type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[141]))[:] {
		var dataChangeNotification []UA_DataChangeNotification = (*msg[0].content.decoded()).data.([]UA_DataChangeNotification)
		// Handle DataChangeNotification
		processDataChangeNotification(client, sub, dataChangeNotification)
		return
	}
	if (*msg[0].content.decoded()).type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[47]))[:] {
		var eventNotificationList []UA_EventNotificationList = (*msg[0].content.decoded()).data.([]UA_EventNotificationList)
		// Handle EventNotification
		processEventNotification(client, sub, eventNotificationList)
		return
	}
	if (*msg[0].content.decoded()).type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[27]))[:] {
		if func([]UA_Client , UA_UInt32 , interface{} , []UA_StatusChangeNotification)()((UA_Client_StatusChangeNotificationCallback(sub[0].statusChangeCallback))) != nil {
			// Handle StatusChangeNotification
			sub.statusChangeCallback(client, UA_UInt32(sub[0].subscriptionId), sub[0].context, (*msg[0].content.decoded()).data.([]UA_StatusChangeNotification))
		} else {
			UA_LOG_WARNING(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Dropped a StatusChangeNotification since no callback is registered\x00"))
		}
		return
	}
	UA_LOG_WARNING(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Unknown notification message type\x00"))
}
// UA_Client_Subscriptions_processPublishResponse - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37770
func UA_Client_Subscriptions_processPublishResponse(client []UA_Client, request []UA_PublishRequest, response []UA_PublishResponse) {
	var msg []UA_NotificationMessage = (*[100000000]UA_NotificationMessage)(unsafe.Pointer(&response[0].notificationMessage))[:]
	client[0].currentlyOutStandingPublishRequests --
	if UA_StatusCode(response[0].responseHeader.serviceResult) == UA_StatusCode((uint32_t((uint32((uint32(2155347968))))))) {
		if int(uint16((uint16((uint16_t((UA_UInt16(client[0].config.outStandingPublishRequests)))))))) > 1 {
			client[0].config.outStandingPublishRequests --
			UA_LOG_WARNING(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Too many publishrequest, reduce outStandingPublishRequests to %d\x00"), int(uint16((uint16((uint16_t((UA_UInt16(client[0].config.outStandingPublishRequests)))))))))
		} else {
			UA_LOG_ERROR(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Too many publishrequest when outStandingPublishRequests = 1\x00"))
			UA_Client_Subscriptions_deleteSingle(client, UA_UInt32(response[0].subscriptionId))
		}
		return
	}
	if UA_StatusCode(response[0].responseHeader.serviceResult) == UA_StatusCode((uint32_t((uint32((uint32(2148270080))))))) {
		return
	}
	if (((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first) == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2155413504)))))))
		return
	}
	if UA_StatusCode(response[0].responseHeader.serviceResult) == UA_StatusCode((uint32_t((uint32((uint32(2149974016))))))) {
		if uint32(client[0].state) >= uint32(UA_CLIENTSTATE_SESSION) {
			UA_LOG_WARNING(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Received Publish Response with code %s\x00"), UA_StatusCode_name(UA_StatusCode(response[0].responseHeader.serviceResult)))
		}
		return
	}
	if UA_StatusCode(response[0].responseHeader.serviceResult) == UA_StatusCode((uint32_t((uint32((uint32(2149908480))))))) {
		// TODO: This should be handled before the process callback
		UA_Client_close(client)
		UA_LOG_WARNING(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Received BadSessionIdInvalid\x00"))
		return
	}
	if UA_StatusCode(response[0].responseHeader.serviceResult) != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_WARNING(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Received Publish Response with code %s\x00"), UA_StatusCode_name(UA_StatusCode(response[0].responseHeader.serviceResult)))
		return
	}
	var sub []UA_Client_Subscription = findSubscription(client, UA_UInt32(response[0].subscriptionId))
	if sub == nil {
		response[0].responseHeader.serviceResult = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		UA_LOG_WARNING(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Received Publish Response for a non-existant subscription\x00"))
		return
	}
	sub[0].lastActivity = UA_DateTime_nowMonotonic()
	if UA_Client_Subscriptions_nextSequenceNumber(UA_UInt32(sub[0].sequenceNumber)) != UA_UInt32(msg[0].sequenceNumber) {
		// Detect missing message - OPC Unified Architecture, Part 4 5.13.1.1 e)
		UA_LOG_WARNING(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Invalid subscription sequence number: expected %d but got %d\x00"), UA_Client_Subscriptions_nextSequenceNumber(UA_UInt32(sub[0].sequenceNumber)), UA_UInt32(msg[0].sequenceNumber))
	}
	if uint32((uint(msg[0].notificationDataSize))) != 0 {
		// This is an error. But we do not abort the connection. Some server
		//         * SDKs misbehave from time to time and send out-of-order sequence
		//         * numbers. (Probably some multi-threading synchronization issue.)
		// UA_Client_close(client);
		//           return;
		// According to f), a keep-alive message contains no notifications and has the sequence number
		//     * of the next NotificationMessage that is to be sent => More than one consecutive keep-alive
		//     * message or a NotificationMessage following a keep-alive message will share the same sequence
		//     * number.
		sub[0].sequenceNumber = UA_UInt32(msg[0].sequenceNumber)
	}
	{
		var k uint
		for ; k < uint(msg[0].notificationDataSize); k++ {
			// Process the notification messages
			processNotificationMessage(client, sub, (*[100000000]UA_ExtensionObject)(unsafe.Pointer(&msg[0].notificationData[k]))[:])
		}
	}
	{
		var i uint
		for ; i < uint(response[0].availableSequenceNumbersSize); i++ {
			if response[0].availableSequenceNumbers[i] != UA_UInt32(msg[0].sequenceNumber) {
				// Add to the list of pending acks
				continue
			}
			var tmpAck []UA_Client_NotificationsAckNumber = make([]UA_Client_NotificationsAckNumber, 40/40)
			if tmpAck == nil {
				UA_LOG_WARNING(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Not enough memory to store the acknowledgement for a publish message on subscription %d\x00"), UA_UInt32(sub[0].subscriptionId))
				break
			}
			tmpAck[0].subAck.sequenceNumber = UA_UInt32(msg[0].sequenceNumber)
			tmpAck[0].subAck.subscriptionId = UA_UInt32(sub[0].subscriptionId)
			for {
				if ((tmpAck)[0].listEntry.le_next = ((*[100000000]ListOfUnacknowledgedNotifications)(unsafe.Pointer(&client[0].pendingNotificationsAcks))[:])[0].lh_first) != nil {
					((*[100000000]ListOfUnacknowledgedNotifications)(unsafe.Pointer(&client[0].pendingNotificationsAcks))[:])[0].lh_first[0].listEntry.le_prev = (*[100000000][]UA_Client_NotificationsAckNumber)(unsafe.Pointer(&(tmpAck)[0].listEntry.le_next))[:]
				}
				((*[100000000]ListOfUnacknowledgedNotifications)(unsafe.Pointer(&client[0].pendingNotificationsAcks))[:])[0].lh_first = tmpAck
				(tmpAck)[0].listEntry.le_prev = (*[100000000][]UA_Client_NotificationsAckNumber)(unsafe.Pointer(&((*[100000000]ListOfUnacknowledgedNotifications)(unsafe.Pointer(&client[0].pendingNotificationsAcks))[:])[0].lh_first))[:]
				if noarch.NotInt((0)) != 0 {
					break
				}
			}
			break
		}
	}
}
// processPublishResponseAsync - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37874
func processPublishResponseAsync(client []UA_Client, userdata interface{}, requestId UA_UInt32, response interface{}, responseType []UA_DataType) {
	var req []UA_PublishRequest = userdata.([]UA_PublishRequest)
	var res []UA_PublishResponse = response.([]UA_PublishResponse)
	// Process the response
	UA_Client_Subscriptions_processPublishResponse(client, req, res)
	// Delete the cached request
	UA_PublishRequest_delete(req)
	// Fill up the outstanding publish requests
	UA_Client_Subscriptions_backgroundPublish(client)
}
// UA_Client_Subscriptions_clean - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37890
func UA_Client_Subscriptions_clean(client []UA_Client) {
	var n []UA_Client_NotificationsAckNumber
	var tmp []UA_Client_NotificationsAckNumber
	for n = ((*[100000000]ListOfUnacknowledgedNotifications)(unsafe.Pointer(&client[0].pendingNotificationsAcks))[:])[0].lh_first; n != nil && func() int {
		tmp = (n)[0].listEntry.le_next
		tempVar := &1
		return *tempVar
	}() != 0; n = tmp {
		for {
			if (n)[0].listEntry.le_next != nil {
				(n)[0].listEntry.le_next[0].listEntry.le_prev = (n)[0].listEntry.le_prev
			}
			(n)[0].listEntry.le_prev[0] = (n)[0].listEntry.le_next
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		_ = n
	}
	var sub []UA_Client_Subscription
	var tmps []UA_Client_Subscription
	for sub = ((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first; sub != nil && func() int {
		tmps = (sub)[0].listEntry.le_next
		tempVar := &1
		return *tempVar
	}() != 0; sub = tmps {
		// force local removal
		UA_Client_Subscription_deleteInternal(client, sub)
	}
	client[0].monitoredItemHandles = 0
}
// UA_Client_Subscriptions_backgroundPublishInactivityCheck - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37905
func UA_Client_Subscriptions_backgroundPublishInactivityCheck(client []UA_Client) {
	if uint32(client[0].state) < uint32(UA_CLIENTSTATE_SESSION) {
		return
	}
	if int(uint16((uint16((uint16_t((UA_UInt16(client[0].currentlyOutStandingPublishRequests)))))))) == 0 {
		// Is the lack of responses the client's fault?
		return
	}
	var sub []UA_Client_Subscription
	for sub = ((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first; sub != nil; sub = (sub)[0].listEntry.le_next {
		var maxSilence UA_DateTime = UA_DateTime((int64_t((__int64_t((int32(int64(int32((__int64_t((int64_t((UA_DateTime((float64((UA_Double(sub[0].publishingInterval)*UA_Double((float64(uint32((uint32((uint32_t((UA_UInt32(sub[0].maxKeepAliveCount)))))))))) + UA_Double((float64(uint32((uint32((uint32_t((UA_UInt32(client[0].config.timeout))))))))))))))))))))) * int64(10*1000))))))))
		if maxSilence+UA_DateTime(sub[0].lastActivity) < UA_DateTime_nowMonotonic() {
			// Reset activity
			sub[0].lastActivity = UA_DateTime_nowMonotonic()
			if func([]UA_Client , UA_UInt32 , interface{})()((UA_SubscriptionInactivityCallback(client[0].config.subscriptionInactivityCallback))) != nil {
				client.config.subscriptionInactivityCallback(client, UA_UInt32(sub[0].subscriptionId), sub[0].context)
			}
			UA_LOG_ERROR(UA_Logger(client[0].config.logger), UA_LOGCATEGORY_CLIENT, []byte("Inactivity for Subscription %d.\x00"), UA_UInt32(sub[0].subscriptionId))
		}
	}
}
// UA_Client_Subscriptions_backgroundPublish - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37931
func UA_Client_Subscriptions_backgroundPublish(client []UA_Client) UA_StatusCode {
	if uint32(client[0].state) < uint32(UA_CLIENTSTATE_SESSION) {
		return UA_StatusCode((uint32_t((uint32((uint32(2148335616)))))))
	}
	if (((*[100000000]ListOfClientSubscriptionItems)(unsafe.Pointer(&client[0].subscriptions))[:])[0].lh_first) == nil {
		// The session must have at least one subscription
		return 0
	}
	for int(uint16((uint16((uint16_t((UA_UInt16(client[0].currentlyOutStandingPublishRequests)))))))) < int(uint16((uint16((uint16_t((UA_UInt16(client[0].config.outStandingPublishRequests)))))))) {
		var request []UA_PublishRequest = UA_PublishRequest_new()
		if request == nil {
			return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		}
		var retval UA_StatusCode = UA_Client_preparePublishRequest(client, request)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			UA_PublishRequest_delete(request)
			return UA_StatusCode(retval)
		}
		var requestId UA_UInt32
		client[0].currentlyOutStandingPublishRequests ++
		retval = __UA_Client_AsyncService(client, request, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[138]))[:], processPublishResponseAsync, (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:], request, (*[100000000]UA_UInt32)(unsafe.Pointer(&requestId))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			UA_PublishRequest_delete(request)
			return UA_StatusCode(retval)
		}
	}
	return 0
}

var UA_SubscriptionSettings_default UA_SubscriptionSettings = UA_SubscriptionSettings{500, 10000, 1, 0, 1, UA_Byte(0)}
// UA_Client_Subscriptions_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:37995
// amalgamated original file "/home/travis/build/open62541/open62541/src/client/ua_client_subscriptions_deprecated.c"
// This Source Code Form is subject to the terms of the Mozilla Public
// * License, v. 2.0. If a copy of the MPL was not distributed with this
// * file, You can obtain one at http://mozilla.org/MPL/2.0/.
// *
// *    Copyright 2015-2018 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2015 (c) Oleksiy Vasylyev
// *    Copyright 2016 (c) Sten Grüner
// *    Copyright 2017-2018 (c) Thomas Stalder, Blue Time Concept SA
// *    Copyright 2016-2017 (c) Florian Palm
// *    Copyright 2017 (c) Frank Meerkötter
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
// .requestedPublishingInterval
// .requestedLifetimeCount
// .requestedMaxKeepAliveCount
// .maxNotificationsPerPublish
// .publishingEnabled
// .priority
func UA_Client_Subscriptions_new(client []UA_Client, settings UA_SubscriptionSettings, newSubscriptionId []UA_UInt32) UA_StatusCode {
	var request UA_CreateSubscriptionRequest
	UA_CreateSubscriptionRequest_init((*[100000000]UA_CreateSubscriptionRequest)(unsafe.Pointer(&request))[:])
	request.requestedPublishingInterval = UA_Double(settings.requestedPublishingInterval)
	request.requestedLifetimeCount = UA_UInt32(settings.requestedLifetimeCount)
	request.requestedMaxKeepAliveCount = UA_UInt32(settings.requestedMaxKeepAliveCount)
	request.maxNotificationsPerPublish = UA_UInt32(settings.maxNotificationsPerPublish)
	request.publishingEnabled = UA_Boolean(settings.publishingEnabled)
	request.priority = UA_Byte(settings.priority)
	var response UA_CreateSubscriptionResponse = UA_Client_Subscriptions_create(client, request, nil, nil, nil)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) && newSubscriptionId != nil {
		newSubscriptionId[0] = UA_UInt32(response.subscriptionId)
	}
	UA_CreateSubscriptionResponse_deleteMembers((*[100000000]UA_CreateSubscriptionResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_Subscriptions_remove - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38018
func UA_Client_Subscriptions_remove(client []UA_Client, subscriptionId UA_UInt32) UA_StatusCode {
	var request UA_DeleteSubscriptionsRequest
	UA_DeleteSubscriptionsRequest_init((*[100000000]UA_DeleteSubscriptionsRequest)(unsafe.Pointer(&request))[:])
	request.subscriptionIdsSize = 1
	request.subscriptionIds = (*[100000000]UA_UInt32)(unsafe.Pointer(&subscriptionId))[:]
	var response UA_DeleteSubscriptionsResponse = UA_Client_Subscriptions_delete(client, request)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		if uint(response.resultsSize) != uint((1)) {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		}
	}
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		retval = response.results[0]
	}
	UA_DeleteSubscriptionsResponse_deleteMembers((*[100000000]UA_DeleteSubscriptionsResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_Subscriptions_manuallySendPublishRequest - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38041
func UA_Client_Subscriptions_manuallySendPublishRequest(client []UA_Client) UA_StatusCode {
	if uint32(client[0].state) < uint32(UA_CLIENTSTATE_SESSION) {
		return UA_StatusCode((uint32_t((uint32((uint32(2148335616)))))))
	}
	var retval UA_StatusCode
	var now UA_DateTime = UA_DateTime_nowMonotonic()
	var maxDate UA_DateTime = now + UA_DateTime((int64(uint32((uint32((uint32_t((UA_UInt32(client[0].config.timeout)))))))) * int64(10*1000)))
	var moreNotifications UA_Boolean = 1
	for int((int((moreNotifications)))) != 0 {
		var request UA_PublishRequest
		UA_PublishRequest_init((*[100000000]UA_PublishRequest)(unsafe.Pointer(&request))[:])
		retval = UA_Client_preparePublishRequest(client, (*[100000000]UA_PublishRequest)(unsafe.Pointer(&request))[:])
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode(retval)
		}
		// Manually increase the number of sent publish requests. Otherwise we
		//         * send out one too many when we process async responses when we wait
		//         * for the correct publish response. The
		//         * currentlyOutStandingPublishRequests will be reduced during processing
		//         * of the response.
		client[0].currentlyOutStandingPublishRequests ++
		var response UA_PublishResponse
		__UA_Client_Service(client, (*[100000000]UA_PublishRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[138]))[:], (*[100000000]UA_PublishResponse)(unsafe.Pointer(&response))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[94]))[:])
		UA_Client_Subscriptions_processPublishResponse(client, (*[100000000]UA_PublishRequest)(unsafe.Pointer(&request))[:], (*[100000000]UA_PublishResponse)(unsafe.Pointer(&response))[:])
		UA_PublishRequest_deleteMembers((*[100000000]UA_PublishRequest)(unsafe.Pointer(&request))[:])
		now = UA_DateTime_nowMonotonic()
		if now > maxDate {
			moreNotifications = 0
			retval = 11141120
		} else {
			moreNotifications = UA_Boolean(response.moreNotifications)
		}
		UA_PublishResponse_deleteMembers((*[100000000]UA_PublishResponse)(unsafe.Pointer(&response))[:])
		UA_PublishRequest_deleteMembers((*[100000000]UA_PublishRequest)(unsafe.Pointer(&request))[:])
	}
	if uint32(client[0].state) < uint32(UA_CLIENTSTATE_SESSION) {
		return UA_StatusCode((uint32_t((uint32((uint32(2148335616)))))))
	}
	return UA_StatusCode(retval)
}

type dataChangeCallbackWrapper struct {
	origCallback UA_MonitoredItemHandlingFunction
	context      interface{}
}
// dataChangeCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38099
// Callbacks for the MonitoredItems. The callbacks for the deprecated API are
// * wrapped. The wrapper is cleaned up upon destruction.
func dataChangeCallback(client []UA_Client, subId UA_UInt32, subContext interface{}, monId UA_UInt32, monContext interface{}, value []UA_DataValue) {
	var wrapper []dataChangeCallbackWrapper = monContext.([]dataChangeCallbackWrapper)
	wrapper.origCallback(client, UA_UInt32(monId), value, wrapper[0].context)
}

type eventCallbackWrapper struct {
	origCallback UA_MonitoredEventHandlingFunction
	context      interface{}
}
// eventCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38111
func eventCallback(client []UA_Client, subId UA_UInt32, subContext interface{}, monId UA_UInt32, monContext interface{}, nEventFields uint, eventFields []UA_Variant) {
	var wrapper []eventCallbackWrapper = monContext.([]eventCallbackWrapper)
	wrapper.origCallback(client, UA_UInt32(monId), uint(nEventFields), eventFields, wrapper[0].context)
}
// deleteMonitoredItemCallback - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38119
func deleteMonitoredItemCallback(client []UA_Client, subId UA_UInt32, subContext interface{}, monId UA_UInt32, monContext interface{}) {
	_ = monContext
}
// addMonitoredItems - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38125
func addMonitoredItems(client []UA_Client, subscriptionId UA_UInt32, items []UA_MonitoredItemCreateRequest, itemsSize uint, hfs UA_MonitoredItemHandlingFunction, hfContexts []interface{}, itemResults []UA_StatusCode, newMonitoredItemIds []UA_UInt32) UA_StatusCode {
	var wrappers [][]dataChangeCallbackWrapper
	var deleteCbs []UA_Client_DeleteMonitoredItemCallback
	var wrapperCbs []UA_Client_DataChangeNotificationCallback
	{
		var i uint
		for ; i < itemsSize; i++ {
			// Create array of wrappers and callbacks
			wrappers[i] = make([]dataChangeCallbackWrapper, 16*1/16)
			if wrappers[i] == nil {
				{
					var j uint
					for ; j < i; j++ {
						_ = wrappers[j]
					}
				}
				return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
			}
			wrappers[i][0].origCallback = UA_MonitoredItemHandlingFunction(uintptr_t(UA_MonitoredItemHandlingFunction(hfs[i])))
			wrappers[i][0].context = hfContexts[i]
			deleteCbs[i] = deleteMonitoredItemCallback
			wrapperCbs[i] = dataChangeCallback
		}
	}
	var request UA_CreateMonitoredItemsRequest
	// Prepare the request
	UA_CreateMonitoredItemsRequest_init((*[100000000]UA_CreateMonitoredItemsRequest)(unsafe.Pointer(&request))[:])
	request.subscriptionId = subscriptionId
	request.itemsToCreateSize = itemsSize
	request.itemsToCreate = items
	var response UA_CreateMonitoredItemsResponse = UA_Client_MonitoredItems_createDataChanges(client, request, wrappers, wrapperCbs, deleteCbs)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) && uint(response.resultsSize) != itemsSize {
		// Process and return
		retval = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		{
			var i uint
			for ; i < itemsSize; i++ {
				itemResults[i] = UA_StatusCode(response.results[i].statusCode)
				newMonitoredItemIds[i] = UA_UInt32(response.results[i].monitoredItemId)
			}
		}
	}
	UA_CreateMonitoredItemsResponse_deleteMembers((*[100000000]UA_CreateMonitoredItemsResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_Subscriptions_addMonitoredItems - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38176
func UA_Client_Subscriptions_addMonitoredItems(client []UA_Client, subscriptionId UA_UInt32, items []UA_MonitoredItemCreateRequest, itemsSize uint, hfs UA_MonitoredItemHandlingFunction, hfContexts []interface{}, itemResults []UA_StatusCode, newMonitoredItemIds []UA_UInt32) UA_StatusCode {
	return addMonitoredItems(client, UA_UInt32(subscriptionId), items, uint(itemsSize), hfs, hfContexts, itemResults, newMonitoredItemIds)
}
// UA_Client_Subscriptions_addMonitoredItem - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38186
func UA_Client_Subscriptions_addMonitoredItem(client []UA_Client, subscriptionId UA_UInt32, nodeId UA_NodeId, attributeID UA_UInt32, hf UA_MonitoredItemHandlingFunction, hfContext interface{}, newMonitoredItemId []UA_UInt32, samplingInterval UA_Double) UA_StatusCode {
	var item UA_MonitoredItemCreateRequest
	UA_MonitoredItemCreateRequest_init((*[100000000]UA_MonitoredItemCreateRequest)(unsafe.Pointer(&item))[:])
	item.itemToMonitor.nodeId = nodeId
	item.itemToMonitor.attributeId = attributeID
	item.monitoringMode = UA_MONITORINGMODE_REPORTING
	item.requestedParameters.samplingInterval = samplingInterval
	item.requestedParameters.discardOldest = 1
	item.requestedParameters.queueSize = 1
	var retval_item UA_StatusCode
	var retval UA_StatusCode = addMonitoredItems(client, UA_UInt32(subscriptionId), (*[100000000]UA_MonitoredItemCreateRequest)(unsafe.Pointer(&item))[:], 1, nil, (*[100000000]interface{})(unsafe.Pointer(&hfContext))[:], (*[100000000]UA_StatusCode)(unsafe.Pointer(&retval_item))[:], newMonitoredItemId)
	return retval | retval_item
}
// addMonitoredEvents - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38208
func addMonitoredEvents(client []UA_Client, subscriptionId UA_UInt32, items []UA_MonitoredItemCreateRequest, itemsSize uint, hfs UA_MonitoredEventHandlingFunction, hfContexts []interface{}, itemResults []UA_StatusCode, newMonitoredItemIds []UA_UInt32) UA_StatusCode {
	var wrappers [][]eventCallbackWrapper
	var deleteCbs []UA_Client_DeleteMonitoredItemCallback
	var wrapperCbs []UA_Client_EventNotificationCallback
	{
		var i uint
		for ; i < itemsSize; i++ {
			// Create array of wrappers and callbacks
			wrappers[i] = make([]eventCallbackWrapper, 16*1/16)
			if wrappers[i] == nil {
				{
					var j uint
					for ; j < i; j++ {
						_ = wrappers[j]
					}
				}
				return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
			}
			wrappers[i][0].origCallback = UA_MonitoredEventHandlingFunction(uintptr_t(UA_MonitoredEventHandlingFunction(hfs[i])))
			wrappers[i][0].context = hfContexts[i]
			deleteCbs[i] = deleteMonitoredItemCallback
			wrapperCbs[i] = eventCallback
		}
	}
	var request UA_CreateMonitoredItemsRequest
	// Prepare the request
	UA_CreateMonitoredItemsRequest_init((*[100000000]UA_CreateMonitoredItemsRequest)(unsafe.Pointer(&request))[:])
	request.subscriptionId = subscriptionId
	request.itemsToCreateSize = itemsSize
	request.itemsToCreate = items
	var response UA_CreateMonitoredItemsResponse = UA_Client_MonitoredItems_createEvents(client, request, wrappers, wrapperCbs, deleteCbs)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) && uint(response.resultsSize) != itemsSize {
		// Process and return
		retval = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		{
			var i uint
			for ; i < itemsSize; i++ {
				itemResults[i] = UA_StatusCode(response.results[i].statusCode)
			}
		}
	}
	UA_CreateMonitoredItemsResponse_deleteMembers((*[100000000]UA_CreateMonitoredItemsResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_Subscriptions_addMonitoredEvents - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38258
func UA_Client_Subscriptions_addMonitoredEvents(client []UA_Client, subscriptionId UA_UInt32, items []UA_MonitoredItemCreateRequest, itemsSize uint, hfs UA_MonitoredEventHandlingFunction, hfContexts []interface{}, itemResults []UA_StatusCode, newMonitoredItemIds []UA_UInt32) UA_StatusCode {
	return addMonitoredEvents(client, UA_UInt32(subscriptionId), items, uint(itemsSize), hfs, hfContexts, itemResults, newMonitoredItemIds)
}
// UA_Client_Subscriptions_addMonitoredEvent - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38268
func UA_Client_Subscriptions_addMonitoredEvent(client []UA_Client, subscriptionId UA_UInt32, nodeId UA_NodeId, attributeID UA_UInt32, selectClauses []UA_SimpleAttributeOperand, selectClausesSize uint, whereClauses []UA_ContentFilterElement, whereClausesSize uint, hf UA_MonitoredEventHandlingFunction, hfContext interface{}, newMonitoredItemId []UA_UInt32) UA_StatusCode {
	var item UA_MonitoredItemCreateRequest
	UA_MonitoredItemCreateRequest_init((*[100000000]UA_MonitoredItemCreateRequest)(unsafe.Pointer(&item))[:])
	item.itemToMonitor.nodeId = nodeId
	item.itemToMonitor.attributeId = attributeID
	item.monitoringMode = UA_MONITORINGMODE_REPORTING
	item.requestedParameters.samplingInterval = 0
	item.requestedParameters.discardOldest = 0
	var evFilter []UA_EventFilter = UA_EventFilter_new()
	if evFilter == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	UA_EventFilter_init(evFilter)
	evFilter[0].selectClausesSize = selectClausesSize
	evFilter[0].selectClauses = nil
	evFilter[0].whereClause.elementsSize = whereClausesSize
	evFilter[0].whereClause.elements = nil
	item.requestedParameters.filter.encoding = UA_EXTENSIONOBJECT_DECODED_NODELETE
	(*item.requestedParameters.filter.content.decoded()).type_ = (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[192]))[:]
	(*item.requestedParameters.filter.content.decoded()).data = evFilter
	var retval_item UA_StatusCode
	var retval UA_StatusCode = addMonitoredEvents(client, UA_UInt32(subscriptionId), (*[100000000]UA_MonitoredItemCreateRequest)(unsafe.Pointer(&item))[:], 1, nil, (*[100000000]interface{})(unsafe.Pointer(&hfContext))[:], (*[100000000]UA_StatusCode)(unsafe.Pointer(&retval_item))[:], newMonitoredItemId)
	_ = evFilter
	return retval | retval_item
}
// removeMonitoredItems - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38305
func removeMonitoredItems(client []UA_Client, subscriptionId UA_UInt32, monitoredItemIds []UA_UInt32, itemsSize uint, itemResults []UA_StatusCode) UA_StatusCode {
	var request UA_DeleteMonitoredItemsRequest
	UA_DeleteMonitoredItemsRequest_init((*[100000000]UA_DeleteMonitoredItemsRequest)(unsafe.Pointer(&request))[:])
	request.subscriptionId = subscriptionId
	request.monitoredItemIdsSize = itemsSize
	request.monitoredItemIds = monitoredItemIds
	var response UA_DeleteMonitoredItemsResponse = UA_Client_MonitoredItems_delete(client, request)
	var retval UA_StatusCode = UA_StatusCode(response.responseHeader.serviceResult)
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		if uint(response.resultsSize) != itemsSize {
			retval = UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		} else {
			{
				var i uint
				for ; i < itemsSize; i++ {
					itemResults[i] = response.results[i]
				}
			}
		}
	}
	UA_DeleteMonitoredItemsResponse_deleteMembers((*[100000000]UA_DeleteMonitoredItemsResponse)(unsafe.Pointer(&response))[:])
	return UA_StatusCode(retval)
}
// UA_Client_Subscriptions_removeMonitoredItems - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38329
func UA_Client_Subscriptions_removeMonitoredItems(client []UA_Client, subscriptionId UA_UInt32, monitoredItemIds []UA_UInt32, itemsSize uint, itemResults []UA_StatusCode) UA_StatusCode {
	return removeMonitoredItems(client, UA_UInt32(subscriptionId), monitoredItemIds, uint(itemsSize), itemResults)
}
// UA_Client_Subscriptions_removeMonitoredItem - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38336
func UA_Client_Subscriptions_removeMonitoredItem(client []UA_Client, subscriptionId UA_UInt32, monitoredItemId UA_UInt32) UA_StatusCode {
	var retval_item UA_StatusCode
	var retval UA_StatusCode = removeMonitoredItems(client, UA_UInt32(subscriptionId), (*[100000000]UA_UInt32)(unsafe.Pointer(&monitoredItemId))[:], 1, (*[100000000]UA_StatusCode)(unsafe.Pointer(&retval_item))[:])
	return retval | retval_item
}
// __secs_to_tm - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38360
// amalgamated original file "/home/travis/build/open62541/open62541/deps/libc_time.c"
// Originally released by the musl project (http://www.musl-libc.org/) under the
// * MIT license. Taken from the file /src/time/__secs_to_tm.c
// 2000-03-01 (mod 400 year, immediately after feb29
func __secs_to_tm(t int64, tm []mytm) int {
	var days int64
	var secs int64
	var years int64
	var remdays int
	var remsecs int
	var remyears int
	var qc_cycles int
	var c_cycles int
	var q_cycles int
	var months int
	var wday int
	var yday int
	var leap int
	var days_in_month []byte = []byte{byte(31), byte(30), byte(31), byte(30), byte(31), byte(31), byte(30), byte(31), byte(30), byte(31), byte(31), byte(29)}
	if t < int64(-2147483647-1)*int64(31622400) || t > 2147483647*int64(31622400) {
		// Reject time_t values whose year would overflow int
		return -1
	}
	secs = t-int64(946684800+int(int64(86400*(31+29))))
	days = secs/int64(86400)
	remsecs = int((secs % 86400))
	if remsecs < 0 {
		remsecs += 86400
		days --
	}
	wday = int(((3 + days) % 7))
	if wday < 0 {
		wday += 7
	}
	qc_cycles = int((days / int64(365*400+97)))
	remdays = int((days % int64(365*400+97)))
	if remdays < 0 {
		remdays += 365*400+97
		qc_cycles --
	}
	c_cycles = remdays/(365*100+24)
	if c_cycles == 4 {
		c_cycles --
	}
	remdays -= c_cycles*(365*100+24)
	q_cycles = remdays/(365*4+1)
	if q_cycles == 25 {
		q_cycles --
	}
	remdays -= q_cycles*(365*4+1)
	remyears = remdays/365
	if remyears == 4 {
		remyears --
	}
	remdays -= remyears*365
	leap = map[bool]int{false: 0, true: 1}[noarch.NotInt(remyears) != 0 && (q_cycles != 0 || noarch.NotInt(c_cycles) != 0)]
	yday = remdays+31+28+leap
	if yday >= 365+leap {
		yday -= 365+leap
	}
	years = int64(remyears+4*q_cycles+100*c_cycles)+int64(400*int(int64(qc_cycles)))
	for months = 0; int(days_in_month[months]) <= remdays; months++ {
		remdays -= int(days_in_month[months])
	}
	if years+100 > 2147483647 || years+100 < int64(-2147483647-1) {
		return -1
	}
	tm[0].tm_year = int((years + 100))
	tm[0].tm_mon = months+2
	if tm[0].tm_mon >= 12 {
		tm[0].tm_mon -= 12
		tm[0].tm_year ++
	}
	tm[0].tm_mday = remdays+1
	tm[0].tm_wday = wday
	tm[0].tm_yday = yday
	tm[0].tm_hour = remsecs/3600
	tm[0].tm_min = remsecs/60%60
	tm[0].tm_sec = remsecs%60
	return 0
}
// pcg32_srandom_r - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38457
// amalgamated original file "/home/travis/build/open62541/open62541/deps/pcg_basic.c"
//
// * PCG Random Number Generation for C.
// *
// * Copyright 2014 Melissa O'Neill <oneill@pcg-random.org>
// *
// * Licensed under the Apache License, Version 2.0 (the "License");
// * you may not use this file except in compliance with the License.
// * You may obtain a copy of the License at
// *
// *     http://www.apache.org/licenses/LICENSE-2.0
// *
// * Unless required by applicable law or agreed to in writing, software
// * distributed under the License is distributed on an "AS IS" BASIS,
// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// * See the License for the specific language governing permissions and
// * limitations under the License.
// *
// * For additional information about the PCG random number generation scheme,
// * including its license and other licensing options, visit
// *
// *       http://www.pcg-random.org
//
func pcg32_srandom_r(rng []pcg32_random_t, initial_state uint64_t, initseq uint64_t) {
	rng[0].state = uint64_t(0)
	rng[0].inc = initseq<<uint64(1)|uint32(1)
	pcg32_random_r(rng)
	rng[0].state += initial_state
	pcg32_random_r(rng)
}
// pcg32_random_r - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38465
func pcg32_random_r(rng []pcg32_random_t) uint32_t {
	var oldstate uint64_t = uint64_t(rng[0].state)
	rng[0].state = uint64_t((uint64((uint32(uint64(uint32((uint64((oldstate)))))*uint64(6364136223846793005) + uint64(uint32((uint64((uint64_t(rng[0].inc)))))))))))
	var xorshifted uint32_t = uint32_t((uint32((uint64(((oldstate>>uint64(18) ^ oldstate) >> uint64(27)))))))
	var rot uint32_t = uint32_t((oldstate >> uint64(59)))
	// was (xorshifted >> rot) | (xorshifted << ((-rot) & 31))
	return xorshifted>>uint64(uint32((uint32((rot))))) | xorshifted<<uint64(uint32((uint32(((^uint32_t(rot) + uint32_t((uint32((uint32(1)))))) & uint32_t((uint32((31)))))))))
}

type __union_at__usr_include_bits_types___mbstate_t_h_16_3_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__usr_include_bits_types___mbstate_t_h_16_3_) copy() __union_at__usr_include_bits_types___mbstate_t_h_16_3_ {
	var buffer [8]byte
	for i := range buffer {
		buffer[i] = (*((*[8]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__usr_include_bits_types___mbstate_t_h_16_3_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__usr_include_bits_types___mbstate_t_h_16_3_) __wch() *uint32 {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*uint32)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types___mbstate_t_h_16_3_) __wchb() *[4]byte {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[4]byte)(unionVar.memory)
}

type __mbstate_t struct {
	__count int
	__value __union_at__usr_include_bits_types___mbstate_t_h_16_3_
}
type _G_fpos_t struct {
	__pos   __off_t
	__state int64
}
type __fpos_t = _G_fpos_t
type _G_fpos64_t struct {
	__pos   __off64_t
	__state int64
}
type __fpos64_t = _G_fpos64_t
type __FILE = _IO_FILE
type FILE = _IO_FILE
type _IO_lock_t = interface{}
type _IO_FILE struct {
	_flags          int
	_IO_read_ptr    []byte
	_IO_read_end    []byte
	_IO_read_base   []byte
	_IO_write_base  []byte
	_IO_write_ptr   []byte
	_IO_write_end   []byte
	_IO_buf_base    []byte
	_IO_buf_end     []byte
	_IO_save_base   []byte
	_IO_backup_base []byte
	_IO_save_end    []byte
	_markers        []_IO_marker
	_chain          []_IO_FILE
	_fileno         int
	_flags2         int
	_old_offset     __off_t
	_cur_column     uint16
	_vtable_offset  int8
	_shortbuf       [1]byte
	_lock           []_IO_lock_t
	_offset         __off64_t
	_codecvt        []_IO_codecvt
	_wide_data      []_IO_wide_data
	_freeres_list   []_IO_FILE
	_freeres_buf    interface{}
	__pad5          uint
	_mode           int
	_unused2        [20]byte
}
type _IO_cookie_io_functions_t struct {
	read  cookie_read_function_t
	write cookie_write_function_t
	seek  cookie_seek_function_t
	close cookie_close_function_t
}
type fpos_t = __fpos_t
type fpos64_t = __fpos64_t
type iovec struct {
	iov_base interface{}
	iov_len  uint
}
type sa_family_t = uint16
type sockaddr struct {
	sa_family sa_family_t
	sa_data   [14]byte
}
type sockaddr_storage struct {
	ss_family    sa_family_t
	__ss_padding [118]byte
	__ss_align   uint32
}
type msghdr struct {
	msg_name       interface{}
	msg_namelen    socklen_t
	msg_iov        []iovec
	msg_iovlen     uint
	msg_control    interface{}
	msg_controllen uint
	msg_flags      int
}
type cmsghdr struct {
	cmsg_len    uint
	cmsg_level  int
	cmsg_type   int
	__cmsg_data []uint8
}
type ucred struct {
	pid pid_t
	uid uid_t
	gid gid_t
}
type linger struct {
	l_onoff  int
	l_linger int
}
type osockaddr struct {
	sa_family uint16
	sa_data   [14]uint8
}
type __CONST_SOCKADDR_ARG struct{ memory unsafe.Pointer }

func (unionVar *__CONST_SOCKADDR_ARG) copy() __CONST_SOCKADDR_ARG {
	var buffer [8]byte
	for i := range buffer {
		buffer[i] = (*((*[8]byte)(unionVar.memory)))[i]
	}
	var newUnion __CONST_SOCKADDR_ARG
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr__() *[]sockaddr {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_at__() *[]sockaddr_at {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_at)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_ax25__() *[]sockaddr_ax25 {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_ax25)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_dl__() *[]sockaddr_dl {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_dl)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_eon__() *[]sockaddr_eon {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_eon)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_in__() *[]sockaddr_in {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_in)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_in6__() *[]sockaddr_in6 {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_in6)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_inarp__() *[]sockaddr_inarp {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_inarp)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_ipx__() *[]sockaddr_ipx {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_ipx)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_iso__() *[]sockaddr_iso {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_iso)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_ns__() *[]sockaddr_ns {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_ns)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_un__() *[]sockaddr_un {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_un)(unionVar.memory)
}
func (unionVar *__CONST_SOCKADDR_ARG) __sockaddr_x25__() *[]sockaddr_x25 {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]sockaddr_x25)(unionVar.memory)
}

type mmsghdr struct {
	msg_hdr msghdr
	msg_len uint32
}
type in_addr_t = uint32_t
type in_addr struct {
	s_addr in_addr_t
}
type ip_opts struct {
	ip_dst  in_addr
	ip_opts [40]byte
}
type ip_mreqn struct {
	imr_multiaddr in_addr
	imr_address   in_addr
	imr_ifindex   int
}
type in_pktinfo struct {
	ipi_ifindex  int
	ipi_spec_dst in_addr
	ipi_addr     in_addr
}
type in_port_t = uint16_t
type __union_at__usr_include_netinet_in_h_213_5_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__usr_include_netinet_in_h_213_5_) copy() __union_at__usr_include_netinet_in_h_213_5_ {
	var buffer [48]byte
	for i := range buffer {
		buffer[i] = (*((*[48]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__usr_include_netinet_in_h_213_5_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__usr_include_netinet_in_h_213_5_) __u6_addr8() *[16]uint8_t {
	if unionVar.memory == nil {
		var buffer [48]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[16]uint8_t)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_netinet_in_h_213_5_) __u6_addr16() *[8]uint16_t {
	if unionVar.memory == nil {
		var buffer [48]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[8]uint16_t)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_netinet_in_h_213_5_) __u6_addr32() *[4]uint32_t {
	if unionVar.memory == nil {
		var buffer [48]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[4]uint32_t)(unionVar.memory)
}

type in6_addr struct {
	__in6_u __union_at__usr_include_netinet_in_h_213_5_
}
type sockaddr_in struct {
	sin_family sa_family_t
	sin_port   in_port_t
	sin_addr   in_addr
	sin_zero   [8]uint8
}
type sockaddr_in6 struct {
	sin6_family   sa_family_t
	sin6_port     in_port_t
	sin6_flowinfo uint32_t
	sin6_addr     in6_addr
	sin6_scope_id uint32_t
}
type ip_mreq struct {
	imr_multiaddr in_addr
	imr_interface in_addr
}
type ip_mreq_source struct {
	imr_multiaddr  in_addr
	imr_interface  in_addr
	imr_sourceaddr in_addr
}
type ipv6_mreq struct {
	ipv6mr_multiaddr in6_addr
	ipv6mr_interface uint32
}
type group_req struct {
	gr_interface uint32_t
	gr_group     sockaddr_storage
}
type group_source_req struct {
	gsr_interface uint32_t
	gsr_group     sockaddr_storage
	gsr_source    sockaddr_storage
}
type ip_msfilter struct {
	imsf_multiaddr in_addr
	imsf_interface in_addr
	imsf_fmode     uint32_t
	imsf_numsrc    uint32_t
	imsf_slist     [1]in_addr
}
type group_filter struct {
	gf_interface uint32_t
	gf_group     sockaddr_storage
	gf_fmode     uint32_t
	gf_numsrc    uint32_t
	gf_slist     [1]sockaddr_storage
}
type in6_pktinfo struct {
	ipi6_addr    in6_addr
	ipi6_ifindex uint32
}
type ip6_mtuinfo struct {
	ip6m_addr sockaddr_in6
	ip6m_mtu  uint32_t
}
type rpcent struct {
	r_name    []byte
	r_aliases [][]byte
	r_number  int
}
type sigval struct{ memory unsafe.Pointer }

func (unionVar *sigval) copy() sigval {
	var buffer [8]byte
	for i := range buffer {
		buffer[i] = (*((*[8]byte)(unionVar.memory)))[i]
	}
	var newUnion sigval
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *sigval) sival_int() *int {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*int)(unionVar.memory)
}
func (unionVar *sigval) sival_ptr() *interface{} {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*interface{})(unionVar.memory)
}

type __sigval_t = sigval
type __struct_at__usr_include_bits_types_sigevent_t_h_36_2_ struct {
	_function  func(__sigval_t)()
	_attribute []pthread_attr_t
}
type __union_at__usr_include_bits_types_sigevent_t_h_28_5_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__usr_include_bits_types_sigevent_t_h_28_5_) copy() __union_at__usr_include_bits_types_sigevent_t_h_28_5_ {
	var buffer [88]byte
	for i := range buffer {
		buffer[i] = (*((*[88]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__usr_include_bits_types_sigevent_t_h_28_5_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__usr_include_bits_types_sigevent_t_h_28_5_) _pad() *[12]int {
	if unionVar.memory == nil {
		var buffer [88]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[12]int)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types_sigevent_t_h_28_5_) _tid() *__pid_t {
	if unionVar.memory == nil {
		var buffer [88]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__pid_t)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types_sigevent_t_h_28_5_) _sigev_thread() *__struct_at__usr_include_bits_types_sigevent_t_h_36_2_ {
	if unionVar.memory == nil {
		var buffer [88]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_types_sigevent_t_h_36_2_)(unionVar.memory)
}

type sigevent struct {
	sigev_value  __sigval_t
	sigev_signo  int
	sigev_notify int
	_sigev_un    __union_at__usr_include_bits_types_sigevent_t_h_28_5_
}
type sigevent_t = sigevent
type netent struct {
	n_name     []byte
	n_aliases  [][]byte
	n_addrtype int
	n_net      uint32_t
}
type hostent struct {
	h_name      []byte
	h_aliases   [][]byte
	h_addrtype  int
	h_length    int
	h_addr_list [][]byte
}
type servent struct {
	s_name    []byte
	s_aliases [][]byte
	s_port    int
	s_proto   []byte
}
type protoent struct {
	p_name    []byte
	p_aliases [][]byte
	p_proto   int
}
type addrinfo struct {
	ai_flags     int
	ai_family    int
	ai_socktype  int
	ai_protocol  int
	ai_addrlen   socklen_t
	ai_addr      []sockaddr
	ai_canonname []byte
	ai_next      []addrinfo
}
type gaicb struct {
	ar_name          []byte
	ar_service       []byte
	ar_request       []addrinfo
	ar_result        []addrinfo
	__return         int
	__glibc_reserved [5]int
}
type winsize struct {
	ws_row    uint16
	ws_col    uint16
	ws_xpixel uint16
	ws_ypixel uint16
}
type termio struct {
	c_iflag uint16
	c_oflag uint16
	c_cflag uint16
	c_lflag uint16
	c_line  uint8
	c_cc    [8]uint8
}
type flock struct {
	l_type   int16
	l_whence int16
	l_start  __off_t
	l_len    __off_t
	l_pid    __pid_t
}
type flock64 struct {
	l_type   int16
	l_whence int16
	l_start  __off64_t
	l_len    __off64_t
	l_pid    __pid_t
}
type f_owner_ex struct {
	type_ __pid_type
	pid   __pid_t
}
type file_handle struct {
	handle_bytes uint32
	handle_type  int
	f_handle     [0]uint8
}
type stat struct {
	st_dev           __dev_t
	st_ino           __ino_t
	st_nlink         __nlink_t
	st_mode          uint16
	st_uid           __uid_t
	st_gid           __gid_t
	__pad0           int
	st_rdev          __dev_t
	st_size          __off_t
	st_blksize       __blksize_t
	st_blocks        __blkcnt_t
	st_atim          timespec
	st_mtim          timespec
	st_ctim          timespec
	__glibc_reserved [3]__syscall_slong_t
}
type stat64 struct {
	st_dev           __dev_t
	st_ino           __ino64_t
	st_nlink         __nlink_t
	st_mode          uint16
	st_uid           __uid_t
	st_gid           __gid_t
	__pad0           int
	st_rdev          __dev_t
	st_size          __off_t
	st_blksize       __blksize_t
	st_blocks        __blkcnt64_t
	st_atim          timespec
	st_mtim          timespec
	st_ctim          timespec
	__glibc_reserved [3]__syscall_slong_t
}
type sig_atomic_t = __sig_atomic_t
type __struct_at__usr_include_bits_types_siginfo_t_h_56_2_ struct {
	si_pid __pid_t
	si_uid __uid_t
}
type __struct_at__usr_include_bits_types_siginfo_t_h_63_2_ struct {
	si_tid     int
	si_overrun int
	si_sigval  __sigval_t
}
type __struct_at__usr_include_bits_types_siginfo_t_h_71_2_ struct {
	si_pid    __pid_t
	si_uid    __uid_t
	si_sigval __sigval_t
}
type __struct_at__usr_include_bits_types_siginfo_t_h_79_2_ struct {
	si_pid    __pid_t
	si_uid    __uid_t
	si_status int
	si_utime  __clock_t
	si_stime  __clock_t
}
type __struct_at__usr_include_bits_types_siginfo_t_h_97_3_ struct {
	_lower interface{}
	_upper interface{}
}
type __union_at__usr_include_bits_types_siginfo_t_h_94_6_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_94_6_) copy() __union_at__usr_include_bits_types_siginfo_t_h_94_6_ {
	var buffer [40]byte
	for i := range buffer {
		buffer[i] = (*((*[40]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__usr_include_bits_types_siginfo_t_h_94_6_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_94_6_) _addr_bnd() *__struct_at__usr_include_bits_types_siginfo_t_h_97_3_ {
	if unionVar.memory == nil {
		var buffer [40]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_types_siginfo_t_h_97_3_)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_94_6_) _pkey() *uint32 {
	if unionVar.memory == nil {
		var buffer [40]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*uint32)(unionVar.memory)
}

type __struct_at__usr_include_bits_types_siginfo_t_h_89_2_ struct {
	si_addr     interface{}
	si_addr_lsb int16
	_bounds     __union_at__usr_include_bits_types_siginfo_t_h_94_6_
}
type __struct_at__usr_include_bits_types_siginfo_t_h_108_2_ struct {
	si_band int32
	si_fd   int
}
type __struct_at__usr_include_bits_types_siginfo_t_h_116_2_ struct {
	_call_addr interface{}
	_syscall   int
	_arch      uint32
}
type __union_at__usr_include_bits_types_siginfo_t_h_51_5_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_51_5_) copy() __union_at__usr_include_bits_types_siginfo_t_h_51_5_ {
	var buffer [512]byte
	for i := range buffer {
		buffer[i] = (*((*[512]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__usr_include_bits_types_siginfo_t_h_51_5_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_51_5_) _pad() *[28]int {
	if unionVar.memory == nil {
		var buffer [512]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[28]int)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_51_5_) _kill() *__struct_at__usr_include_bits_types_siginfo_t_h_56_2_ {
	if unionVar.memory == nil {
		var buffer [512]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_types_siginfo_t_h_56_2_)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_51_5_) _timer() *__struct_at__usr_include_bits_types_siginfo_t_h_63_2_ {
	if unionVar.memory == nil {
		var buffer [512]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_types_siginfo_t_h_63_2_)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_51_5_) _rt() *__struct_at__usr_include_bits_types_siginfo_t_h_71_2_ {
	if unionVar.memory == nil {
		var buffer [512]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_types_siginfo_t_h_71_2_)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_51_5_) _sigchld() *__struct_at__usr_include_bits_types_siginfo_t_h_79_2_ {
	if unionVar.memory == nil {
		var buffer [512]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_types_siginfo_t_h_79_2_)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_51_5_) _sigfault() *__struct_at__usr_include_bits_types_siginfo_t_h_89_2_ {
	if unionVar.memory == nil {
		var buffer [512]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_types_siginfo_t_h_89_2_)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_51_5_) _sigpoll() *__struct_at__usr_include_bits_types_siginfo_t_h_108_2_ {
	if unionVar.memory == nil {
		var buffer [512]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_types_siginfo_t_h_108_2_)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_types_siginfo_t_h_51_5_) _sigsys() *__struct_at__usr_include_bits_types_siginfo_t_h_116_2_ {
	if unionVar.memory == nil {
		var buffer [512]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__struct_at__usr_include_bits_types_siginfo_t_h_116_2_)(unionVar.memory)
}

type siginfo_t struct {
	si_signo  int
	si_errno  int
	si_code   int
	__pad0    int
	_sifields __union_at__usr_include_bits_types_siginfo_t_h_51_5_
}
type sigval_t = __sigval_t
type __sighandler_t func(int)()
type sighandler_t = __sighandler_t
type sig_t = __sighandler_t
type __union_at__usr_include_bits_sigaction_h_31_5_ struct{ memory unsafe.Pointer }

func (unionVar *__union_at__usr_include_bits_sigaction_h_31_5_) copy() __union_at__usr_include_bits_sigaction_h_31_5_ {
	var buffer [8]byte
	for i := range buffer {
		buffer[i] = (*((*[8]byte)(unionVar.memory)))[i]
	}
	var newUnion __union_at__usr_include_bits_sigaction_h_31_5_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *__union_at__usr_include_bits_sigaction_h_31_5_) sa_handler() *__sighandler_t {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*__sighandler_t)(unionVar.memory)
}
func (unionVar *__union_at__usr_include_bits_sigaction_h_31_5_) sa_sigaction() *func(int, []siginfo_t, interface{}) {
	if unionVar.memory == nil {
		var buffer [8]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*func(int, []siginfo_t, interface{}))(unionVar.memory)
}

type sigaction struct {
	__sigaction_handler __union_at__usr_include_bits_sigaction_h_31_5_
	sa_mask             __sigset_t
	sa_flags            int
	sa_restorer         func()()
}
type _fpx_sw_bytes struct {
	magic1            uint32
	extended_size     uint32
	xstate_bv         uint64
	xstate_size       uint32
	__glibc_reserved1 [7]uint32
}
type _fpreg struct {
	significand [4]uint16
	exponent    uint16
}
type _fpxreg struct {
	significand       [4]uint16
	exponent          uint16
	__glibc_reserved1 [3]uint16
}
type _xmmreg struct {
	element [4]uint32
}
type _fpstate struct {
	cwd               uint16
	swd               uint16
	ftw               uint16
	fop               uint16
	rip               uint64
	rdp               uint64
	mxcsr             uint32
	mxcr_mask         uint32
	_st               [8]_fpxreg
	_xmm              [16]_xmmreg
	__glibc_reserved1 [24]uint32
}
type sigcontextDD__at__usr_include_bits_sigcontext_h_167_17_ struct{ memory unsafe.Pointer }

func (unionVar *sigcontextDD__at__usr_include_bits_sigcontext_h_167_17_) copy() sigcontextDD__at__usr_include_bits_sigcontext_h_167_17_ {
	var buffer [16]byte
	for i := range buffer {
		buffer[i] = (*((*[16]byte)(unionVar.memory)))[i]
	}
	var newUnion sigcontextDD__at__usr_include_bits_sigcontext_h_167_17_
	newUnion.memory = unsafe.Pointer(&buffer)
	return newUnion
}
func (unionVar *sigcontextDD__at__usr_include_bits_sigcontext_h_167_17_) fpstate() *[]_fpstate {
	if unionVar.memory == nil {
		var buffer [16]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*[]_fpstate)(unionVar.memory)
}
func (unionVar *sigcontextDD__at__usr_include_bits_sigcontext_h_167_17_) __fpstate_word() *uint64 {
	if unionVar.memory == nil {
		var buffer [16]byte
		unionVar.memory = unsafe.Pointer(&buffer)
	}
	return (*uint64)(unionVar.memory)
}

type sigcontext struct {
	r8                                                                     uint64
	r9                                                                     uint64
	r10                                                                    uint64
	r11                                                                    uint64
	r12                                                                    uint64
	r13                                                                    uint64
	r14                                                                    uint64
	r15                                                                    uint64
	rdi                                                                    uint64
	rsi                                                                    uint64
	rbp                                                                    uint64
	rbx                                                                    uint64
	rdx                                                                    uint64
	rax                                                                    uint64
	rcx                                                                    uint64
	rsp                                                                    uint64
	rip                                                                    uint64
	eflags                                                                 uint64
	cs                                                                     uint16
	gs                                                                     uint16
	fs                                                                     uint16
	__pad0                                                                 uint16
	err                                                                    uint64
	trapno                                                                 uint64
	oldmask                                                                uint64
	cr2                                                                    uint64
	implicit_unionSsigcontextDD__at__usr_include_bits_sigcontext_h_167_17_ sigcontextDD__at__usr_include_bits_sigcontext_h_167_17_
	__reserved1                                                            [8]uint64
}
type _xsave_hdr struct {
	xstate_bv         uint64
	__glibc_reserved1 [2]uint64
	__glibc_reserved2 [5]uint64
}
type _ymmh_state struct {
	ymmh_space [64]uint32
}
type _xstate struct {
	fpstate    _fpstate
	xstate_hdr _xsave_hdr
	ymmh       _ymmh_state
}
type stack_t struct {
	ss_sp    interface{}
	ss_flags int
	ss_size  uint
}
type greg_t = int64
type gregset_t = []greg_t
type _libc_fpxreg struct {
	significand       [4]uint16
	exponent          uint16
	__glibc_reserved1 [3]uint16
}
type _libc_xmmreg struct {
	element [4]uint32
}
type _libc_fpstate struct {
	cwd               uint16
	swd               uint16
	ftw               uint16
	fop               uint16
	rip               uint64
	rdp               uint64
	mxcsr             uint32
	mxcr_mask         uint32
	_st               [8]_libc_fpxreg
	_xmm              [16]_libc_xmmreg
	__glibc_reserved1 [24]uint32
}
type fpregset_t = []_libc_fpstate
type mcontext_t struct {
	gregs       gregset_t
	fpregs      fpregset_t
	__reserved1 [8]uint64
}
type ucontext_t struct {
	uc_flags     uint32
	uc_link      []ucontext_t
	uc_stack     stack_t
	uc_mcontext  mcontext_t
	uc_sigmask   sigset_t
	__fpregs_mem _libc_fpstate
	__ssp        [4]uint64
}
type sigstack struct {
	ss_sp      interface{}
	ss_onstack int
}
type tcp_seq = uint32_t
type tcp_info struct {
	tcpi_state          uint8_t
	tcpi_ca_state       uint8_t
	tcpi_retransmits    uint8_t
	tcpi_probes         uint8_t
	tcpi_backoff        uint8_t
	tcpi_options        uint8_t
	tcpi_snd_wscale     uint8_t
	tcpi_rcv_wscale     uint8_t
	tcpi_rto            uint32_t
	tcpi_ato            uint32_t
	tcpi_snd_mss        uint32_t
	tcpi_rcv_mss        uint32_t
	tcpi_unacked        uint32_t
	tcpi_sacked         uint32_t
	tcpi_lost           uint32_t
	tcpi_retrans        uint32_t
	tcpi_fackets        uint32_t
	tcpi_last_data_sent uint32_t
	tcpi_last_ack_sent  uint32_t
	tcpi_last_data_recv uint32_t
	tcpi_last_ack_recv  uint32_t
	tcpi_pmtu           uint32_t
	tcpi_rcv_ssthresh   uint32_t
	tcpi_rtt            uint32_t
	tcpi_rttvar         uint32_t
	tcpi_snd_ssthresh   uint32_t
	tcpi_snd_cwnd       uint32_t
	tcpi_advmss         uint32_t
	tcpi_reordering     uint32_t
	tcpi_rcv_rtt        uint32_t
	tcpi_rcv_space      uint32_t
	tcpi_total_retrans  uint32_t
}
type tcp_md5sig struct {
	tcpm_addr      sockaddr_storage
	tcpm_flags     uint8_t
	tcpm_prefixlen uint8_t
	tcpm_keylen    uint16_t
	__tcpm_pad     uint32_t
	tcpm_key       [80]uint8_t
}
type tcp_repair_opt struct {
	opt_code uint32_t
	opt_val  uint32_t
}
type tcp_cookie_transactions struct {
	tcpct_flags          uint16_t
	__tcpct_pad1         uint8_t
	tcpct_cookie_desired uint8_t
	tcpct_s_data_desired uint16_t
	tcpct_used           uint16_t
	tcpct_value          [536]uint8_t
}
type tcp_repair_window struct {
	snd_wl1    uint32_t
	snd_wnd    uint32_t
	max_window uint32_t
	rcv_wnd    uint32_t
	rcv_wup    uint32_t
}
// connection_getsendbuffer - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38633
// amalgamated original file "/home/travis/build/open62541/open62541/plugins/ua_network_tcp.c"
// This work is licensed under a Creative Commons CCZero 1.0 Universal License.
// * See http://creativecommons.org/publicdomain/zero/1.0/ for more information.
// *
// *    Copyright 2016-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2016-2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) frax2222
// *    Copyright 2017 (c) Jose Cabral
// *    Copyright 2017 (c) Thomas Stalder, Blue Time Concept SA
//
// Enable POSIX features
// On older systems we need to define _BSD_SOURCE.
// * _DEFAULT_SOURCE is an alias for that.
// Disable some security warnings on MSVC
// Assume that Windows versions are newer than Windows XP
// unsigned int for windows and workaround to a glibc bug
// Additionally if GNU_LIBRARY is not defined, it may be using
// * musl libc (e.g. Docker Alpine)
//
// Generic Socket Functions
//
func connection_getsendbuffer(connection []UA_Connection, length uint, buf []UA_ByteString) UA_StatusCode {
	if length > uint((uint32((uint32((uint32_t((UA_UInt32(connection[0].remoteConf.recvBufferSize))))))))) {
		return UA_StatusCode((uint32_t((uint32((uint32(2147811328)))))))
	}
	return UA_ByteString_allocBuffer(buf, uint(length))
}
// connection_releasesendbuffer - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38641
func connection_releasesendbuffer(connection []UA_Connection, buf []UA_ByteString) {
	UA_ByteString_deleteMembers(buf)
}
// connection_releaserecvbuffer - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38647
func connection_releaserecvbuffer(connection []UA_Connection, buf []UA_ByteString) {
	UA_ByteString_deleteMembers(buf)
}
// connection_write - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38653
func connection_write(connection []UA_Connection, buf []UA_ByteString) UA_StatusCode {
	if uint32(connection[0].state) == uint32(UA_CONNECTION_CLOSED) {
		UA_ByteString_deleteMembers(buf)
		return UA_StatusCode((uint32_t((uint32((uint32(2158886912)))))))
	}
	var flags int
	// Prevent OS signals when sending to a closed socket
	flags |= MSG_NOSIGNAL
	var nWritten uint
	for {
		var n noarch.SsizeT
		for {
			var bytes_to_send uint = uint(buf[0].length) - nWritten
			// Send the full buffer. This may require several calls to send
			n = send(int((__int32_t((int32_t((UA_Int32(connection[0].sockfd))))))), (*(*[1000000000]byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&buf[0].data[0])) + (uintptr)(int(uint32((nWritten))))*unsafe.Sizeof(buf[0].data[0]))))[:], uint(bytes_to_send), flags)
			if n < noarch.SsizeT((__ssize_t((0)))) && (__errno_location())[0] != 4 && (__errno_location())[0] != 11 {
				connection.close(connection)
				UA_ByteString_deleteMembers(buf)
				return UA_StatusCode((uint32_t((uint32((uint32(2158886912)))))))
			}
			if !(n < noarch.SsizeT((__ssize_t((0))))) {
				break
			}
		}
		nWritten += uint(noarch.SsizeT(n))
		if !(nWritten < uint(buf[0].length)) {
			break
		}
	}
	// Free the buffer
	UA_ByteString_deleteMembers(buf)
	return 0
}
// connection_recv - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38689
func connection_recv(connection []UA_Connection, response []UA_ByteString, timeout UA_UInt32) UA_StatusCode {
	if uint32(connection[0].state) == uint32(UA_CONNECTION_CLOSED) {
		return UA_StatusCode((uint32_t((uint32((uint32(2158886912)))))))
	}
	if timeout > UA_UInt32((uint32_t((uint32((0)))))) {
		var fdset fd_set
		for {
			var __d0 int
			var __d1 int
			// Listen on the socket for the given timeout until a message arrives
			// Warning (*ast.GCCAsmStmt):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38698 :cannot transpile asm, will be ignored
			if noarch.NotInt((0)) != 0 {
				break
			}
		}
		_ = (func() __fd_mask {
			tempVar := &(((*[100000000]fd_set)(unsafe.Pointer(&fdset))[:])[0].fds_bits)[connection[0].sockfd/UA_Int32((int32_t((__int32_t((8 * int(8)))))))]
			*tempVar |= __fd_mask((uint32(1 << uint64(int((__int32_t((int32_t((connection[0].sockfd % UA_Int32((int32_t((__int32_t((8 * int(8)))))))))))))))))
			return *tempVar
		}())
		var timeout_usec UA_UInt32 = timeout * UA_UInt32((uint32_t((uint32((1000))))))
		var tmptv noarch.Timeval = noarch.Timeval{int32((uint32((uint32((uint32_t((timeout_usec / UA_UInt32((uint32_t((uint32((1000000)))))))))))))), int32((uint32((uint32((uint32_t((timeout_usec % UA_UInt32((uint32_t((uint32((1000000))))))))))))))}
		var resultsize int = select_(int((__int32_t((int32_t((UA_Int32(connection[0].sockfd) + UA_Int32((int32_t((__int32_t((1)))))))))))), (*[100000000]fd_set)(unsafe.Pointer(&fdset))[:], nil, nil, (*[100000000]noarch.Timeval)(unsafe.Pointer(&tmptv))[:])
		if resultsize == 0 {
			// No result
			return 11141120
		}
		if resultsize == -1 {
			if (__errno_location())[0] == 4 {
				// The call to select was interrupted manually. Act as if it timed
				//             * out
				return 11141120
			}
			// The error cannot be recovered. Close the connection.
			connection.close(connection)
			return UA_StatusCode((uint32_t((uint32((uint32(2158886912)))))))
		}
	}
	response[0].data = make([]UA_Byte, uint32((uint32((uint32_t((UA_UInt32(connection[0].localConf.recvBufferSize)))))))*1/1)
	if response[0].data == nil {
		response[0].length = 0
		// not enough memory retry
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var ret noarch.SsizeT = recv(int((__int32_t((int32_t((UA_Int32(connection[0].sockfd))))))), response[0].data, uint(UA_UInt32(connection[0].localConf.recvBufferSize)), 0)
	if ret == noarch.SsizeT((__ssize_t((0)))) {
		// Get the received packet(s)
		// The remote side closed the connection
		UA_ByteString_deleteMembers(response)
		connection.close(connection)
		return UA_StatusCode((uint32_t((uint32((uint32(2158886912)))))))
	}
	if ret < noarch.SsizeT((__ssize_t((0)))) {
		// Error case
		UA_ByteString_deleteMembers(response)
		if func() int {
			if (__errno_location())[0] == 4 || timeout > UA_UInt32((uint32_t((uint32((0)))))) {
				return 0
			}
			return map[bool]int{false: 0, true: 1}[((__errno_location())[0] == 11 || (__errno_location())[0] == 11)]
		}() != 0 {
			// statuscode_good but no data -> retry
			return 0
		}
		connection.close(connection)
		return UA_StatusCode((uint32_t((uint32((uint32(2158886912)))))))
	}
	// Set the length of the received buffer
	response[0].length = uint(noarch.SsizeT(ret))
	return 0
}
// socket_set_nonblocking - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38755
func socket_set_nonblocking(sockfd int) UA_StatusCode {
	var opts int = fcntl(sockfd, 3)
	if opts < 0 || fcntl(sockfd, 4, opts|2048) < 0 {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	return 0
}
// socket_set_blocking - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38773
func socket_set_blocking(sockfd int) UA_StatusCode {
	var opts int = fcntl(sockfd, 3)
	if opts < 0 || fcntl(sockfd, 4, opts & ^2048) < 0 {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	return 0
}

type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38801_5_ struct {
	le_next []ConnectionEntry
	le_prev [][]ConnectionEntry
}
type ConnectionEntry struct {
	connection UA_Connection
	pointers   __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38801_5_
}
type __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ struct {
	lh_first []ConnectionEntry
}
type ServerNetworkLayerTCP struct {
	logger            UA_Logger
	conf              UA_ConnectionConfig
	port              UA_UInt16
	serverSockets     [1024]UA_Int32
	serverSocketsSize UA_UInt16
	connections       __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_
}
// ServerNetworkLayerTCP_freeConnection - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38813
//
// Server NetworkLayer TCP
//
func ServerNetworkLayerTCP_freeConnection(connection []UA_Connection) {
	UA_Connection_deleteMembers(connection)
	_ = connection
}
// ServerNetworkLayerTCP_close - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38821
// This performs only 'shutdown'. 'close' is called when the shutdown
// * socket is returned from select.
func ServerNetworkLayerTCP_close(connection []UA_Connection) {
	if uint32(connection[0].state) == uint32(UA_CONNECTION_CLOSED) {
		return
	}
	shutdown(int((__int32_t((int32_t((UA_Int32(connection[0].sockfd))))))), 2)
	connection[0].state = UA_CONNECTION_CLOSED
}
// ServerNetworkLayerTCP_add - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38829
func ServerNetworkLayerTCP_add(layer []ServerNetworkLayerTCP, newsockfd UA_Int32, remote []sockaddr_storage) UA_StatusCode {
	// Set nonblocking
	socket_set_nonblocking(int((__int32_t((int32_t((UA_Int32(newsockfd))))))))
	var dummy int = 1
	if setsockopt(int((__int32_t((int32_t((UA_Int32(newsockfd))))))), IPPROTO_TCP, 1, (*[100000000]int)(unsafe.Pointer(&dummy))[:], socklen_t(4)) < 0 {
		{
			var errno_str []byte = strerror(((__errno_location())[0]))
			// Do not merge packets on the socket (disable Nagle's algorithm)
			UA_LOG_ERROR(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Cannot set socket option TCP_NODELAY. Error: %s\x00"), errno_str)
		}
		return UA_StatusCode((uint32_t((uint32((uint32(2147549184)))))))
	}
	var remote_name []byte = make([]byte, 100)
	var res int = getnameinfo(remote, socklen_t(128), remote_name, socklen_t(100), nil, 0, 1)
	if res == 0 {
		// Get the peer name for logging
		UA_LOG_INFO(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | New connection over TCP from %s\x00"), int((__int32_t((int32_t((UA_Int32(newsockfd))))))), remote_name)
	} else {
		{
			var errno_str []byte = strerror(((__errno_location())[0]))
			UA_LOG_WARNING(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | New connection over TCP, getnameinfo failed with error: %s\x00"), int((__int32_t((int32_t((UA_Int32(newsockfd))))))), errno_str)
		}
	}
	var e []ConnectionEntry = make([]ConnectionEntry, 136/136)
	if e == nil {
		// Allocate and initialize the connection
		close(int((__int32_t((int32_t((UA_Int32(newsockfd))))))))
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var c []UA_Connection = (*[100000000]UA_Connection)(unsafe.Pointer(&e[0].connection))[:]
	noarch.Memset(c, byte(0), 104)
	c[0].sockfd = newsockfd
	c[0].handle = layer
	c[0].localConf = layer[0].conf
	c[0].remoteConf = layer[0].conf
	c[0].send = connection_write
	c[0].close = ServerNetworkLayerTCP_close
	c[0].free = ServerNetworkLayerTCP_freeConnection
	c[0].getSendBuffer = connection_getsendbuffer
	c[0].releaseSendBuffer = connection_releasesendbuffer
	c[0].releaseRecvBuffer = connection_releaserecvbuffer
	c[0].state = UA_CONNECTION_OPENING
	c[0].openingDate = UA_DateTime_nowMonotonic()
	for {
		// Add to the linked list
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile BinaryOperator with type 'int' : result type = {unknown52}. Error: operator is `!=`. cannot atomic for left part. Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.IfStmt):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpileToStmt : Cannot transpileIfStmt. Cannot transpile for condition. Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'int' : result type = {unknown52}. Error: operator is `!=`. cannot atomic for left part. Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f74c0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown52}. Error: operator is `=`. cannot atomic for left part. Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'struct ConnectionEntry *' : result type = {unknown52}. Error: operator is `=`. cannot atomic for left part. Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7700), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7700), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.UnaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile UnaryOperator: err = Cannot transpileUnaryOperatorAmpersant : err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7700), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpile BinaryOperator with type 'struct ConnectionEntry **' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpile UnaryOperator: err = Cannot transpileUnaryOperatorAmpersant : err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7700), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		if noarch.NotInt((0)) != 0 {
			// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38887 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'struct ConnectionEntry **' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpile UnaryOperator: err = Cannot transpileUnaryOperatorAmpersant : err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0033f7700), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
			break
		}
	}
	return 0
}
// addServerSocket - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38891
func addServerSocket(layer []ServerNetworkLayerTCP, ai []addrinfo) {
	var newsock int = socket(ai[0].ai_family, ai[0].ai_socktype, ai[0].ai_protocol)
	if newsock < 0 {
		// Create the server socket
		UA_LOG_WARNING(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Error opening the server socket\x00"))
		return
	}
	var optval int = 1
	if ai[0].ai_family == 10 && setsockopt(newsock, IPPROTO_IPV6, 26, (*[100000000]int)(unsafe.Pointer(&optval))[:], socklen_t(4)) == -1 {
		// Some Linux distributions have net.ipv6.bindv6only not activated. So
		//     * sockets can double-bind to IPv4 and IPv6. This leads to problems. Use
		//     * AF_INET6 sockets only for IPv6.
		UA_LOG_WARNING(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Could not set an IPv6 socket to IPv6 only\x00"))
		close(newsock)
		return
	}
	if setsockopt(newsock, 1, 2, (*[100000000]int)(unsafe.Pointer(&optval))[:], socklen_t(4)) == -1 {
		UA_LOG_WARNING(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Could not make the socket reusable\x00"))
		close(newsock)
		return
	}
	if socket_set_nonblocking(newsock) != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_LOG_WARNING(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Could not set the server socket to nonblocking\x00"))
		close(newsock)
		return
	}
	if bind(newsock, __CONST_SOCKADDR_ARG{ai[0].ai_addr}, socklen_t(ai[0].ai_addrlen)) < 0 {
		{
			var errno_str []byte = strerror(((__errno_location())[0]))
			// Bind socket to address
			UA_LOG_WARNING(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Error binding a server socket: %s\x00"), errno_str)
		}
		close(newsock)
		return
	}
	if listen(newsock, 100) < 0 {
		{
			var errno_str []byte = strerror(((__errno_location())[0]))
			// Start listening
			UA_LOG_WARNING(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Error listening on server socket: %s\x00"), errno_str)
		}
		close(newsock)
		return
	}
	layer[0].serverSockets[:][UA_UInt16(layer[0].serverSocketsSize)] = UA_Int32(newsock)
	layer[0].serverSocketsSize ++
}
// ServerNetworkLayerTCP_start - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38959
func ServerNetworkLayerTCP_start(nl []UA_ServerNetworkLayer, customHostname []UA_String) UA_StatusCode {
	var layer []ServerNetworkLayerTCP = nl[0].handle.([]ServerNetworkLayerTCP)
	var du UA_String = UA_STRING_NULL
	if uint32((uint(customHostname[0].length))) != 0 {
		var discoveryUrl []byte = make([]byte, 256)
		// Get the discovery url from the hostname
		//%.*s:%d/",
		du.length = uint(noarch.Snprintf(discoveryUrl, 255, []byte("opc.tcp://%.*s:%d/\x00"), int(uint32((uint(customHostname[0].length)))), customHostname[0].data, int(uint16((uint16((uint16_t((UA_UInt16(layer[0].port))))))))))
		du.data = discoveryUrl
	} else {
		var hostname []byte = make([]byte, 256)
		if gethostname(hostname, 255) == 0 {
			var discoveryUrl []byte = make([]byte, 256)
			//%s:%d/",
			du.length = uint(noarch.Snprintf(discoveryUrl, 255, []byte("opc.tcp://%s:%d/\x00"), hostname, int(uint16((uint16((uint16_t((UA_UInt16(layer[0].port))))))))))
			du.data = discoveryUrl
		}
	}
	UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&du))[:], (*[100000000]UA_String)(unsafe.Pointer(&nl[0].discoveryUrl))[:])
	var portno []byte = make([]byte, 6)
	// Get addrinfo of the server and create server sockets
	noarch.Snprintf(portno, 6, []byte("%d\x00"), int(uint16((uint16((uint16_t((UA_UInt16(layer[0].port)))))))))
	var hints addrinfo
	var res []addrinfo
	noarch.Memset((*[100000000]addrinfo)(unsafe.Pointer(&hints))[:], byte(0), 48)
	hints.ai_family = 0
	hints.ai_socktype = SOCK_STREAM
	hints.ai_flags = 1
	if getaddrinfo(nil, portno, (*[100000000]addrinfo)(unsafe.Pointer(&hints))[:], (*[100000000][]addrinfo)(unsafe.Pointer(&res))[:]) != 0 {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var ai []addrinfo = res
	{
		// There might be serveral addrinfos (for different network cards,
		//     * IPv4/IPv6). Add a server socket for all of them.
		for layer[0].serverSocketsSize = 0; int(uint16((uint16((uint16_t((UA_UInt16(layer[0].serverSocketsSize)))))))) < 1024 && ai != nil; ai = ai[0].ai_next {
			addServerSocket(layer, ai)
		}
	}
	freeaddrinfo(res)
	UA_LOG_INFO(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("TCP network layer listening on %.*s\x00"), int(uint32((uint(nl[0].discoveryUrl.length)))), nl[0].discoveryUrl.data)
	return 0
}
// setFDSet - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39040
// After every select, reset the sockets to listen on
func setFDSet(layer []ServerNetworkLayerTCP, fdset []fd_set) UA_Int32 {
	for {
		var __d0 int
		var __d1 int
		// Warning (*ast.GCCAsmStmt):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39042 :cannot transpile asm, will be ignored
		if noarch.NotInt((0)) != 0 {
			break
		}
	}
	var highestfd UA_Int32 = UA_Int32((int32_t((__int32_t((0))))))
	{
		var i UA_UInt16
		for ; int(uint16((uint16((uint16_t((i))))))) < int(uint16((uint16((uint16_t((UA_UInt16(layer[0].serverSocketsSize)))))))); i++ {
			_ = (func() __fd_mask {
				tempVar := &((fdset)[0].fds_bits)[layer[0].serverSockets[:][i]/UA_Int32((int32_t((__int32_t((8 * int(8)))))))]
				*tempVar |= __fd_mask((uint32(1 << uint64(int((__int32_t((int32_t((layer[0].serverSockets[:][i] % UA_Int32((int32_t((__int32_t((8 * int(8)))))))))))))))))
				return *tempVar
			}())
			if layer[0].serverSockets[:][i] > highestfd {
				highestfd = layer[0].serverSockets[:][i]
			}
		}
	}
	var e []ConnectionEntry
	{
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39051 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00a15cd00), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39051 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00a15cd00), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39051 :Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00a15cd00), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39051 :Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00a15cd00), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39051 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00a15cd00), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		for ; e != nil; e = (e)[0].pointers.le_next {
			_ = (func() __fd_mask {
				tempVar := &((fdset)[0].fds_bits)[e[0].connection.sockfd/UA_Int32((int32_t((__int32_t((8 * int(8)))))))]
				*tempVar |= __fd_mask((uint32(1 << uint64(int((__int32_t((int32_t((e[0].connection.sockfd % UA_Int32((int32_t((__int32_t((8 * int(8)))))))))))))))))
				return *tempVar
			}())
			if UA_Int32(e[0].connection.sockfd) > highestfd {
				highestfd = UA_Int32(e[0].connection.sockfd)
			}
		}
	}
	return UA_Int32(highestfd)
}
// ServerNetworkLayerTCP_listen - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39060
func ServerNetworkLayerTCP_listen(nl []UA_ServerNetworkLayer, server []UA_Server, timeout UA_UInt16) UA_StatusCode {
	var layer []ServerNetworkLayerTCP = nl[0].handle.([]ServerNetworkLayerTCP)
	if int(uint16((uint16((uint16_t((UA_UInt16(layer[0].serverSocketsSize)))))))) == 0 {
		// Every open socket can generate two jobs
		return 0
	}
	var fdset fd_set
	var errset fd_set
	var highestfd UA_Int32 = setFDSet(layer, (*[100000000]fd_set)(unsafe.Pointer(&fdset))[:])
	// Listen on open sockets (including the server)
	setFDSet(layer, (*[100000000]fd_set)(unsafe.Pointer(&errset))[:])
	var tmptv noarch.Timeval = noarch.Timeval{0, int32(int(uint16((uint16((uint16_t((timeout))))))) * 1000)}
	if select_(int((__int32_t((int32_t((highestfd + UA_Int32((int32_t((__int32_t((1)))))))))))), (*[100000000]fd_set)(unsafe.Pointer(&fdset))[:], nil, (*[100000000]fd_set)(unsafe.Pointer(&errset))[:], (*[100000000]noarch.Timeval)(unsafe.Pointer(&tmptv))[:]) < 0 {
		{
			var errno_str []byte = strerror(((__errno_location())[0]))
			UA_LOG_WARNING(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Socket select failed with %s\x00"), errno_str)
		}
		// we will retry, so do not return bad
		return 0
	}
	{
		var i UA_UInt16
		for ; int(uint16((uint16((uint16_t((i))))))) < int(uint16((uint16((uint16_t((UA_UInt16(layer[0].serverSocketsSize)))))))); i++ {
			if !((((*[100000000]fd_set)(unsafe.Pointer(&fdset))[:])[0].fds_bits)[layer[0].serverSockets[:][i]/UA_Int32((int32_t((__int32_t((8*int(8)))))))]&__fd_mask((uint32(1<<uint64(int((__int32_t((int32_t((layer[0].serverSockets[:][i] % UA_Int32((int32_t((__int32_t((8 * int(8))))))))))))))))) != __fd_mask((0))) {
				// Accept new connections via the server sockets
				continue
			}
			var remote sockaddr_storage
			var remote_size socklen_t = socklen_t((__socklen_t((128))))
			var newsockfd int = accept(int((__int32_t((int32_t((UA_Int32(layer[0].serverSockets[:][i]))))))), __SOCKADDR_ARG{(*[100000000]sockaddr_storage)(unsafe.Pointer(&remote))[:]}, (*[100000000]socklen_t)(unsafe.Pointer(&remote_size))[:])
			if newsockfd < 0 {
				continue
			}
			UA_LOG_TRACE(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | New TCP connection on server socket %i\x00"), newsockfd, UA_Int32(layer[0].serverSockets[:][i]))
			ServerNetworkLayerTCP_add(layer, UA_Int32(newsockfd), (*[100000000]sockaddr_storage)(unsafe.Pointer(&remote))[:])
		}
	}
	var e []ConnectionEntry
	var e_tmp []ConnectionEntry
	var now UA_DateTime = UA_DateTime_nowMonotonic()
	{
		// Read from established sockets
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39108 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc002f2a980), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39108 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc002f2a980), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39108 :Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc002f2a980), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39108 :Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc002f2a980), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39108 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc002f2a980), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		for ; e != nil && func() int {
			e_tmp = (e)[0].pointers.le_next
			tempVar := &1
			return *tempVar
		}() != 0; e = e_tmp {
			if uint32(e[0].connection.state) == uint32(UA_CONNECTION_OPENING) && int64(int32((__int64_t((int64_t((now))))))) > int64(int32((__int64_t((int64_t((UA_DateTime(e[0].connection.openingDate))))))))+120000*int64(10*1000) {
				UA_LOG_INFO(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | Closed by the server (no Hello Message)\x00"), UA_Int32(e[0].connection.sockfd))
				for {
					if (e)[0].pointers.le_next != nil {
						(e)[0].pointers.le_next[0].pointers.le_prev = (e)[0].pointers.le_prev
					}
					(e)[0].pointers.le_prev[0] = (e)[0].pointers.le_next
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
				close(int((__int32_t((int32_t((UA_Int32(e[0].connection.sockfd))))))))
				UA_Server_removeConnection(server, (*[100000000]UA_Connection)(unsafe.Pointer(&e[0].connection))[:])
				continue
			}
			if !((((*[100000000]fd_set)(unsafe.Pointer(&errset))[:])[0].fds_bits)[e[0].connection.sockfd/UA_Int32((int32_t((__int32_t((8*int(8)))))))]&__fd_mask((uint32(1<<uint64(int((__int32_t((int32_t((e[0].connection.sockfd % UA_Int32((int32_t((__int32_t((8 * int(8))))))))))))))))) != __fd_mask((0))) && !((((*[100000000]fd_set)(unsafe.Pointer(&fdset))[:])[0].fds_bits)[e[0].connection.sockfd/UA_Int32((int32_t((__int32_t((8*int(8)))))))]&__fd_mask((uint32(1<<uint64(int((__int32_t((int32_t((e[0].connection.sockfd % UA_Int32((int32_t((__int32_t((8 * int(8))))))))))))))))) != __fd_mask((0))) {
				continue
			}
			UA_LOG_TRACE(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | Activity on the socket\x00"), UA_Int32(e[0].connection.sockfd))
			var buf UA_ByteString = UA_BYTESTRING_NULL
			var retval UA_StatusCode = connection_recv((*[100000000]UA_Connection)(unsafe.Pointer(&e[0].connection))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&buf))[:], 0)
			if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
				// Process packets
				UA_Server_processBinaryMessage(server, (*[100000000]UA_Connection)(unsafe.Pointer(&e[0].connection))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&buf))[:])
				connection_releaserecvbuffer((*[100000000]UA_Connection)(unsafe.Pointer(&e[0].connection))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&buf))[:])
			} else if retval == UA_StatusCode((uint32_t((uint32((uint32(2158886912))))))) {
				// The socket is shutdown but not closed
				UA_LOG_INFO(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Connection %i | Closed\x00"), UA_Int32(e[0].connection.sockfd))
				for {
					if (e)[0].pointers.le_next != nil {
						(e)[0].pointers.le_next[0].pointers.le_prev = (e)[0].pointers.le_prev
					}
					(e)[0].pointers.le_prev[0] = (e)[0].pointers.le_next
					if noarch.NotInt((0)) != 0 {
						break
					}
				}
				close(int((__int32_t((int32_t((UA_Int32(e[0].connection.sockfd))))))))
				UA_Server_removeConnection(server, (*[100000000]UA_Connection)(unsafe.Pointer(&e[0].connection))[:])
			}
		}
	}
	return 0
}
// ServerNetworkLayerTCP_stop - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39148
func ServerNetworkLayerTCP_stop(nl []UA_ServerNetworkLayer, server []UA_Server) {
	var layer []ServerNetworkLayerTCP = nl[0].handle.([]ServerNetworkLayerTCP)
	UA_LOG_INFO(UA_Logger(layer[0].logger), UA_LOGCATEGORY_NETWORK, []byte("Shutting down the TCP network layer\x00"))
	{
		var i UA_UInt16
		for ; int(uint16((uint16((uint16_t((i))))))) < int(uint16((uint16((uint16_t((UA_UInt16(layer[0].serverSocketsSize)))))))); i++ {
			// Close the server sockets
			shutdown(int((__int32_t((int32_t((UA_Int32(layer[0].serverSockets[:][i]))))))), 2)
			close(int((__int32_t((int32_t((UA_Int32(layer[0].serverSockets[:][i]))))))))
		}
	}
	layer[0].serverSocketsSize = 0
	var e []ConnectionEntry
	{
		// Close open connections
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39163 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0089dfcc0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39163 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0089dfcc0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39163 :Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0089dfcc0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39163 :Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0089dfcc0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39163 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc0089dfcc0), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		for ; e != nil; e = (e)[0].pointers.le_next {
			ServerNetworkLayerTCP_close((*[100000000]UA_Connection)(unsafe.Pointer(&e[0].connection))[:])
		}
	}
	// Run recv on client sockets. This picks up the closed sockets and frees
	//     * the connection.
	ServerNetworkLayerTCP_listen(nl, server, 0)
}
// ServerNetworkLayerTCP_deleteMembers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39176
// run only when the server is stopped
func ServerNetworkLayerTCP_deleteMembers(nl []UA_ServerNetworkLayer) {
	var layer []ServerNetworkLayerTCP = nl[0].handle.([]ServerNetworkLayerTCP)
	UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&nl[0].discoveryUrl))[:])
	var e []ConnectionEntry
	var e_tmp []ConnectionEntry
	{
		// Hard-close and remove remaining connections. The server is no longer
		//     * running. So this is safe.
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39184 :Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00929e600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.MemberExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39184 :Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00929e600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.ParenExpr):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39184 :Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00929e600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39184 :Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00929e600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		// Warning (*ast.BinaryOperator):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39184 :Cannot transpileToStmt : Cannot transpileToExpr. err = Cannot transpile BinaryOperator with type 'ConnectionEntry *' : result type = {unknown53}. Error: operator is `=`. cannot atomic for right part. Cannot transpileToExpr. err = Cannot transpileImplicitCastExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot transpileToExpr. err = Cannot transpile MemberExpr. err = Cannot transpileToExpr. err = Cannot transpile ParenExpr. err = Cannot casting {struct __struct_at__home_ee_go_src_github_com_eugeis_gopen62541_gen_open62541_c_38810_5_ * -> struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *}. err = Found mistake `cToType` `struct (anonymous struct at $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:38810:5) *` C type: &ast.SliceExpr{X:(*ast.CallExpr)(0xc00929e600), Lbrack:0, Low:ast.Expr(nil), High:ast.Expr(nil), Max:ast.Expr(nil), Slice3:false, Rbrack:0}
		for ; e != nil && func() int {
			e_tmp = (e)[0].pointers.le_next
			tempVar := &1
			return *tempVar
		}() != 0; e = e_tmp {
			for {
				if (e)[0].pointers.le_next != nil {
					(e)[0].pointers.le_next[0].pointers.le_prev = (e)[0].pointers.le_prev
				}
				(e)[0].pointers.le_prev[0] = (e)[0].pointers.le_next
				if noarch.NotInt((0)) != 0 {
					break
				}
			}
			close(int((__int32_t((int32_t((UA_Int32(e[0].connection.sockfd))))))))
			_ = e
		}
	}
	_ = layer
	// Free the layer
}
// UA_ServerNetworkLayerTCP - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39194
func UA_ServerNetworkLayerTCP(conf UA_ConnectionConfig, port UA_UInt16, logger UA_Logger) UA_ServerNetworkLayer {
	var nl UA_ServerNetworkLayer
	noarch.Memset((*[100000000]UA_ServerNetworkLayer)(unsafe.Pointer(&nl))[:], byte(0), 32)
	var layer []ServerNetworkLayerTCP = make([]ServerNetworkLayerTCP, 1*4144/4144)
	if layer == nil {
		return UA_ServerNetworkLayer(nl)
	}
	layer[0].logger = func() UA_Logger {
		if logger != nil {
			return UA_Logger(logger)
		}
		return UA_Log_Stdout
	}()
	layer[0].conf = conf
	layer[0].port = port
	nl.handle = layer
	nl.start = ServerNetworkLayerTCP_start
	nl.listen = ServerNetworkLayerTCP_listen
	nl.stop = ServerNetworkLayerTCP_stop
	nl.deleteMembers = ServerNetworkLayerTCP_deleteMembers
	return UA_ServerNetworkLayer(nl)
}
// ClientNetworkLayerTCP_close - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39219
//
// Client NetworkLayer TCP
//
func ClientNetworkLayerTCP_close(connection []UA_Connection) {
	if uint32(connection[0].state) == uint32(UA_CONNECTION_CLOSED) {
		return
	}
	shutdown(int((__int32_t((int32_t((UA_Int32(connection[0].sockfd))))))), 2)
	close(int((__int32_t((int32_t((UA_Int32(connection[0].sockfd))))))))
	connection[0].state = UA_CONNECTION_CLOSED
}
// UA_ClientConnectionTCP - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39228
func UA_ClientConnectionTCP(conf UA_ConnectionConfig, endpointUrl []byte, timeout UA_UInt32, logger UA_Logger) UA_Connection {
	if logger == nil {
		logger = UA_Log_Stdout
	}
	var connection UA_Connection
	noarch.Memset((*[100000000]UA_Connection)(unsafe.Pointer(&connection))[:], byte(0), 104)
	connection.state = UA_CONNECTION_CLOSED
	connection.localConf = conf
	connection.remoteConf = conf
	connection.send = connection_write
	connection.recv = connection_recv
	connection.close = ClientNetworkLayerTCP_close
	connection.free = nil
	connection.getSendBuffer = connection_getsendbuffer
	connection.releaseSendBuffer = connection_releasesendbuffer
	connection.releaseRecvBuffer = connection_releaserecvbuffer
	var endpointUrlString UA_String = UA_STRING([]byte(uint32((uintptr_t(endpointUrl)))))
	var hostnameString UA_String = UA_STRING_NULL
	var pathString UA_String = UA_STRING_NULL
	var port UA_UInt16
	var hostname []byte = make([]byte, 512)
	var parse_retval UA_StatusCode = UA_parseEndpointUrl((*[100000000]UA_String)(unsafe.Pointer(&endpointUrlString))[:], (*[100000000]UA_String)(unsafe.Pointer(&hostnameString))[:], (*[100000000]UA_UInt16)(unsafe.Pointer(&port))[:], (*[100000000]UA_String)(unsafe.Pointer(&pathString))[:])
	if parse_retval != UA_StatusCode((uint32_t((uint32((0)))))) || uint(hostnameString.length) > uint((511)) {
		UA_LOG_WARNING(UA_Logger(logger), UA_LOGCATEGORY_NETWORK, []byte("Server url is invalid: %s\x00"), endpointUrl)
		return UA_Connection(connection)
	}
	memcpy(hostname, hostnameString.data, uint32((uint(hostnameString.length))))
	hostname[uint(hostnameString.length)] = byte(0)
	if int(uint16((uint16((uint16_t((port))))))) == 0 {
		port = 4840
		UA_LOG_INFO(UA_Logger(logger), UA_LOGCATEGORY_NETWORK, []byte("No port defined, using default port %d\x00"), int(uint16((uint16((uint16_t((UA_UInt16(port)))))))))
	}
	var hints addrinfo
	var server []addrinfo
	noarch.Memset((*[100000000]addrinfo)(unsafe.Pointer(&hints))[:], byte(0), 48)
	hints.ai_family = 0
	hints.ai_socktype = SOCK_STREAM
	var portStr []byte = make([]byte, 6)
	noarch.Snprintf(portStr, 6, []byte("%d\x00"), int(uint16((uint16((uint16_t((UA_UInt16(port)))))))))
	var error int = getaddrinfo(hostname, portStr, (*[100000000]addrinfo)(unsafe.Pointer(&hints))[:], (*[100000000][]addrinfo)(unsafe.Pointer(&server))[:])
	if error != 0 || server == nil {
		UA_LOG_WARNING(UA_Logger(logger), UA_LOGCATEGORY_NETWORK, []byte("DNS lookup of %s failed with error %s\x00"), hostname, gai_strerror(error))
		return UA_Connection(connection)
	}
	var connected UA_Boolean
	var dtTimeout UA_DateTime = UA_DateTime((int64_t((__int64_t((int32(int64(uint32((uint32((uint32_t((timeout))))))) * int64(10*1000))))))))
	var connStart UA_DateTime = UA_DateTime_nowMonotonic()
	var clientsockfd int
	for {
		// On linux connect may immediately return with ECONNREFUSED but we still
		//     * want to try to connect. So use a loop and retry until timeout is
		//     * reached.
		// Get a socket
		clientsockfd = socket(server[0].ai_family, server[0].ai_socktype, server[0].ai_protocol)
		if clientsockfd < 0 {
			{
				var errno_str []byte = strerror(((__errno_location())[0]))
				UA_LOG_WARNING(UA_Logger(logger), UA_LOGCATEGORY_NETWORK, []byte("Could not create client socket: %s\x00"), errno_str)
			}
			freeaddrinfo(server)
			return UA_Connection(connection)
		}
		connection.state = UA_CONNECTION_OPENING
		// Connect to the server
		// cast for win32
		connection.sockfd = UA_Int32(clientsockfd)
		if socket_set_nonblocking(clientsockfd) != UA_StatusCode((uint32_t((uint32((0)))))) {
			// Non blocking connect to be able to timeout
			UA_LOG_WARNING(UA_Logger(logger), UA_LOGCATEGORY_NETWORK, []byte("Could not set the client socket to nonblocking\x00"))
			ClientNetworkLayerTCP_close((*[100000000]UA_Connection)(unsafe.Pointer(&connection))[:])
			freeaddrinfo(server)
			return UA_Connection(connection)
		}
		// Non blocking connect
		error = connect(clientsockfd, __CONST_SOCKADDR_ARG{server[0].ai_addr}, socklen_t(server[0].ai_addrlen))
		if error == -1 && (__errno_location())[0] != 115 {
			ClientNetworkLayerTCP_close((*[100000000]UA_Connection)(unsafe.Pointer(&connection))[:])
			{
				var errno_str []byte = strerror(((__errno_location())[0]))
				UA_LOG_WARNING(UA_Logger(logger), UA_LOGCATEGORY_NETWORK, []byte("Connection to %s failed with error: %s\x00"), endpointUrl, errno_str)
			}
			freeaddrinfo(server)
			return UA_Connection(connection)
		}
		if error == -1 && (__errno_location())[0] == 115 {
			var timeSinceStart UA_DateTime = UA_DateTime_nowMonotonic() - connStart
			if timeSinceStart > dtTimeout {
				// Use select to wait and check if connected
				// connection in progress. Wait until connected using select
				break
			}
			var fdset fd_set
			for {
				var __d0 int
				var __d1 int
				// Warning (*ast.GCCAsmStmt):  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39366 :cannot transpile asm, will be ignored
				if noarch.NotInt((0)) != 0 {
					break
				}
			}
			_ = (func() __fd_mask {
				tempVar := &(((*[100000000]fd_set)(unsafe.Pointer(&fdset))[:])[0].fds_bits)[clientsockfd/(8*int(8))]
				*tempVar |= __fd_mask((uint32(1 << uint64(clientsockfd%(8*int(8))))))
				return *tempVar
			}())
			var timeout_usec UA_DateTime = UA_DateTime((int64_t((__int64_t((int32(int64(int32((__int64_t((int64_t((dtTimeout - timeSinceStart))))))) / int64(10))))))))
			var tmptv noarch.Timeval = noarch.Timeval{(int32((__int64_t((int64_t((timeout_usec / UA_DateTime((int64_t((__int64_t((1000000))))))))))))), (int32((__int64_t((int64_t((timeout_usec % UA_DateTime((int64_t((__int64_t((1000000)))))))))))))}
			var resultsize int = select_(int((__int32_t((int32_t((UA_Int32((clientsockfd + 1)))))))), nil, (*[100000000]fd_set)(unsafe.Pointer(&fdset))[:], nil, (*[100000000]noarch.Timeval)(unsafe.Pointer(&tmptv))[:])
			if resultsize == 1 {
				var so_error int
				var len socklen_t = socklen_t((__socklen_t((4))))
				var ret int = getsockopt(clientsockfd, 1, 4, (*[100000000]int)(unsafe.Pointer(&so_error))[:], (*[100000000]socklen_t)(unsafe.Pointer(&len))[:])
				if ret != 0 || so_error != 0 {
					if so_error != 111 {
						// on connection refused we should still try to connect
						// connection refused happens on localhost or local ip without timeout
						ClientNetworkLayerTCP_close((*[100000000]UA_Connection)(unsafe.Pointer(&connection))[:])
						UA_LOG_WARNING(UA_Logger(logger), UA_LOGCATEGORY_NETWORK, []byte("Connection to %s failed with error: %s\x00"), endpointUrl, strerror(func() int {
							if ret == 0 {
								return so_error
							}
							return ((__errno_location())[0])
						}()))
						freeaddrinfo(server)
						return UA_Connection(connection)
					}
					// wait until we try a again. Do not make this too small, otherwise the
					//                     * timeout is somehow wrong
					usleep(__useconds_t(100 * 1000))
				} else {
					connected = 1
					break
				}
			}
		} else {
			connected = 1
			break
		}
		ClientNetworkLayerTCP_close((*[100000000]UA_Connection)(unsafe.Pointer(&connection))[:])
		if !(UA_DateTime_nowMonotonic()-connStart < dtTimeout) {
			break
		}
	}
	freeaddrinfo(server)
	if int((int((noarch.NotUA_Boolean(UA_Boolean(connected)))))) != 0 {
		if uint32(connection.state) != uint32(UA_CONNECTION_CLOSED) {
			// connection timeout
			ClientNetworkLayerTCP_close((*[100000000]UA_Connection)(unsafe.Pointer(&connection))[:])
		}
		UA_LOG_WARNING(UA_Logger(logger), UA_LOGCATEGORY_NETWORK, []byte("Trying to connect to %s timed out\x00"), endpointUrl)
		return UA_Connection(connection)
	}
	if socket_set_blocking(clientsockfd) != UA_StatusCode((uint32_t((uint32((0)))))) {
		// We are connected. Reset socket to blocking
		UA_LOG_WARNING(UA_Logger(logger), UA_LOGCATEGORY_NETWORK, []byte("Could not set the client socket to blocking\x00"))
		ClientNetworkLayerTCP_close((*[100000000]UA_Connection)(unsafe.Pointer(&connection))[:])
		return UA_Connection(connection)
	}
	return UA_Connection(connection)
}

type timex struct {
	modes          uint32
	offset         __syscall_slong_t
	freq           __syscall_slong_t
	maxerror       __syscall_slong_t
	esterror       __syscall_slong_t
	status         int
	constant       __syscall_slong_t
	precision      __syscall_slong_t
	tolerance      __syscall_slong_t
	time           noarch.Timeval
	tick           __syscall_slong_t
	ppsfreq        __syscall_slong_t
	jitter         __syscall_slong_t
	shift          int
	stabil         __syscall_slong_t
	jitcnt         __syscall_slong_t
	calcnt         __syscall_slong_t
	errcnt         __syscall_slong_t
	stbcnt         __syscall_slong_t
	tai            int
	implicit_int   int
	implicit_int21 int
	implicit_int22 int
	implicit_int23 int
	implicit_int24 int
	implicit_int25 int
	implicit_int26 int
	implicit_int27 int
	implicit_int28 int
	implicit_int29 int
	implicit_int30 int
}
type tm struct {
	tm_sec    int
	tm_min    int
	tm_hour   int
	tm_mday   int
	tm_mon    int
	tm_year   int
	tm_wday   int
	tm_yday   int
	tm_isdst  int
	tm_gmtoff int32
	tm_zone   []byte
}
type itimerspec struct {
	it_interval timespec
	it_value    timespec
}
type timezone struct {
	tz_minuteswest int
	tz_dsttime     int
}
type __timezone_ptr_t = []noarch.Timezone
type itimerval struct {
	it_interval noarch.Timeval
	it_value    noarch.Timeval
}
type __itimer_which_t int
// UA_DateTime_now - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39499
// amalgamated original file "/home/travis/build/open62541/open62541/plugins/ua_clock.c"
// This work is licensed under a Creative Commons CCZero 1.0 Universal License.
// * See http://creativecommons.org/publicdomain/zero/1.0/ for more information.
// *
// *    Copyright 2016-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Thomas Stalder, Blue Time Concept SA
//
// Enable POSIX features
// On older systems we need to define _BSD_SOURCE.
// * _DEFAULT_SOURCE is an alias for that.
func UA_DateTime_now() UA_DateTime {
	var tv noarch.Timeval
	gettimeofday((*[100000000]noarch.Timeval)(unsafe.Pointer(&tv))[:], __timezone_ptr_t((nil)))
	return UA_DateTime(int64(int32((int32(tv.TvSec))))*int64(10*1000*1000) + int64(int32((int32(tv.TvUsec))))*int64(10) + int64(11644473600*(10*1000*1000)))
}
// UA_DateTime_localTimeUtcOffset - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39518
// Credit to https://stackoverflow.com/questions/13804095/get-the-time-zone-gmt-offset-in-c
func UA_DateTime_localTimeUtcOffset() UA_Int64 {
	var gmt noarch.TimeT
	var rawtime noarch.TimeT = noarch.Time(nil)
	var ptm []noarch.Tm
	var gbuf noarch.Tm
	ptm = gmtime_r((*[100000000]noarch.TimeT)(unsafe.Pointer(&rawtime))[:], (*[100000000]noarch.Tm)(unsafe.Pointer(&gbuf))[:])
	// Request that mktime() looksup dst in timezone database
	ptm[0].TmIsdst = -1
	gmt = noarch.Mktime(ptm)
	return UA_Int64((difftime(noarch.TimeT(rawtime), noarch.TimeT(gmt)) * float64(10*1000*1000)))
}
// UA_DateTime_nowMonotonic - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39539
func UA_DateTime_nowMonotonic() UA_DateTime {
	var ts timespec
	clock_gettime(clockid_t((__clockid_t((4)))), (*[100000000]timespec)(unsafe.Pointer(&ts))[:])
	return UA_DateTime(int64(int32((int32(ts.tv_sec))))*int64(10*1000*1000) + int64(int32((__syscall_slong_t(ts.tv_nsec) / __syscall_slong_t((100))))))
}

var logLevelNames [][]byte = [][]byte{[]byte("trace\x00"), []byte("debug\x00"), []byte("\x1b[32minfo\x00"), []byte("\x1b[33mwarn\x00"), []byte("\x1b[31merror\x00"), []byte("\x1b[35mfatal\x00")}
var logCategoryNames [][]byte = [][]byte{[]byte("network\x00"), []byte("channel\x00"), []byte("session\x00"), []byte("server\x00"), []byte("client\x00"), []byte("userland\x00"), []byte("securitypolicy\x00")}
// UA_Log_Stdout - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39621
// amalgamated original file "/home/travis/build/open62541/open62541/plugins/ua_log_stdout.c"
// This work is licensed under a Creative Commons CCZero 1.0 Universal License.
// * See http://creativecommons.org/publicdomain/zero/1.0/ for more information.
// *
// *    Copyright 2016-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Thomas Stalder, Blue Time Concept SA
//
// ANSI escape sequences for color output taken from here:
// * https://stackoverflow.com/questions/3219393/stdlib-and-colored-output-in-c
func UA_Log_Stdout(level int, category int, msg []byte, args []__va_list_tag) {
	var tOffset UA_Int64 = UA_DateTime_localTimeUtcOffset()
	var dts UA_DateTimeStruct = UA_DateTime_toStruct(UA_DateTime_now() + UA_DateTime((int64_t((__int64_t((int32((__int64_t((int64_t((tOffset)))))))))))))
	noarch.Printf([]byte("[%04d-%02d-%02d %02d:%02d:%02d.%03d (UTC%+05d)] %s/%s\x1b[0m\t\x00"), int(uint16((uint16((uint16_t((UA_UInt16(dts.year)))))))), int(uint16((uint16((uint16_t((UA_UInt16(dts.month)))))))), int(uint16((uint16((uint16_t((UA_UInt16(dts.day)))))))), int(uint16((uint16((uint16_t((UA_UInt16(dts.hour)))))))), int(uint16((uint16((uint16_t((UA_UInt16(dts.min)))))))), int(uint16((uint16((uint16_t((UA_UInt16(dts.sec)))))))), int(uint16((uint16((uint16_t((UA_UInt16(dts.milliSec)))))))), int((int64(int32((__int64_t((int64_t((tOffset))))))) / int64(10*1000*1000) / 36)), logLevelNames[level], logCategoryNames[category])
	vprintf(msg, args)
	fmt.Printf("\n")
	noarch.Fflush(noarch.Stdout)
}

type AccessControlContext struct {
	allowAnonymous            UA_Boolean
	usernamePasswordLoginSize uint
	usernamePasswordLogin     []UA_UsernamePasswordLogin
}

var anonymous_policy UA_String = UA_String{27 - 1, []byte("open62541-anonymous-policy\x00")}
var username_policy UA_String = UA_String{26 - 1, []byte("open62541-username-policy\x00")}
// activateSession_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39673
// amalgamated original file "/home/travis/build/open62541/open62541/plugins/ua_accesscontrol_default.c"
// This work is licensed under a Creative Commons CCZero 1.0 Universal License.
// * See http://creativecommons.org/publicdomain/zero/1.0/ for more information.
// *
// *    Copyright 2016-2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
// Example access control management. Anonymous and username / password login.
// * The access rights are maximally permissive.
//
// Access Control Logic
//
func activateSession_default(server []UA_Server, ac []UA_AccessControl, sessionId []UA_NodeId, userIdentityToken []UA_ExtensionObject, sessionContext []interface{}) UA_StatusCode {
	var context []AccessControlContext = ac[0].context.([]AccessControlContext)
	if uint32(userIdentityToken[0].encoding) == uint32(UA_EXTENSIONOBJECT_ENCODED_NOBODY) {
		if int((int((noarch.NotUA_Boolean(UA_Boolean(context[0].allowAnonymous)))))) != 0 {
			// The empty token is interpreted as anonymous
			return UA_StatusCode((uint32_t((uint32((uint32(2149580800)))))))
		}
		// No userdata atm
		sessionContext[0] = nil
		return 0
	}
	if uint32(userIdentityToken[0].encoding) < uint32(UA_EXTENSIONOBJECT_DECODED) {
		// Could the token be decoded?
		return UA_StatusCode((uint32_t((uint32((uint32(2149580800)))))))
	}
	if (*userIdentityToken[0].content.decoded()).type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[53]))[:] {
		if int((int((noarch.NotUA_Boolean(UA_Boolean(context[0].allowAnonymous)))))) != 0 {
			// Anonymous login
			return UA_StatusCode((uint32_t((uint32((uint32(2149580800)))))))
		}
		var token []UA_AnonymousIdentityToken = (*userIdentityToken[0].content.decoded()).data.([]UA_AnonymousIdentityToken)
		if token[0].policyId.data != nil && int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&token[0].policyId))[:], (*[100000000]UA_String)(unsafe.Pointer(&anonymous_policy))[:])))))) != 0 {
			// Compatibility notice: Siemens OPC Scout v10 provides an empty
			//         * policyId. This is not compliant. For compatibility, assume that empty
			//         * policyId == ANONYMOUS_POLICY
			return UA_StatusCode((uint32_t((uint32((uint32(2149580800)))))))
		}
		// No userdata atm
		sessionContext[0] = nil
		return 0
	}
	if (*userIdentityToken[0].content.decoded()).type_ == (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[98]))[:] {
		var userToken []UA_UserNameIdentityToken = (*userIdentityToken[0].content.decoded()).data.([]UA_UserNameIdentityToken)
		if int((int((noarch.NotUA_Boolean(UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&userToken[0].policyId))[:], (*[100000000]UA_String)(unsafe.Pointer(&username_policy))[:])))))) != 0 {
			// Username and password
			return UA_StatusCode((uint32_t((uint32((uint32(2149580800)))))))
		}
		if uint(userToken[0].encryptionAlgorithm.length) > uint((0)) {
			// TODO: Support encrypted username/password over unencrypted SecureChannels
			return UA_StatusCode((uint32_t((uint32((uint32(2149580800)))))))
		}
		if uint(userToken[0].userName.length) == uint((0)) && uint(userToken[0].password.length) == uint((0)) {
			// Empty username and password
			return UA_StatusCode((uint32_t((uint32((uint32(2149580800)))))))
		}
		var match UA_Boolean
		{
			var i uint
			for ; i < uint(context[0].usernamePasswordLoginSize); i++ {
				if int((int((UA_String_equal((*[100000000]UA_String)(unsafe.Pointer(&userToken[0].userName))[:], (*[100000000]UA_String)(unsafe.Pointer(&context[0].usernamePasswordLogin[i].username))[:]))))) != 0 && int((int((UA_String_equal((*[100000000]UA_ByteString)(unsafe.Pointer(&userToken[0].password))[:], (*[100000000]UA_String)(unsafe.Pointer(&context[0].usernamePasswordLogin[i].password))[:]))))) != 0 {
					// Try to match username/pw
					match = 1
					break
				}
			}
		}
		if int((int((noarch.NotUA_Boolean(UA_Boolean(match)))))) != 0 {
			return UA_StatusCode((uint32_t((uint32((uint32(2149515264)))))))
		}
		// No userdata atm
		sessionContext[0] = nil
		return 0
	}
	// Unsupported token type
	return UA_StatusCode((uint32_t((uint32((uint32(2149580800)))))))
}
// closeSession_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39750
func closeSession_default(server []UA_Server, ac []UA_AccessControl, sessionId []UA_NodeId, sessionContext interface{}) {
}
// getUserRightsMask_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39756
// no context to clean up
func getUserRightsMask_default(server []UA_Server, ac []UA_AccessControl, sessionId []UA_NodeId, sessionContext interface{}, nodeId []UA_NodeId, nodeContext interface{}) UA_UInt32 {
	return UA_UInt32((uint32_t((uint32((uint32(4294967295)))))))
}
// getUserAccessLevel_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39763
func getUserAccessLevel_default(server []UA_Server, ac []UA_AccessControl, sessionId []UA_NodeId, sessionContext interface{}, nodeId []UA_NodeId, nodeContext interface{}) UA_Byte {
	return UA_Byte(255)
}
// getUserExecutable_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39770
func getUserExecutable_default(server []UA_Server, ac []UA_AccessControl, sessionId []UA_NodeId, sessionContext interface{}, methodId []UA_NodeId, methodContext interface{}) UA_Boolean {
	return 1
}
// getUserExecutableOnObject_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39777
func getUserExecutableOnObject_default(server []UA_Server, ac []UA_AccessControl, sessionId []UA_NodeId, sessionContext interface{}, methodId []UA_NodeId, methodContext interface{}, objectId []UA_NodeId, objectContext interface{}) UA_Boolean {
	return 1
}
// allowAddNode_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39785
func allowAddNode_default(server []UA_Server, ac []UA_AccessControl, sessionId []UA_NodeId, sessionContext interface{}, item []UA_AddNodesItem) UA_Boolean {
	return 1
}
// allowAddReference_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39792
func allowAddReference_default(server []UA_Server, ac []UA_AccessControl, sessionId []UA_NodeId, sessionContext interface{}, item []UA_AddReferencesItem) UA_Boolean {
	return 1
}
// allowDeleteNode_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39799
func allowDeleteNode_default(server []UA_Server, ac []UA_AccessControl, sessionId []UA_NodeId, sessionContext interface{}, item []UA_DeleteNodesItem) UA_Boolean {
	return 1
}
// allowDeleteReference_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39806
func allowDeleteReference_default(server []UA_Server, ac []UA_AccessControl, sessionId []UA_NodeId, sessionContext interface{}, item []UA_DeleteReferencesItem) UA_Boolean {
	return 1
}
// deleteMembers_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39817
//
// Create Delete Access Control Plugin
//
func deleteMembers_default(ac []UA_AccessControl) {
	UA_Array_delete(uint32((uintptr_t(ac[0].userTokenPolicies))), uint(ac[0].userTokenPoliciesSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[125]))[:])
	var context []AccessControlContext = ac[0].context.([]AccessControlContext)
	{
		var i uint
		for ; i < uint(context[0].usernamePasswordLoginSize); i++ {
			UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&context[0].usernamePasswordLogin[i].username))[:])
			UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&context[0].usernamePasswordLogin[i].password))[:])
		}
	}
	if uint(context[0].usernamePasswordLoginSize) > uint((0)) {
		_ = context[0].usernamePasswordLogin
	}
	_ = ac[0].context
}
// UA_AccessControl_default - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39832
func UA_AccessControl_default(allowAnonymous UA_Boolean, usernamePasswordLoginSize uint, usernamePasswordLogin []UA_UsernamePasswordLogin) UA_AccessControl {
	var context []AccessControlContext = make([]AccessControlContext, 24/24)
	var ac UA_AccessControl
	noarch.Memset((*[100000000]UA_AccessControl)(unsafe.Pointer(&ac))[:], byte(0), 40)
	ac.context = context
	ac.deleteMembers = deleteMembers_default
	ac.activateSession = activateSession_default
	ac.closeSession = closeSession_default
	ac.getUserRightsMask = getUserRightsMask_default
	ac.getUserAccessLevel = getUserAccessLevel_default
	ac.getUserExecutable = getUserExecutable_default
	ac.getUserExecutableOnObject = getUserExecutableOnObject_default
	ac.allowAddNode = allowAddNode_default
	ac.allowAddReference = allowAddReference_default
	ac.allowDeleteNode = allowDeleteNode_default
	ac.allowDeleteReference = allowDeleteReference_default
	// Allow anonymous?
	context[0].allowAnonymous = allowAnonymous
	if usernamePasswordLoginSize > uint((0)) {
		// Copy username/password to the access control plugin
		context[0].usernamePasswordLogin = make([]UA_UsernamePasswordLogin, usernamePasswordLoginSize*uint((32))*uint((1))/32)
		if context[0].usernamePasswordLogin == nil {
			return UA_AccessControl(ac)
		}
		context[0].usernamePasswordLoginSize = usernamePasswordLoginSize
		{
			var i uint
			for ; i < usernamePasswordLoginSize; i++ {
				UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&usernamePasswordLogin[i].username))[:], (*[100000000]UA_String)(unsafe.Pointer(&context[0].usernamePasswordLogin[i].username))[:])
				UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&usernamePasswordLogin[i].password))[:], (*[100000000]UA_String)(unsafe.Pointer(&context[0].usernamePasswordLogin[i].password))[:])
			}
		}
	}
	var policies uint
	if int((int((UA_Boolean(allowAnonymous))))) != 0 {
		// Set the allowed policies
		policies ++
	}
	if usernamePasswordLoginSize > uint((0)) {
		policies ++
	}
	ac.userTokenPoliciesSize = 0
	ac.userTokenPolicies = UA_Array_new(uint(policies), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[125]))[:]).([]UA_UserTokenPolicy)
	if ac.userTokenPolicies == nil {
		return UA_AccessControl(ac)
	}
	ac.userTokenPoliciesSize = policies
	policies = 0
	if int((int((UA_Boolean(allowAnonymous))))) != 0 {
		ac.userTokenPolicies[policies].tokenType = UA_USERTOKENTYPE_ANONYMOUS
		ac.userTokenPolicies[policies].policyId = UA_String_fromChars([]byte("open62541-anonymous-policy\x00"))
		policies ++
	}
	if usernamePasswordLoginSize > uint((0)) {
		ac.userTokenPolicies[policies].tokenType = UA_USERTOKENTYPE_USERNAME
		ac.userTokenPolicies[policies].policyId = UA_String_fromChars([]byte("open62541-username-policy\x00"))
		// No encryption of username/password supported at the moment
		ac.userTokenPolicies[policies].securityPolicyUri = UA_String_fromChars([]byte("http://opcfoundation.org/UA/SecurityPolicy#None\x00"))
	}
	//opcfoundation.org/UA/SecurityPolicy#None");
	return UA_AccessControl(ac)
}
// verifyAllowAll - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39917
// amalgamated original file "/home/travis/build/open62541/open62541/plugins/ua_pki_certificate.c"
// This work is licensed under a Creative Commons CCZero 1.0 Universal License.
// * See http://creativecommons.org/publicdomain/zero/1.0/ for more information.
// *
// *    Copyright 2018 (c) Mark Giraud, Fraunhofer IOSB
//
//
// AllowAll
//
func verifyAllowAll(verificationContext interface{}, certificate []UA_ByteString) UA_StatusCode {
	return 0
}
// deleteVerifyAllowAll - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39922
func deleteVerifyAllowAll(cv []UA_CertificateVerification) {
}
// UA_CertificateVerification_AcceptAll - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:39927
func UA_CertificateVerification_AcceptAll(cv []UA_CertificateVerification) {
	cv[0].verifyCertificate = verifyAllowAll
	cv[0].deleteMembers = deleteVerifyAllowAll
}

type UA_NodeMapEntry struct {
	orig     []UA_NodeMapEntry
	refCount UA_UInt16
	deleted  UA_Boolean
	node     UA_Node
}
type UA_NodeMap struct {
	entries        [][]UA_NodeMapEntry
	size           UA_UInt32
	count          UA_UInt32
	sizePrimeIndex UA_UInt32
}

var primes []UA_UInt32 = []UA_UInt32{7, 13, 31, 61, 127, 251, 509, 1021, 2039, 4093, 8191, 16381, 32749, 65521, 131071, 262139, 524287, 1048573, 2097143, 4194301, 8388593, 16777213, 33554393, 67108859, 134217689, 268435399, 536870909, 1073741789, 2147483647, UA_UInt32(4294967291)}
// mod - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40113
// amalgamated original file "/home/travis/build/open62541/open62541/plugins/ua_nodestore_default.c"
// This work is licensed under a Creative Commons CCZero 1.0 Universal License.
// * See http://creativecommons.org/publicdomain/zero/1.0/ for more information.
// *
// *    Copyright 2017 (c) Julian Grothoff
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
// container_of
// The default Nodestore is simply a hash-map from NodeIds to Nodes. To find an
// * entry, iterate over candidate positions according to the NodeId hash.
// *
// * - Tombstone or non-matching NodeId: continue searching
// * - Matching NodeId: Return the entry
// * - NULL: Abort the search
// the version this is a copy from (or NULL)
// How many consumers have a reference to the node?
// Node was marked as deleted and can be deleted when refCount == 0
//
// HashMap Utilities
//
// The size of the hash-map is always a prime number. They are chosen to be
// * close to the next power of 2. So the size ca. doubles with each prime.
func mod(h UA_UInt32, size UA_UInt32) UA_UInt32 {
	return h % size
}
// mod2 - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40114
func mod2(h UA_UInt32, size UA_UInt32) UA_UInt32 {
	return UA_UInt32((uint32_t((uint32((1 + uint32((uint32((uint32_t((h % (size - UA_UInt32((uint32_t((uint32((2)))))))))))))))))))
}
// higher_prime_index - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40116
func higher_prime_index(n UA_UInt32) UA_UInt16 {
	var low UA_UInt16
	var high UA_UInt16 = UA_UInt16((120 / 4))
	for int(uint16((uint16((uint16_t((low))))))) != int(uint16((uint16((uint16_t((high))))))) {
		var mid UA_UInt16 = UA_UInt16((int(uint16((uint16((uint16_t((low))))))) + (int(uint16((uint16((uint16_t((high)))))))-int(uint16((uint16((uint16_t((low))))))))/2))
		if n > primes[mid] {
			low = UA_UInt16((int(uint16((uint16((uint16_t((mid))))))) + 1))
		} else {
			high = mid
		}
	}
	return UA_UInt16(low)
}
// findFreeSlot - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40131
// returns an empty slot or null if the nodeid exists or if no empty slot is found.
func findFreeSlot(ns []UA_NodeMap, nodeid []UA_NodeId) [][]UA_NodeMapEntry {
	var retval [][]UA_NodeMapEntry
	var h UA_UInt32 = UA_NodeId_hash(nodeid)
	var size UA_UInt32 = UA_UInt32(ns[0].size)
	var idx UA_UInt64 = UA_UInt64((uint64_t((uint64((uint32((uint32((uint32_t((mod(UA_UInt32(h), UA_UInt32(size))))))))))))))
	var startIdx UA_UInt32 = UA_UInt32(UA_UInt64(idx))
	var hash2 UA_UInt32 = mod2(UA_UInt32(h), UA_UInt32(size))
	var entry []UA_NodeMapEntry
	for {
		// use 64 bit container to avoid overflow
		entry = ns[0].entries[UA_UInt32(UA_UInt64(idx))]
		if entry > nil && int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&entry[0].node.nodeId))[:], nodeid))))) != 0 {
			return nil
		}
		if retval == nil && entry <= nil {
			retval = (*[100000000][]UA_NodeMapEntry)(unsafe.Pointer(&ns[0].entries[UA_UInt32(UA_UInt64(idx))]))[:]
		}
		idx += UA_UInt64((uint64_t((uint64((uint32((uint32((uint32_t((hash2))))))))))))
		if idx >= uint32((uint32((uint32_t((size)))))) {
			idx -= UA_UInt64((uint64_t((uint64((uint32((uint32((uint32_t((size))))))))))))
		}
		if !(UA_UInt32(UA_UInt64(idx)) != startIdx && entry != nil) {
			break
		}
	}
	// NULL is returned if there is no free slot (idx == startIdx).
	//     * Otherwise the first free slot is returned after we are sure,
	//     * that the node id cannot be found in the used hashmap (!entry).
	return retval
}
// expand - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40160
// The occupancy of the table after the call will be about 50%
func expand(ns []UA_NodeMap) UA_StatusCode {
	var osize UA_UInt32 = UA_UInt32(ns[0].size)
	var count UA_UInt32 = UA_UInt32(ns[0].count)
	if count*UA_UInt32((uint32_t((uint32((2)))))) < osize && (count*UA_UInt32((uint32_t((uint32((8)))))) > osize || osize <= 64) {
		// Resize only when table after removal of unused elements is either too
		//       full or too empty
		return 0
	}
	var oentries [][]UA_NodeMapEntry = ns[0].entries
	var nindex UA_UInt32 = UA_UInt32((uint32_t((uint32((uint32(uint16((uint16((uint16_t((higher_prime_index(count * UA_UInt32((uint32_t((uint32((2))))))))))))))))))))
	var nsize UA_UInt32 = primes[nindex]
	var nentries [][]UA_NodeMapEntry = make([][]UA_NodeMapEntry, uint32((uint32((uint32_t((nsize))))))*8/8)
	if nentries == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	ns[0].entries = nentries
	ns[0].size = nsize
	ns[0].sizePrimeIndex = nindex
	{
		var i uint
		var j uint
		for ; i < uint((uint32((uint32((uint32_t((osize)))))))) && j < uint((uint32((uint32((uint32_t((count)))))))); i++ {
			if oentries[i] <= nil {
				// recompute the position of every entry and insert the pointer
				continue
			}
			var e [][]UA_NodeMapEntry = findFreeSlot(ns, (*[100000000]UA_NodeId)(unsafe.Pointer(&oentries[i][0].node.nodeId))[:])
			e[0] = oentries[i]
			j ++
		}
	}
	_ = oentries
	return 0
}
// newEntry - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40194
func newEntry(nodeClass int) []UA_NodeMapEntry {
	var size uint = uint((256 - 240))
	switch uint32(nodeClass) {
	case uint32(UA_NODECLASS_OBJECT):
		size += uint((248))
	case uint32(UA_NODECLASS_VARIABLE):
		size += uint((832))
	case uint32(UA_NODECLASS_METHOD):
		size += uint((248))
	case uint32(UA_NODECLASS_OBJECTTYPE):
		size += uint((256))
	case uint32(UA_NODECLASS_VARIABLETYPE):
		size += uint((832))
	case uint32(UA_NODECLASS_REFERENCETYPE):
		size += uint((280))
	case uint32(UA_NODECLASS_DATATYPE):
		size += uint((248))
	case uint32(UA_NODECLASS_VIEW):
		size += uint((248))
	default:
		{
			return nil
		}
	}
	var entry []UA_NodeMapEntry = make([]UA_NodeMapEntry, 1*uint32((size))/256)
	if entry == nil {
		return nil
	}
	entry[0].node.nodeClass = nodeClass
	return entry
}
// deleteEntry - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40232
func deleteEntry(entry []UA_NodeMapEntry) {
	UA_Node_deleteMembers((*[100000000]UA_Node)(unsafe.Pointer(&entry[0].node))[:])
	_ = entry
}
// cleanupEntry - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40238
func cleanupEntry(entry []UA_NodeMapEntry) {
	if int((int((UA_Boolean(entry[0].deleted))))) != 0 && int(uint16((uint16((uint16_t((UA_UInt16(entry[0].refCount)))))))) == 0 {
		deleteEntry(entry)
	}
}
// clearSlot - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40244
func clearSlot(ns []UA_NodeMap, slot [][]UA_NodeMapEntry) UA_StatusCode {
	(slot[0])[0].deleted = 1
	cleanupEntry(slot[0])
	slot[0] = nil
	ns[0].count --
	if UA_UInt32(ns[0].count)*UA_UInt32((uint32_t((uint32((8)))))) < UA_UInt32(ns[0].size) && UA_UInt32(ns[0].size) > UA_UInt32((uint32_t((uint32((32)))))) {
		// Downsize the hashmap if it is very empty
		// Can fail. Just continue with the bigger hashmap.
		expand(ns)
	}
	return 0
}
// findOccupiedSlot - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40256
func findOccupiedSlot(ns []UA_NodeMap, nodeid []UA_NodeId) [][]UA_NodeMapEntry {
	var h UA_UInt32 = UA_NodeId_hash(nodeid)
	var size UA_UInt32 = UA_UInt32(ns[0].size)
	var idx UA_UInt64 = UA_UInt64((uint64_t((uint64((uint32((uint32((uint32_t((mod(UA_UInt32(h), UA_UInt32(size))))))))))))))
	var hash2 UA_UInt32 = mod2(UA_UInt32(h), UA_UInt32(size))
	var startIdx UA_UInt32 = UA_UInt32(UA_UInt64(idx))
	var entry []UA_NodeMapEntry
	for {
		// use 64 bit container to avoid overflow
		entry = ns[0].entries[UA_UInt32(UA_UInt64(idx))]
		if entry > nil && int((int((UA_NodeId_equal((*[100000000]UA_NodeId)(unsafe.Pointer(&entry[0].node.nodeId))[:], nodeid))))) != 0 {
			return (*[100000000][]UA_NodeMapEntry)(unsafe.Pointer(&ns[0].entries[UA_UInt32(UA_UInt64(idx))]))[:]
		}
		idx += UA_UInt64((uint64_t((uint64((uint32((uint32((uint32_t((hash2))))))))))))
		if idx >= uint32((uint32((uint32_t((size)))))) {
			idx -= UA_UInt64((uint64_t((uint64((uint32((uint32((uint32_t((size))))))))))))
		}
		if !(UA_UInt32(UA_UInt64(idx)) != startIdx && entry != nil) {
			break
		}
	}
	// NULL is returned if there is no free slot (idx == startIdx)
	//     * and the node id is not found or if the end of the used slots (!entry)
	//     * is reached.
	return nil
}
// UA_NodeMap_newNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40285
//
// Interface functions
//
func UA_NodeMap_newNode(context interface{}, nodeClass int) []UA_Node {
	var entry []UA_NodeMapEntry = newEntry(nodeClass)
	if entry == nil {
		return nil
	}
	return (*[100000000]UA_Node)(unsafe.Pointer(&entry[0].node))[:]
}
// UA_NodeMap_deleteNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40293
func UA_NodeMap_deleteNode(context interface{}, node []UA_Node) {
	var entry []UA_NodeMapEntry
	deleteEntry(entry)
}
// UA_NodeMap_getNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40305
func UA_NodeMap_getNode(context interface{}, nodeid []UA_NodeId) []UA_Node {
	var ns []UA_NodeMap = context.([]UA_NodeMap)
	var entry [][]UA_NodeMapEntry = findOccupiedSlot(ns, nodeid)
	if entry == nil {
		return nil
	}
	(entry[0])[0].refCount ++
	return (*[100000000]UA_Node)(unsafe.Pointer(&(entry[0])[0].node))[:]
}
// UA_NodeMap_releaseNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40319
func UA_NodeMap_releaseNode(context interface{}, node []UA_Node) {
	if node == nil {
		return
	}
	var entry []UA_NodeMapEntry
	entry[0].refCount --
	cleanupEntry(entry)
}
// UA_NodeMap_getNodeCopy - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40335
func UA_NodeMap_getNodeCopy(context interface{}, nodeid []UA_NodeId, outNode [][]UA_Node) UA_StatusCode {
	var ns []UA_NodeMap = context.([]UA_NodeMap)
	var slot [][]UA_NodeMapEntry = findOccupiedSlot(ns, nodeid)
	if slot == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
	}
	var entry []UA_NodeMapEntry = slot[0]
	var newItem []UA_NodeMapEntry = newEntry(entry[0].node.nodeClass)
	if newItem == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	var retval UA_StatusCode = UA_Node_copy((*[100000000]UA_Node)(unsafe.Pointer(&entry[0].node))[:], (*[100000000]UA_Node)(unsafe.Pointer(&newItem[0].node))[:])
	if retval == UA_StatusCode((uint32_t((uint32((0)))))) {
		// store the pointer to the original
		newItem[0].orig = entry
		outNode[0] = (*[100000000]UA_Node)(unsafe.Pointer(&newItem[0].node))[:]
	} else {
		deleteEntry(newItem)
	}
	return UA_StatusCode(retval)
}
// UA_NodeMap_removeNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40362
func UA_NodeMap_removeNode(context interface{}, nodeid []UA_NodeId) UA_StatusCode {
	var ns []UA_NodeMap = context.([]UA_NodeMap)
	var slot [][]UA_NodeMapEntry = findOccupiedSlot(ns, nodeid)
	var retval UA_StatusCode
	if slot != nil {
		retval = clearSlot(ns, slot)
	} else {
		retval = UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
	}
	return UA_StatusCode(retval)
}
// UA_NodeMap_insertNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40376
func UA_NodeMap_insertNode(context interface{}, node []UA_Node, addedNodeId []UA_NodeId) UA_StatusCode {
	var ns []UA_NodeMap = context.([]UA_NodeMap)
	if UA_UInt32(ns[0].size)*UA_UInt32((uint32_t((uint32((3)))))) <= UA_UInt32(ns[0].count)*UA_UInt32((uint32_t((uint32((4)))))) {
		if expand(ns) != UA_StatusCode((uint32_t((uint32((0)))))) {
			return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
		}
	}
	var slot [][]UA_NodeMapEntry
	if uint32(int((node[0].nodeId.identifierType))) == uint32(int((UA_NODEIDTYPE_NUMERIC))) && UA_UInt32((*node[0].nodeId.identifier.numeric())) == UA_UInt32((uint32_t((uint32((0)))))) {
		var size UA_UInt32 = UA_UInt32(ns[0].size)
		var identifier UA_UInt64 = UA_UInt64((uint64_t((uint64((uint32((uint32((uint32_t((mod(UA_UInt32((uint32_t((uint32((50000 + uint32((uint32((uint32_t((size)))))) + 1)))))), UA_UInt32(size))))))))))))))
		var increase UA_UInt32 = mod2(UA_UInt32(ns[0].count)+UA_UInt32((uint32_t((uint32((1)))))), UA_UInt32(size))
		var startId UA_UInt32 = UA_UInt32(UA_UInt64(identifier))
		for {
			// create a random nodeid
			// start at least with 50,000 to make sure we don not conflict with nodes from the spec
			// if we find a conflict, we just try another identifier until we have tried all possible identifiers
			// since the size is prime and we don't change the increase val, we will reach the starting id again
			// E.g. adding a nodeset will create children while there are still other nodes which need to be created
			// Thus the node ids may collide
			// start value, use 64 bit container to avoid overflow
			// mod ensures us that the id is a valid 32 bit
			(*node[0].nodeId.identifier.numeric()) = UA_UInt32(UA_UInt64(identifier))
			slot = findFreeSlot(ns, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:])
			if slot != nil {
				break
			}
			identifier += UA_UInt64((uint64_t((uint64((uint32((uint32((uint32_t((increase))))))))))))
			if identifier >= uint32((uint32((uint32_t((size)))))) {
				identifier -= UA_UInt64((uint64_t((uint64((uint32((uint32((uint32_t((size))))))))))))
			}
			if !(UA_UInt32(UA_UInt64(identifier)) != startId) {
				break
			}
		}
		if slot == nil {
			return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
		}
	} else {
		slot = findFreeSlot(ns, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:])
		if slot == nil {
			deleteEntry(nil)
			return UA_StatusCode((uint32_t((uint32((uint32(2153644032)))))))
		}
	}
	slot[0] = nil
	ns[0].count ++
	var retval UA_StatusCode
	if addedNodeId != nil {
		retval = UA_NodeId_copy((*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:], addedNodeId)
		if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
			clearSlot(ns, slot)
		}
	}
	return UA_StatusCode(retval)
}
// UA_NodeMap_replaceNode - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40440
func UA_NodeMap_replaceNode(context interface{}, node []UA_Node) UA_StatusCode {
	var ns []UA_NodeMap = context.([]UA_NodeMap)
	var slot [][]UA_NodeMapEntry = findOccupiedSlot(ns, (*[100000000]UA_NodeId)(unsafe.Pointer(&node[0].nodeId))[:])
	if slot == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2150891520)))))))
	}
	var newEntryContainer []UA_NodeMapEntry
	if slot[0] != newEntryContainer[0].orig {
		// The node was updated since the copy was made
		deleteEntry(newEntryContainer)
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	(slot[0])[0].deleted = 1
	cleanupEntry(slot[0])
	slot[0] = newEntryContainer
	return 0
}
// UA_NodeMap_iterate - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40463
func UA_NodeMap_iterate(context interface{}, visitorContext interface{}, visitor UA_NodestoreVisitor) {
	var ns []UA_NodeMap = context.([]UA_NodeMap)
	{
		var i UA_UInt32
		for ; i < UA_UInt32(ns[0].size); i++ {
			if ns[0].entries[i] > nil {
				var entry []UA_NodeMapEntry = ns[0].entries[i]
				entry[0].refCount ++
				visitor(visitorContext, (*[100000000]UA_Node)(unsafe.Pointer(&entry[0].node))[:])
				entry[0].refCount --
				cleanupEntry(entry)
			}
		}
	}
}
// UA_NodeMap_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40482
func UA_NodeMap_delete(context interface{}) {
	var ns []UA_NodeMap = context.([]UA_NodeMap)
	var size UA_UInt32 = UA_UInt32(ns[0].size)
	var entries [][]UA_NodeMapEntry = ns[0].entries
	{
		var i UA_UInt32
		for ; i < size; i++ {
			if entries[i] > nil {
				// On debugging builds, check that all nodes were release
				// Delete the node
				deleteEntry(entries[i])
			}
		}
	}
	_ = ns[0].entries
	_ = ns
}
// UA_Nodestore_default_new - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40502
func UA_Nodestore_default_new(ns []UA_Nodestore) UA_StatusCode {
	var nodemap []UA_NodeMap = make([]UA_NodeMap, 24/24)
	if nodemap == nil {
		// Allocate and initialize the nodemap
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	nodemap[0].sizePrimeIndex = UA_UInt32((uint32_t((uint32((uint32(uint16((uint16((uint16_t((higher_prime_index(64))))))))))))))
	nodemap[0].size = primes[UA_UInt32(nodemap[0].sizePrimeIndex)]
	nodemap[0].count = 0
	nodemap[0].entries = make([][]UA_NodeMapEntry, uint32((uint32((uint32_t((UA_UInt32(nodemap[0].size)))))))*8/8)
	if nodemap[0].entries == nil {
		_ = nodemap
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	// Populate the nodestore
	ns[0].context = nodemap
	ns[0].deleteNodestore = UA_NodeMap_delete
	ns[0].inPlaceEditAllowed = 1
	ns[0].newNode = UA_NodeMap_newNode
	ns[0].deleteNode = UA_NodeMap_deleteNode
	ns[0].getNode = UA_NodeMap_getNode
	ns[0].releaseNode = UA_NodeMap_releaseNode
	ns[0].getNodeCopy = UA_NodeMap_getNodeCopy
	ns[0].insertNode = UA_NodeMap_insertNode
	ns[0].replaceNode = UA_NodeMap_replaceNode
	ns[0].removeNode = UA_NodeMap_removeNode
	ns[0].iterate = UA_NodeMap_iterate
	return 0
}
// UA_UINT32RANGE - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40559
// amalgamated original file "/home/travis/build/open62541/open62541/plugins/ua_config_default.c"
// This work is licensed under a Creative Commons CCZero 1.0 Universal License.
// * See http://creativecommons.org/publicdomain/zero/1.0/ for more information.
// *
// *    Copyright 2017 (c) Julius Pfrommer, Fraunhofer IOSB
// *    Copyright 2017 (c) Julian Grothoff
// *    Copyright 2017-2018 (c) Mark Giraud, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// *    Copyright 2017 (c) Thomas Stalder, Blue Time Concept SA
// *    Copyright 2018 (c) Daniel Feist, Precitec GmbH & Co. KG
//
// Struct initialization works across ANSI C/C99/C++ if it is done when the
// * variable is first declared. Assigning values to existing structs is
// * heterogeneous across the three.
func UA_UINT32RANGE(min UA_UInt32, max UA_UInt32) UA_UInt32Range {
	var range_ UA_UInt32Range = UA_UInt32Range{UA_UInt32(min), UA_UInt32(max)}
	return range_
}
// UA_DURATIONRANGE - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40565
func UA_DURATIONRANGE(min UA_Duration, max UA_Duration) UA_DurationRange {
	var range_ UA_DurationRange = UA_DurationRange{UA_Duration(min), UA_Duration(max)}
	return range_
}

var UA_ConnectionConfig_default UA_ConnectionConfig = UA_ConnectionConfig{0, 65535, 65535, 0, 0}
// createSecurityPolicyNoneEndpoint - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40597
//
// Default Connection Settings
//
// .protocolVersion
// .sendBufferSize, 64k per chunk
// .recvBufferSize, 64k per chunk
// .maxMessageSize, 0 -> unlimited
// .maxChunkCount, 0 -> unlimited
//
// Default Server Settings
//
func createSecurityPolicyNoneEndpoint(conf []UA_ServerConfig, endpoint []UA_Endpoint, localCertificate UA_ByteString) UA_StatusCode {
	UA_EndpointDescription_init((*[100000000]UA_EndpointDescription)(unsafe.Pointer(&endpoint[0].endpointDescription))[:])
	UA_SecurityPolicy_None((*[100000000]UA_SecurityPolicy)(unsafe.Pointer(&endpoint[0].securityPolicy))[:], nil, UA_ByteString(localCertificate), UA_Logger(conf[0].logger))
	endpoint[0].endpointDescription.securityMode = UA_MESSAGESECURITYMODE_NONE
	endpoint[0].endpointDescription.securityPolicyUri = UA_String_fromChars([]byte("http://opcfoundation.org/UA/SecurityPolicy#None\x00"))
	//opcfoundation.org/UA/SecurityPolicy#None");
	endpoint[0].endpointDescription.transportProfileUri = UA_String_fromChars([]byte("http://opcfoundation.org/UA-Profile/Transport/uatcp-uasc-uabinary\x00"))
	var retval UA_StatusCode = UA_Array_copy(conf[0].accessControl.userTokenPolicies, uint(conf[0].accessControl.userTokenPoliciesSize), (*[100000000][]UA_UserTokenPolicy)(unsafe.Pointer(&endpoint[0].endpointDescription.userIdentityTokens))[:], (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[125]))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		//opcfoundation.org/UA-Profile/Transport/uatcp-uasc-uabinary");
		// Enable all login mechanisms from the access control plugin
		return UA_StatusCode(retval)
	}
	endpoint[0].endpointDescription.userIdentityTokensSize = uint(conf[0].accessControl.userTokenPoliciesSize)
	UA_String_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&localCertificate))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&endpoint[0].endpointDescription.serverCertificate))[:])
	UA_ApplicationDescription_copy((*[100000000]UA_ApplicationDescription)(unsafe.Pointer(&conf[0].applicationDescription))[:], (*[100000000]UA_ApplicationDescription)(unsafe.Pointer(&endpoint[0].endpointDescription.server))[:])
	return 0
}
// UA_ServerConfig_set_customHostname - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40626
func UA_ServerConfig_set_customHostname(config []UA_ServerConfig, customHostname UA_String) {
	if config == nil {
		return
	}
	UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&config[0].customHostname))[:])
	UA_String_copy((*[100000000]UA_String)(unsafe.Pointer(&customHostname))[:], (*[100000000]UA_String)(unsafe.Pointer(&config[0].customHostname))[:])
}

var usernamePasswordsSize uint = 2
var usernamePasswords []UA_UsernamePasswordLogin = []UA_UsernamePasswordLogin{UA_UsernamePasswordLogin{UA_String{6 - 1, []byte("user1\x00")}, UA_String{9 - 1, []byte("password\x00")}}, UA_UsernamePasswordLogin{UA_String{6 - 1, []byte("user2\x00")}, UA_String{10 - 1, []byte("password1\x00")}}}
// createDefaultConfig - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40721
func createDefaultConfig() []UA_ServerConfig {
	var conf []UA_ServerConfig = make([]UA_ServerConfig, 544/544)
	if conf == nil {
		return nil
	}
	// Zero out.. All members have a valid initial value
	noarch.Memset(conf, byte(0), 544)
	// --> Start setting the default static config <--
	conf[0].nThreads = 1
	conf[0].logger = UA_Log_Stdout
	// Server Description
	//open62541.org");
	conf[0].buildInfo.productUri = UA_String_fromChars([]byte("http://open62541.org\x00"))
	conf[0].buildInfo.manufacturerName = UA_String_fromChars([]byte("open62541\x00"))
	conf[0].buildInfo.productName = UA_String_fromChars([]byte("open62541 OPC UA Server\x00"))
	conf[0].buildInfo.softwareVersion = UA_String_fromChars([]byte("0.3.0-rc2\x00"))
	conf[0].buildInfo.buildNumber = UA_String_fromChars([]byte("Nov 13 2018 16:47:45\x00"))
	conf[0].buildInfo.buildDate = 0
	conf[0].applicationDescription.applicationUri = UA_String_fromChars([]byte("urn:unconfigured:application\x00"))
	//open62541.org");
	conf[0].applicationDescription.productUri = UA_String_fromChars([]byte("http://open62541.org\x00"))
	conf[0].applicationDescription.applicationName = UA_LOCALIZEDTEXT_ALLOC([]byte("en\x00"), []byte("open62541-based OPC UA Application\x00"))
	conf[0].applicationDescription.applicationType = UA_APPLICATIONTYPE_SERVER
	// conf->applicationDescription.gatewayServerUri = UA_STRING_NULL;
	// conf->applicationDescription.discoveryProfileUri = UA_STRING_NULL;
	// conf->applicationDescription.discoveryUrlsSize = 0;
	// conf->applicationDescription.discoveryUrls = NULL;
	// conf->mdnsServerName = UA_STRING_NULL;
	// conf->serverCapabilitiesSize = 0;
	// conf->serverCapabilities = NULL;
	// Custom DataTypes
	// conf->customDataTypesSize = 0;
	// conf->customDataTypes = NULL;
	// Networking
	// conf->networkLayersSize = 0;
	// conf->networkLayers = NULL;
	// conf->customHostname = UA_STRING_NULL;
	// Endpoints
	// conf->endpoints = {0, NULL};
	// Certificate Verification that accepts every certificate. Can be
	//     * overwritten when the policy is specialized.
	UA_CertificateVerification_AcceptAll((*[100000000]UA_CertificateVerification)(unsafe.Pointer(&conf[0].certificateVerification))[:])
	// Global Node Lifecycle
	conf[0].nodeLifecycle.constructor = nil
	conf[0].nodeLifecycle.destructor = nil
	// Access Control. Anonymous Login only.
	conf[0].accessControl = UA_AccessControl_default(1, uint(usernamePasswordsSize), usernamePasswords)
	// Limits for SecureChannels
	conf[0].maxSecureChannels = 40
	// 10 minutes
	conf[0].maxSecurityTokenLifetime = UA_UInt32((uint32_t((uint32((uint32(10 * 60 * 1000)))))))
	// Limits for Sessions
	conf[0].maxSessions = 100
	// 1h
	conf[0].maxSessionTimeout = UA_Double((60 * 60 * 1000))
	// Limits for Subscriptions
	conf[0].publishingIntervalLimits = UA_DURATIONRANGE(UA_Duration((UA_Double((100)))), UA_Duration((UA_Double((3600 * 1000)))))
	conf[0].lifeTimeCountLimits = UA_UINT32RANGE(3, 15000)
	conf[0].keepAliveCountLimits = UA_UINT32RANGE(1, 100)
	conf[0].maxNotificationsPerPublish = 1000
	// unlimited
	conf[0].maxRetransmissionQueueSize = 0
	// Limits for MonitoredItems
	conf[0].samplingIntervalLimits = UA_DURATIONRANGE(UA_Duration((UA_Double((50)))), UA_Duration((UA_Double((24 * 3600 * 1000)))))
	conf[0].queueSizeLimits = UA_UINT32RANGE(1, 100)
	conf[0].discoveryCleanupTimeout = UA_UInt32((uint32_t((uint32((uint32(60 * 60)))))))
	// --> Finish setting the default static config <--
	return conf
}
// addDefaultNetworkLayers - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40813
func addDefaultNetworkLayers(conf []UA_ServerConfig, portNumber UA_UInt16) UA_StatusCode {
	// Add a network layer
	conf[0].networkLayers = make([]UA_ServerNetworkLayer, 32*1/32)
	if conf[0].networkLayers == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147680256)))))))
	}
	conf[0].networkLayers[0] = UA_ServerNetworkLayerTCP(UA_ConnectionConfig_default, UA_UInt16(portNumber), UA_Logger(conf[0].logger))
	conf[0].networkLayersSize = 1
	return 0
}
// UA_ServerConfig_new_minimal - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:40828
func UA_ServerConfig_new_minimal(portNumber UA_UInt16, certificate []UA_ByteString) []UA_ServerConfig {
	var conf []UA_ServerConfig = createDefaultConfig()
	var retval UA_StatusCode = UA_Nodestore_default_new((*[100000000]UA_Nodestore)(unsafe.Pointer(&conf[0].nodestore))[:])
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_ServerConfig_delete(conf)
		return nil
	}
	if addDefaultNetworkLayers(conf, UA_UInt16(portNumber)) != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_ServerConfig_delete(conf)
		return nil
	}
	// Allocate the endpoint
	conf[0].endpointsSize = 1
	conf[0].endpoints = make([]UA_Endpoint, 424*1/424)
	if conf[0].endpoints == nil {
		UA_ServerConfig_delete(conf)
		return nil
	}
	var localCertificate UA_ByteString = UA_BYTESTRING_NULL
	if certificate != nil {
		// Populate the endpoint
		localCertificate = certificate[0]
	}
	retval = createSecurityPolicyNoneEndpoint(conf, (*[100000000]UA_Endpoint)(unsafe.Pointer(&conf[0].endpoints[0]))[:], UA_ByteString(localCertificate))
	if retval != UA_StatusCode((uint32_t((uint32((0)))))) {
		UA_ServerConfig_delete(conf)
		return nil
	}
	return conf
}
// UA_ServerConfig_delete - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41099
func UA_ServerConfig_delete(config []UA_ServerConfig) {
	if config == nil {
		return
	}
	// Server Description
	UA_BuildInfo_deleteMembers((*[100000000]UA_BuildInfo)(unsafe.Pointer(&config[0].buildInfo))[:])
	UA_ApplicationDescription_deleteMembers((*[100000000]UA_ApplicationDescription)(unsafe.Pointer(&config[0].applicationDescription))[:])
	UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&config[0].mdnsServerName))[:])
	UA_Array_delete(config[0].serverCapabilities, uint(config[0].serverCapabilitiesSize), (*[100000000]UA_DataType)(unsafe.Pointer(&UA_TYPES[11]))[:])
	config[0].serverCapabilities = nil
	config[0].serverCapabilitiesSize = 0
	if config[0].nodestore.deleteNodestore != nil {
		// Nodestore
		config.nodestore.deleteNodestore(config[0].nodestore.context)
	}
	{
		var i uint
		for ; i < uint(config[0].customDataTypesSize); i++ {
			_ = config[0].customDataTypes[i].members
			// Custom DataTypes
		}
	}
	_ = config[0].customDataTypes
	config[0].customDataTypes = nil
	config[0].customDataTypesSize = 0
	{
		var i uint
		for ; i < uint(config[0].networkLayersSize); i++ {
			// Networking
			config[0].networkLayers[i].deleteMembers((*[100000000]UA_ServerNetworkLayer)(unsafe.Pointer(&config[0].networkLayers[i]))[:])
		}
	}
	_ = config[0].networkLayers
	config[0].networkLayers = nil
	config[0].networkLayersSize = 0
	UA_String_deleteMembers((*[100000000]UA_String)(unsafe.Pointer(&config[0].customHostname))[:])
	config[0].customHostname = UA_STRING_NULL
	{
		var i uint
		for ; i < uint(config[0].endpointsSize); i++ {
			var policy []UA_SecurityPolicy = (*[100000000]UA_SecurityPolicy)(unsafe.Pointer(&config[0].endpoints[i].securityPolicy))[:]
			policy.deleteMembers(policy)
			UA_EndpointDescription_deleteMembers((*[100000000]UA_EndpointDescription)(unsafe.Pointer(&config[0].endpoints[i].endpointDescription))[:])
		}
	}
	_ = config[0].endpoints
	config[0].endpoints = nil
	config[0].endpointsSize = 0
	// Certificate Validation
	config.certificateVerification.deleteMembers((*[100000000]UA_CertificateVerification)(unsafe.Pointer(&config[0].certificateVerification))[:])
	// Access Control
	config.accessControl.deleteMembers((*[100000000]UA_AccessControl)(unsafe.Pointer(&config[0].accessControl))[:])
	_ = config
}

var UA_ClientConfig_default UA_ClientConfig = UA_ClientConfig{5000, UA_UInt32(10 * 60 * 1000), UA_Log_Stdout, UA_ConnectionConfig{0, 65535, 65535, 0, 0}, UA_ClientConnectionTCP, 0, nil, nil, nil, (nil), 10}
// UA_Server_getClientConfig - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41185
//
// Default Client Settings
//
// .timeout, 5 seconds
// .secureChannelLifeTime, 10 minutes
// .logger
// .localConnectionConfig
// .protocolVersion
// .sendBufferSize, 64k per chunk
// .recvBufferSize, 64k per chunk
// .maxMessageSize, 0 -> unlimited
// .maxChunkCount, 0 -> unlimited
// .connectionFunc
// .customDataTypesSize
//.customDataTypes
//.stateCallback
//.subscriptionInactivityCallback
//.clientContext
// .outStandingPublishRequests
func UA_Server_getClientConfig() UA_ClientConfig {
	return UA_ClientConfig(UA_ClientConfig_default)
}
// verify_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41200
// amalgamated original file "/home/travis/build/open62541/open62541/plugins/ua_securitypolicy_none.c"
// This work is licensed under a Creative Commons CCZero 1.0 Universal License.
// * See http://creativecommons.org/publicdomain/zero/1.0/ for more information.
// *
// *    Copyright 2017-2018 (c) Mark Giraud, Fraunhofer IOSB
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
//
func verify_none(securityPolicy []UA_SecurityPolicy, channelContext interface{}, message []UA_ByteString, signature []UA_ByteString) UA_StatusCode {
	return 0
}
// sign_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41208
func sign_none(securityPolicy []UA_SecurityPolicy, channelContext interface{}, message []UA_ByteString, signature []UA_ByteString) UA_StatusCode {
	return 0
}
// length_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41216
func length_none(securityPolicy []UA_SecurityPolicy, channelContext interface{}) uint {
	return 0
}
// encrypt_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41222
func encrypt_none(securityPolicy []UA_SecurityPolicy, channelContext interface{}, data []UA_ByteString) UA_StatusCode {
	return 0
}
// decrypt_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41229
func decrypt_none(securityPolicy []UA_SecurityPolicy, channelContext interface{}, data []UA_ByteString) UA_StatusCode {
	return 0
}
// makeThumbprint_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41236
func makeThumbprint_none(securityPolicy []UA_SecurityPolicy, certificate []UA_ByteString, thumbprint []UA_ByteString) UA_StatusCode {
	return 0
}
// compareThumbprint_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41243
func compareThumbprint_none(securityPolicy []UA_SecurityPolicy, certificateThumbprint []UA_ByteString) UA_StatusCode {
	return 0
}
// generateKey_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41249
func generateKey_none(securityPolicy []UA_SecurityPolicy, secret []UA_ByteString, seed []UA_ByteString, out []UA_ByteString) UA_StatusCode {
	return 0
}
// generateNonce_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41258
// Use the non-cryptographic RNG to set the nonce
func generateNonce_none(securityPolicy []UA_SecurityPolicy, out []UA_ByteString) UA_StatusCode {
	if securityPolicy == nil || out == nil {
		return UA_StatusCode((uint32_t((uint32((uint32(2147614720)))))))
	}
	var i uint
	for i+uint((3)) < uint(out[0].length) {
		var rand UA_UInt32 = UA_UInt32_random()
		// Fill blocks of four byte
		memcpy((*[100000000]UA_Byte)(unsafe.Pointer(&out[0].data[i]))[:], (*[100000000]UA_UInt32)(unsafe.Pointer(&rand))[:], 4)
		i = i+uint((4))
	}
	var rand UA_UInt32 = UA_UInt32_random()
	// Fill the remaining byte
	memcpy((*[100000000]UA_Byte)(unsafe.Pointer(&out[0].data[i]))[:], (*[100000000]UA_UInt32)(unsafe.Pointer(&rand))[:], uint32((uint(out[0].length) % uint((4)))))
	return 0
}
// newContext_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41278
func newContext_none(securityPolicy []UA_SecurityPolicy, remoteCertificate []UA_ByteString, channelContext []interface{}) UA_StatusCode {
	return 0
}
// deleteContext_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41285
func deleteContext_none(channelContext interface{}) {
}
// setContextValue_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41289
func setContextValue_none(channelContext interface{}, key []UA_ByteString) UA_StatusCode {
	return 0
}
// compareCertificate_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41295
func compareCertificate_none(channelContext interface{}, certificate []UA_ByteString) UA_StatusCode {
	return 0
}
// policy_deletemembers_none - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41301
func policy_deletemembers_none(policy []UA_SecurityPolicy) {
	UA_ByteString_deleteMembers((*[100000000]UA_ByteString)(unsafe.Pointer(&policy[0].localCertificate))[:])
}
// UA_SecurityPolicy_None - transpiled function from  $GOPATH/src/github.com/eugeis/gopen62541/gen/open62541.c:41306
func UA_SecurityPolicy_None(policy []UA_SecurityPolicy, certificateVerification []UA_CertificateVerification, localCertificate UA_ByteString, logger UA_Logger) UA_StatusCode {
	policy[0].policyContext = uint32((uintptr_t(UA_Logger(logger))))
	//opcfoundation.org/UA/SecurityPolicy#None");
	policy[0].policyUri = UA_String((UA_STRING([]byte("http://opcfoundation.org/UA/SecurityPolicy#None\x00"))))
	policy[0].logger = logger
	UA_ByteString_copy((*[100000000]UA_ByteString)(unsafe.Pointer(&localCertificate))[:], (*[100000000]UA_ByteString)(unsafe.Pointer(&policy[0].localCertificate))[:])
	policy[0].certificateVerification = certificateVerification
	policy[0].symmetricModule.generateKey = generateKey_none
	policy[0].symmetricModule.generateNonce = generateNonce_none
	var sym_signatureAlgorithm []UA_SecurityPolicySignatureAlgorithm = (*[100000000]UA_SecurityPolicySignatureAlgorithm)(unsafe.Pointer(&policy[0].symmetricModule.cryptoModule.signatureAlgorithm))[:]
	sym_signatureAlgorithm[0].uri = UA_STRING_NULL
	sym_signatureAlgorithm[0].verify = verify_none
	sym_signatureAlgorithm[0].sign = sign_none
	sym_signatureAlgorithm[0].getLocalSignatureSize = length_none
	sym_signatureAlgorithm[0].getRemoteSignatureSize = length_none
	sym_signatureAlgorithm[0].getLocalKeyLength = length_none
	sym_signatureAlgorithm[0].getRemoteKeyLength = length_none
	var sym_encryptionAlgorithm []UA_SecurityPolicyEncryptionAlgorithm = (*[100000000]UA_SecurityPolicyEncryptionAlgorithm)(unsafe.Pointer(&policy[0].symmetricModule.cryptoModule.encryptionAlgorithm))[:]
	sym_encryptionAlgorithm[0].encrypt = encrypt_none
	sym_encryptionAlgorithm[0].decrypt = decrypt_none
	sym_encryptionAlgorithm[0].getLocalKeyLength = length_none
	sym_encryptionAlgorithm[0].getRemoteKeyLength = length_none
	sym_encryptionAlgorithm[0].getLocalBlockSize = length_none
	sym_encryptionAlgorithm[0].getRemoteBlockSize = length_none
	sym_encryptionAlgorithm[0].getLocalPlainTextBlockSize = length_none
	sym_encryptionAlgorithm[0].getRemotePlainTextBlockSize = length_none
	policy[0].symmetricModule.secureChannelNonceLength = 0
	policy[0].asymmetricModule.makeCertificateThumbprint = makeThumbprint_none
	policy[0].asymmetricModule.compareCertificateThumbprint = compareThumbprint_none
	// This only works for none since symmetric and asymmetric crypto modules do the same i.e. nothing
	policy[0].asymmetricModule.cryptoModule = policy[0].symmetricModule.cryptoModule
	// Use the same signing algorithm as for asymmetric signing
	policy[0].certificateSigningAlgorithm = policy[0].asymmetricModule.cryptoModule.signatureAlgorithm
	policy[0].channelModule.newContext = newContext_none
	policy[0].channelModule.deleteContext = deleteContext_none
	policy[0].channelModule.setLocalSymEncryptingKey = setContextValue_none
	policy[0].channelModule.setLocalSymSigningKey = setContextValue_none
	policy[0].channelModule.setLocalSymIv = setContextValue_none
	policy[0].channelModule.setRemoteSymEncryptingKey = setContextValue_none
	policy[0].channelModule.setRemoteSymSigningKey = setContextValue_none
	policy[0].channelModule.setRemoteSymIv = setContextValue_none
	policy[0].channelModule.compareCertificate = compareCertificate_none
	policy[0].deleteMembers = policy_deletemembers_none
	return 0
}

type _Bool int
// amalgamated original file "/home/travis/build/open62541/open62541/plugins/ua_log_socket_error.h" 
// This work is licensed under a Creative Commons CCZero 1.0 Universal License.
// * See http://creativecommons.org/publicdomain/zero/1.0/ for more information. 
// *
// *    Copyright 2017 (c) Stefan Profanter, fortiss GmbH
// 
